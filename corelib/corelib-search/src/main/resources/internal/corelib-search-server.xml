<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright 2007-2012 The Europeana Foundation Licenced under the EUPL, 
	Version 1.1 (the "Licence") and subsequent versions as approved by the European 
	Commission; You may not use this work except in compliance with the Licence. 
	You may obtain a copy of the Licence at: http://joinup.ec.europa.eu/software/page/eupl 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the Licence is distributed on an "AS IS" basis, without warranties 
	or conditions of any kind, either express or implied. See the Licence for 
	the specific language governing permissions and limitations under the Licence. -->

<!-- special configuration for Metis with a single Solr server and no ZooKeeper -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="corelib_solr_mongoServer" class="eu.europeana.corelib.mongo.server.impl.EdmMongoServerImpl" >
        <!-- search should use the same mongo server as record -->
        <constructor-arg value="#{corelib_db_mongoProvider.getMongo()}"/>
        <constructor-arg value="#{corelib_db_mongoProvider.getDefaultDatabase()}"/>
    </bean>

    <bean id="corelib_solr_mongoServer_id" class="eu.europeana.corelib.lookup.impl.EuropeanaIdMongoServerImpl" init-method="createDatastore">
        <constructor-arg value="#{corelib_db_mongoProvider.getMongo()}"/>
        <constructor-arg value="#{europeanaProperties['mongodb.recordId.dbname']}" type="java.lang.String"/>
    </bean>

    <bean id="corelib_solr_neo4jServer" class="eu.europeana.corelib.neo4j.server.impl.Neo4jServerImpl">
        <constructor-arg value="#{europeanaProperties['neo4j.server']}"/>
        <constructor-arg value="#{europeanaProperties['neo4j.index']}"/>
        <constructor-arg value="#{europeanaProperties['neo4j.custom']}"/>
    </bean>

    <!-- default profile, multiple solr instances, connecting via Zookeeper -->
    <beans profile="default">
        <bean id="corelib_solr_zookeeper" class="org.apache.solr.client.solrj.impl.CloudSolrServer" lazy-init="true" init-method="connect">
            <constructor-arg value="#{europeanaProperties['zookeeper.url']}" />
            <constructor-arg>
                <bean class="org.apache.solr.client.solrj.impl.LBHttpSolrServer">
                    <constructor-arg type="java.lang.String[]" value="#{europeanaProperties['solr.url']}"></constructor-arg>
                </bean>
            </constructor-arg>
            <!--         <property name="followRedirects" value="false" /> -->
            <!--         <property name="connectionTimeout" value="#{europeanaProperties['solr.timeout']}" /> -->
            <!--         <property name="defaultMaxConnectionsPerHost" value="64" /> -->
            <!--         <property name="maxTotalConnections" value="125" /> -->
            <property name="defaultCollection" value="#{europeanaProperties['solr.core']}" />
        </bean>
        <bean id="corelib_solr_searchService" class="eu.europeana.corelib.search.impl.SearchServiceImpl" p:solrServer-ref="corelib_solr_zookeeper" />
    </beans>

    <!-- spring profile for Metis, use a single solr instance and no Zookeeper -->
    <beans profile="metis">
        <bean id="corelib_solr_single_server" class="org.apache.solr.client.solrj.impl.HttpSolrServer" lazy-init="true" >
            <constructor-arg name="baseURL" value="#{europeanaProperties['solr.url']}"/>
        </bean>
        <bean id="corelib_solr_searchService_metis" class="eu.europeana.corelib.search.impl.SearchServiceImpl" p:solrServer-ref="corelib_solr_single_server" />
    </beans>

</beans>