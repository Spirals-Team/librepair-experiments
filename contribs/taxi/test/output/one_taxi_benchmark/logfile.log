2018-05-29 07:45:52,831  INFO Gbl:59 JVM: 1.8.0_121; Oracle Corporation; mixed mode; 64-bit
2018-05-29 07:45:52,831  INFO Gbl:63 OS: Linux; 3.10.0-862.2.3.el7.x86_64; amd64
2018-05-29 07:45:52,832  INFO Gbl:66 CPU cores: 32
2018-05-29 07:45:52,832  INFO Gbl:67 max. Memory: 14263.5MB (14956363776B)
2018-05-29 07:45:52,832  INFO Gbl:105 MATSim-Build: r8534a19f6a6dc1129cbbcdc66403b0e275cad86b (2018-05-29 07:41:41)
2018-05-29 07:45:52,833  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2018-05-29 07:45:52,833  INFO ControlerUtils:58 config dump before iterations start
2018-05-29 07:45:52,833  INFO Config:561 setting context to [file:/root/workspace/matsim-org/matsim/385025376/contribs/taxi/]
2018-05-29 07:45:52,844  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>
<!-- ====================================================================== -->
	<module name="TimeAllocationMutator" >
		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />
		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />
		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="changeMode" >
		<param name="ignoreCarAvailability" value="true" />
		<param name="modes" value="car,pt" />
	</module>
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="false" />
		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="false" />
		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />
		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />
		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="2" />
		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />
		<param name="outputDirectory" value="test/output/one_taxi_benchmark" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="deleteDirectoryIfExists" />
		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />
		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />
		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="0" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="0" />
		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="0" />
	</module>
<!-- ====================================================================== -->
	<module name="counts" >
		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />
		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="dvrp" >
		<!-- Mode which will be handled by PassengerEngine and VrpOptimizer (passengers'/customers' perspective) -->
		<param name="mode" value="taxi" />
		<!-- Mode of which the network will be used for routing vehicles, calculating trave times, etc. (fleet operator's perspective). Default is car. -->
		<param name="networkMode" value="null" />
		<!-- Used for OFFLINE estimation of travel times for VrpOptimizer by means of the exponential moving average. The weighting decrease, alpha, must be in (0,1]. We suggest small values of alpha, e.g. 0.05. The averaging starts from the initial travel time estimates. If not provided, the free-speed TTs is used as the initial estimates -->
		<param name="travelTimeEstimationAlpha" value="0.05" />
		<!-- Used for ONLINE estimation of travel times for VrpOptimizer by combining WithinDayTravelTime and DvrpOfflineTravelTimeEstimator. The beta coefficient is provided in seconds and should be either 0 (no online estimation) or positive (mixed online-offline estimation). For 'beta = 0', only the offline estimate is used: 'onlineTT(t) = offlineTT(t)', where 'offlineTT(t)' in the offline estimate for TT at time 't', For 'beta > 0', estimating future TTs at time 't', uses the currently observed TT to correct the offline estimates is made: where 'currentTT' is the currently observed TT, and 'correction = min(1, max(0, 1 - (time - currentTime) / beta))' The rule is that correction decreases linearly from 1 (when 'time = currentTime') to 0 (when 'time = currentTime + beta' For 'time > currentTime + beta' correction is 0, whereas if 'time < currentTime' it is 1. If beta is sufficiently large, 'beta >> 0', only the currently observed TT is used. -->
		<param name="travelTimeEstimationBeta" value="0.0" />
	</module>
<!-- ====================================================================== -->
	<module name="facilities" >
		<!-- If set to 'true', empty activity option will be created. -->
		<param name="addEmptyActivityOption" value="false" />
		<!-- Default is 'true'. In the case that a facility has no link assigned, the ActivityFacility can be assigned to the closest link. If there should be only one ActivityFacility per link and if no link-assignment should be done, set to 'false'.This will create a new ActivityFacility at the coordinate and the facility will not be assigned to a link. -->
		<param name="assigningLinksToFacilitiesIfMissing" value="true" />
		<!-- If set to 'true', opening time will be assigned to activity facilities from ActivityParams. Default is false. This will NOT override option 'addEmptyActivityOption'. -->
		<param name="assigningOpeningTime" value="false" />
		<!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLocationInPlansFile  -->
		<param name="facilitiesSource" value="none" />
		<!-- A prefix to be used in activityFacility id. -->
		<param name="idPrefix" value="" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputFacilitiesFile" value="null" />
		<param name="inputFacilityAttributesFile" value="null" />
		<!-- Sets whether all activities on a link should be collected within one ActivityFacility. Default is 'true'. If set to 'false', for each coordinate found in the population's activities a separate ActivityFacility will be created. -->
		<param name="oneFacilityPerLink" value="true" />
		<!-- If set to 'true' (which is the default), the link and coordinate attributes are replaced by null reference in the activities, as this information is now available via the facility. -->
		<param name="removingLinksAndCoordinates" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="global" >
		<param name="coordinateSystem" value="Atlantis" />
		<param name="insistingOnDeprecatedConfigVersion" value="true" />
		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />
		<param name="randomSeed" value="4711" />
	</module>
<!-- ====================================================================== -->
	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="linkStats" >
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />
		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="network" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputChangeEventsFile" value="one_taxi_benchmark_change_events.xml" />
		<param name="inputNetworkFile" value="../one_taxi/grid_network.xml" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="parallelEventHandling" >
		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />
		<!-- Number of threads for parallel events handler. _null_ means the framework decides by itself. 0 is currently not possible. -->
		<param name="numberOfThreads" value="null" />
		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />
		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="1.0" />
		<param name="PathSizeLogitBeta" value="1.0" />
		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />
		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />
		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />
		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="24:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="car" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="pt" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="walk" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="bike" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="ride" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="other" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="taxi" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />
		<param name="inputPlansFile" value="../one_taxi/one_taxi_population.xml" />
		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />
		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />
		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="ptCounts" >
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />
		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />
		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />
		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="qsim" >
		<!-- If set to true, creates a vehicle for each person corresponding to every network mode. However, this will be overridden if vehicle source is fromVehiclesData. -->
		<param name="creatingVehiclesForAllNetworkModes" value="true" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="100.0" />
		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />
		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />
		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />
		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />
		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />
		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />
		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="onlyUseStarttime" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="queue" />
		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="undefined" />
		<param name="storageCapacityFactor" value="1.0" />
		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />
		<param name="timeStepSize" value="00:00:01" />
		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />
		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />
		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />
		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />
		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />
		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />
		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>
<!-- ====================================================================== -->
	<module name="scenario" >
	</module>
<!-- ====================================================================== -->
	<module name="strategy" >
		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />
		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />
		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />
		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="1" />
		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="KeepLastSelected" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="1.0" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="subtourModeChoice" >
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>
<!-- ====================================================================== -->
	<module name="taxi" >
		<!-- Used in AStarEuclidean for shortest path search for occupied drives. Default value is 1.0. Values above 1.0 (typically, 1.5 to 3.0) speed up search, but at the cost of obtaining longer paths -->
		<param name="AStarEuclideanOverdoFactor" value="1.0" />
		<!-- Specifies whether the simulation should interrupt if not all requests were performed when an interation ends. Otherwise, a warning is given. True by default. -->
		<param name="breakIfNotAllRequestsServed" value="true" />
		<!-- If true, the startLink is changed to last link in the current schedule, so the taxi starts the next day at the link where it stopped operating the day before. False by default. -->
		<param name="changeStartLinkToLastLinkInSchedule" value="false" />
		<!-- If false, the drop-off location remains unknown to the optimizer and scheduler until the end of pickup. False by default. -->
		<param name="destinationKnown" value="false" />
		<!-- If true, detailed hourly taxi stats are dumped after each iteration. False by default. -->
		<param name="detailedStats" value="false" />
		<!-- Typically, 60 seconds -->
		<param name="dropoffDuration" value="60.0" />
		<!-- If true, vehicles are (GPS-like) monitored while moving. This helps in getting more accurate estimates on the time of arrival. Online tracking is necessary for vehicle diversion. False by default. -->
		<param name="onlineVehicleTracker" value="false" />
		<!-- Typically, 120 seconds -->
		<param name="pickupDuration" value="120.0" />
		<!-- An XML file specifying the taxi fleet. The file format according to dvrp_vehicles_v1.dtd -->
		<param name="taxisFile" value="../one_taxi/one_taxi_vehicles.xml" />
		<!-- If true, writes time profiles of vehicle statuses (i.e. current task type) and the number of unplanned requests are written to a text file (taxi_status_time_profiles) and saved as plots. False by default. -->
		<param name="timeProfiles" value="false" />
		<!-- If true, vehicles can be diverted during empty trips. Requires online tracking. False by default. -->
		<param name="vehicleDiversion" value="false" />
		<parameterset type="optimizer" >
			<param name="cellSize" value="1000" />
			<param name="goal" value="DEMAND_SUPPLY_EQUIL" />
			<param name="id" value="example" />
			<param name="nearestRequestsLimit" value="99999" />
			<param name="nearestVehiclesLimit" value="99999" />
			<param name="type" value="RULE_BASED" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="transit" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />
		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />
		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />
		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="transitRouter" >
		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />
		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />
		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />
		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />
		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>
<!-- ====================================================================== -->
	<module name="travelTimeCalculator" >
		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />
		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />
		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />
		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />
		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />
		<!-- possible values: TravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />
		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>
<!-- ====================================================================== -->
	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="vspExperimental" >
		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />
		<param name="isGeneratingBoardingDeniedEvent" value="false" />
		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />
		<param name="logitScaleParamForPlansRemoval" value="1.0" />
		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />
		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>
<!-- ====================================================================== -->

</config>

2018-05-29 07:45:52,845  INFO ControlerUtils:63 Complete config dump done.
2018-05-29 07:45:52,846  INFO ControlerUtils:64 Checking consistency of config...
2018-05-29 07:45:52,846  INFO PlanCalcScoreConfigGroup$ScoringParameterSet:1373 NO OPENING OR CLOSING TIMES DEFINED!

There is no activity type that has an opening *and* closing time (or opening time and late penalty) defined.
This usually means that the activity chains can be shifted by an arbitrary
number of hours without having an effect on the score of the plans, and thus
resulting in wrong results / traffic patterns.
If you are using MATSim without time adaptation, you can ignore this warning.


2018-05-29 07:45:52,846  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2018-05-29 07:45:52,847  WARN DvrpBenchmarkConfigConsistencyChecker:48 StorageCapFactor should be large enough (e.g. 100) to obtain deterministic (fixed) travel times
2018-05-29 07:45:52,848  INFO ControlerUtils:66 Checking consistency of config done.
2018-05-29 07:45:52,848 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-05-29 07:45:52,848  INFO NetworkImpl:167  node # 1
2018-05-29 07:45:52,849  INFO NetworkImpl:167  node # 4
2018-05-29 07:45:52,849  INFO NetworkImpl:167  node # 16
2018-05-29 07:45:52,849  INFO NetworkImpl:163  link # 1
2018-05-29 07:45:52,850  INFO NetworkImpl:163  link # 4
2018-05-29 07:45:52,850  INFO NetworkImpl:163  link # 16
2018-05-29 07:45:52,850  INFO NetworkImpl:163  link # 64
2018-05-29 07:45:52,851 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-05-29 07:45:52,852  INFO Counter:61 [PersonPrepareForSim] handled person # 1
2018-05-29 07:45:52,853  INFO Counter:61 [PersonPrepareForSim] handled person # 2
2018-05-29 07:45:52,854  INFO Counter:61 [PersonPrepareForSim] handled person # 4
2018-05-29 07:45:52,854  INFO Counter:61 [PersonPrepareForSim] handled person # 8
2018-05-29 07:45:52,854  INFO Counter:67 [PersonPrepareForSim] handled person # 10
2018-05-29 07:45:52,854  INFO Counter:61  vehicles # 1
2018-05-29 07:45:52,855  INFO Counter:61  vehicles # 2
2018-05-29 07:45:52,855  INFO Counter:61  vehicles # 4
2018-05-29 07:45:52,855  INFO Counter:61  vehicles # 8
2018-05-29 07:45:52,855  INFO AbstractController:121 ###################################################
2018-05-29 07:45:52,855  INFO AbstractController:122 ### ITERATION 0 BEGINS
2018-05-29 07:45:52,856  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2018-05-29 07:45:52,856  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2018-05-29 07:45:52,856  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2018-05-29 07:45:52,857  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2018-05-29 07:45:52,857  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-05-29 07:45:52,857  INFO EventsManagerImpl:170 resetting Event-Handlers
2018-05-29 07:45:52,857  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2018-05-29 07:45:52,858  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2018-05-29 07:45:52,858  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-05-29 07:45:52,858  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2018-05-29 07:45:52,858  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.contrib.taxi.passenger.SubmittedTaxiRequestsCollector
2018-05-29 07:45:52,858  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2018-05-29 07:45:52,872  INFO PreProcessDijkstra:118 nodes in dead ends: 26 (total nodes: 62). Done in 0 ms
2018-05-29 07:45:52,878  INFO Injector:80 === printInjector start ===
2018-05-29 07:45:52,878  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2018-05-29 07:45:52,879  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2018-05-29 07:45:52,879  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2018-05-29 07:45:52,879  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,879  INFO Injector:92 
2018-05-29 07:45:52,879  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2018-05-29 07:45:52,880  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4567e53d}[Scopes.SINGLETON]
2018-05-29 07:45:52,880  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2018-05-29 07:45:52,880  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,880  INFO Injector:92 
2018-05-29 07:45:52,880  INFO Injector:84 org.matsim.contrib.dvrp.passenger.PassengerEngine 
2018-05-29 07:45:52,881  INFO Injector:85   --> provider: org.matsim.contrib.dvrp.passenger.PassengerEnginePlugin$PassengerEngineProvider@7e7f0f0a[Scopes.SINGLETON]
2018-05-29 07:45:52,881  INFO Injector:86   --> source: org.matsim.contrib.dvrp.passenger.PassengerEnginePlugin$1.configure(PassengerEnginePlugin.java:29)
2018-05-29 07:45:52,881  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,881  INFO Injector:92 
2018-05-29 07:45:52,882  INFO Injector:84 org.matsim.core.mobsim.framework.MobsimTimer 
2018-05-29 07:45:52,882  INFO Injector:85   --> provider: Key[type=org.matsim.contrib.dvrp.run.MobsimTimerProvider, annotation=[none]][Scopes.SINGLETON]
2018-05-29 07:45:52,882  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:56)
2018-05-29 07:45:52,882  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,882  INFO Injector:92 
2018-05-29 07:45:52,883  INFO Injector:84 org.matsim.core.router.util.TravelDisutility @com.google.inject.name.Named(value=taxi_optimizer)
2018-05-29 07:45:52,883  INFO Injector:85   --> provider: org.matsim.contrib.dvrp.trafficmonitoring.DvrpTravelDisutilityProvider@7ec58feb[Scopes.SINGLETON]
2018-05-29 07:45:52,883  INFO Injector:86   --> source: org.matsim.contrib.dvrp.trafficmonitoring.DvrpTravelDisutilityProvider.bindTravelDisutilityForOptimizer(DvrpTravelDisutilityProvider.java:39)
2018-05-29 07:45:52,883  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,883  INFO Injector:92 
2018-05-29 07:45:52,884  INFO Injector:84 org.matsim.contrib.dvrp.optimizer.VrpOptimizer 
2018-05-29 07:45:52,884  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.contrib.dvrp.optimizer.VrpOptimizer, annotation=[none]], provider=Key[type=org.matsim.contrib.taxi.optimizer.DefaultTaxiOptimizerProvider, annotation=[none]][Scopes.SINGLETON]}
2018-05-29 07:45:52,884  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:59)
2018-05-29 07:45:52,884  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:52,884  INFO Injector:92 
2018-05-29 07:45:52,885  INFO Injector:84 org.matsim.contrib.dvrp.vrpagent.VrpAgentLogic$DynActionCreator 
2018-05-29 07:45:52,885  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.contrib.dvrp.vrpagent.VrpAgentLogic$DynActionCreator, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7a2e0858}[Scopes.SINGLETON]
2018-05-29 07:45:52,885  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:61)
2018-05-29 07:45:52,885  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,885  INFO Injector:92 
2018-05-29 07:45:52,886  INFO Injector:84 org.matsim.contrib.dvrp.passenger.PassengerRequestCreator 
2018-05-29 07:45:52,886  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.contrib.dvrp.passenger.PassengerRequestCreator, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@518cf84a}[Scopes.SINGLETON]
2018-05-29 07:45:52,886  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:62)
2018-05-29 07:45:52,886  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,886  INFO Injector:92 
2018-05-29 07:45:52,887  INFO Injector:84 org.matsim.contrib.taxi.optimizer.TaxiOptimizer 
2018-05-29 07:45:52,887  INFO Injector:85   --> provider: Key[type=org.matsim.contrib.taxi.optimizer.DefaultTaxiOptimizerProvider, annotation=[none]][Scopes.SINGLETON]
2018-05-29 07:45:52,887  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1$1.configure(TaxiDvrpModules.java:66)
2018-05-29 07:45:52,887  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,888  INFO Injector:92 
2018-05-29 07:45:52,888  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2018-05-29 07:45:52,888  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6fd1660[Scopes.SINGLETON]}
2018-05-29 07:45:52,888  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2018-05-29 07:45:52,888  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:52,889  INFO Injector:92 
2018-05-29 07:45:52,889  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2018-05-29 07:45:52,889  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@ae7950d[Scopes.SINGLETON]
2018-05-29 07:45:52,889  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2018-05-29 07:45:52,889  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,890  INFO Injector:92 
2018-05-29 07:45:52,890  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2018-05-29 07:45:52,890  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2822c6ff[Scopes.SINGLETON]
2018-05-29 07:45:52,890  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2018-05-29 07:45:52,890  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,891  INFO Injector:92 
2018-05-29 07:45:52,891  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2018-05-29 07:45:52,891  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3d43fe[Scopes.SINGLETON]
2018-05-29 07:45:52,891  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2018-05-29 07:45:52,891  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,892  INFO Injector:92 
2018-05-29 07:45:52,892  INFO Injector:84 org.matsim.contrib.dynagent.run.DynActivityEngine 
2018-05-29 07:45:52,892  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5f80fa43[Scopes.SINGLETON]
2018-05-29 07:45:52,892  INFO Injector:86   --> source: org.matsim.contrib.dynagent.run.DynActivityEnginePlugin$1.configure(DynActivityEnginePlugin.java:24)
2018-05-29 07:45:52,892  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,893  INFO Injector:92 
2018-05-29 07:45:52,893  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2018-05-29 07:45:52,893  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@576c5536[Scopes.SINGLETON]
2018-05-29 07:45:52,893  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2018-05-29 07:45:52,893  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,894  INFO Injector:92 
2018-05-29 07:45:52,894  INFO Injector:84 org.matsim.core.mobsim.qsim.changeeventsengine.NewNetworkChangeEventsEngine 
2018-05-29 07:45:52,894  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@352e787a[Scopes.SINGLETON]
2018-05-29 07:45:52,894  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.changeeventsengine.NetworkChangeEventsPlugin$1.configure(NetworkChangeEventsPlugin.java:23)
2018-05-29 07:45:52,894  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,895  INFO Injector:92 
2018-05-29 07:45:52,895  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2018-05-29 07:45:52,895  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@205b132e[Scopes.SINGLETON]
2018-05-29 07:45:52,895  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2018-05-29 07:45:52,895  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,896  INFO Injector:92 
2018-05-29 07:45:52,896  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2018-05-29 07:45:52,896  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2301b75[Scopes.SINGLETON]
2018-05-29 07:45:52,896  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2018-05-29 07:45:52,896  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,897  INFO Injector:92 
2018-05-29 07:45:52,897  INFO Injector:84 org.matsim.contrib.dvrp.vrpagent.VrpAgentSource 
2018-05-29 07:45:52,897  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@258ee7de[Scopes.SINGLETON]
2018-05-29 07:45:52,897  INFO Injector:86   --> source: org.matsim.contrib.dvrp.vrpagent.VrpAgentSourcePlugin$1.configure(VrpAgentSourcePlugin.java:23)
2018-05-29 07:45:52,897  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,898  INFO Injector:92 
2018-05-29 07:45:52,898  INFO Injector:84 org.matsim.contrib.taxi.scheduler.TaxiScheduler 
2018-05-29 07:45:52,898  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6e1d4137[Scopes.SINGLETON]
2018-05-29 07:45:52,898  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:60)
2018-05-29 07:45:52,898  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,899  INFO Injector:92 
2018-05-29 07:45:52,899  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2018-05-29 07:45:52,899  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6fd1660[Scopes.SINGLETON]
2018-05-29 07:45:52,899  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2018-05-29 07:45:52,899  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:52,900  INFO Injector:92 
2018-05-29 07:45:52,900  INFO Injector:95 === printInjector end ===
2018-05-29 07:45:52,900  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-05-29 07:45:52,900  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-05-29 07:45:52,900  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2018-05-29 07:45:52,901  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2018-05-29 07:45:52,901  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-05-29 07:45:52,901  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-05-29 07:45:52,901  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2018-05-29 07:45:52,902  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.contrib.taxi.optimizer.rules.RuleBasedTaxiOptimizer
2018-05-29 07:45:52,902  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.contrib.taxi.optimizer.TaxiOptimizer
2018-05-29 07:45:52,902  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.contrib.taxi.optimizer.DefaultTaxiOptimizer
2018-05-29 07:45:52,903  INFO QNetsimEngine:504 Assigned 62 nodes and 170 links to QSimEngineRunner #0
2018-05-29 07:45:52,904  INFO EventsManagerImpl:134  event # 1
2018-05-29 07:45:52,904  INFO EventsManagerImpl:134  event # 4
2018-05-29 07:45:52,904  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 00:00:00 : #links=0 #nodes=0
2018-05-29 07:45:52,905  INFO QSim:506 SIMULATION (NEW QSim) AT 00:00:00 : #Veh=11 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2018-05-29 07:45:52,905  INFO Gbl:54 used RAM: 370458872B = 361776kB = 353MB  free: 561725192B = 535MB  total: 932184064B = 889MB
2018-05-29 07:45:52,917  INFO EventsManagerImpl:134  event # 16
2018-05-29 07:45:52,978  INFO EventsManagerImpl:134  event # 64
2018-05-29 07:45:53,177  INFO EventsManagerImpl:134  event # 256
2018-05-29 07:45:53,304  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 01:00:00 : #links=1 #nodes=0
2018-05-29 07:45:53,304  INFO QSim:506 SIMULATION (NEW QSim) AT 01:00:00 : #Veh=4 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2018-05-29 07:45:53,305  INFO Gbl:54 used RAM: 370458872B = 361776kB = 353MB  free: 561725192B = 535MB  total: 932184064B = 889MB
2018-05-29 07:45:53,668  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 02:00:00 : #links=0 #nodes=0
2018-05-29 07:45:53,668  INFO QSim:506 SIMULATION (NEW QSim) AT 02:00:00 : #Veh=1 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2018-05-29 07:45:53,668  INFO Gbl:54 used RAM: 380163320B = 371253kB = 362MB  free: 552020744B = 526MB  total: 932184064B = 889MB
2018-05-29 07:45:53,751  INFO AbstractController$8:210 ### ITERATION 0 fires after mobsim event
2018-05-29 07:45:53,751  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.177723332sec
2018-05-29 07:45:53,751  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.contrib.taxi.util.stats.TaxiStatsDumper
2018-05-29 07:45:53,754  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.contrib.taxi.util.TaxiSimulationConsistencyChecker
2018-05-29 07:45:53,754  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.contrib.taxi.benchmark.TaxiBenchmarkStats
2018-05-29 07:45:53,763  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2018-05-29 07:45:53,764  INFO ControlerListenerManagerImpl:251 [it.0] all ControlerAfterMobsimListeners called.
2018-05-29 07:45:53,764  INFO AbstractController$4:147 ### ITERATION 0 fires scoring event
2018-05-29 07:45:53,764  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2018-05-29 07:45:53,764  INFO NewScoreAssignerImpl:36 it: 0 msaStart: null
2018-05-29 07:45:53,765  INFO ControlerListenerManagerImpl:194 [it.0] all ControlerScoringListeners called.
2018-05-29 07:45:53,765  INFO AbstractController$5:155 ### ITERATION 0 fires iteration end event
2018-05-29 07:45:53,765  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-05-29 07:45:53,765  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2018-05-29 07:45:53,766  INFO ControlerListenerManagerImpl:171 [it.0] all ControlerIterationEndsListeners called.
2018-05-29 07:45:53,767  INFO AbstractController:165 ### ITERATION 0 ENDS
2018-05-29 07:45:53,767  INFO AbstractController:166 ###################################################
2018-05-29 07:45:53,767  INFO AbstractController:121 ###################################################
2018-05-29 07:45:53,767  INFO AbstractController:122 ### ITERATION 1 BEGINS
2018-05-29 07:45:53,768  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2018-05-29 07:45:53,768  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2018-05-29 07:45:53,768  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2018-05-29 07:45:53,769  INFO ControlerListenerManagerImpl:148 [it.1] all ControlerIterationStartsListeners called.
2018-05-29 07:45:53,769  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2018-05-29 07:45:53,770  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 10 plans handled. Strategy: KeepSelected
2018-05-29 07:45:53,771  INFO ControlerListenerManagerImpl:213 [it.1] all ControlerReplanningListeners called.
2018-05-29 07:45:53,771  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-05-29 07:45:53,771  INFO EventsManagerImpl:170 resetting Event-Handlers
2018-05-29 07:45:53,771  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2018-05-29 07:45:53,771  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2018-05-29 07:45:53,772  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-05-29 07:45:53,772  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2018-05-29 07:45:53,772  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.contrib.taxi.passenger.SubmittedTaxiRequestsCollector
2018-05-29 07:45:53,772  INFO ControlerListenerManagerImpl:232 [it.1] all ControlerBeforeMobsimListeners called.
2018-05-29 07:45:53,783  INFO PreProcessDijkstra:118 nodes in dead ends: 26 (total nodes: 62). Done in 1 ms
2018-05-29 07:45:53,788  INFO Injector:80 === printInjector start ===
2018-05-29 07:45:53,788  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2018-05-29 07:45:53,789  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2018-05-29 07:45:53,789  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2018-05-29 07:45:53,789  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,789  INFO Injector:92 
2018-05-29 07:45:53,789  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2018-05-29 07:45:53,790  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@acf859d}[Scopes.SINGLETON]
2018-05-29 07:45:53,790  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2018-05-29 07:45:53,790  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,790  INFO Injector:92 
2018-05-29 07:45:53,791  INFO Injector:84 org.matsim.contrib.dvrp.passenger.PassengerEngine 
2018-05-29 07:45:53,791  INFO Injector:85   --> provider: org.matsim.contrib.dvrp.passenger.PassengerEnginePlugin$PassengerEngineProvider@30814f43[Scopes.SINGLETON]
2018-05-29 07:45:53,791  INFO Injector:86   --> source: org.matsim.contrib.dvrp.passenger.PassengerEnginePlugin$1.configure(PassengerEnginePlugin.java:29)
2018-05-29 07:45:53,791  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,791  INFO Injector:92 
2018-05-29 07:45:53,792  INFO Injector:84 org.matsim.core.mobsim.framework.MobsimTimer 
2018-05-29 07:45:53,792  INFO Injector:85   --> provider: Key[type=org.matsim.contrib.dvrp.run.MobsimTimerProvider, annotation=[none]][Scopes.SINGLETON]
2018-05-29 07:45:53,792  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:56)
2018-05-29 07:45:53,792  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,792  INFO Injector:92 
2018-05-29 07:45:53,793  INFO Injector:84 org.matsim.core.router.util.TravelDisutility @com.google.inject.name.Named(value=taxi_optimizer)
2018-05-29 07:45:53,793  INFO Injector:85   --> provider: org.matsim.contrib.dvrp.trafficmonitoring.DvrpTravelDisutilityProvider@1fde4f40[Scopes.SINGLETON]
2018-05-29 07:45:53,793  INFO Injector:86   --> source: org.matsim.contrib.dvrp.trafficmonitoring.DvrpTravelDisutilityProvider.bindTravelDisutilityForOptimizer(DvrpTravelDisutilityProvider.java:39)
2018-05-29 07:45:53,793  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,793  INFO Injector:92 
2018-05-29 07:45:53,794  INFO Injector:84 org.matsim.contrib.dvrp.optimizer.VrpOptimizer 
2018-05-29 07:45:53,794  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.contrib.dvrp.optimizer.VrpOptimizer, annotation=[none]], provider=Key[type=org.matsim.contrib.taxi.optimizer.DefaultTaxiOptimizerProvider, annotation=[none]][Scopes.SINGLETON]}
2018-05-29 07:45:53,794  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:59)
2018-05-29 07:45:53,794  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:53,795  INFO Injector:92 
2018-05-29 07:45:53,795  INFO Injector:84 org.matsim.contrib.dvrp.vrpagent.VrpAgentLogic$DynActionCreator 
2018-05-29 07:45:53,795  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.contrib.dvrp.vrpagent.VrpAgentLogic$DynActionCreator, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@252f626c}[Scopes.SINGLETON]
2018-05-29 07:45:53,795  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:61)
2018-05-29 07:45:53,795  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,796  INFO Injector:92 
2018-05-29 07:45:53,796  INFO Injector:84 org.matsim.contrib.dvrp.passenger.PassengerRequestCreator 
2018-05-29 07:45:53,796  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.contrib.dvrp.passenger.PassengerRequestCreator, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7e4d2287}[Scopes.SINGLETON]
2018-05-29 07:45:53,796  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:62)
2018-05-29 07:45:53,796  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,797  INFO Injector:92 
2018-05-29 07:45:53,797  INFO Injector:84 org.matsim.contrib.taxi.optimizer.TaxiOptimizer 
2018-05-29 07:45:53,797  INFO Injector:85   --> provider: Key[type=org.matsim.contrib.taxi.optimizer.DefaultTaxiOptimizerProvider, annotation=[none]][Scopes.SINGLETON]
2018-05-29 07:45:53,797  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1$1.configure(TaxiDvrpModules.java:66)
2018-05-29 07:45:53,798  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,798  INFO Injector:92 
2018-05-29 07:45:53,798  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2018-05-29 07:45:53,798  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@58496dc[Scopes.SINGLETON]}
2018-05-29 07:45:53,798  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2018-05-29 07:45:53,799  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:53,799  INFO Injector:92 
2018-05-29 07:45:53,799  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2018-05-29 07:45:53,799  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@f4c0e4e[Scopes.SINGLETON]
2018-05-29 07:45:53,799  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2018-05-29 07:45:53,800  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,800  INFO Injector:92 
2018-05-29 07:45:53,800  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2018-05-29 07:45:53,800  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4a8df3e2[Scopes.SINGLETON]
2018-05-29 07:45:53,800  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2018-05-29 07:45:53,801  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,801  INFO Injector:92 
2018-05-29 07:45:53,801  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2018-05-29 07:45:53,801  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1bd0b0e5[Scopes.SINGLETON]
2018-05-29 07:45:53,802  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2018-05-29 07:45:53,802  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,802  INFO Injector:92 
2018-05-29 07:45:53,802  INFO Injector:84 org.matsim.contrib.dynagent.run.DynActivityEngine 
2018-05-29 07:45:53,802  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@21422231[Scopes.SINGLETON]
2018-05-29 07:45:53,803  INFO Injector:86   --> source: org.matsim.contrib.dynagent.run.DynActivityEnginePlugin$1.configure(DynActivityEnginePlugin.java:24)
2018-05-29 07:45:53,803  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,803  INFO Injector:92 
2018-05-29 07:45:53,803  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2018-05-29 07:45:53,803  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1686f0b4[Scopes.SINGLETON]
2018-05-29 07:45:53,804  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2018-05-29 07:45:53,804  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,804  INFO Injector:92 
2018-05-29 07:45:53,804  INFO Injector:84 org.matsim.core.mobsim.qsim.changeeventsengine.NewNetworkChangeEventsEngine 
2018-05-29 07:45:53,804  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5c10285a[Scopes.SINGLETON]
2018-05-29 07:45:53,805  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.changeeventsengine.NetworkChangeEventsPlugin$1.configure(NetworkChangeEventsPlugin.java:23)
2018-05-29 07:45:53,805  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,805  INFO Injector:92 
2018-05-29 07:45:53,805  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2018-05-29 07:45:53,805  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4e31c3ec[Scopes.SINGLETON]
2018-05-29 07:45:53,806  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2018-05-29 07:45:53,806  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,806  INFO Injector:92 
2018-05-29 07:45:53,806  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2018-05-29 07:45:53,806  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@43034809[Scopes.SINGLETON]
2018-05-29 07:45:53,807  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2018-05-29 07:45:53,807  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,807  INFO Injector:92 
2018-05-29 07:45:53,807  INFO Injector:84 org.matsim.contrib.dvrp.vrpagent.VrpAgentSource 
2018-05-29 07:45:53,807  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@67c119b7[Scopes.SINGLETON]
2018-05-29 07:45:53,808  INFO Injector:86   --> source: org.matsim.contrib.dvrp.vrpagent.VrpAgentSourcePlugin$1.configure(VrpAgentSourcePlugin.java:23)
2018-05-29 07:45:53,808  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,808  INFO Injector:92 
2018-05-29 07:45:53,808  INFO Injector:84 org.matsim.contrib.taxi.scheduler.TaxiScheduler 
2018-05-29 07:45:53,808  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1d61c6dc[Scopes.SINGLETON]
2018-05-29 07:45:53,809  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:60)
2018-05-29 07:45:53,809  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,809  INFO Injector:92 
2018-05-29 07:45:53,809  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2018-05-29 07:45:53,810  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@58496dc[Scopes.SINGLETON]
2018-05-29 07:45:53,810  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2018-05-29 07:45:53,810  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:53,811  INFO Injector:92 
2018-05-29 07:45:53,811  INFO Injector:95 === printInjector end ===
2018-05-29 07:45:53,811  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-05-29 07:45:53,812  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-05-29 07:45:53,812  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2018-05-29 07:45:53,812  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2018-05-29 07:45:53,813  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-05-29 07:45:53,813  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-05-29 07:45:53,814  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2018-05-29 07:45:53,814  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.contrib.taxi.optimizer.rules.RuleBasedTaxiOptimizer
2018-05-29 07:45:53,814  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.contrib.taxi.optimizer.TaxiOptimizer
2018-05-29 07:45:53,815  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.contrib.taxi.optimizer.DefaultTaxiOptimizer
2018-05-29 07:45:53,816  INFO QNetsimEngine:504 Assigned 62 nodes and 170 links to QSimEngineRunner #0
2018-05-29 07:45:53,817  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 00:00:00 : #links=0 #nodes=0
2018-05-29 07:45:53,818  INFO QSim:506 SIMULATION (NEW QSim) AT 00:00:00 : #Veh=11 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2018-05-29 07:45:53,818  INFO Gbl:54 used RAM: 403791880B = 394328kB = 385MB  free: 528392184B = 503MB  total: 932184064B = 889MB
2018-05-29 07:45:54,216  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 01:00:00 : #links=1 #nodes=0
2018-05-29 07:45:54,216  INFO QSim:506 SIMULATION (NEW QSim) AT 01:00:00 : #Veh=4 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2018-05-29 07:45:54,216  INFO Gbl:54 used RAM: 403791880B = 394328kB = 385MB  free: 528392184B = 503MB  total: 932184064B = 889MB
2018-05-29 07:45:54,567  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 02:00:00 : #links=0 #nodes=0
2018-05-29 07:45:54,568  INFO QSim:506 SIMULATION (NEW QSim) AT 02:00:00 : #Veh=1 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2018-05-29 07:45:54,568  INFO Gbl:54 used RAM: 403791880B = 394328kB = 385MB  free: 528392184B = 503MB  total: 932184064B = 889MB
2018-05-29 07:45:54,646  INFO AbstractController$8:210 ### ITERATION 1 fires after mobsim event
2018-05-29 07:45:54,646  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.252518245sec
2018-05-29 07:45:54,646  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.contrib.taxi.util.stats.TaxiStatsDumper
2018-05-29 07:45:54,648  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.contrib.taxi.util.TaxiSimulationConsistencyChecker
2018-05-29 07:45:54,648  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.contrib.taxi.benchmark.TaxiBenchmarkStats
2018-05-29 07:45:54,649  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2018-05-29 07:45:54,649  INFO ControlerListenerManagerImpl:251 [it.1] all ControlerAfterMobsimListeners called.
2018-05-29 07:45:54,649  INFO AbstractController$4:147 ### ITERATION 1 fires scoring event
2018-05-29 07:45:54,649  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2018-05-29 07:45:54,650  INFO NewScoreAssignerImpl:36 it: 1 msaStart: null
2018-05-29 07:45:54,650  INFO ControlerListenerManagerImpl:194 [it.1] all ControlerScoringListeners called.
2018-05-29 07:45:54,650  INFO AbstractController$5:155 ### ITERATION 1 fires iteration end event
2018-05-29 07:45:54,650  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-05-29 07:45:54,650  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2018-05-29 07:45:54,651  INFO ControlerListenerManagerImpl:171 [it.1] all ControlerIterationEndsListeners called.
2018-05-29 07:45:54,652  INFO AbstractController:165 ### ITERATION 1 ENDS
2018-05-29 07:45:54,652  INFO AbstractController:166 ###################################################
2018-05-29 07:45:54,652  INFO AbstractController:121 ###################################################
2018-05-29 07:45:54,652  INFO AbstractController:122 ### ITERATION 2 BEGINS
2018-05-29 07:45:54,653  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2018-05-29 07:45:54,653  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2018-05-29 07:45:54,653  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2018-05-29 07:45:54,653  INFO ControlerListenerManagerImpl:148 [it.2] all ControlerIterationStartsListeners called.
2018-05-29 07:45:54,654  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2018-05-29 07:45:54,654  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 10 plans handled. Strategy: KeepSelected
2018-05-29 07:45:54,654  INFO ControlerListenerManagerImpl:213 [it.2] all ControlerReplanningListeners called.
2018-05-29 07:45:54,654  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-05-29 07:45:54,654  INFO EventsManagerImpl:170 resetting Event-Handlers
2018-05-29 07:45:54,655  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2018-05-29 07:45:54,655  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2018-05-29 07:45:54,655  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-05-29 07:45:54,655  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2018-05-29 07:45:54,655  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.contrib.taxi.passenger.SubmittedTaxiRequestsCollector
2018-05-29 07:45:54,656  INFO ControlerListenerManagerImpl:232 [it.2] all ControlerBeforeMobsimListeners called.
2018-05-29 07:45:54,666  INFO PreProcessDijkstra:118 nodes in dead ends: 26 (total nodes: 62). Done in 0 ms
2018-05-29 07:45:54,668  INFO Injector:80 === printInjector start ===
2018-05-29 07:45:54,669  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2018-05-29 07:45:54,669  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2018-05-29 07:45:54,669  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2018-05-29 07:45:54,669  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,670  INFO Injector:92 
2018-05-29 07:45:54,670  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2018-05-29 07:45:54,670  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@f446158}[Scopes.SINGLETON]
2018-05-29 07:45:54,670  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2018-05-29 07:45:54,671  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,671  INFO Injector:92 
2018-05-29 07:45:54,671  INFO Injector:84 org.matsim.contrib.dvrp.passenger.PassengerEngine 
2018-05-29 07:45:54,671  INFO Injector:85   --> provider: org.matsim.contrib.dvrp.passenger.PassengerEnginePlugin$PassengerEngineProvider@63716833[Scopes.SINGLETON]
2018-05-29 07:45:54,672  INFO Injector:86   --> source: org.matsim.contrib.dvrp.passenger.PassengerEnginePlugin$1.configure(PassengerEnginePlugin.java:29)
2018-05-29 07:45:54,672  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,672  INFO Injector:92 
2018-05-29 07:45:54,672  INFO Injector:84 org.matsim.core.mobsim.framework.MobsimTimer 
2018-05-29 07:45:54,672  INFO Injector:85   --> provider: Key[type=org.matsim.contrib.dvrp.run.MobsimTimerProvider, annotation=[none]][Scopes.SINGLETON]
2018-05-29 07:45:54,673  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:56)
2018-05-29 07:45:54,673  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,673  INFO Injector:92 
2018-05-29 07:45:54,673  INFO Injector:84 org.matsim.core.router.util.TravelDisutility @com.google.inject.name.Named(value=taxi_optimizer)
2018-05-29 07:45:54,673  INFO Injector:85   --> provider: org.matsim.contrib.dvrp.trafficmonitoring.DvrpTravelDisutilityProvider@573284a5[Scopes.SINGLETON]
2018-05-29 07:45:54,674  INFO Injector:86   --> source: org.matsim.contrib.dvrp.trafficmonitoring.DvrpTravelDisutilityProvider.bindTravelDisutilityForOptimizer(DvrpTravelDisutilityProvider.java:39)
2018-05-29 07:45:54,674  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,674  INFO Injector:92 
2018-05-29 07:45:54,674  INFO Injector:84 org.matsim.contrib.dvrp.optimizer.VrpOptimizer 
2018-05-29 07:45:54,675  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.contrib.dvrp.optimizer.VrpOptimizer, annotation=[none]], provider=Key[type=org.matsim.contrib.taxi.optimizer.DefaultTaxiOptimizerProvider, annotation=[none]][Scopes.SINGLETON]}
2018-05-29 07:45:54,675  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:59)
2018-05-29 07:45:54,675  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:54,675  INFO Injector:92 
2018-05-29 07:45:54,675  INFO Injector:84 org.matsim.contrib.dvrp.vrpagent.VrpAgentLogic$DynActionCreator 
2018-05-29 07:45:54,676  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.contrib.dvrp.vrpagent.VrpAgentLogic$DynActionCreator, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1046498a}[Scopes.SINGLETON]
2018-05-29 07:45:54,676  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:61)
2018-05-29 07:45:54,676  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,676  INFO Injector:92 
2018-05-29 07:45:54,677  INFO Injector:84 org.matsim.contrib.dvrp.passenger.PassengerRequestCreator 
2018-05-29 07:45:54,677  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.contrib.dvrp.passenger.PassengerRequestCreator, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@409986fe}[Scopes.SINGLETON]
2018-05-29 07:45:54,677  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:62)
2018-05-29 07:45:54,677  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,677  INFO Injector:92 
2018-05-29 07:45:54,678  INFO Injector:84 org.matsim.contrib.taxi.optimizer.TaxiOptimizer 
2018-05-29 07:45:54,678  INFO Injector:85   --> provider: Key[type=org.matsim.contrib.taxi.optimizer.DefaultTaxiOptimizerProvider, annotation=[none]][Scopes.SINGLETON]
2018-05-29 07:45:54,678  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1$1.configure(TaxiDvrpModules.java:66)
2018-05-29 07:45:54,678  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,678  INFO Injector:92 
2018-05-29 07:45:54,679  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2018-05-29 07:45:54,679  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@771d1ffb[Scopes.SINGLETON]}
2018-05-29 07:45:54,679  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2018-05-29 07:45:54,679  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:54,680  INFO Injector:92 
2018-05-29 07:45:54,680  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2018-05-29 07:45:54,680  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@b2f4ece[Scopes.SINGLETON]
2018-05-29 07:45:54,680  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2018-05-29 07:45:54,680  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,681  INFO Injector:92 
2018-05-29 07:45:54,681  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2018-05-29 07:45:54,681  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@36361ddb[Scopes.SINGLETON]
2018-05-29 07:45:54,681  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2018-05-29 07:45:54,682  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,682  INFO Injector:92 
2018-05-29 07:45:54,682  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2018-05-29 07:45:54,682  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@8b91134[Scopes.SINGLETON]
2018-05-29 07:45:54,682  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2018-05-29 07:45:54,683  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,683  INFO Injector:92 
2018-05-29 07:45:54,683  INFO Injector:84 org.matsim.contrib.dynagent.run.DynActivityEngine 
2018-05-29 07:45:54,683  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5d7835a8[Scopes.SINGLETON]
2018-05-29 07:45:54,683  INFO Injector:86   --> source: org.matsim.contrib.dynagent.run.DynActivityEnginePlugin$1.configure(DynActivityEnginePlugin.java:24)
2018-05-29 07:45:54,684  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,684  INFO Injector:92 
2018-05-29 07:45:54,684  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2018-05-29 07:45:54,684  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@47b179d7[Scopes.SINGLETON]
2018-05-29 07:45:54,684  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2018-05-29 07:45:54,685  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,685  INFO Injector:92 
2018-05-29 07:45:54,685  INFO Injector:84 org.matsim.core.mobsim.qsim.changeeventsengine.NewNetworkChangeEventsEngine 
2018-05-29 07:45:54,685  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@46d567cb[Scopes.SINGLETON]
2018-05-29 07:45:54,686  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.changeeventsengine.NetworkChangeEventsPlugin$1.configure(NetworkChangeEventsPlugin.java:23)
2018-05-29 07:45:54,686  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,686  INFO Injector:92 
2018-05-29 07:45:54,686  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2018-05-29 07:45:54,686  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@25da615a[Scopes.SINGLETON]
2018-05-29 07:45:54,687  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2018-05-29 07:45:54,687  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,687  INFO Injector:92 
2018-05-29 07:45:54,687  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2018-05-29 07:45:54,687  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3a5c2626[Scopes.SINGLETON]
2018-05-29 07:45:54,688  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2018-05-29 07:45:54,688  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,688  INFO Injector:92 
2018-05-29 07:45:54,688  INFO Injector:84 org.matsim.contrib.dvrp.vrpagent.VrpAgentSource 
2018-05-29 07:45:54,689  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@373f7450[Scopes.SINGLETON]
2018-05-29 07:45:54,689  INFO Injector:86   --> source: org.matsim.contrib.dvrp.vrpagent.VrpAgentSourcePlugin$1.configure(VrpAgentSourcePlugin.java:23)
2018-05-29 07:45:54,689  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,689  INFO Injector:92 
2018-05-29 07:45:54,689  INFO Injector:84 org.matsim.contrib.taxi.scheduler.TaxiScheduler 
2018-05-29 07:45:54,690  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4b7c4456[Scopes.SINGLETON]
2018-05-29 07:45:54,690  INFO Injector:86   --> source: org.matsim.contrib.taxi.run.examples.TaxiDvrpModules$1.configure(TaxiDvrpModules.java:60)
2018-05-29 07:45:54,690  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,690  INFO Injector:92 
2018-05-29 07:45:54,690  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2018-05-29 07:45:54,691  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@771d1ffb[Scopes.SINGLETON]
2018-05-29 07:45:54,691  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2018-05-29 07:45:54,691  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:54,691  INFO Injector:92 
2018-05-29 07:45:54,692  INFO Injector:95 === printInjector end ===
2018-05-29 07:45:54,692  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-05-29 07:45:54,692  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-05-29 07:45:54,692  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2018-05-29 07:45:54,693  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2018-05-29 07:45:54,693  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-05-29 07:45:54,693  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-05-29 07:45:54,693  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2018-05-29 07:45:54,694  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.contrib.taxi.optimizer.rules.RuleBasedTaxiOptimizer
2018-05-29 07:45:54,694  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.contrib.taxi.optimizer.TaxiOptimizer
2018-05-29 07:45:54,694  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.contrib.taxi.optimizer.DefaultTaxiOptimizer
2018-05-29 07:45:54,695  INFO QNetsimEngine:504 Assigned 62 nodes and 170 links to QSimEngineRunner #0
2018-05-29 07:45:54,696  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 00:00:00 : #links=0 #nodes=0
2018-05-29 07:45:54,696  INFO QSim:506 SIMULATION (NEW QSim) AT 00:00:00 : #Veh=11 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2018-05-29 07:45:54,696  INFO Gbl:54 used RAM: 427430240B = 417412kB = 407MB  free: 504753824B = 481MB  total: 932184064B = 889MB
2018-05-29 07:45:54,749  INFO EventsManagerImpl:134  event # 1024
2018-05-29 07:45:55,011  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 01:00:00 : #links=1 #nodes=0
2018-05-29 07:45:55,012  INFO QSim:506 SIMULATION (NEW QSim) AT 01:00:00 : #Veh=4 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2018-05-29 07:45:55,012  INFO Gbl:54 used RAM: 427430240B = 417412kB = 407MB  free: 504753824B = 481MB  total: 932184064B = 889MB
2018-05-29 07:45:55,304  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 02:00:00 : #links=0 #nodes=0
2018-05-29 07:45:55,305  INFO QSim:506 SIMULATION (NEW QSim) AT 02:00:00 : #Veh=1 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2018-05-29 07:45:55,305  INFO Gbl:54 used RAM: 427430240B = 417412kB = 407MB  free: 504753824B = 481MB  total: 932184064B = 889MB
2018-05-29 07:45:55,371  INFO AbstractController$8:210 ### ITERATION 2 fires after mobsim event
2018-05-29 07:45:55,371  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.contrib.taxi.util.stats.TaxiStatsDumper
2018-05-29 07:45:55,371  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.18602119sec
2018-05-29 07:45:55,373  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.contrib.taxi.util.TaxiSimulationConsistencyChecker
2018-05-29 07:45:55,373  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.contrib.taxi.benchmark.TaxiBenchmarkStats
2018-05-29 07:45:55,373  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2018-05-29 07:45:55,374  INFO ControlerListenerManagerImpl:251 [it.2] all ControlerAfterMobsimListeners called.
2018-05-29 07:45:55,374  INFO AbstractController$4:147 ### ITERATION 2 fires scoring event
2018-05-29 07:45:55,374  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2018-05-29 07:45:55,374  INFO NewScoreAssignerImpl:36 it: 2 msaStart: null
2018-05-29 07:45:55,374  INFO ControlerListenerManagerImpl:194 [it.2] all ControlerScoringListeners called.
2018-05-29 07:45:55,375  INFO AbstractController$5:155 ### ITERATION 2 fires iteration end event
2018-05-29 07:45:55,375  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-05-29 07:45:55,375  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2018-05-29 07:45:55,375  INFO ControlerListenerManagerImpl:171 [it.2] all ControlerIterationEndsListeners called.
2018-05-29 07:45:55,376  INFO AbstractController:165 ### ITERATION 2 ENDS
2018-05-29 07:45:55,377  INFO AbstractController:166 ###################################################
2018-05-29 07:45:55,377  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2018-05-29 07:45:55,377  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-05-29 07:45:55,377  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.contrib.taxi.util.stats.TaxiStatsDumper
2018-05-29 07:45:55,377  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.contrib.taxi.benchmark.TaxiBenchmarkStats
2018-05-29 07:45:55,378  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2018-05-29 07:45:55,378  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2018-05-29 07:45:55,378  INFO OutputDirectoryLogging:146 closing the logfile, i.e. messages sent to the logger after this message are not written to the logfile.
