2018-05-29 07:45:10,869  INFO Gbl:59 JVM: 1.8.0_121; Oracle Corporation; mixed mode; 64-bit
2018-05-29 07:45:10,869  INFO Gbl:63 OS: Linux; 3.10.0-862.2.3.el7.x86_64; amd64
2018-05-29 07:45:10,870  INFO Gbl:66 CPU cores: 32
2018-05-29 07:45:10,870  INFO Gbl:67 max. Memory: 14263.5MB (14956363776B)
2018-05-29 07:45:10,870  INFO Gbl:105 MATSim-Build: r8534a19f6a6dc1129cbbcdc66403b0e275cad86b (2018-05-29 07:41:41)
2018-05-29 07:45:10,871  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2018-05-29 07:45:10,871  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2018-05-29 07:45:10,871 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-05-29 07:45:10,871  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2018-05-29 07:45:10,872  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2018-05-29 07:45:10,872  INFO ControlerUtils:58 config dump before iterations start
2018-05-29 07:45:10,872  INFO Config:561 setting context to [file:/root/workspace/matsim-org/matsim/385025376/contribs/roadpricing/]
2018-05-29 07:45:10,877  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>
<!-- ====================================================================== -->
	<module name="TimeAllocationMutator" >
		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />
		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />
		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="changeMode" >
		<param name="ignoreCarAvailability" value="true" />
		<param name="modes" value="car,pt" />
	</module>
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="true" />
		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="true" />
		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />
		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />
		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="0" />
		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />
		<param name="outputDirectory" value="test/output/org/matsim/roadpricing/ModuleTest/testControlerWithoutRoadPricingDoesntWork/" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="failIfDirectoryExists" />
		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />
		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />
		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="10" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="10" />
		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>
<!-- ====================================================================== -->
	<module name="counts" >
		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />
		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="facilities" >
		<!-- If set to 'true', empty activity option will be created. -->
		<param name="addEmptyActivityOption" value="false" />
		<!-- Default is 'true'. In the case that a facility has no link assigned, the ActivityFacility can be assigned to the closest link. If there should be only one ActivityFacility per link and if no link-assignment should be done, set to 'false'.This will create a new ActivityFacility at the coordinate and the facility will not be assigned to a link. -->
		<param name="assigningLinksToFacilitiesIfMissing" value="true" />
		<!-- If set to 'true', opening time will be assigned to activity facilities from ActivityParams. Default is false. This will NOT override option 'addEmptyActivityOption'. -->
		<param name="assigningOpeningTime" value="false" />
		<!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLocationInPlansFile  -->
		<param name="facilitiesSource" value="none" />
		<!-- A prefix to be used in activityFacility id. -->
		<param name="idPrefix" value="" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputFacilitiesFile" value="null" />
		<param name="inputFacilityAttributesFile" value="null" />
		<!-- Sets whether all activities on a link should be collected within one ActivityFacility. Default is 'true'. If set to 'false', for each coordinate found in the population's activities a separate ActivityFacility will be created. -->
		<param name="oneFacilityPerLink" value="true" />
		<!-- If set to 'true' (which is the default), the link and coordinate attributes are replaced by null reference in the activities, as this information is now available via the facility. -->
		<param name="removingLinksAndCoordinates" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="global" >
		<param name="coordinateSystem" value="Atlantis" />
		<param name="insistingOnDeprecatedConfigVersion" value="true" />
		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />
		<param name="randomSeed" value="4711" />
	</module>
<!-- ====================================================================== -->
	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="linkStats" >
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />
		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="network" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="null" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>
<!-- ====================================================================== -->
	<module name="parallelEventHandling" >
		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />
		<!-- Number of threads for parallel events handler. _null_ means the framework decides by itself. 0 is currently not possible. -->
		<param name="numberOfThreads" value="null" />
		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />
		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="1.0" />
		<param name="PathSizeLogitBeta" value="1.0" />
		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />
		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />
		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />
		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="02:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="car" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="pt" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="walk" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="bike" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="ride" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="other" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />
		<param name="inputPlansFile" value="null" />
		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />
		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />
		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="ptCounts" >
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />
		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />
		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />
		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="qsim" >
		<!-- If set to true, creates a vehicle for each person corresponding to every network mode. However, this will be overridden if vehicle source is fromVehiclesData. -->
		<param name="creatingVehiclesForAllNetworkModes" value="true" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />
		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />
		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />
		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />
		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />
		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />
		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />
		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="undefined" />
		<param name="storageCapacityFactor" value="1.0" />
		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />
		<param name="timeStepSize" value="00:00:01" />
		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />
		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />
		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />
		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />
		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />
		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />
		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>
<!-- ====================================================================== -->
	<module name="roadpricing" >
		<param name="tollLinksFile" value="roadpricing.xml" />
	</module>
<!-- ====================================================================== -->
	<module name="scenario" >
	</module>
<!-- ====================================================================== -->
	<module name="strategy" >
		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />
		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />
		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />
		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />
		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />
	</module>
<!-- ====================================================================== -->
	<module name="subtourModeChoice" >
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>
<!-- ====================================================================== -->
	<module name="transit" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />
		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />
		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />
		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="transitRouter" >
		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />
		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />
		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />
		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />
		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>
<!-- ====================================================================== -->
	<module name="travelTimeCalculator" >
		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />
		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />
		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />
		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />
		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />
		<!-- possible values: TravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />
		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>
<!-- ====================================================================== -->
	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="vspExperimental" >
		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />
		<param name="isGeneratingBoardingDeniedEvent" value="false" />
		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />
		<param name="logitScaleParamForPlansRemoval" value="1.0" />
		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />
		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>
<!-- ====================================================================== -->

</config>

2018-05-29 07:45:10,879  INFO ControlerUtils:63 Complete config dump done.
2018-05-29 07:45:10,879  INFO ControlerUtils:64 Checking consistency of config...
2018-05-29 07:45:10,879  INFO PlanCalcScoreConfigGroup$ScoringParameterSet:1373 NO OPENING OR CLOSING TIMES DEFINED!

There is no activity type that has an opening *and* closing time (or opening time and late penalty) defined.
This usually means that the activity chains can be shifted by an arbitrary
number of hours without having an effect on the score of the plans, and thus
resulting in wrong results / traffic patterns.
If you are using MATSim without time adaptation, you can ignore this warning.


2018-05-29 07:45:10,879  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2018-05-29 07:45:10,880 ERROR MatsimRuntimeModifications:54 Getting uncaught Exception in Thread main
java.lang.RuntimeException: Unmaterialized config group: roadpricing
	at org.matsim.core.config.consistency.UnmaterializedConfigGroupChecker.checkConsistency(UnmaterializedConfigGroupChecker.java:11)
	at org.matsim.core.config.Config.checkConsistency(Config.java:227)
	at org.matsim.core.controler.ControlerUtils.checkConfigConsistencyAndWriteToLog(ControlerUtils.java:65)
	at org.matsim.core.controler.AbstractController$1.run(AbstractController.java:78)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:48)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:31)
	at org.matsim.core.controler.AbstractController.run(AbstractController.java:88)
	at org.matsim.core.controler.NewControler.run(NewControler.java:75)
	at org.matsim.core.controler.Controler.run(Controler.java:203)
	at org.matsim.roadpricing.ModuleTest.testControlerWithoutRoadPricingDoesntWork(ModuleTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:53)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:344)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:269)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:240)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:184)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
2018-05-29 07:45:10,883  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2018-05-29 07:45:10,884 ERROR MatsimRuntimeModifications:60 ERROR --- This is an unexpected shutdown!
2018-05-29 07:45:10,884 ERROR MatsimRuntimeModifications:63 Shutdown possibly caused by the following Exception:
java.lang.RuntimeException: Unmaterialized config group: roadpricing
	at org.matsim.core.config.consistency.UnmaterializedConfigGroupChecker.checkConsistency(UnmaterializedConfigGroupChecker.java:11)
	at org.matsim.core.config.Config.checkConsistency(Config.java:227)
	at org.matsim.core.controler.ControlerUtils.checkConfigConsistencyAndWriteToLog(ControlerUtils.java:65)
	at org.matsim.core.controler.AbstractController$1.run(AbstractController.java:78)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:48)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:31)
	at org.matsim.core.controler.AbstractController.run(AbstractController.java:88)
	at org.matsim.core.controler.NewControler.run(NewControler.java:75)
	at org.matsim.core.controler.Controler.run(Controler.java:203)
	at org.matsim.roadpricing.ModuleTest.testControlerWithoutRoadPricingDoesntWork(ModuleTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:53)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:344)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:269)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:240)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:184)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
2018-05-29 07:45:10,884  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-05-29 07:45:10,885  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.DumpDataAtEndImpl
2018-05-29 07:45:10,885  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2018-05-29 07:45:10,885  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2018-05-29 07:45:10,885  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2018-05-29 07:45:10,885  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2018-05-29 07:45:10,886 ERROR MatsimRuntimeModifications:78 ERROR --- MATSim unexpectedly terminated. Please check the output or the logfile with warnings and errors for hints.
2018-05-29 07:45:10,886 ERROR MatsimRuntimeModifications:79 ERROR --- results should not be used for further analysis.
2018-05-29 07:45:10,886  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2018-05-29 07:45:10,886 ERROR MatsimRuntimeModifications:83 ERROR --- This was an unexpected shutdown! See the log file for a possible reason.
2018-05-29 07:45:10,887  WARN MatsimTestUtils:227 user.dir = /root/workspace/matsim-org/matsim/385025376/contribs/roadpricing
2018-05-29 07:45:10,887  INFO IOUtils:73 String test/input/org/matsim/roadpricing/ModuleTest//config.xml does not exist as file on the file system; trying it as a resource ...
2018-05-29 07:45:10,887  INFO Config:561 setting context to [file:/root/workspace/matsim-org/matsim/385025376/contribs/roadpricing/]
2018-05-29 07:45:10,890  WARN MatsimXmlParser:155 starting to parse xml from url file:/root/workspace/matsim-org/matsim/385025376/contribs/roadpricing/target/test-classes/test/input/org/matsim/roadpricing/ModuleTest//config.xml ...
2018-05-29 07:45:10,892  WARN ConfigReaderMatsimV1:58 using deprecated config version; please switch to config v2; your output_config.xml will be in the correct version; v1 will fail eventually, since we want to reduce the workload on keeping everything between v1 and v2 consistent (look into PlanCalcScoreConfigGroup or PlanCalcRouteConfigGroup if you want to know what we mean).
2018-05-29 07:45:10,892  INFO ConfigReader:98 using config_v1-reader.
2018-05-29 07:45:10,892  INFO MatsimXmlParser:270 Trying to load http://www.matsim.org/files/dtd/config_v1.dtd. In some cases (e.g. network interface up but no connection), this may take a bit.
2018-05-29 07:45:10,942  INFO Config:561 setting context to [file:/root/workspace/matsim-org/matsim/385025376/contribs/roadpricing/target/test-classes/test/input/org/matsim/roadpricing/ModuleTest//config.xml]
2018-05-29 07:45:11,050 DEBUG ScenarioLoaderImpl:85 setting {}
2018-05-29 07:45:11,051  INFO SimStepParallelEventsManagerImpl:79 number of threads=1
2018-05-29 07:45:11,051  INFO ScenarioLoaderImpl:108 loading scenario from base directory: /root/workspace/matsim-org/matsim/385025376/contribs/roadpricing/
2018-05-29 07:45:11,051  INFO ScenarioLoaderImpl:182 no facilities file set in config, therefore not loading any facilities.  This is not a problem except if you are using facilities
2018-05-29 07:45:11,052  INFO ScenarioLoaderImpl:192 no facility-attributes file set in config, not loading any facility attributes
2018-05-29 07:45:11,052  INFO ScenarioLoaderImpl:225 no population file set in config, not able to load population
2018-05-29 07:45:11,052  INFO ScenarioLoaderImpl:235 no person-attributes file set in config, not loading any person attributes
2018-05-29 07:45:11,053  INFO ScenarioLoaderImpl:247 no households file set in config, not loading households
2018-05-29 07:45:11,053  INFO ScenarioLoaderImpl:258 no household-attributes file set in config, not loading any household attributes
2018-05-29 07:45:11,053  INFO ScenarioLoaderImpl:284 no transit schedule file set in config, not loading any transit schedule
2018-05-29 07:45:11,054  INFO ScenarioLoaderImpl:311 no transit vehicles file set in config, not loading any transit vehicles
2018-05-29 07:45:11,054  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-05-29 07:45:11,054  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-05-29 07:45:11,054  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-05-29 07:45:11,055  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-05-29 07:45:11,055  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-05-29 07:45:11,055  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-05-29 07:45:11,055  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-05-29 07:45:11,056  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-05-29 07:45:11,056  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-05-29 07:45:11,056  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.VehicleArrivesAtFacilityEventHandler
2018-05-29 07:45:11,056  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.VehicleArrivesAtFacilityEvent
2018-05-29 07:45:11,057  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleAbortsEventHandler
2018-05-29 07:45:11,057  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleAbortsEvent
2018-05-29 07:45:11,057  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,057  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-05-29 07:45:11,058  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-05-29 07:45:11,058  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-05-29 07:45:11,058  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-05-29 07:45:11,059  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-05-29 07:45:11,059  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-05-29 07:45:11,059  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-05-29 07:45:11,059  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-05-29 07:45:11,060  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-05-29 07:45:11,060  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.VehicleArrivesAtFacilityEventHandler
2018-05-29 07:45:11,060  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.VehicleArrivesAtFacilityEvent
2018-05-29 07:45:11,060  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleAbortsEventHandler
2018-05-29 07:45:11,061  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleAbortsEvent
2018-05-29 07:45:11,061  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,061  WARN MatsimXmlParser:155 starting to parse xml from url file:/root/workspace/matsim-org/matsim/385025376/contribs/roadpricing/target/test-classes/test/input/org/matsim/roadpricing/ModuleTest//roadpricing.xml ...
2018-05-29 07:45:11,064  INFO MatsimXmlParser:270 Trying to load http://www.matsim.org/files/dtd/roadpricing_v1.dtd. In some cases (e.g. network interface up but no connection), this may take a bit.
2018-05-29 07:45:11,116  INFO StrategyManager:59 global innovation switch off after iteration: 0
2018-05-29 07:45:11,117  INFO GenericStrategyManager:350 setting PlanSelectorForRemoval to class org.matsim.core.replanning.selectors.WorstPlanForRemovalSelector
2018-05-29 07:45:11,118  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.EventsToActivities
2018-05-29 07:45:11,118  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityStartEventHandler
2018-05-29 07:45:11,118  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityStartEvent
2018-05-29 07:45:11,119  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2018-05-29 07:45:11,119  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2018-05-29 07:45:11,119  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,120  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.EventsToActivities
2018-05-29 07:45:11,120  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityStartEventHandler
2018-05-29 07:45:11,121  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityStartEvent
2018-05-29 07:45:11,121  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2018-05-29 07:45:11,121  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2018-05-29 07:45:11,122  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,122  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.EventsToLegs
2018-05-29 07:45:11,122  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-05-29 07:45:11,123  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-05-29 07:45:11,123  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-05-29 07:45:11,124  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-05-29 07:45:11,124  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-05-29 07:45:11,124  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-05-29 07:45:11,125  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-05-29 07:45:11,125  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-05-29 07:45:11,125  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.TeleportationArrivalEventHandler
2018-05-29 07:45:11,126  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.TeleportationArrivalEvent
2018-05-29 07:45:11,126  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.TransitDriverStartsEventHandler
2018-05-29 07:45:11,126  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.TransitDriverStartsEvent
2018-05-29 07:45:11,127  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonEntersVehicleEventHandler
2018-05-29 07:45:11,127  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonEntersVehicleEvent
2018-05-29 07:45:11,127  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.VehicleArrivesAtFacilityEventHandler
2018-05-29 07:45:11,128  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.VehicleArrivesAtFacilityEvent
2018-05-29 07:45:11,128  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-05-29 07:45:11,129  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-05-29 07:45:11,129  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-05-29 07:45:11,129  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-05-29 07:45:11,130  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,130  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.EventsToLegs
2018-05-29 07:45:11,130  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-05-29 07:45:11,131  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-05-29 07:45:11,131  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-05-29 07:45:11,131  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-05-29 07:45:11,132  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-05-29 07:45:11,132  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-05-29 07:45:11,132  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-05-29 07:45:11,133  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-05-29 07:45:11,133  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.TeleportationArrivalEventHandler
2018-05-29 07:45:11,134  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.TeleportationArrivalEvent
2018-05-29 07:45:11,134  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.TransitDriverStartsEventHandler
2018-05-29 07:45:11,134  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.TransitDriverStartsEvent
2018-05-29 07:45:11,135  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonEntersVehicleEventHandler
2018-05-29 07:45:11,135  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonEntersVehicleEvent
2018-05-29 07:45:11,135  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.VehicleArrivesAtFacilityEventHandler
2018-05-29 07:45:11,136  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.VehicleArrivesAtFacilityEvent
2018-05-29 07:45:11,136  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-05-29 07:45:11,136  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-05-29 07:45:11,137  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-05-29 07:45:11,137  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-05-29 07:45:11,137  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,138  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-05-29 07:45:11,138  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2018-05-29 07:45:11,138  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2018-05-29 07:45:11,139  INFO EventsManagerImpl:148   org.matsim.core.scoring.EventsToLegs$LegHandler
2018-05-29 07:45:11,139  INFO EventsManagerImpl:148   org.matsim.core.scoring.EventsToActivities$ActivityHandler
2018-05-29 07:45:11,139  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,140  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-05-29 07:45:11,140  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2018-05-29 07:45:11,140  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2018-05-29 07:45:11,140  INFO EventsManagerImpl:148   org.matsim.core.scoring.EventsToLegs$LegHandler
2018-05-29 07:45:11,141  INFO EventsManagerImpl:148   org.matsim.core.scoring.EventsToActivities$ActivityHandler
2018-05-29 07:45:11,141  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,142  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.roadpricing.CalcPaidToll
2018-05-29 07:45:11,142  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-05-29 07:45:11,142  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-05-29 07:45:11,143  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-05-29 07:45:11,143  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-05-29 07:45:11,143  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-05-29 07:45:11,144  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-05-29 07:45:11,144  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,144  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.roadpricing.CalcPaidToll
2018-05-29 07:45:11,144  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-05-29 07:45:11,145  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-05-29 07:45:11,145  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-05-29 07:45:11,145  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-05-29 07:45:11,146  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-05-29 07:45:11,146  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-05-29 07:45:11,146  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,147  INFO CalcPaidToll:77 just instantiated DistanceTollBehavior
2018-05-29 07:45:11,147  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.roadpricing.CalcAverageTolledTripLength
2018-05-29 07:45:11,147  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-05-29 07:45:11,148  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-05-29 07:45:11,148  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-05-29 07:45:11,148  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-05-29 07:45:11,149  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-05-29 07:45:11,149  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-05-29 07:45:11,149  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-05-29 07:45:11,150  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-05-29 07:45:11,150  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,150  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.roadpricing.CalcAverageTolledTripLength
2018-05-29 07:45:11,150  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-05-29 07:45:11,151  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-05-29 07:45:11,151  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-05-29 07:45:11,151  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-05-29 07:45:11,152  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-05-29 07:45:11,152  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-05-29 07:45:11,152  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-05-29 07:45:11,153  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-05-29 07:45:11,153  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,154  INFO Gbl:105 RoadPricing-Build: unknown
2018-05-29 07:45:11,154  INFO CalcLinkStats:151  resetting `count' to zero.  This info is here since we want to check when this is happening during normal simulation runs.  kai, jan'11
2018-05-29 07:45:11,154  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.VolumesAnalyzer
2018-05-29 07:45:11,155  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-05-29 07:45:11,155  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-05-29 07:45:11,155  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-05-29 07:45:11,156  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-05-29 07:45:11,156  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,156  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.VolumesAnalyzer
2018-05-29 07:45:11,157  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-05-29 07:45:11,157  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-05-29 07:45:11,157  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-05-29 07:45:11,157  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-05-29 07:45:11,158  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,158  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.LegHistogram
2018-05-29 07:45:11,159  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-05-29 07:45:11,159  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-05-29 07:45:11,159  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-05-29 07:45:11,159  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-05-29 07:45:11,160  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonStuckEventHandler
2018-05-29 07:45:11,160  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonStuckEvent
2018-05-29 07:45:11,160  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,161  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.LegHistogram
2018-05-29 07:45:11,161  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-05-29 07:45:11,161  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-05-29 07:45:11,161  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-05-29 07:45:11,162  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-05-29 07:45:11,162  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonStuckEventHandler
2018-05-29 07:45:11,162  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonStuckEvent
2018-05-29 07:45:11,163  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,163  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.CalcLegTimes
2018-05-29 07:45:11,163  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-05-29 07:45:11,163  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-05-29 07:45:11,164  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-05-29 07:45:11,164  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-05-29 07:45:11,164  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2018-05-29 07:45:11,165  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2018-05-29 07:45:11,165  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityStartEventHandler
2018-05-29 07:45:11,165  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityStartEvent
2018-05-29 07:45:11,165  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,166  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.CalcLegTimes
2018-05-29 07:45:11,166  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-05-29 07:45:11,166  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-05-29 07:45:11,167  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-05-29 07:45:11,167  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-05-29 07:45:11,167  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2018-05-29 07:45:11,168  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2018-05-29 07:45:11,168  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityStartEventHandler
2018-05-29 07:45:11,168  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityStartEvent
2018-05-29 07:45:11,168  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,169  INFO AbstractController:52 Used Controler-Class: org.matsim.core.controler.NewControler
2018-05-29 07:45:11,170  INFO Config:534 ConfigConsistencyChecker with runtime type=class org.matsim.core.config.consistency.ConfigConsistencyCheckerImpl was already added; not adding it a second time
2018-05-29 07:45:11,170  INFO Injector:80 === printInjector start ===
2018-05-29 07:45:11,170  INFO Injector:84 org.matsim.core.scenario.ScenarioLoaderImpl 
2018-05-29 07:45:11,170  INFO Injector:85   --> provider: of(org.matsim.core.scenario.ScenarioLoaderImpl@77e1b84c)
2018-05-29 07:45:11,171  INFO Injector:86   --> source: org.matsim.core.scenario.ScenarioByConfigModule.install(ScenarioByConfigModule.java:12)
2018-05-29 07:45:11,171  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,171  INFO Injector:92 
2018-05-29 07:45:11,171  INFO Injector:84 org.matsim.api.core.v01.network.Network 
2018-05-29 07:45:11,171  INFO Injector:85   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)
2018-05-29 07:45:11,171  INFO Injector:86   --> source: org.matsim.api.core.v01.network.Network org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(org.matsim.api.core.v01.Scenario)
2018-05-29 07:45:11,171  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,172  INFO Injector:92 
2018-05-29 07:45:11,172  INFO Injector:84 org.matsim.api.core.v01.population.Population 
2018-05-29 07:45:11,172  INFO Injector:85   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)
2018-05-29 07:45:11,172  INFO Injector:86   --> source: org.matsim.api.core.v01.population.Population org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(org.matsim.api.core.v01.Scenario)
2018-05-29 07:45:11,172  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,172  INFO Injector:92 
2018-05-29 07:45:11,172  INFO Injector:84 org.matsim.api.core.v01.population.PopulationFactory 
2018-05-29 07:45:11,173  INFO Injector:85   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)
2018-05-29 07:45:11,173  INFO Injector:86   --> source: org.matsim.api.core.v01.population.PopulationFactory org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(org.matsim.api.core.v01.population.Population)
2018-05-29 07:45:11,173  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,173  INFO Injector:92 
2018-05-29 07:45:11,173  INFO Injector:84 org.matsim.facilities.ActivityFacilities 
2018-05-29 07:45:11,173  INFO Injector:85   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)
2018-05-29 07:45:11,173  INFO Injector:86   --> source: org.matsim.facilities.ActivityFacilities org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(org.matsim.api.core.v01.Scenario)
2018-05-29 07:45:11,174  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,174  INFO Injector:92 
2018-05-29 07:45:11,174  INFO Injector:84 org.matsim.households.Households 
2018-05-29 07:45:11,174  INFO Injector:85   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)
2018-05-29 07:45:11,174  INFO Injector:86   --> source: org.matsim.households.Households org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(org.matsim.api.core.v01.Scenario)
2018-05-29 07:45:11,174  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,174  INFO Injector:92 
2018-05-29 07:45:11,175  INFO Injector:84 org.matsim.vehicles.Vehicles 
2018-05-29 07:45:11,175  INFO Injector:85   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)
2018-05-29 07:45:11,175  INFO Injector:86   --> source: org.matsim.vehicles.Vehicles org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(org.matsim.api.core.v01.Scenario)
2018-05-29 07:45:11,175  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,175  INFO Injector:92 
2018-05-29 07:45:11,175  INFO Injector:84 org.matsim.lanes.data.Lanes 
2018-05-29 07:45:11,175  INFO Injector:85   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)
2018-05-29 07:45:11,176  INFO Injector:86   --> source: org.matsim.lanes.data.Lanes org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(org.matsim.api.core.v01.Scenario)
2018-05-29 07:45:11,176  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,176  INFO Injector:92 
2018-05-29 07:45:11,176  INFO Injector:84 org.matsim.api.core.v01.Scenario 
2018-05-29 07:45:11,176  INFO Injector:85   --> provider: @Provides org.matsim.core.scenario.ScenarioByConfigModule.createScenario(ScenarioByConfigModule.java:9)[Scopes.SINGLETON]
2018-05-29 07:45:11,176  INFO Injector:86   --> source: private org.matsim.api.core.v01.Scenario org.matsim.core.scenario.ScenarioByConfigModule.createScenario(org.matsim.core.scenario.ScenarioLoaderImpl)
2018-05-29 07:45:11,177  INFO Injector:88   --> scope: Scopes.SINGLETON
2018-05-29 07:45:11,177  INFO Injector:92 
2018-05-29 07:45:11,177  INFO Injector:84 org.matsim.core.controler.ControlerI 
2018-05-29 07:45:11,177  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4138af7}[Scopes.SINGLETON]
2018-05-29 07:45:11,177  INFO Injector:86   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:8)
2018-05-29 07:45:11,177  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,177  INFO Injector:92 
2018-05-29 07:45:11,178  INFO Injector:84 org.matsim.core.controler.ControlerListenerManager 
2018-05-29 07:45:11,178  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3c130cb2[Scopes.SINGLETON]}
2018-05-29 07:45:11,178  INFO Injector:86   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:10)
2018-05-29 07:45:11,178  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,178  INFO Injector:92 
2018-05-29 07:45:11,178  INFO Injector:84 org.matsim.core.controler.PrepareForSim 
2018-05-29 07:45:11,178  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5bbb0a25}
2018-05-29 07:45:11,179  INFO Injector:86   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:11)
2018-05-29 07:45:11,179  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,179  INFO Injector:92 
2018-05-29 07:45:11,179  INFO Injector:84 org.matsim.core.controler.TerminationCriterion 
2018-05-29 07:45:11,179  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6e0dec27}
2018-05-29 07:45:11,179  INFO Injector:86   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:14)
2018-05-29 07:45:11,179  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,180  INFO Injector:92 
2018-05-29 07:45:11,180  INFO Injector:84 org.matsim.core.controler.MatsimServices 
2018-05-29 07:45:11,180  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3705a85c}
2018-05-29 07:45:11,180  INFO Injector:86   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:15)
2018-05-29 07:45:11,180  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,180  INFO Injector:92 
2018-05-29 07:45:11,180  INFO Injector:84 org.matsim.core.controler.corelisteners.PlansScoring 
2018-05-29 07:45:11,180  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1146e32e[Scopes.SINGLETON]}
2018-05-29 07:45:11,181  INFO Injector:86   --> source: org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:11)
2018-05-29 07:45:11,181  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,181  INFO Injector:92 
2018-05-29 07:45:11,181  INFO Injector:84 org.matsim.core.controler.corelisteners.PlansReplanning 
2018-05-29 07:45:11,181  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2cdcedef[Scopes.SINGLETON]}
2018-05-29 07:45:11,181  INFO Injector:86   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:38)
2018-05-29 07:45:11,182  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,182  INFO Injector:92 
2018-05-29 07:45:11,182  INFO Injector:84 org.matsim.core.controler.corelisteners.PlansDumping 
2018-05-29 07:45:11,182  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@d827673[Scopes.SINGLETON]}
2018-05-29 07:45:11,182  INFO Injector:86   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:39)
2018-05-29 07:45:11,182  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,182  INFO Injector:92 
2018-05-29 07:45:11,183  INFO Injector:84 org.matsim.core.controler.corelisteners.EventsHandling 
2018-05-29 07:45:11,183  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6408a8ac[Scopes.SINGLETON]}
2018-05-29 07:45:11,183  INFO Injector:86   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:40)
2018-05-29 07:45:11,183  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,183  INFO Injector:92 
2018-05-29 07:45:11,183  INFO Injector:84 org.matsim.core.controler.corelisteners.DumpDataAtEnd 
2018-05-29 07:45:11,183  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@43d2c8e3[Scopes.SINGLETON]}
2018-05-29 07:45:11,183  INFO Injector:86   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:41)
2018-05-29 07:45:11,184  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,184  INFO Injector:92 
2018-05-29 07:45:11,184  INFO Injector:84 org.matsim.roadpricing.RoadPricingScheme 
2018-05-29 07:45:11,184  INFO Injector:85   --> provider: Key[type=org.matsim.roadpricing.ControlerDefaultsWithRoadPricingModule$RoadPricingSchemeProvider, annotation=[none]][Scopes.SINGLETON]
2018-05-29 07:45:11,184  INFO Injector:86   --> source: org.matsim.roadpricing.RoadPricingModule.install(RoadPricingModule.java:37)
2018-05-29 07:45:11,184  INFO Injector:88   --> scope: Scopes.SINGLETON
2018-05-29 07:45:11,184  INFO Injector:92 
2018-05-29 07:45:11,185  INFO Injector:84 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.name.Named(value=car)
2018-05-29 07:45:11,185  INFO Injector:85   --> provider: Key[type=org.matsim.roadpricing.ControlerDefaultsWithRoadPricingModule$TravelDisutilityIncludingTollFactoryProvider, annotation=[none]][Scopes.SINGLETON]
2018-05-29 07:45:11,185  INFO Injector:86   --> source: org.matsim.roadpricing.RoadPricingModule.install(RoadPricingModule.java:43)
2018-05-29 07:45:11,185  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,185  INFO Injector:92 
2018-05-29 07:45:11,185  INFO Injector:84 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=ReRouteAreaToll)
2018-05-29 07:45:11,185  INFO Injector:85   --> provider: Key[type=org.matsim.roadpricing.ReRouteAreaToll, annotation=[none]]
2018-05-29 07:45:11,186  INFO Injector:86   --> source: org.matsim.roadpricing.RoadPricingModule.install(RoadPricingModule.java:48)
2018-05-29 07:45:11,186  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,186  INFO Injector:92 
2018-05-29 07:45:11,186  INFO Injector:84 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.name.Named(value=car_with_payed_area_toll)
2018-05-29 07:45:11,186  INFO Injector:85   --> provider: of(org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@23a9400c)
2018-05-29 07:45:11,186  INFO Injector:86   --> source: org.matsim.roadpricing.RoadPricingModule.install(RoadPricingModule.java:49)
2018-05-29 07:45:11,186  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,186  INFO Injector:92 
2018-05-29 07:45:11,187  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=car_with_payed_area_toll)
2018-05-29 07:45:11,187  INFO Injector:85   --> provider: org.matsim.roadpricing.RoadPricingNetworkRouting@12d8e6b6
2018-05-29 07:45:11,187  INFO Injector:86   --> source: org.matsim.roadpricing.RoadPricingModule.install(RoadPricingModule.java:50)
2018-05-29 07:45:11,187  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,187  INFO Injector:92 
2018-05-29 07:45:11,187  INFO Injector:84 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1217, type=MULTIBINDER, keyType=)
2018-05-29 07:45:11,187  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1217, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5935eb9c}
2018-05-29 07:45:11,188  INFO Injector:86   --> source: org.matsim.roadpricing.RoadPricingModule.install(RoadPricingModule.java:57)
2018-05-29 07:45:11,188  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,188  INFO Injector:92 
2018-05-29 07:45:11,188  INFO Injector:84 org.matsim.core.api.experimental.events.EventsManager 
2018-05-29 07:45:11,188  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@481f698f}[Scopes.SINGLETON]
2018-05-29 07:45:11,188  INFO Injector:86   --> source: org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:23)
2018-05-29 07:45:11,188  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,189  INFO Injector:92 
2018-05-29 07:45:11,189  INFO Injector:84 org.matsim.core.mobsim.framework.Mobsim 
2018-05-29 07:45:11,189  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.QSimProvider, annotation=[none]]
2018-05-29 07:45:11,189  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimModule.configure(QSimModule.java:28)
2018-05-29 07:45:11,189  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,189  INFO Injector:92 
2018-05-29 07:45:11,189  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory 
2018-05-29 07:45:11,190  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1a5c0b8}
2018-05-29 07:45:11,190  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimModule.configure(QSimModule.java:32)
2018-05-29 07:45:11,190  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,190  INFO Injector:92 
2018-05-29 07:45:11,190  INFO Injector:84 org.matsim.core.router.util.TravelTime @com.google.inject.name.Named(value=car)
2018-05-29 07:45:11,190  INFO Injector:85   --> provider: Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]
2018-05-29 07:45:11,190  INFO Injector:86   --> source: org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:81)
2018-05-29 07:45:11,190  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,191  INFO Injector:92 
2018-05-29 07:45:11,191  INFO Injector:84 org.matsim.core.scoring.ScoringFunctionFactory 
2018-05-29 07:45:11,191  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@673e1cf2}
2018-05-29 07:45:11,191  INFO Injector:86   --> source: org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:32)
2018-05-29 07:45:11,191  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,191  INFO Injector:92 
2018-05-29 07:45:11,191  INFO Injector:84 org.matsim.core.scoring.functions.ScoringParametersForPerson 
2018-05-29 07:45:11,191  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.scoring.functions.ScoringParametersForPerson, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@55d98bbb}
2018-05-29 07:45:11,192  INFO Injector:86   --> source: org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:33)
2018-05-29 07:45:11,192  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,192  INFO Injector:92 
2018-05-29 07:45:11,192  INFO Injector:84 org.matsim.core.scoring.ExperiencedPlansService 
2018-05-29 07:45:11,192  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@d408c5d}[Scopes.SINGLETON]
2018-05-29 07:45:11,192  INFO Injector:86   --> source: org.matsim.core.scoring.ExperiencedPlansModule.install(ExperiencedPlansModule.java:10)
2018-05-29 07:45:11,192  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,193  INFO Injector:92 
2018-05-29 07:45:11,193  INFO Injector:84 org.matsim.core.router.MainModeIdentifier 
2018-05-29 07:45:11,193  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4a937d43}
2018-05-29 07:45:11,193  INFO Injector:86   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:44)
2018-05-29 07:45:11,193  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,193  INFO Injector:92 
2018-05-29 07:45:11,193  INFO Injector:84 org.matsim.core.router.util.LeastCostPathCalculatorFactory 
2018-05-29 07:45:11,194  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@18711946[Scopes.SINGLETON]}
2018-05-29 07:45:11,194  INFO Injector:86   --> source: org.matsim.core.router.LeastCostPathCalculatorModule.install(LeastCostPathCalculatorModule.java:40)
2018-05-29 07:45:11,194  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,194  INFO Injector:92 
2018-05-29 07:45:11,194  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=ride)
2018-05-29 07:45:11,194  INFO Injector:85   --> provider: org.matsim.core.router.FreespeedFactorRouting@6d911985
2018-05-29 07:45:11,194  INFO Injector:86   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55)
2018-05-29 07:45:11,194  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,195  INFO Injector:92 
2018-05-29 07:45:11,195  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=pt)
2018-05-29 07:45:11,195  INFO Injector:85   --> provider: org.matsim.core.router.FreespeedFactorRouting@ab5dde4
2018-05-29 07:45:11,195  INFO Injector:86   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55)
2018-05-29 07:45:11,195  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,195  INFO Injector:92 
2018-05-29 07:45:11,195  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=bike)
2018-05-29 07:45:11,195  INFO Injector:85   --> provider: org.matsim.core.router.BeelineTeleportationRouting@706c2726
2018-05-29 07:45:11,196  INFO Injector:86   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-05-29 07:45:11,196  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,196  INFO Injector:92 
2018-05-29 07:45:11,196  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=walk)
2018-05-29 07:45:11,196  INFO Injector:85   --> provider: org.matsim.core.router.BeelineTeleportationRouting@255482cb
2018-05-29 07:45:11,196  INFO Injector:86   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-05-29 07:45:11,196  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,196  INFO Injector:92 
2018-05-29 07:45:11,197  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=access_walk)
2018-05-29 07:45:11,197  INFO Injector:85   --> provider: org.matsim.core.router.BeelineTeleportationRouting@40ecead5
2018-05-29 07:45:11,197  INFO Injector:86   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-05-29 07:45:11,197  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,197  INFO Injector:92 
2018-05-29 07:45:11,197  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=egress_walk)
2018-05-29 07:45:11,197  INFO Injector:85   --> provider: org.matsim.core.router.BeelineTeleportationRouting@641255d1
2018-05-29 07:45:11,198  INFO Injector:86   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-05-29 07:45:11,198  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,198  INFO Injector:92 
2018-05-29 07:45:11,198  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=undefined)
2018-05-29 07:45:11,198  INFO Injector:85   --> provider: org.matsim.core.router.BeelineTeleportationRouting@75d61b62
2018-05-29 07:45:11,198  INFO Injector:86   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-05-29 07:45:11,198  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,198  INFO Injector:92 
2018-05-29 07:45:11,199  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=car)
2018-05-29 07:45:11,199  INFO Injector:85   --> provider: org.matsim.core.router.NetworkRoutingProvider@74159dc9
2018-05-29 07:45:11,199  INFO Injector:86   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:66)
2018-05-29 07:45:11,199  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,199  INFO Injector:92 
2018-05-29 07:45:11,199  INFO Injector:84 org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person> 
2018-05-29 07:45:11,199  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@85fd4b}
2018-05-29 07:45:11,200  INFO Injector:86   --> source: org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:49)
2018-05-29 07:45:11,200  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,200  INFO Injector:92 
2018-05-29 07:45:11,200  INFO Injector:84 org.matsim.core.replanning.ReplanningContext 
2018-05-29 07:45:11,200  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@425376cc[Scopes.SINGLETON]}[Scopes.SINGLETON]
2018-05-29 07:45:11,200  INFO Injector:86   --> source: org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:48)
2018-05-29 07:45:11,200  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,201  INFO Injector:92 
2018-05-29 07:45:11,201  INFO Injector:84 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1208, type=MULTIBINDER, keyType=)
2018-05-29 07:45:11,201  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1208, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@10c1682b[Scopes.SINGLETON]}
2018-05-29 07:45:11,201  INFO Injector:86   --> source: org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:47)
2018-05-29 07:45:11,201  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,201  INFO Injector:92 
2018-05-29 07:45:11,201  INFO Injector:84 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1209, type=MULTIBINDER, keyType=)
2018-05-29 07:45:11,202  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1209, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7e864fa4}
2018-05-29 07:45:11,202  INFO Injector:86   --> source: org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:31)
2018-05-29 07:45:11,202  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,202  INFO Injector:92 
2018-05-29 07:45:11,202  INFO Injector:84 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1210, type=MULTIBINDER, keyType=)
2018-05-29 07:45:11,202  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1210, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@ae85aad}
2018-05-29 07:45:11,202  INFO Injector:86   --> source: org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:32)
2018-05-29 07:45:11,202  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,203  INFO Injector:92 
2018-05-29 07:45:11,203  INFO Injector:84 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1211, type=MULTIBINDER, keyType=)
2018-05-29 07:45:11,203  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1211, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@678b3746}
2018-05-29 07:45:11,203  INFO Injector:86   --> source: org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:11)
2018-05-29 07:45:11,203  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,203  INFO Injector:92 
2018-05-29 07:45:11,203  INFO Injector:84 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1212, type=MULTIBINDER, keyType=)
2018-05-29 07:45:11,204  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1212, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@47b71556[Scopes.SINGLETON]}
2018-05-29 07:45:11,204  INFO Injector:86   --> source: org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:32)
2018-05-29 07:45:11,204  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,204  INFO Injector:92 
2018-05-29 07:45:11,204  INFO Injector:84 org.matsim.analysis.ScoreStats 
2018-05-29 07:45:11,204  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@47b71556[Scopes.SINGLETON]}
2018-05-29 07:45:11,204  INFO Injector:86   --> source: org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:33)
2018-05-29 07:45:11,204  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,205  INFO Injector:92 
2018-05-29 07:45:11,205  INFO Injector:84 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1213, type=MULTIBINDER, keyType=)
2018-05-29 07:45:11,205  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1213, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4d0e6424[Scopes.SINGLETON]}
2018-05-29 07:45:11,205  INFO Injector:86   --> source: org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:32)
2018-05-29 07:45:11,205  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,205  INFO Injector:92 
2018-05-29 07:45:11,205  INFO Injector:84 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1214, type=MULTIBINDER, keyType=)
2018-05-29 07:45:11,206  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1214, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@c22cf4d}
2018-05-29 07:45:11,206  INFO Injector:86   --> source: org.matsim.counts.CountsModule.install(CountsModule.java:42)
2018-05-29 07:45:11,206  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,206  INFO Injector:92 
2018-05-29 07:45:11,206  INFO Injector:84 org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link> 
2018-05-29 07:45:11,206  INFO Injector:85   --> provider: @Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)[Scopes.SINGLETON]
2018-05-29 07:45:11,206  INFO Injector:86   --> source: org.matsim.counts.Counts org.matsim.counts.CountsModule.provideLinkCounts(org.matsim.api.core.v01.Scenario,org.matsim.core.config.groups.CountsConfigGroup)
2018-05-29 07:45:11,207  INFO Injector:88   --> scope: Scopes.SINGLETON
2018-05-29 07:45:11,207  INFO Injector:92 
2018-05-29 07:45:11,207  INFO Injector:84 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1215, type=MULTIBINDER, keyType=)
2018-05-29 07:45:11,207  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1215, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7a41f4a7}
2018-05-29 07:45:11,207  INFO Injector:86   --> source: org.matsim.core.population.VspPlansCleanerModule.install(VspPlansCleanerModule.java:34)
2018-05-29 07:45:11,207  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,207  INFO Injector:92 
2018-05-29 07:45:11,207  INFO Injector:84 org.matsim.core.mobsim.framework.listeners.MobsimListener @com.google.inject.multibindings.Element(setName=,uniqueId=1216, type=MULTIBINDER, keyType=)
2018-05-29 07:45:11,208  INFO Injector:85   --> provider: Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]
2018-05-29 07:45:11,208  INFO Injector:86   --> source: org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:45)
2018-05-29 07:45:11,208  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,208  INFO Injector:92 
2018-05-29 07:45:11,208  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1218, type=MAPBINDER, keyType=java.lang.String)
2018-05-29 07:45:11,208  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1218, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@641255d1}
2018-05-29 07:45:11,208  INFO Injector:86   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:125)
2018-05-29 07:45:11,209  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,209  INFO Injector:92 
2018-05-29 07:45:11,209  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1220, type=MAPBINDER, keyType=java.lang.String)
2018-05-29 07:45:11,209  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1220, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.roadpricing.RoadPricingNetworkRouting@12d8e6b6}
2018-05-29 07:45:11,209  INFO Injector:86   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:125)
2018-05-29 07:45:11,209  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,209  INFO Injector:92 
2018-05-29 07:45:11,209  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1222, type=MAPBINDER, keyType=java.lang.String)
2018-05-29 07:45:11,210  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1222, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@ab5dde4}
2018-05-29 07:45:11,210  INFO Injector:86   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:125)
2018-05-29 07:45:11,210  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,210  INFO Injector:92 
2018-05-29 07:45:11,210  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1224, type=MAPBINDER, keyType=java.lang.String)
2018-05-29 07:45:11,210  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1224, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.NetworkRoutingProvider@74159dc9}
2018-05-29 07:45:11,210  INFO Injector:86   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:125)
2018-05-29 07:45:11,211  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,211  INFO Injector:92 
2018-05-29 07:45:11,211  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1226, type=MAPBINDER, keyType=java.lang.String)
2018-05-29 07:45:11,211  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1226, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@40ecead5}
2018-05-29 07:45:11,211  INFO Injector:86   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:125)
2018-05-29 07:45:11,211  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,211  INFO Injector:92 
2018-05-29 07:45:11,212  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1228, type=MAPBINDER, keyType=java.lang.String)
2018-05-29 07:45:11,212  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1228, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@6d911985}
2018-05-29 07:45:11,212  INFO Injector:86   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:125)
2018-05-29 07:45:11,212  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,212  INFO Injector:92 
2018-05-29 07:45:11,212  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1230, type=MAPBINDER, keyType=java.lang.String)
2018-05-29 07:45:11,212  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1230, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@255482cb}
2018-05-29 07:45:11,212  INFO Injector:86   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:125)
2018-05-29 07:45:11,213  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,213  INFO Injector:92 
2018-05-29 07:45:11,213  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1232, type=MAPBINDER, keyType=java.lang.String)
2018-05-29 07:45:11,213  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1232, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@706c2726}
2018-05-29 07:45:11,213  INFO Injector:86   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:125)
2018-05-29 07:45:11,213  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,213  INFO Injector:92 
2018-05-29 07:45:11,214  INFO Injector:84 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1234, type=MAPBINDER, keyType=java.lang.String)
2018-05-29 07:45:11,214  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1234, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@75d61b62}
2018-05-29 07:45:11,214  INFO Injector:86   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:125)
2018-05-29 07:45:11,214  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,214  INFO Injector:92 
2018-05-29 07:45:11,214  INFO Injector:84 org.matsim.core.router.util.TravelTime @com.google.inject.multibindings.Element(setName=,uniqueId=1236, type=MAPBINDER, keyType=java.lang.String)
2018-05-29 07:45:11,214  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1236, type=MAPBINDER, keyType=java.lang.String)], provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2018-05-29 07:45:11,215  INFO Injector:86   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:125)
2018-05-29 07:45:11,215  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,215  INFO Injector:92 
2018-05-29 07:45:11,215  INFO Injector:84 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.multibindings.Element(setName=,uniqueId=1238, type=MAPBINDER, keyType=java.lang.String)
2018-05-29 07:45:11,215  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1238, type=MAPBINDER, keyType=java.lang.String)], provider=ConstantFactory{value=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@23a9400c}[Scopes.SINGLETON]}
2018-05-29 07:45:11,215  INFO Injector:86   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:125)
2018-05-29 07:45:11,215  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,216  INFO Injector:92 
2018-05-29 07:45:11,216  INFO Injector:84 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.multibindings.Element(setName=,uniqueId=1240, type=MAPBINDER, keyType=java.lang.String)
2018-05-29 07:45:11,216  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1240, type=MAPBINDER, keyType=java.lang.String)], provider=Key[type=org.matsim.roadpricing.ControlerDefaultsWithRoadPricingModule$TravelDisutilityIncludingTollFactoryProvider, annotation=[none]][Scopes.SINGLETON]}
2018-05-29 07:45:11,216  INFO Injector:86   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:125)
2018-05-29 07:45:11,216  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,216  INFO Injector:92 
2018-05-29 07:45:11,216  INFO Injector:84 org.matsim.core.controler.ControlerListenerManagerImpl 
2018-05-29 07:45:11,216  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3c130cb2[Scopes.SINGLETON]
2018-05-29 07:45:11,217  INFO Injector:86   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:9)
2018-05-29 07:45:11,217  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,217  INFO Injector:92 
2018-05-29 07:45:11,217  INFO Injector:84 org.matsim.analysis.IterationStopWatch 
2018-05-29 07:45:11,217  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4193da4d[Scopes.SINGLETON]
2018-05-29 07:45:11,217  INFO Injector:86   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:12)
2018-05-29 07:45:11,217  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,218  INFO Injector:92 
2018-05-29 07:45:11,218  INFO Injector:84 org.matsim.core.controler.OutputDirectoryHierarchy 
2018-05-29 07:45:11,218  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@48b744fd[Scopes.SINGLETON]
2018-05-29 07:45:11,218  INFO Injector:86   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:13)
2018-05-29 07:45:11,218  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,218  INFO Injector:92 
2018-05-29 07:45:11,218  INFO Injector:84 org.matsim.core.scoring.ScoringFunctionsForPopulation 
2018-05-29 07:45:11,219  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@c040c8d[Scopes.SINGLETON]
2018-05-29 07:45:11,219  INFO Injector:86   --> source: org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:10)
2018-05-29 07:45:11,219  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,219  INFO Injector:92 
2018-05-29 07:45:11,219  INFO Injector:84 org.matsim.roadpricing.ControlerDefaultsWithRoadPricingModule$RoadPricingInitializer 
2018-05-29 07:45:11,219  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1e9d6c78[Scopes.SINGLETON]
2018-05-29 07:45:11,219  INFO Injector:86   --> source: org.matsim.roadpricing.RoadPricingModule.install(RoadPricingModule.java:40)
2018-05-29 07:45:11,219  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,220  INFO Injector:92 
2018-05-29 07:45:11,220  INFO Injector:84 org.matsim.roadpricing.PlansCalcRouteWithTollOrNot 
2018-05-29 07:45:11,220  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7364073b
2018-05-29 07:45:11,220  INFO Injector:86   --> source: org.matsim.roadpricing.RoadPricingModule.install(RoadPricingModule.java:47)
2018-05-29 07:45:11,220  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,220  INFO Injector:92 
2018-05-29 07:45:11,220  INFO Injector:84 org.matsim.roadpricing.CalcPaidToll 
2018-05-29 07:45:11,220  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7bf997e0[Scopes.SINGLETON]
2018-05-29 07:45:11,221  INFO Injector:86   --> source: org.matsim.roadpricing.RoadPricingModule.install(RoadPricingModule.java:58)
2018-05-29 07:45:11,221  INFO Injector:88   --> scope: Scopes.SINGLETON
2018-05-29 07:45:11,221  INFO Injector:92 
2018-05-29 07:45:11,221  INFO Injector:84 org.matsim.roadpricing.CalcAverageTolledTripLength 
2018-05-29 07:45:11,221  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@785477e5[Scopes.SINGLETON]
2018-05-29 07:45:11,221  INFO Injector:86   --> source: org.matsim.roadpricing.RoadPricingModule.install(RoadPricingModule.java:61)
2018-05-29 07:45:11,221  INFO Injector:88   --> scope: Scopes.SINGLETON
2018-05-29 07:45:11,222  INFO Injector:92 
2018-05-29 07:45:11,222  INFO Injector:84 org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator 
2018-05-29 07:45:11,222  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5e572b08[Scopes.SINGLETON]
2018-05-29 07:45:11,222  INFO Injector:86   --> source: org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:25)
2018-05-29 07:45:11,222  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,222  INFO Injector:92 
2018-05-29 07:45:11,222  INFO Injector:84 org.matsim.core.trafficmonitoring.TravelTimeCalculator 
2018-05-29 07:45:11,222  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@565983f3[Scopes.SINGLETON]
2018-05-29 07:45:11,223  INFO Injector:86   --> source: org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:76)
2018-05-29 07:45:11,223  INFO Injector:88   --> scope: Scopes.SINGLETON
2018-05-29 07:45:11,223  INFO Injector:92 
2018-05-29 07:45:11,223  INFO Injector:84 org.matsim.core.scoring.EventsToActivities 
2018-05-29 07:45:11,223  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@c6653e[Scopes.SINGLETON]
2018-05-29 07:45:11,223  INFO Injector:86   --> source: org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:12)
2018-05-29 07:45:11,223  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,224  INFO Injector:92 
2018-05-29 07:45:11,224  INFO Injector:84 org.matsim.core.scoring.EventsToLegs 
2018-05-29 07:45:11,224  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@69374e28[Scopes.SINGLETON]
2018-05-29 07:45:11,224  INFO Injector:86   --> source: org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:13)
2018-05-29 07:45:11,224  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,224  INFO Injector:92 
2018-05-29 07:45:11,224  INFO Injector:84 org.matsim.core.router.TripRouter 
2018-05-29 07:45:11,224  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7fba30fe
2018-05-29 07:45:11,225  INFO Injector:86   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:43)
2018-05-29 07:45:11,225  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,225  INFO Injector:92 
2018-05-29 07:45:11,225  INFO Injector:84 org.matsim.core.router.SingleModeNetworksCache 
2018-05-29 07:45:11,225  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3e8eea59[Scopes.SINGLETON]
2018-05-29 07:45:11,225  INFO Injector:86   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:47)
2018-05-29 07:45:11,225  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,226  INFO Injector:92 
2018-05-29 07:45:11,226  INFO Injector:84 org.matsim.core.replanning.StrategyManager 
2018-05-29 07:45:11,226  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@49b6373f[Scopes.SINGLETON]
2018-05-29 07:45:11,226  INFO Injector:86   --> source: org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:47)
2018-05-29 07:45:11,226  INFO Injector:88   --> scope: Scopes.SINGLETON
2018-05-29 07:45:11,226  INFO Injector:92 
2018-05-29 07:45:11,226  INFO Injector:84 org.matsim.analysis.CalcLinkStats 
2018-05-29 07:45:11,226  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6c3627c[Scopes.SINGLETON]
2018-05-29 07:45:11,227  INFO Injector:86   --> source: org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:37)
2018-05-29 07:45:11,227  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,227  INFO Injector:92 
2018-05-29 07:45:11,227  INFO Injector:84 org.matsim.analysis.LinkStatsControlerListener 
2018-05-29 07:45:11,227  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@10c1682b[Scopes.SINGLETON]
2018-05-29 07:45:11,227  INFO Injector:86   --> source: org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:46)
2018-05-29 07:45:11,227  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,228  INFO Injector:92 
2018-05-29 07:45:11,228  INFO Injector:84 org.matsim.analysis.VolumesAnalyzer 
2018-05-29 07:45:11,228  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2ec258f1[Scopes.SINGLETON]
2018-05-29 07:45:11,228  INFO Injector:86   --> source: org.matsim.analysis.VolumesAnalyzerModule.install(VolumesAnalyzerModule.java:31)
2018-05-29 07:45:11,228  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,228  INFO Injector:92 
2018-05-29 07:45:11,228  INFO Injector:84 org.matsim.analysis.LegHistogram 
2018-05-29 07:45:11,228  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@230dd372
2018-05-29 07:45:11,229  INFO Injector:86   --> source: org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:30)
2018-05-29 07:45:11,229  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,229  INFO Injector:92 
2018-05-29 07:45:11,229  INFO Injector:84 org.matsim.analysis.CalcLegTimes 
2018-05-29 07:45:11,229  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@dffcf1[Scopes.SINGLETON]
2018-05-29 07:45:11,229  INFO Injector:86   --> source: org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:31)
2018-05-29 07:45:11,229  INFO Injector:88   --> scope: Scopes.SINGLETON
2018-05-29 07:45:11,230  INFO Injector:92 
2018-05-29 07:45:11,230  INFO Injector:84 org.matsim.analysis.TravelDistanceStats 
2018-05-29 07:45:11,230  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@280f061e[Scopes.SINGLETON]
2018-05-29 07:45:11,230  INFO Injector:86   --> source: org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:10)
2018-05-29 07:45:11,230  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,230  INFO Injector:92 
2018-05-29 07:45:11,230  INFO Injector:84 org.matsim.analysis.ScoreStatsControlerListener 
2018-05-29 07:45:11,230  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@47b71556[Scopes.SINGLETON]
2018-05-29 07:45:11,231  INFO Injector:86   --> source: org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:31)
2018-05-29 07:45:11,231  INFO Injector:88   --> scope: Scopes.SINGLETON
2018-05-29 07:45:11,231  INFO Injector:92 
2018-05-29 07:45:11,231  INFO Injector:84 org.matsim.analysis.ModeStatsControlerListener 
2018-05-29 07:45:11,231  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4d0e6424[Scopes.SINGLETON]
2018-05-29 07:45:11,231  INFO Injector:86   --> source: org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:31)
2018-05-29 07:45:11,231  INFO Injector:88   --> scope: Scopes.SINGLETON
2018-05-29 07:45:11,232  INFO Injector:92 
2018-05-29 07:45:11,232  INFO Injector:84 org.matsim.counts.CountsModule$CountsInitializer 
2018-05-29 07:45:11,232  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7f5c4ff8[Scopes.SINGLETON]
2018-05-29 07:45:11,232  INFO Injector:86   --> source: org.matsim.counts.CountsModule.install(CountsModule.java:43)
2018-05-29 07:45:11,232  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,232  INFO Injector:92 
2018-05-29 07:45:11,232  INFO Injector:95 === printInjector end ===
2018-05-29 07:45:11,233  INFO Gbl:59 JVM: 1.8.0_121; Oracle Corporation; mixed mode; 64-bit
2018-05-29 07:45:11,233  INFO Gbl:63 OS: Linux; 3.10.0-862.2.3.el7.x86_64; amd64
2018-05-29 07:45:11,233  INFO Gbl:66 CPU cores: 32
2018-05-29 07:45:11,233  INFO Gbl:67 max. Memory: 14263.5MB (14956363776B)
2018-05-29 07:45:11,234  INFO Gbl:105 MATSim-Build: r8534a19f6a6dc1129cbbcdc66403b0e275cad86b (2018-05-29 07:41:41)
2018-05-29 07:45:11,234  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2018-05-29 07:45:11,234  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2018-05-29 07:45:11,235 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-05-29 07:45:11,235  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2018-05-29 07:45:11,235  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.roadpricing.RoadPricingControlerListener
2018-05-29 07:45:11,235  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2018-05-29 07:45:11,236  INFO ControlerUtils:58 config dump before iterations start
2018-05-29 07:45:11,236  INFO Config:561 setting context to [file:/root/workspace/matsim-org/matsim/385025376/contribs/roadpricing/]
2018-05-29 07:45:11,241  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>
<!-- ====================================================================== -->
	<module name="TimeAllocationMutator" >
		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />
		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />
		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="changeMode" >
		<param name="ignoreCarAvailability" value="true" />
		<param name="modes" value="car,pt" />
	</module>
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="true" />
		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="true" />
		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />
		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />
		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="0" />
		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />
		<param name="outputDirectory" value="test/output/org/matsim/roadpricing/ModuleTest/testControlerWithRoadPricingWorks/" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="failIfDirectoryExists" />
		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />
		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />
		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="10" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="10" />
		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>
<!-- ====================================================================== -->
	<module name="counts" >
		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />
		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="facilities" >
		<!-- If set to 'true', empty activity option will be created. -->
		<param name="addEmptyActivityOption" value="false" />
		<!-- Default is 'true'. In the case that a facility has no link assigned, the ActivityFacility can be assigned to the closest link. If there should be only one ActivityFacility per link and if no link-assignment should be done, set to 'false'.This will create a new ActivityFacility at the coordinate and the facility will not be assigned to a link. -->
		<param name="assigningLinksToFacilitiesIfMissing" value="true" />
		<!-- If set to 'true', opening time will be assigned to activity facilities from ActivityParams. Default is false. This will NOT override option 'addEmptyActivityOption'. -->
		<param name="assigningOpeningTime" value="false" />
		<!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLocationInPlansFile  -->
		<param name="facilitiesSource" value="none" />
		<!-- A prefix to be used in activityFacility id. -->
		<param name="idPrefix" value="" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputFacilitiesFile" value="null" />
		<param name="inputFacilityAttributesFile" value="null" />
		<!-- Sets whether all activities on a link should be collected within one ActivityFacility. Default is 'true'. If set to 'false', for each coordinate found in the population's activities a separate ActivityFacility will be created. -->
		<param name="oneFacilityPerLink" value="true" />
		<!-- If set to 'true' (which is the default), the link and coordinate attributes are replaced by null reference in the activities, as this information is now available via the facility. -->
		<param name="removingLinksAndCoordinates" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="global" >
		<param name="coordinateSystem" value="Atlantis" />
		<param name="insistingOnDeprecatedConfigVersion" value="true" />
		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />
		<param name="randomSeed" value="4711" />
	</module>
<!-- ====================================================================== -->
	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="linkStats" >
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />
		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="network" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="null" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>
<!-- ====================================================================== -->
	<module name="parallelEventHandling" >
		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />
		<!-- Number of threads for parallel events handler. _null_ means the framework decides by itself. 0 is currently not possible. -->
		<param name="numberOfThreads" value="null" />
		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />
		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="1.0" />
		<param name="PathSizeLogitBeta" value="1.0" />
		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />
		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />
		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />
		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="02:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="car" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="pt" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="walk" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="bike" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="ride" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="other" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />
		<param name="inputPlansFile" value="null" />
		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />
		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />
		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="ptCounts" >
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />
		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />
		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />
		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="qsim" >
		<!-- If set to true, creates a vehicle for each person corresponding to every network mode. However, this will be overridden if vehicle source is fromVehiclesData. -->
		<param name="creatingVehiclesForAllNetworkModes" value="true" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />
		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />
		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />
		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />
		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />
		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />
		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />
		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="undefined" />
		<param name="storageCapacityFactor" value="1.0" />
		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />
		<param name="timeStepSize" value="00:00:01" />
		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />
		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />
		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />
		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />
		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />
		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />
		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>
<!-- ====================================================================== -->
	<module name="roadpricing" >
		<param name="tollLinksFile" value="roadpricing.xml" />
	</module>
<!-- ====================================================================== -->
	<module name="scenario" >
	</module>
<!-- ====================================================================== -->
	<module name="strategy" >
		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />
		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />
		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />
		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />
		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />
	</module>
<!-- ====================================================================== -->
	<module name="subtourModeChoice" >
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>
<!-- ====================================================================== -->
	<module name="transit" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />
		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />
		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />
		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="transitRouter" >
		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />
		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />
		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />
		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />
		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>
<!-- ====================================================================== -->
	<module name="travelTimeCalculator" >
		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />
		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />
		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />
		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />
		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />
		<!-- possible values: TravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />
		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>
<!-- ====================================================================== -->
	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="vspExperimental" >
		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />
		<param name="isGeneratingBoardingDeniedEvent" value="false" />
		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />
		<param name="logitScaleParamForPlansRemoval" value="1.0" />
		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />
		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>
<!-- ====================================================================== -->

</config>

2018-05-29 07:45:11,242  INFO ControlerUtils:63 Complete config dump done.
2018-05-29 07:45:11,242  INFO ControlerUtils:64 Checking consistency of config...
2018-05-29 07:45:11,243  INFO PlanCalcScoreConfigGroup$ScoringParameterSet:1373 NO OPENING OR CLOSING TIMES DEFINED!

There is no activity type that has an opening *and* closing time (or opening time and late penalty) defined.
This usually means that the activity chains can be shifted by an arbitrary
number of hours without having an effect on the score of the plans, and thus
resulting in wrong results / traffic patterns.
If you are using MATSim without time adaptation, you can ignore this warning.


2018-05-29 07:45:11,243  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2018-05-29 07:45:11,243  INFO ControlerUtils:66 Checking consistency of config done.
2018-05-29 07:45:11,243 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-05-29 07:45:11,244 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-05-29 07:45:11,251  INFO Counter:67 [PersonPrepareForSim] handled person # 0
2018-05-29 07:45:11,252  INFO AbstractController:121 ###################################################
2018-05-29 07:45:11,253  INFO AbstractController:122 ### ITERATION 0 BEGINS
2018-05-29 07:45:11,254  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2018-05-29 07:45:11,255  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2018-05-29 07:45:11,256  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2018-05-29 07:45:11,256  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2018-05-29 07:45:11,256  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2018-05-29 07:45:11,256  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2018-05-29 07:45:11,256  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-05-29 07:45:11,256  INFO EventsManagerImpl:170 resetting Event-Handlers
2018-05-29 07:45:11,256  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-05-29 07:45:11,257  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2018-05-29 07:45:11,257  INFO EventsManagerImpl:177   org.matsim.roadpricing.CalcPaidToll
2018-05-29 07:45:11,257  INFO EventsManagerImpl:177   org.matsim.roadpricing.CalcAverageTolledTripLength
2018-05-29 07:45:11,257  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2018-05-29 07:45:11,257  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2018-05-29 07:45:11,257  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2018-05-29 07:45:11,257  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2018-05-29 07:45:11,257  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-05-29 07:45:11,258  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2018-05-29 07:45:11,258  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2018-05-29 07:45:11,258  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2018-05-29 07:45:11,258  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2018-05-29 07:45:11,258  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,258  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2018-05-29 07:45:11,259  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2018-05-29 07:45:11,259  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2018-05-29 07:45:11,259  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2018-05-29 07:45:11,259  INFO EventsManagerImpl:156 
2018-05-29 07:45:11,259  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2018-05-29 07:45:11,259  INFO PlansDumpingImpl:75 dumping plans...
2018-05-29 07:45:11,259  INFO PopulationWriter:139 Population written to: test/output/org/matsim/roadpricing/ModuleTest/testControlerWithRoadPricingWorks/ITERS/it.0/0.plans.xml.gz
2018-05-29 07:45:11,260  INFO Counter:67 [PopulationWriter] dumped person # 0
2018-05-29 07:45:11,260  INFO PlansDumpingImpl:92 finished plans dump.
2018-05-29 07:45:11,260  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2018-05-29 07:45:11,260  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2018-05-29 07:45:11,263  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-05-29 07:45:11,263  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2018-05-29 07:45:11,264  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-05-29 07:45:11,264  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2018-05-29 07:45:11,264  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2018-05-29 07:45:11,264  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2018-05-29 07:45:11,265  INFO Injector:80 === printInjector start ===
2018-05-29 07:45:11,265  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2018-05-29 07:45:11,265  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2018-05-29 07:45:11,265  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2018-05-29 07:45:11,265  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,265  INFO Injector:92 
2018-05-29 07:45:11,266  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2018-05-29 07:45:11,266  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@47a90d2a}[Scopes.SINGLETON]
2018-05-29 07:45:11,266  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2018-05-29 07:45:11,266  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,266  INFO Injector:92 
2018-05-29 07:45:11,266  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2018-05-29 07:45:11,266  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@d426e01[Scopes.SINGLETON]}
2018-05-29 07:45:11,267  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2018-05-29 07:45:11,267  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2018-05-29 07:45:11,267  INFO Injector:92 
2018-05-29 07:45:11,267  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2018-05-29 07:45:11,267  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5a644d75[Scopes.SINGLETON]
2018-05-29 07:45:11,267  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2018-05-29 07:45:11,268  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,268  INFO Injector:92 
2018-05-29 07:45:11,268  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2018-05-29 07:45:11,268  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3c1ef806[Scopes.SINGLETON]
2018-05-29 07:45:11,268  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2018-05-29 07:45:11,268  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,269  INFO Injector:92 
2018-05-29 07:45:11,269  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2018-05-29 07:45:11,269  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6af02de0[Scopes.SINGLETON]
2018-05-29 07:45:11,269  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2018-05-29 07:45:11,269  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,269  INFO Injector:92 
2018-05-29 07:45:11,270  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2018-05-29 07:45:11,270  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4fbed6fc[Scopes.SINGLETON]
2018-05-29 07:45:11,270  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2018-05-29 07:45:11,270  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,270  INFO Injector:92 
2018-05-29 07:45:11,270  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2018-05-29 07:45:11,271  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4ee80a94[Scopes.SINGLETON]
2018-05-29 07:45:11,271  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2018-05-29 07:45:11,271  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,271  INFO Injector:92 
2018-05-29 07:45:11,271  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2018-05-29 07:45:11,271  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@627cb3ed[Scopes.SINGLETON]
2018-05-29 07:45:11,272  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2018-05-29 07:45:11,272  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,272  INFO Injector:92 
2018-05-29 07:45:11,272  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2018-05-29 07:45:11,272  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1de6f29d[Scopes.SINGLETON]
2018-05-29 07:45:11,273  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2018-05-29 07:45:11,273  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,273  INFO Injector:92 
2018-05-29 07:45:11,273  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2018-05-29 07:45:11,273  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@d426e01[Scopes.SINGLETON]
2018-05-29 07:45:11,273  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2018-05-29 07:45:11,274  INFO Injector:88   --> scope: eager singleton
2018-05-29 07:45:11,274  INFO Injector:92 
2018-05-29 07:45:11,274  INFO Injector:95 === printInjector end ===
2018-05-29 07:45:11,274  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-05-29 07:45:11,274  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2018-05-29 07:45:11,274  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2018-05-29 07:45:11,275  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-05-29 07:45:11,275  INFO QNetsimEngine:504 Assigned 0 nodes and 0 links to QSimEngineRunner #0
2018-05-29 07:45:11,276  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 9223372036854775807:00:00 : #links=0 #nodes=0
2018-05-29 07:45:11,276  INFO QSim:506 SIMULATION (NEW QSim) AT 9223372036854775807:00:00 : #Veh=0 lost=0 simT=NaNs realT=0s; (s/r): NaN
2018-05-29 07:45:11,276  INFO Gbl:54 used RAM: 42138608B = 41150kB = 40MB  free: 891094032B = 849MB  total: 933232640B = 890MB
2018-05-29 07:45:11,276  INFO AbstractController$8:210 ### ITERATION 0 fires after mobsim event
2018-05-29 07:45:11,277  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=3.98401E-4sec
2018-05-29 07:45:11,277  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2018-05-29 07:45:11,279  INFO LegTimesControlerListener:50 [0] average trip (probably: leg) duration is: 0 seconds = 00:00:00
2018-05-29 07:45:11,279  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2018-05-29 07:45:11,279  INFO ControlerListenerManagerImpl:251 [it.0] all ControlerAfterMobsimListeners called.
2018-05-29 07:45:11,279  INFO AbstractController$4:147 ### ITERATION 0 fires scoring event
2018-05-29 07:45:11,279  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2018-05-29 07:45:11,279  INFO NewScoreAssignerImpl:36 it: 0 msaStart: null
2018-05-29 07:45:11,280  INFO ControlerListenerManagerImpl:194 [it.0] all ControlerScoringListeners called.
2018-05-29 07:45:11,280  INFO AbstractController$5:155 ### ITERATION 0 fires iteration end event
2018-05-29 07:45:11,280  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-05-29 07:45:11,280  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2018-05-29 07:45:11,280  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2018-05-29 07:45:11,280  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2018-05-29 07:45:11,281  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2018-05-29 07:45:11,281  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2018-05-29 07:45:11,281  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2018-05-29 07:45:11,281  INFO ModeStatsControlerListener:155 -- mode share of mode car = 0.0
2018-05-29 07:45:11,281  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2018-05-29 07:45:11,281  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2018-05-29 07:45:11,282  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2018-05-29 07:45:11,282  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2018-05-29 07:45:11,282  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2018-05-29 07:45:11,282  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: NaN
2018-05-29 07:45:11,282  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: NaN
2018-05-29 07:45:11,282  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: NaN
2018-05-29 07:45:11,282  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: NaN
2018-05-29 07:45:11,283  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2018-05-29 07:45:11,283  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2018-05-29 07:45:11,283  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2018-05-29 07:45:11,284  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): NaN
2018-05-29 07:45:11,284  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2018-05-29 07:45:11,284  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2018-05-29 07:45:11,284  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2018-05-29 07:45:11,285  INFO LegHistogramListener:72 number of legs:	0	100%
2018-05-29 07:45:11,418  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2018-05-29 07:45:11,419  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.roadpricing.RoadPricingControlerListener
2018-05-29 07:45:11,419  INFO RoadPricingControlerListener:81 The sum of all paid tolls : 0.0 monetary units.
2018-05-29 07:45:11,419  INFO RoadPricingControlerListener:82 The number of people who paid toll : 0
2018-05-29 07:45:11,419  INFO RoadPricingControlerListener:83 The average paid trip length : 0.0 m.
2018-05-29 07:45:11,419  INFO ControlerListenerManagerImpl:171 [it.0] all ControlerIterationEndsListeners called.
2018-05-29 07:45:11,548  INFO AbstractController:165 ### ITERATION 0 ENDS
2018-05-29 07:45:11,548  INFO AbstractController:166 ###################################################
2018-05-29 07:45:11,549  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2018-05-29 07:45:11,549  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-05-29 07:45:11,549  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.DumpDataAtEndImpl
2018-05-29 07:45:11,549  INFO PopulationWriter:139 Population written to: test/output/org/matsim/roadpricing/ModuleTest/testControlerWithRoadPricingWorks/output_plans.xml.gz
2018-05-29 07:45:11,549  INFO Counter:67 [PopulationWriter] dumped person # 0
2018-05-29 07:45:11,550  INFO NetworkWriter:68 Writing network to file: test/output/org/matsim/roadpricing/ModuleTest/testControlerWithRoadPricingWorks/output_network.xml.gz...
2018-05-29 07:45:11,550  INFO NetworkWriter:71 done.
2018-05-29 07:45:11,551  INFO Config:561 setting context to [file:/root/workspace/matsim-org/matsim/385025376/contribs/roadpricing/]
2018-05-29 07:45:11,555  INFO VehicleWriterV1:55 Vehicles written to: test/output/org/matsim/roadpricing/ModuleTest/testControlerWithRoadPricingWorks/output_vehicles.xml.gz
2018-05-29 07:45:11,555  INFO Counter:67 [HouseholdsWriter] dumped household # 0
2018-05-29 07:45:11,556  INFO LanesWriter:63 Using LaneDefinitionWriter20...
2018-05-29 07:45:11,556  INFO LanesWriter:72 writing to file: test/output/org/matsim/roadpricing/ModuleTest/testControlerWithRoadPricingWorks/output_lanes.xml.gz
2018-05-29 07:45:11,582  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2018-05-29 07:45:11,582  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2018-05-29 07:45:11,582  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2018-05-29 07:45:11,582  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.roadpricing.RoadPricingControlerListener
2018-05-29 07:45:11,583  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2018-05-29 07:45:11,583  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2018-05-29 07:45:11,583  INFO OutputDirectoryLogging:146 closing the logfile, i.e. messages sent to the logger after this message are not written to the logfile.
