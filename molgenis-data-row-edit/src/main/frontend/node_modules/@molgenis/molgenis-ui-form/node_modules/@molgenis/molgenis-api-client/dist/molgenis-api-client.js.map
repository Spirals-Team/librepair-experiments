{"version":3,"file":null,"sources":["../src/molgenis-api-client.js"],"sourcesContent":["import fetch from 'isomorphic-fetch'\nimport { merge } from 'lodash'\nimport FormData from 'form-data'\n\nconst defaultOptions = {\n  'headers': {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'X-Requested-With': 'XMLHttpRequest'\n  },\n  'credentials': 'same-origin'\n}\n\nconst isJsonResponse = (response) => {\n  const contentType = response.headers.get('content-type')\n  if (!contentType) {\n    return false\n  }\n  // Ignore case, whitespace and double quotes around charset as per http spec (https://tools.ietf.org/html/rfc7231#section-3.1.1.5)\n  const normalizedContentType = contentType.toLowerCase().split(' ').join('').split('\"').join('')\n  return normalizedContentType === 'application/json' || normalizedContentType === 'application/json;charset=utf-8'\n}\n\nconst handleResponse = (response) => {\n  if (isJsonResponse(response)) {\n    return response.json().then(json => response.ok ? json : Promise.reject(json.errors[0].message))\n  } else {\n    return response.ok ? response : Promise.reject(response)\n  }\n}\n\nconst mergeOptions = (method, options) => {\n  return merge({method: method}, defaultOptions, options)\n}\n\n/**\n * Get a JSON object from the server\n * Uses your session ID to authenticate\n *\n * @example <caption>Example of how to use the get method</caption>\n * // Handle a promise from calling /api/v2/EntityType\n * get('/api/v2/EntityType').then(response => {...}, error => {...}))\n *\n * @example <caption>Example of how to use the get method with an added option</caption>\n * // Handle a promise from calling /api/v2/EntityType with different content type\n * get('/api/v2/EntityType', { headers: { 'Content-type': 'text' } }).then(response => {...}, error => {...})\n *\n * @param url The URL to post to e.g. /api/v2/my_data_set\n * @param options_ An object containing additional options like headers or body\n */\nconst get = (url, options_) => {\n  const options = mergeOptions('GET', options_)\n  return fetch(url, options).then(handleResponse).then(response => response)\n}\n\n/**\n * Post a body of data to the server\n * Uses your session ID to authenticate\n *\n * @example <caption>Example of how to use the post method</caption>\n * // Post a data object and handle the response\n * const data = {\n *  items: ['1', '2'],\n *  id: 'example'\n * }\n *\n * const options = {\n *  body: data\n * }\n *\n * post('api/v2/PostData', options).then(response => {...}, error => {...})\n *\n * @param url\n * @param options_\n */\nconst post = (url, options_) => {\n  const options = mergeOptions('POST', options_)\n  return fetch(url, options).then(handleResponse).then(response => response)\n}\n\n/**\n * Call a delete method on the server\n * Uses your session ID to authenticate\n *\n * @example <caption>Example of how to use the delete_ method</caption>\n * // Handle the response from calling DELETE on /api/v2/deleteById/1\n * delete_('/api/v2/deleteById/1').then(response => {...}, error => {...})\n *\n * @param url\n * @param options_\n */\nconst delete_ = (url, options_) => {\n  const options = mergeOptions('DELETE', options_)\n  return fetch(url, options).then(handleResponse).then(response => response)\n}\n\n/**\n * Post a file to the server\n * FormData is created with a 'file' parameter. A POST is then automatically created.\n * Uses your session ID to authenticate\n *\n * Expects the response from the server to contain a Job URL\n *\n * @example <caption>Example of how the use the postFile method</caption>\n * // Post a file and handle the response\n * postFile('/plugin/one-click-importer/upload', myAwesomeFile).then(response => {...}, error => {...})\n *\n * @param url\n * @param file\n */\nconst postFile = (url, file) => {\n  const form = new FormData()\n  form.append('file', file)\n\n  const options = {\n    body: form,\n    method: 'POST',\n    credentials: 'same-origin'\n  }\n\n  return fetch(url, options).then(handleResponse).then(response => response)\n}\n\nexport default {get, post, delete_, postFile}\n"],"names":["defaultOptions","isJsonResponse","response","contentType","headers","get","normalizedContentType","toLowerCase","split","join","handleResponse","json","then","ok","reject","errors","message","mergeOptions","method","options","merge","url","options_","fetch","post","delete_","postFile","file","form","FormData","append"],"mappings":";;;;;;;;;AAIA,IAAMA,iBAAiB;aACV;cACC,kBADD;oBAEO,kBAFP;wBAGW;GAJD;iBAMN;CANjB;;AASA,IAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,QAAD,EAAc;MAC7BC,cAAcD,SAASE,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CAApB;MACI,CAACF,WAAL,EAAkB;WACT,KAAP;;;MAGIG,wBAAwBH,YAAYI,WAAZ,GAA0BC,KAA1B,CAAgC,GAAhC,EAAqCC,IAArC,CAA0C,EAA1C,EAA8CD,KAA9C,CAAoD,GAApD,EAAyDC,IAAzD,CAA8D,EAA9D,CAA9B;SACOH,0BAA0B,kBAA1B,IAAgDA,0BAA0B,gCAAjF;CAPF;;AAUA,IAAMI,iBAAiB,SAAjBA,cAAiB,CAACR,QAAD,EAAc;MAC/BD,eAAeC,QAAf,CAAJ,EAA8B;WACrBA,SAASS,IAAT,GAAgBC,IAAhB,CAAqB;aAAQV,SAASW,EAAT,GAAcF,IAAd,GAAqB,SAAQG,MAAR,CAAeH,KAAKI,MAAL,CAAY,CAAZ,EAAeC,OAA9B,CAA7B;KAArB,CAAP;GADF,MAEO;WACEd,SAASW,EAAT,GAAcX,QAAd,GAAyB,SAAQY,MAAR,CAAeZ,QAAf,CAAhC;;CAJJ;;AAQA,IAAMe,eAAe,SAAfA,YAAe,CAACC,MAAD,EAASC,OAAT,EAAqB;SACjCC,aAAM,EAACF,QAAQA,MAAT,EAAN,EAAwBlB,cAAxB,EAAwCmB,OAAxC,CAAP;CADF;;;;;;;;;;;;;;;;;AAmBA,IAAMd,MAAM,SAANA,GAAM,CAACgB,GAAD,EAAMC,QAAN,EAAmB;MACvBH,UAAUF,aAAa,KAAb,EAAoBK,QAApB,CAAhB;SACOC,MAAMF,GAAN,EAAWF,OAAX,EAAoBP,IAApB,CAAyBF,cAAzB,EAAyCE,IAAzC,CAA8C;WAAYV,QAAZ;GAA9C,CAAP;CAFF;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAMsB,OAAO,SAAPA,IAAO,CAACH,GAAD,EAAMC,QAAN,EAAmB;MACxBH,UAAUF,aAAa,MAAb,EAAqBK,QAArB,CAAhB;SACOC,MAAMF,GAAN,EAAWF,OAAX,EAAoBP,IAApB,CAAyBF,cAAzB,EAAyCE,IAAzC,CAA8C;WAAYV,QAAZ;GAA9C,CAAP;CAFF;;;;;;;;;;;;;AAgBA,IAAMuB,UAAU,SAAVA,OAAU,CAACJ,GAAD,EAAMC,QAAN,EAAmB;MAC3BH,UAAUF,aAAa,QAAb,EAAuBK,QAAvB,CAAhB;SACOC,MAAMF,GAAN,EAAWF,OAAX,EAAoBP,IAApB,CAAyBF,cAAzB,EAAyCE,IAAzC,CAA8C;WAAYV,QAAZ;GAA9C,CAAP;CAFF;;;;;;;;;;;;;;;;AAmBA,IAAMwB,WAAW,SAAXA,QAAW,CAACL,GAAD,EAAMM,IAAN,EAAe;MACxBC,OAAO,IAAIC,QAAJ,EAAb;OACKC,MAAL,CAAY,MAAZ,EAAoBH,IAApB;;MAEMR,UAAU;UACRS,IADQ;YAEN,MAFM;iBAGD;GAHf;;SAMOL,MAAMF,GAAN,EAAWF,OAAX,EAAoBP,IAApB,CAAyBF,cAAzB,EAAyCE,IAAzC,CAA8C;WAAYV,QAAZ;GAA9C,CAAP;CAVF;;AAaA,wBAAe,EAACG,QAAD,EAAMmB,UAAN,EAAYC,gBAAZ,EAAqBC,kBAArB,EAAf;;"}