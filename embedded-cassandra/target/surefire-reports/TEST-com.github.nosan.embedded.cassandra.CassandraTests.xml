<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.github.nosan.embedded.cassandra.CassandraTests" time="34.44" tests="6" errors="4" skipped="0" failures="2">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.121-b13"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/root/workspace/nosan/embedded-cassandra/405717725"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="skip.gulp" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="findbugs.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/root/workspace/nosan/embedded-cassandra/405717725"/>
    <property name="checkstyle.skip" value="true"/>
    <property name="java.runtime.version" value="1.8.0_121-8u121-b13-1~bpo8+1-b13"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="skip.npm" value="true"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="gpg.skip" value="true"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="cobertura.skip" value="true"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="license.skip" value="true"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="skip.bower" value="true"/>
    <property name="maven.repo.local" value="/root/./workspace/nosan/embedded-cassandra/405717725/.m2"/>
    <property name="os.version" value="4.9.0-6-amd64"/>
    <property name="user.home" value="/root"/>
    <property name="user.timezone" value="Europe/Paris"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="root"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="skipITs" value="true"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -B -D enforcer.skip=true -D dependency-check.skip=true -D skipITs=true -D cobertura.skip=true -D maven.repo.local=/root/./workspace/nosan/embedded-cassandra/405717725/.m2 -D rat.skip=true -D findbugs.skip=true -D skip.bower=true -D gpg.skip=true -D checkstyle.skip=true -D skip.gulp=true -D license.skip=true -D skip.npm=true test"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="dependency-check.skip" value="true"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_121"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="enforcer.skip" value="true"/>
    <property name="rat.skip" value="true"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="shouldBeAbleToRestartCassandra" classname="com.github.nosan.embedded.cassandra.CassandraTests" time="12.346">
    <error message="Could not start a process.&#10;Failure:&lt;EOF&gt;&#10;Output:&#10;--- START --- &#10;Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.&#10;If you really want to force running Cassandra as root, use -R command line option.&#10;&#10;--- END --- " type="java.io.IOException"><![CDATA[java.io.IOException: 
Could not start a process.
Failure:<EOF>
Output:
--- START --- 
Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.
If you really want to force running Cassandra as root, use -R command line option.

--- END --- 
	at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:111)
	at de.flapdoodle.embed.process.runtime.AbstractProcess.<init>(AbstractProcess.java:116)
	at com.github.nosan.embedded.cassandra.process.CassandraProcess.<init>(CassandraProcess.java:66)
	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)
	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)
	at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)
	at com.github.nosan.embedded.cassandra.Cassandra.start(Cassandra.java:171)
	at com.github.nosan.embedded.cassandra.CassandraTests.start(CassandraTests.java:40)
	at com.github.nosan.embedded.cassandra.CassandraTests.shouldBeAbleToRestartCassandra(CassandraTests.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]></error>
    <rerunError message="Could not start a process.&#10;Failure:&lt;EOF&gt;&#10;Output:&#10;--- START --- &#10;Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.&#10;If you really want to force running Cassandra as root, use -R command line option.&#10;&#10;--- END --- " type="java.io.IOException"><![CDATA[java.io.IOException: 
Could not start a process.
Failure:<EOF>
Output:
--- START --- 
Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.
If you really want to force running Cassandra as root, use -R command line option.

--- END --- 
	at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:111)
	at de.flapdoodle.embed.process.runtime.AbstractProcess.<init>(AbstractProcess.java:116)
	at com.github.nosan.embedded.cassandra.process.CassandraProcess.<init>(CassandraProcess.java:66)
	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)
	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)
	at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)
	at com.github.nosan.embedded.cassandra.Cassandra.start(Cassandra.java:171)
	at com.github.nosan.embedded.cassandra.CassandraTests.start(CassandraTests.java:40)
	at com.github.nosan.embedded.cassandra.CassandraTests.shouldBeAbleToRestartCassandra(CassandraTests.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeFailedMethod(JUnit4Provider.java:379)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:290)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]></rerunError>
  </testcase>
  <testcase name="shouldNotStartCassandraIfCassandraHasBeenAlreadyStarted" classname="com.github.nosan.embedded.cassandra.CassandraTests" time="5.083">
    <failure message="&#10;Expected: (an instance of java.io.IOException and exception with message a string containing &quot;Cassandra has already been started&quot;)&#10;     but: exception with message a string containing &quot;Cassandra has already been started&quot; message was &quot;Could not start a process.&#10;Failure:&lt;EOF&gt;&#10;Output:&#10;--- START --- &#10;Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.&#10;If you really want to force running Cassandra as root, use -R command line option.&#10;&#10;--- END --- &quot;&#10;Stacktrace was: java.io.IOException: Could not start a process.&#10;Failure:&lt;EOF&gt;&#10;Output:&#10;--- START --- &#10;Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.&#10;If you really want to force running Cassandra as root, use -R command line option.&#10;&#10;--- END --- &#10;	at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:111)&#10;	at de.flapdoodle.embed.process.runtime.AbstractProcess.&lt;init&gt;(AbstractProcess.java:116)&#10;	at com.github.nosan.embedded.cassandra.process.CassandraProcess.&lt;init&gt;(CassandraProcess.java:66)&#10;	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)&#10;	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)&#10;	at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)&#10;	at com.github.nosan.embedded.cassandra.Cassandra.start(Cassandra.java:171)&#10;	at com.github.nosan.embedded.cassandra.CassandraTests.start(CassandraTests.java:40)&#10;	at com.github.nosan.embedded.cassandra.CassandraTests.shouldNotStartCassandraIfCassandraHasBeenAlreadyStarted(CassandraTests.java:62)&#10;	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#10;	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#10;	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#10;	at java.lang.reflect.Method.invoke(Method.java:498)&#10;	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#10;	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#10;	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#10;	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#10;	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)&#10;	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&#10;	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#10;	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#10;	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#10;	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#10;	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#10;	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#10;	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#10;	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#10;	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)&#10;	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)&#10;	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)&#10;	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 

Expected: (an instance of java.io.IOException and exception with message a string containing "Cassandra has already been started")
     but: exception with message a string containing "Cassandra has already been started" message was "Could not start a process.
Failure:<EOF>
Output:
--- START --- 
Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.
If you really want to force running Cassandra as root, use -R command line option.

--- END --- "
Stacktrace was: java.io.IOException: Could not start a process.
Failure:<EOF>
Output:
--- START --- 
Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.
If you really want to force running Cassandra as root, use -R command line option.

--- END --- 
	at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:111)
	at de.flapdoodle.embed.process.runtime.AbstractProcess.<init>(AbstractProcess.java:116)
	at com.github.nosan.embedded.cassandra.process.CassandraProcess.<init>(CassandraProcess.java:66)
	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)
	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)
	at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)
	at com.github.nosan.embedded.cassandra.Cassandra.start(Cassandra.java:171)
	at com.github.nosan.embedded.cassandra.CassandraTests.start(CassandraTests.java:40)
	at com.github.nosan.embedded.cassandra.CassandraTests.shouldNotStartCassandraIfCassandraHasBeenAlreadyStarted(CassandraTests.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)

	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.junit.Assert.assertThat(Assert.java:956)
	at org.junit.Assert.assertThat(Assert.java:923)
	at org.junit.rules.ExpectedException.handleException(ExpectedException.java:252)
	at org.junit.rules.ExpectedException.access$000(ExpectedException.java:106)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:241)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]></failure>
    <rerunFailure message="&#10;Expected: (an instance of java.io.IOException and exception with message a string containing &quot;Cassandra has already been started&quot;)&#10;     but: exception with message a string containing &quot;Cassandra has already been started&quot; message was &quot;Could not start a process.&#10;Failure:&lt;EOF&gt;&#10;Output:&#10;--- START --- &#10;Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.&#10;If you really want to force running Cassandra as root, use -R command line option.&#10;&#10;--- END --- &quot;&#10;Stacktrace was: java.io.IOException: Could not start a process.&#10;Failure:&lt;EOF&gt;&#10;Output:&#10;--- START --- &#10;Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.&#10;If you really want to force running Cassandra as root, use -R command line option.&#10;&#10;--- END --- &#10;	at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:111)&#10;	at de.flapdoodle.embed.process.runtime.AbstractProcess.&lt;init&gt;(AbstractProcess.java:116)&#10;	at com.github.nosan.embedded.cassandra.process.CassandraProcess.&lt;init&gt;(CassandraProcess.java:66)&#10;	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)&#10;	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)&#10;	at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)&#10;	at com.github.nosan.embedded.cassandra.Cassandra.start(Cassandra.java:171)&#10;	at com.github.nosan.embedded.cassandra.CassandraTests.start(CassandraTests.java:40)&#10;	at com.github.nosan.embedded.cassandra.CassandraTests.shouldNotStartCassandraIfCassandraHasBeenAlreadyStarted(CassandraTests.java:62)&#10;	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#10;	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#10;	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#10;	at java.lang.reflect.Method.invoke(Method.java:498)&#10;	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#10;	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#10;	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#10;	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#10;	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)&#10;	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&#10;	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#10;	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#10;	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#10;	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#10;	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#10;	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#10;	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#10;	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#10;	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.executeFailedMethod(JUnit4Provider.java:379)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:290)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)&#10;	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)&#10;	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)&#10;	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 

Expected: (an instance of java.io.IOException and exception with message a string containing "Cassandra has already been started")
     but: exception with message a string containing "Cassandra has already been started" message was "Could not start a process.
Failure:<EOF>
Output:
--- START --- 
Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.
If you really want to force running Cassandra as root, use -R command line option.

--- END --- "
Stacktrace was: java.io.IOException: Could not start a process.
Failure:<EOF>
Output:
--- START --- 
Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.
If you really want to force running Cassandra as root, use -R command line option.

--- END --- 
	at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:111)
	at de.flapdoodle.embed.process.runtime.AbstractProcess.<init>(AbstractProcess.java:116)
	at com.github.nosan.embedded.cassandra.process.CassandraProcess.<init>(CassandraProcess.java:66)
	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)
	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)
	at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)
	at com.github.nosan.embedded.cassandra.Cassandra.start(Cassandra.java:171)
	at com.github.nosan.embedded.cassandra.CassandraTests.start(CassandraTests.java:40)
	at com.github.nosan.embedded.cassandra.CassandraTests.shouldNotStartCassandraIfCassandraHasBeenAlreadyStarted(CassandraTests.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeFailedMethod(JUnit4Provider.java:379)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:290)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)

	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.junit.Assert.assertThat(Assert.java:956)
	at org.junit.Assert.assertThat(Assert.java:923)
	at org.junit.rules.ExpectedException.handleException(ExpectedException.java:252)
	at org.junit.rules.ExpectedException.access$000(ExpectedException.java:106)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:241)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeFailedMethod(JUnit4Provider.java:379)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:290)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]></rerunFailure>
  </testcase>
  <testcase name="shouldStartCassandraUsingDefaultConfiguration" classname="com.github.nosan.embedded.cassandra.CassandraTests" time="4.649">
    <error message="Could not start a process.&#10;Failure:&lt;EOF&gt;&#10;Output:&#10;--- START --- &#10;Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.&#10;If you really want to force running Cassandra as root, use -R command line option.&#10;&#10;--- END --- " type="java.io.IOException"><![CDATA[java.io.IOException: 
Could not start a process.
Failure:<EOF>
Output:
--- START --- 
Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.
If you really want to force running Cassandra as root, use -R command line option.

--- END --- 
	at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:111)
	at de.flapdoodle.embed.process.runtime.AbstractProcess.<init>(AbstractProcess.java:116)
	at com.github.nosan.embedded.cassandra.process.CassandraProcess.<init>(CassandraProcess.java:66)
	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)
	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)
	at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)
	at com.github.nosan.embedded.cassandra.Cassandra.start(Cassandra.java:171)
	at com.github.nosan.embedded.cassandra.CassandraTests.start(CassandraTests.java:40)
	at com.github.nosan.embedded.cassandra.CassandraTests.shouldStartCassandraUsingDefaultConfiguration(CassandraTests.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]></error>
    <rerunError message="Could not start a process.&#10;Failure:&lt;EOF&gt;&#10;Output:&#10;--- START --- &#10;Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.&#10;If you really want to force running Cassandra as root, use -R command line option.&#10;&#10;--- END --- " type="java.io.IOException"><![CDATA[java.io.IOException: 
Could not start a process.
Failure:<EOF>
Output:
--- START --- 
Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.
If you really want to force running Cassandra as root, use -R command line option.

--- END --- 
	at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:111)
	at de.flapdoodle.embed.process.runtime.AbstractProcess.<init>(AbstractProcess.java:116)
	at com.github.nosan.embedded.cassandra.process.CassandraProcess.<init>(CassandraProcess.java:66)
	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)
	at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)
	at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)
	at com.github.nosan.embedded.cassandra.Cassandra.start(Cassandra.java:171)
	at com.github.nosan.embedded.cassandra.CassandraTests.start(CassandraTests.java:40)
	at com.github.nosan.embedded.cassandra.CassandraTests.shouldStartCassandraUsingDefaultConfiguration(CassandraTests.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeFailedMethod(JUnit4Provider.java:379)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:290)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]></rerunError>
  </testcase>
</testsuite>