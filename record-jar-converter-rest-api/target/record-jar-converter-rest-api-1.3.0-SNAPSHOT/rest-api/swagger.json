{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.3.0-SNAPSHOT",
    "title" : "Record Jar Converter"
  },
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "Record Jar API"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/record/jar/full/multipart/file" : {
      "post" : {
        "tags" : [ "Record Jar API" ],
        "summary" : "Converts a record-jar formatted file to JSON. Comments are included. Convenience method for file based conversion.",
        "description" : "",
        "operationId" : "uploadMultipartFile",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "encoding",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 OK. Parsing of the file was okay, and the resulting JSON is in the response.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Record"
              }
            }
          },
          "400" : {
            "description" : "400 Bad Request. Violations are present in the body.",
            "schema" : {
              "$ref" : "#/definitions/Violation"
            }
          }
        }
      }
    },
    "/record/jar/full/multipart/text" : {
      "post" : {
        "tags" : [ "Record Jar API" ],
        "summary" : "Converts a record-jar formatted text to JSON. Comments are included. Convenience method for easy converting of text from html forms.",
        "description" : "",
        "operationId" : "uploadMultipartText",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "text",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "encoding",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 OK. Parsing of the file was okay, and the resulting JSON is in the response.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Record"
              }
            }
          },
          "400" : {
            "description" : "400 Bad Request. Violations are present in the body.",
            "schema" : {
              "$ref" : "#/definitions/Violation"
            }
          }
        }
      }
    },
    "/record/jar/full/text" : {
      "post" : {
        "tags" : [ "Record Jar API" ],
        "summary" : "Converts a record-jar formatted text to JSON. Comments are included. Convenience method for easy converting of text.",
        "description" : "",
        "operationId" : "uploadText",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "encoding",
          "in" : "query",
          "description" : "Encoding of the specified record-jar formatted file.",
          "required" : false,
          "type" : "string",
          "default" : "UTF-8",
          "x-example" : "UTF-8"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "RecordDocumentation Jar formatted text",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 OK. Parsing of the file was okay, and the resulting JSON is in the response.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Record"
              }
            }
          },
          "400" : {
            "description" : "400 Bad Request. Violations are present in the body.",
            "schema" : {
              "$ref" : "#/definitions/Violation"
            }
          }
        }
      }
    },
    "/record/jar/multipart/file" : {
      "post" : {
        "tags" : [ "Record Jar API" ],
        "summary" : "Converts a record-jar formatted file to JSON. Convenience method for file based conversion.",
        "description" : "",
        "operationId" : "uploadMultipartFile",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "encoding",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 OK. Parsing of the file was okay, and the resulting JSON is in the response.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "400 Bad Request. Violations are present in the body.",
            "schema" : {
              "$ref" : "#/definitions/Violation"
            }
          }
        }
      }
    },
    "/record/jar/multipart/text" : {
      "post" : {
        "tags" : [ "Record Jar API" ],
        "summary" : "Converts a record-jar formatted text to JSON. Convenience method for easy converting of text from html forms.",
        "description" : "",
        "operationId" : "uploadMultipartText",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "text",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "encoding",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 OK. Parsing of the file was okay, and the resulting JSON is in the response.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "400 Bad Request. Violations are present in the body.",
            "schema" : {
              "$ref" : "#/definitions/Violation"
            }
          }
        }
      }
    },
    "/record/jar/text" : {
      "post" : {
        "tags" : [ "Record Jar API" ],
        "summary" : "Converts a record-jar formatted text to JSON. Convenience method for easy converting of text.",
        "description" : "",
        "operationId" : "uploadText",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "encoding",
          "in" : "query",
          "description" : "Encoding of the specified record-jar formatted file.",
          "required" : false,
          "type" : "string",
          "default" : "UTF-8",
          "x-example" : "UTF-8"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Record Jar formatted text",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 OK. Parsing of the file was okay, and the resulting JSON is in the response."
          },
          "400" : {
            "description" : "400 Bad Request. Violations are present in the body.",
            "schema" : {
              "$ref" : "#/definitions/Violation"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Record" : {
      "type" : "object",
      "required" : [ "fields" ],
      "properties" : {
        "fields" : {
          "type" : "object",
          "example" : "Moons: Luna",
          "description" : "A key value pair read from the record jar file",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "comments" : {
          "type" : "array",
          "description" : "Comments that immediately preceded the record. This is basicly a list consisting of free text.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Violation" : {
      "type" : "object",
      "properties" : {
        "line" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "row" : {
          "type" : "integer",
          "format" : "int32"
        },
        "column" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    }
  }
}