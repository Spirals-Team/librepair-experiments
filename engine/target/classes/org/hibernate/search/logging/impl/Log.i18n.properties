#####################################################################################################
#
# This file is for reference only, changes have no effect on the generated interface implementations.
#
#####################################################################################################

# Id: 1
# Message: Unable to convert configuration property '%1$s' with value '%2$s': %3$s
# @param 1: key - 
# @param 2: rawValue - 
# @param 3: errorMessage - 
unableToConvertConfigurationProperty=Unable to convert configuration property '%1$s' with value '%2$s': %3$s
# Id: 2
# Message: Invalid value: expected either an instance of '%1$s' or a parsable String.
# @param 1: expectedType - 
invalidPropertyValue=Invalid value: expected either an instance of '%1$s' or a parsable String.
# Id: 3
# Message: Invalid boolean value: expected either a Boolean, the String 'true' or the String 'false'.
invalidBooleanPropertyValue=Invalid boolean value: expected either a Boolean, the String 'true' or the String 'false'.
# Id: 4
# Message: %1$s
# @param 1: errorMessage - 
invalidIntegerPropertyValue=%1$s
# Id: 5
# Message: %1$s
# @param 1: errorMessage - 
invalidLongPropertyValue=%1$s
# Id: 6
# Message: Invalid multi value: expected either a Collection or a String.
invalidMultiPropertyValue=Invalid multi value: expected either a Collection or a String.
# Id: 7
# Message: Cannot add multiple predicates to the query root; use an explicit boolean predicate instead.
cannotAddMultiplePredicatesToQueryRoot=Cannot add multiple predicates to the query root; use an explicit boolean predicate instead.
# Id: 9
# Message: Cannot add multiple predicates to a nested predicate; use an explicit boolean predicate instead.
cannotAddMultiplePredicatesToNestedPredicate=Cannot add multiple predicates to a nested predicate; use an explicit boolean predicate instead.
# Id: 11
# Message: Invalid value: the value to match in match predicates must be non-null. Null value was passed to match predicate on fields %1$s
# @param 1: strings - 
matchPredicateCannotMatchNullValue=Invalid value: the value to match in match predicates must be non-null. Null value was passed to match predicate on fields %1$s
# Id: 12
# Message: Invalid value: at least one bound in range predicates must be non-null. Null bounds were passed to range predicate on fields %1$s
# @param 1: strings - 
rangePredicateCannotMatchNullValue=Invalid value: at least one bound in range predicates must be non-null. Null bounds were passed to range predicate on fields %1$s
# Id: 13
# Message: Cannot map type '%1$s' to index '%2$s', because this type is abstract. Index mappings are not inherited: they apply to exact instances of a given type. As a result, mapping an abstract type to an index does not make sense, since the index would always be empty.
# @param 1: typeModel - 
# @param 2: indexName - 
cannotMapAbstractTypeToIndex=Cannot map type '%1$s' to index '%2$s', because this type is abstract. Index mappings are not inherited: they apply to exact instances of a given type. As a result, mapping an abstract type to an index does not make sense, since the index would always be empty.
# Id: 14
# Message: Field name '%1$s' is invalid: field names cannot be null or empty.
# @param 1: relativeFieldName - 
relativeFieldNameCannotBeNullOrEmpty=Field name '%1$s' is invalid: field names cannot be null or empty.
# Id: 15
# Message: Field name '%1$s' is invalid: field names cannot contain a dot ('.'). Remove the dot from your field name, or if you are declaring the field in a bridge and want a tree of fields, declare an object field using the objectField() method.
# @param 1: relativeFieldName - 
relativeFieldNameCannotContainDot=Field name '%1$s' is invalid: field names cannot contain a dot ('.'). Remove the dot from your field name, or if you are declaring the field in a bridge and want a tree of fields, declare an object field using the objectField() method.
# Id: 16
# Message: Invalid polygon: the first point '%1$s' should be identical to the last point '%2$s' to properly close the polygon.
# @param 1: firstPoint - 
# @param 2: lastPoint - 
invalidGeoPolygonFirstPointNotIdenticalToLastPoint=Invalid polygon: the first point '%1$s' should be identical to the last point '%2$s' to properly close the polygon.
