<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="22" passed="22">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="3345" started-at="2018-06-01T11:19:55Z" finished-at="2018-06-01T11:19:58Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="3345" started-at="2018-06-01T11:19:55Z" finished-at="2018-06-01T11:19:58Z">
      <class name="org.molgenis.data.vcf.utils.test.VcfUtilsTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.molgenis.data.vcf.utils.test.VcfUtilsTest@2aa6bbad]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="68" started-at="2018-06-01T13:19:58Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.molgenis.data.vcf.utils.test.VcfUtilsTest@2aa6bbad]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeClass()[pri:0, instance:org.molgenis.data.vcf.utils.test.VcfUtilsTest@2aa6bbad]" name="abstractMolgenisSpringTestBeforeClass" is-config="true" duration-ms="7" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.molgenis.data.vcf.utils.test.VcfUtilsTest@2aa6bbad]" name="beforeClass" is-config="true" duration-ms="3" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.utils.test.VcfUtilsTest@2aa6bbad]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.utils.test.VcfUtilsTest@2aa6bbad]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.utils.test.VcfUtilsTest.createId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.data.vcf.utils.test.VcfUtilsTest@2aa6bbad]" name="beforeMethod" is-config="true" duration-ms="5" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createId()[pri:0, instance:org.molgenis.data.vcf.utils.test.VcfUtilsTest@2aa6bbad]" name="createId" duration-ms="1" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createId -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.utils.test.VcfUtilsTest@2aa6bbad]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.utils.test.VcfUtilsTest.createId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.vcf.utils.test.VcfUtilsTest@2aa6bbad]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.molgenis.data.vcf.utils.test.VcfUtilsTest@2aa6bbad]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.molgenis.data.vcf.utils.test.VcfUtilsTest -->
      <class name="org.molgenis.data.vcf.format.VcfToEntityTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="14" started-at="2018-06-01T13:19:55Z" finished-at="2018-06-01T13:19:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="1845" started-at="2018-06-01T13:19:55Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeClass()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="abstractMolgenisSpringTestBeforeClass" is-config="true" duration-ms="87" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.format.VcfToEntityTest.testGetEntityType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="8" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="beforeTest" is-config="true" duration-ms="27" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testGetEntityType()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="testGetEntityType" duration-ms="170" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntityType -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="5" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="4" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.format.VcfToEntityTest.testGetEntityType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.format.VcfToEntityTest.testToEntity() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="beforeTest" is-config="true" duration-ms="3" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testToEntity()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="testToEntity" duration-ms="20" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEntity -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.format.VcfToEntityTest.testToEntity() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.format.VcfToEntityTest.testToEntityAlternativeAlleles() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="beforeTest" is-config="true" duration-ms="3" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testToEntityAlternativeAlleles()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="testToEntityAlternativeAlleles" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEntityAlternativeAlleles -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.format.VcfToEntityTest.testToEntityMissingValues() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.format.VcfToEntityTest.testToEntityAlternativeAlleles() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="beforeTest" is-config="true" duration-ms="2" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testToEntityMissingValues()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="testToEntityMissingValues" duration-ms="2" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToEntityMissingValues -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.format.VcfToEntityTest@14a1769d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.format.VcfToEntityTest.testToEntityMissingValues() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- org.molgenis.data.vcf.format.VcfToEntityTest -->
      <class name="org.molgenis.data.vcf.importer.VcfImporterServiceTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="initMocks" is-config="true" duration-ms="225" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="canImportVcf()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="canImportVcf" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- canImportVcf -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="canImportVcfGz()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="canImportVcfGz" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- canImportVcfGz -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="canImportXls()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="canImportXls" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- canImportXls -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="doImportAddIgnoreExisting()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="doImportAddIgnoreExisting" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Only ADD is supported]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Only ADD is supported
	at org.molgenis.data.vcf.importer.VcfImporterService.doImport(VcfImporterService.java:55)
	at org.molgenis.data.vcf.importer.VcfImporterServiceTest.doImportAddIgnoreExisting(VcfImporterServiceTest.java:258)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doImportAddIgnoreExisting -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="doImportAddUpdateExisting()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="doImportAddUpdateExisting" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Only ADD is supported]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Only ADD is supported
	at org.molgenis.data.vcf.importer.VcfImporterService.doImport(VcfImporterService.java:55)
	at org.molgenis.data.vcf.importer.VcfImporterServiceTest.doImportAddUpdateExisting(VcfImporterServiceTest.java:266)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doImportAddUpdateExisting -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="doImportAlreadyExists()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="doImportAlreadyExists" duration-ms="60" started-at="2018-06-01T13:19:57Z" finished-at="2018-06-01T13:19:58Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Can't overwrite existing entity0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Can't overwrite existing entity0
	at org.molgenis.data.vcf.importer.VcfImporterService.importVcf(VcfImporterService.java:147)
	at org.molgenis.data.vcf.importer.VcfImporterService.doImport(VcfImporterService.java:65)
	at org.molgenis.data.vcf.importer.VcfImporterServiceTest.doImportAlreadyExists(VcfImporterServiceTest.java:250)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doImportAlreadyExists -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="doImportUpdate()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="doImportUpdate" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Only ADD is supported]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Only ADD is supported
	at org.molgenis.data.vcf.importer.VcfImporterService.doImport(VcfImporterService.java:55)
	at org.molgenis.data.vcf.importer.VcfImporterServiceTest.doImportUpdate(VcfImporterServiceTest.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doImportUpdate -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="doImportVcfWithSamples()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="doImportVcfWithSamples" duration-ms="429" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doImportVcfWithSamples -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="doImportVcfWithoutSamples()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="doImportVcfWithoutSamples" duration-ms="59" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doImportVcfWithoutSamples -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="validateImportWithSamples()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="validateImportWithSamples" duration-ms="72" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateImportWithSamples -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="validateImportWithSamplesAlreadyExists()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="validateImportWithSamplesAlreadyExists" duration-ms="3" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateImportWithSamplesAlreadyExists -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="validateImportWithoutSamples()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="validateImportWithoutSamples" duration-ms="1" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateImportWithoutSamples -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="validateImportWithoutSamplesAlreadyExists()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="validateImportWithoutSamplesAlreadyExists" duration-ms="2" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateImportWithoutSamplesAlreadyExists -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.vcf.importer.VcfImporterServiceTest@3356ff58]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- org.molgenis.data.vcf.importer.VcfImporterServiceTest -->
      <class name="org.molgenis.data.vcf.VcfRepositoryTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="51" started-at="2018-06-01T13:19:58Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeClass()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="abstractMolgenisSpringTestBeforeClass" is-config="true" duration-ms="4" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="beforeClass" is-config="true" duration-ms="14" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.VcfRepositoryTest.iterator() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="iterator()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="iterator" duration-ms="21" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iterator -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.VcfRepositoryTest.iterator() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.VcfRepositoryTest.iterator_noValues() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="iterator_noValues()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="iterator_noValues" duration-ms="5" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iterator_noValues -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.VcfRepositoryTest.iterator_noValues() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.VcfRepositoryTest.metaData() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="metaData()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="metaData" duration-ms="4" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- metaData -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.VcfRepositoryTest.metaData() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.VcfRepositoryTest.testGetEntityType() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="testGetEntityType()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="testGetEntityType" duration-ms="68" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Failed to read VCF Metadata from file; nested exception is java.io.IOException: error processing source]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Failed to read VCF Metadata from file; nested exception is java.io.IOException: error processing source
	at org.molgenis.data.vcf.VcfRepository.parseVcfMeta(VcfRepository.java:78)
	at com.google.common.base.Suppliers$NonSerializableMemoizingSupplier.get(Suppliers.java:166)
	at org.molgenis.data.vcf.VcfRepository.getEntityType(VcfRepository.java:110)
	at org.molgenis.data.vcf.VcfRepositoryTest.testGetEntityType(VcfRepositoryTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
Caused by: java.io.IOException: error processing source
	at org.molgenis.data.vcf.VcfRepository.parseVcfMeta(VcfRepository.java:73)
	... 39 more
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntityType -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.vcf.VcfRepositoryTest.testGetEntityType() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.molgenis.data.vcf.VcfRepositoryTest@37a67cf]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-06-01T13:19:58Z" finished-at="2018-06-01T13:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.molgenis.data.vcf.VcfRepositoryTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
