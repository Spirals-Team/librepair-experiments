nopolinfo #0
location: FailureLocation{className='com.ipiecoles.java.java340.service.EmployeServiceTest', failingMethods=[com.ipiecoles.java.java340.service.EmployeServiceTest#testfindByMatriculeFound], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='Expected exception: javax.persistence.EntityNotFoundException', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Wed Feb 14 16:17:54 CET 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/SabrinaJebabli/ipi-java-340-ex/341475381/src/main/java], projectClasspath='[Ljava.net.URL;@2b556bb2', projectTests=[com.ipiecoles.java.java340.service.EmployeServiceTest], complianceLevel=8, outputFolder=./workspace/SabrinaJebabli/ipi-java-340-ex/341475381, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='com.ipiecoles.java.java340.repository.EmployeRepositoryTest', failingMethods=[], erroringMethods=[com.ipiecoles.java.java340.repository.EmployeRepositoryTest#testfindByNomOrPrenomAllIgnoreCaseNomPrenom, com.ipiecoles.java.java340.repository.EmployeRepositoryTest#testfindByNomOrPrenomAllIgnoreCaseNotFound, com.ipiecoles.java.java340.repository.EmployeRepositoryTest#testfindByNomOrPrenomAllIgnoreCasePrenom, com.ipiecoles.java.java340.repository.EmployeRepositoryTest#testfindByNomOrPrenomAllIgnoreCaseNom], failures=[FailureType{failureName='org.springframework.dao.InvalidDataAccessResourceUsageException', failureDetail='could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id=employe0_1_.id left outer join Manager employe0_2_ on employe0_.id=employe0_2_.id left outer join Technicien employe0_3_ on employe0_.id=employe0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement', isError=true}, FailureType{failureName='org.springframework.dao.InvalidDataAccessResourceUsageException', failureDetail='could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id=employe0_1_.id left outer join Manager employe0_2_ on employe0_.id=employe0_2_.id left outer join Technicien employe0_3_ on employe0_.id=employe0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement', isError=true}, FailureType{failureName='org.springframework.dao.InvalidDataAccessResourceUsageException', failureDetail='could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id=employe0_1_.id left outer join Manager employe0_2_ on employe0_.id=employe0_2_.id left outer join Technicien employe0_3_ on employe0_.id=employe0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement', isError=true}, FailureType{failureName='org.springframework.dao.InvalidDataAccessResourceUsageException', failureDetail='could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id=employe0_1_.id left outer join Manager employe0_2_ on employe0_.id=employe0_2_.id left outer join Technicien employe0_3_ on employe0_.id=employe0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement', isError=true}, FailureType{failureName='org.springframework.dao.InvalidDataAccessResourceUsageException', failureDetail='could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id=employe0_1_.id left outer join Manager employe0_2_ on employe0_.id=employe0_2_.id left outer join Technicien employe0_3_ on employe0_.id=employe0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement', isError=true}, FailureType{failureName='org.springframework.dao.InvalidDataAccessResourceUsageException', failureDetail='could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id=employe0_1_.id left outer join Manager employe0_2_ on employe0_.id=employe0_2_.id left outer join Technicien employe0_3_ on employe0_.id=employe0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement', isError=true}, FailureType{failureName='org.springframework.dao.InvalidDataAccessResourceUsageException', failureDetail='could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id=employe0_1_.id left outer join Manager employe0_2_ on employe0_.id=employe0_2_.id left outer join Technicien employe0_3_ on employe0_.id=employe0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement', isError=true}, FailureType{failureName='org.springframework.dao.InvalidDataAccessResourceUsageException', failureDetail='could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id=employe0_1_.id left outer join Manager employe0_2_ on employe0_.id=employe0_2_.id left outer join Technicien employe0_3_ on employe0_.id=employe0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Wed Feb 14 16:17:55 CET 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/SabrinaJebabli/ipi-java-340-ex/341475381/src/main/java], projectClasspath='[Ljava.net.URL;@37ed010a', projectTests=[com.ipiecoles.java.java340.repository.EmployeRepositoryTest], complianceLevel=8, outputFolder=./workspace/SabrinaJebabli/ipi-java-340-ex/341475381, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



