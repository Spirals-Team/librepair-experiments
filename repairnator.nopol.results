nopolinfo #0
location: FailureLocation{className='com.facebook.presto.tests.TestDistributedSpilledQueries', failingMethods=[com.facebook.presto.tests.TestDistributedSpilledQueries#testAggregationPushedBelowOuterJoin, com.facebook.presto.tests.TestDistributedSpilledQueries#testApproxSetDoubleGroupBy, com.facebook.presto.tests.TestDistributedSpilledQueries#testApproximateCountDistinctGroupBy, com.facebook.presto.tests.TestDistributedSpilledQueries#testCube, com.facebook.presto.tests.TestDistributedSpilledQueries#testCorrelatedInPredicateSubqueries, com.facebook.presto.tests.TestDistributedSpilledQueries#testCorrelatedExistsSubqueriesWithPrunedCorrelationSymbols, com.facebook.presto.tests.TestDistributedSpilledQueries#testCustomRank, com.facebook.presto.tests.TestDistributedSpilledQueries#testExceptWithAggregation, com.facebook.presto.tests.TestDistributedSpilledQueries#testCubeNoInput, com.facebook.presto.tests.TestDistributedSpilledQueries#testDistinctHaving, com.facebook.presto.tests.TestDistributedSpilledQueries#testCorrelatedExistsSubqueries, com.facebook.presto.tests.TestDistributedSpilledQueries#testApproxSetGroupByWithOnlyNullsInOneGroup, com.facebook.presto.tests.TestDistributedSpilledQueries#testExcept, com.facebook.presto.tests.TestDistributedSpilledQueries#testDistinctJoin, com.facebook.presto.tests.TestDistributedSpilledQueries#testAssignUniqueId, com.facebook.presto.tests.TestDistributedSpilledQueries#testApproxSetBigintGroupBy, com.facebook.presto.tests.TestDistributedSpilledQueries#testRollupOverUnion, com.facebook.presto.tests.TestDistributedSpilledQueries#test15WayGroupBy, com.facebook.presto.tests.TestDistributedSpilledQueries#testApproxSetVarcharGroupBy, com.facebook.presto.tests.TestDistributedSpilledQueries#testCustomSum, com.facebook.presto.tests.TestDistributedSpilledQueries#testCorrelatedExistsSubqueriesWithEqualityPredicatesInWhere, com.facebook.presto.tests.TestDistributedSpilledQueries#testP4ApproxSetGroupByWithNulls, com.facebook.presto.tests.TestDistributedSpilledQueries#testP4ApproxSetVarcharGroupBy, com.facebook.presto.tests.TestDistributedSpilledQueries#testApproximateCountDistinctGroupByWithStandardError, com.facebook.presto.tests.TestDistributedSpilledQueries#testP4ApproxSetDoubleGroupBy, com.facebook.presto.tests.TestDistributedSpilledQueries#testP4ApproxSetGroupByWithOnlyNullsInOneGroup, com.facebook.presto.tests.TestDistributedSpilledQueries#testAggregationOverRightJoinOverSingleStreamProbe, com.facebook.presto.tests.TestDistributedSpilledQueries#testSemiJoin, com.facebook.presto.tests.TestDistributedSpilledQueries#testScalarSubqueryWithGroupBy, com.facebook.presto.tests.TestDistributedSpilledQueries#testOrderByWithAggregation, com.facebook.presto.tests.TestDistributedSpilledQueries#testDistinctWindow, com.facebook.presto.tests.TestDistributedSpilledQueries#testDistinctGroupBy, com.facebook.presto.tests.TestDistributedSpilledQueries#testCorrelatedScalarSubqueriesWithScalarAggregationAndEqualityPredicatesInWhere, com.facebook.presto.tests.TestDistributedSpilledQueries#testDistinctMultipleFields, com.facebook.presto.tests.TestDistributedSpilledQueries#testApproxPercentile, com.facebook.presto.tests.TestDistributedSpilledQueries#testApproxSetGroupByWithNulls, com.facebook.presto.tests.TestDistributedSpilledQueries#testCorrelatedScalarSubqueriesWithScalarAggregation, com.facebook.presto.tests.TestDistributedSpilledQueries#testMaxMinStringWithNulls], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT     orderkey + 1, orderkey + 2, orderkey + 3, orderkey + 4, orderkey + 5,     orderkey + 6, orderkey + 7, orderkey + 8, orderkey + 9, orderkey + 10,     count(*) FROM orders GROUP BY     orderkey + 1, orderkey + 2, orderkey + 3, orderkey + 4, orderkey + 5,     orderkey + 6, orderkey + 7, orderkey + 8, orderkey + 9, orderkey + 10', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT
  value
FROM
(
    SELECT
        key
    FROM
        (VALUES 'match') as a(key)
        LEFT JOIN (SELECT * FROM (VALUES (0)) limit 0) AS x(ignored)
        ON TRUE
    GROUP BY 1
) a
RIGHT JOIN
(
    VALUES
    ('match', 'value'),
    ('no-match', 'value')
) AS b(key, value)
ON a.key = b.key
GROUP BY 1
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT max(name), min(name), count(nationkey) + 1, count(nationkey) FROM (SELECT DISTINCT regionkey FROM region) as r1 LEFT JOIN nation ON r1.regionkey = nation.regionkey GROUP BY r1.regionkey HAVING sum(nationkey) < 20', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT count(*) FROM (SELECT * FROM (   SELECT (SELECT count(*) WHERE c = 1)    FROM (SELECT CASE orderkey WHEN 1 THEN orderkey ELSE 1 END        FROM (SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem)) o(c)) result(a) WHERE a = 1)', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT count(*) FROM orders o WHERE EXISTS(SELECT 1 FROM orders i WHERE o.orderkey < i.orderkey AND i.orderkey % 1000 = 0)', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT EXISTS(SELECT 1 WHERE o.orderkey = 1) FROM orders o', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT max(o.totalprice), o.orderkey FROM orders o GROUP BY o.orderkey, EXISTS (SELECT o.orderkey)', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT orderkey, clerk IN (SELECT clerk FROM orders s WHERE s.custkey = o.custkey AND s.orderkey < o.orderkey) FROM orders o', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT count(*) FROM orders o WHERE (SELECT avg(i.orderkey) FROM orders i WHERE o.orderkey < i.orderkey AND i.orderkey % 10000 = 0) > 100', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT (SELECT count(*) WHERE o.orderkey = 1) FROM orders o', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT linenumber, suppkey, SUM(CAST(quantity AS BIGINT)) FROM lineitem GROUP BY CUBE (linenumber, suppkey)', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT linenumber, suppkey, SUM(CAST(quantity AS BIGINT)) FROM lineitem WHERE quantity < 0 GROUP BY CUBE (linenumber, suppkey)', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT orderstatus, custom_sum(orderkey) FROM orders GROUP BY orderstatus', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(DISTINCT clerk) as count, orderdate FROM orders GROUP BY orderdate ORDER BY count, orderdate', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(DISTINCT clerk) AS count FROM orders GROUP BY orderdate HAVING COUNT(DISTINCT clerk) > 1', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(DISTINCT CAST(b.quantity AS BIGINT)), a.orderstatus FROM orders a JOIN lineitem b ON a.orderkey = b.orderkey GROUP BY a.orderstatus', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT DISTINCT custkey, orderstatus FROM ORDERS', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT num FROM (SELECT 1 as num FROM nation WHERE nationkey=10 EXCEPT SELECT 2 FROM nation WHERE nationkey=20) T', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(*), SUM(2), regionkey FROM (SELECT nationkey, regionkey FROM nation EXCEPT SELECT regionkey, regionkey FROM nation) n GROUP BY regionkey HAVING regionkey < 3', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT custkey, MAX(NULLIF(orderstatus, 'O')), MIN(NULLIF(orderstatus, 'O')) FROM orders GROUP BY custkey', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: select count(*) , letter from (select substr(name,1,1) letter from nation) x group by x.letter order by letter', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT orderstatus, sum(orderkey)
FROM (SELECT orderkey, orderstatus
      FROM orders
      UNION ALL
      SELECT orderkey, orderstatus
      FROM orders) x
GROUP BY ROLLUP (orderstatus)', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT linenumber, min(orderkey), (SELECT max(orderkey) FROM orders WHERE orderkey < 7)FROM lineitem GROUP BY linenumber, (SELECT max(orderkey) FROM orders WHERE orderkey < 7)', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT linenumber, min(orderkey) FROM lineitem GROUP BY linenumber HAVING min(orderkey) IN (SELECT orderkey FROM orders WHERE orderkey > 1)', isError=false}], nbFailures=38, nbErrors=0}
status: NOPATCH
dateEnd: Wed Aug 23 03:29:44 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/prestodb/presto/267319748/presto-tests/src/main/java], projectClasspath='[Ljava.net.URL;@392a04e7', projectTests=[com.facebook.presto.tests.TestDistributedSpilledQueries], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='com.facebook.presto.tests.TestQuerySpillLimits', failingMethods=[com.facebook.presto.tests.TestQuerySpillLimits#testMaxSpillPerNodeLimit, com.facebook.presto.tests.TestQuerySpillLimits#testQueryMaxSpillPerNodeLimit], erroringMethods=[], failures=[FailureType{failureName='com.facebook.presto.spi.PrestoException', failureDetail='No free space available for spill', isError=false}, FailureType{failureName='com.facebook.presto.spi.PrestoException', failureDetail='No free space available for spill', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Wed Aug 23 03:29:56 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/prestodb/presto/267319748/presto-tests/src/main/java], projectClasspath='[Ljava.net.URL;@5b0902b4', projectTests=[com.facebook.presto.tests.TestQuerySpillLimits], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



