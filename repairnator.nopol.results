nopolinfo #0
location: FailureLocation{className='com.facebook.presto.sql.parser.TestSqlParser', failingMethods=[com.facebook.presto.sql.parser.TestSqlParser#testLambda, com.facebook.presto.sql.parser.TestSqlParser#testPrecedenceAndAssociativity, com.facebook.presto.sql.parser.TestSqlParser#testSelectWithGroupBy, com.facebook.presto.sql.parser.TestSqlParser#testSelectWithOrderBy, com.facebook.presto.sql.parser.TestSqlParser#testAtTimeZone, com.facebook.presto.sql.parser.TestSqlParser#testRenameTable, com.facebook.presto.sql.parser.TestSqlParser#testCommit, com.facebook.presto.sql.parser.TestSqlParser#testGrant, com.facebook.presto.sql.parser.TestSqlParser#testDropTable, com.facebook.presto.sql.parser.TestSqlParser#testAddColumn, com.facebook.presto.sql.parser.TestSqlParser#testDropView, com.facebook.presto.sql.parser.TestSqlParser#testCreateTableAsSelect, com.facebook.presto.sql.parser.TestSqlParser#testCurrentTimestamp, com.facebook.presto.sql.parser.TestSqlParser#testShowTables, com.facebook.presto.sql.parser.TestSqlParser#testRollback, com.facebook.presto.sql.parser.TestSqlParser#testUnion, com.facebook.presto.sql.parser.TestSqlParser#testShowCatalogs, com.facebook.presto.sql.parser.TestSqlParser#testArrayConstructor, com.facebook.presto.sql.parser.TestSqlParser#testDoubleInQuery, com.facebook.presto.sql.parser.TestSqlParser#testRenameColumn, com.facebook.presto.sql.parser.TestSqlParser#testArithmeticUnary, com.facebook.presto.sql.parser.TestSqlParser#testBetween, com.facebook.presto.sql.parser.TestSqlParser#testInsertInto, com.facebook.presto.sql.parser.TestSqlParser#testShowGrants, com.facebook.presto.sql.parser.TestSqlParser#testShowSchemas, com.facebook.presto.sql.parser.TestSqlParser#testDropSchema, com.facebook.presto.sql.parser.TestSqlParser#testInterval, com.facebook.presto.sql.parser.TestSqlParser#testSelectWithRowType, com.facebook.presto.sql.parser.TestSqlParser#testResetSession, com.facebook.presto.sql.parser.TestSqlParser#testUnnest, com.facebook.presto.sql.parser.TestSqlParser#testAggregationFilter, com.facebook.presto.sql.parser.TestSqlParser#testPosition, com.facebook.presto.sql.parser.TestSqlParser#testCreateSchema, com.facebook.presto.sql.parser.TestSqlParser#testCreateTable, com.facebook.presto.sql.parser.TestSqlParser#testDecimal, com.facebook.presto.sql.parser.TestSqlParser#testGenericLiteral, com.facebook.presto.sql.parser.TestSqlParser#testArraySubscript, com.facebook.presto.sql.parser.TestSqlParser#testLiterals, com.facebook.presto.sql.parser.TestSqlParser#testBinaryLiteral, com.facebook.presto.sql.parser.TestSqlParser#testDouble, com.facebook.presto.sql.parser.TestSqlParser#testDeallocatePrepare, com.facebook.presto.sql.parser.TestSqlParser#testLimitAll, com.facebook.presto.sql.parser.TestSqlParser#testNonReserved, com.facebook.presto.sql.parser.TestSqlParser#testTime, com.facebook.presto.sql.parser.TestSqlParser#testSetSession, com.facebook.presto.sql.parser.TestSqlParser#testExists, com.facebook.presto.sql.parser.TestSqlParser#testRevoke, com.facebook.presto.sql.parser.TestSqlParser#testCast, com.facebook.presto.sql.parser.TestSqlParser#testRenameSchema, com.facebook.presto.sql.parser.TestSqlParser#testSubstringRegisteredFunction, com.facebook.presto.sql.parser.TestSqlParser#testPrepare, com.facebook.presto.sql.parser.TestSqlParser#testShowPartitions, com.facebook.presto.sql.parser.TestSqlParser#testDescribeInput, com.facebook.presto.sql.parser.TestSqlParser#testExplainAnalyze, com.facebook.presto.sql.parser.TestSqlParser#testWith, com.facebook.presto.sql.parser.TestSqlParser#testIntersect, com.facebook.presto.sql.parser.TestSqlParser#testCall, com.facebook.presto.sql.parser.TestSqlParser#testStartTransaction, com.facebook.presto.sql.parser.TestSqlParser#testSubstringBuiltInFunction, com.facebook.presto.sql.parser.TestSqlParser#testExecute, com.facebook.presto.sql.parser.TestSqlParser#testUnicodeString, com.facebook.presto.sql.parser.TestSqlParser#testExecuteWithUsing, com.facebook.presto.sql.parser.TestSqlParser#testImplicitJoin, com.facebook.presto.sql.parser.TestSqlParser#testCreateView, com.facebook.presto.sql.parser.TestSqlParser#testPrepareWithParameters, com.facebook.presto.sql.parser.TestSqlParser#testDescribeOutput, com.facebook.presto.sql.parser.TestSqlParser#testJoinPrecedence, com.facebook.presto.sql.parser.TestSqlParser#testShowColumns, com.facebook.presto.sql.parser.TestSqlParser#testDelete, com.facebook.presto.sql.parser.TestSqlParser#testShowSession, com.facebook.presto.sql.parser.TestSqlParser#testCreateTableAsWith, com.facebook.presto.sql.parser.TestSqlParser#testValues, com.facebook.presto.sql.parser.TestSqlParser#testQuantifiedComparison, com.facebook.presto.sql.parser.TestSqlParser#testExplain], erroringMethods=[], failures=[FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}], nbFailures=74, nbErrors=0}
status: NOPATCH
dateEnd: Thu May 04 02:17:07 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/prestodb/presto/228479979/presto-parser/src/main/java], projectClasspath='[Ljava.net.URL;@2ba33e2c', projectTests=[com.facebook.presto.sql.parser.TestSqlParser], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='com.facebook.presto.sql.parser.TestStatementBuilder', failingMethods=[com.facebook.presto.sql.parser.TestStatementBuilder#testStatementBuilder, com.facebook.presto.sql.parser.TestStatementBuilder#testStatementBuilderTpch], erroringMethods=[], failures=[FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}, FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Thu May 04 02:17:18 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/prestodb/presto/228479979/presto-parser/src/main/java], projectClasspath='[Ljava.net.URL;@60b5e80d', projectTests=[com.facebook.presto.sql.parser.TestStatementBuilder], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #2
location: FailureLocation{className='com.facebook.presto.sql.tree.TestLikePredicate', failingMethods=[com.facebook.presto.sql.tree.TestLikePredicate#testGetChildren], erroringMethods=[], failures=[FailureType{failureName='java.lang.UnsupportedOperationException', failureDetail='Node doesn't implement equals, use Node.NODE_VALUE_EQUIVALENCE instead', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Thu May 04 02:17:27 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/prestodb/presto/228479979/presto-parser/src/main/java], projectClasspath='[Ljava.net.URL;@56299b0e', projectTests=[com.facebook.presto.sql.tree.TestLikePredicate], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



