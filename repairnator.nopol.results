nopolinfo #0
location: FailureLocation{className='spoon.MavenLauncherTest', failingMethods=[spoon.MavenLauncherTest#spoonMavenLauncherTest, spoon.MavenLauncherTest#mavenLauncherTestMultiModulesAndVariables], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='Content of classpath: ', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='expected:<7> but was:<0>', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Mon Apr 02 22:58:37 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@2ca6546f', projectTests=[spoon.MavenLauncherTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='spoon.test.comparison.EqualTest', failingMethods=[spoon.test.comparison.EqualTest#testEqualsEmptyException], erroringMethods=[spoon.test.comparison.EqualTest#testEqualsMultitype, spoon.test.comparison.EqualTest#testEqualsActualTypeRef, spoon.test.comparison.EqualTest#testEqualsComment], failures=[FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        try{}catch(RuntimeException | AssertionError e){};
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        java.util.List<String> l ;
    }
}', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Unable create model', isError=false}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        int i=0;
    }
}', isError=true}], nbFailures=1, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 22:58:53 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@2ee949d4', projectTests=[spoon.test.comparison.EqualTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #2
location: FailureLocation{className='spoon.test.comparison.EqualTest', failingMethods=[spoon.test.comparison.EqualTest#testEqualsEmptyException], erroringMethods=[spoon.test.comparison.EqualTest#testEqualsMultitype, spoon.test.comparison.EqualTest#testEqualsActualTypeRef, spoon.test.comparison.EqualTest#testEqualsComment], failures=[FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        try{}catch(RuntimeException | AssertionError e){};
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        java.util.List<String> l ;
    }
}', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Unable create model', isError=false}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        int i=0;
    }
}', isError=true}], nbFailures=1, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 22:59:08 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@638c90f', projectTests=[spoon.test.comparison.EqualTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #3
location: FailureLocation{className='spoon.test.generics.GenericsTest', failingMethods=[], erroringMethods=[spoon.test.generics.GenericsTest#testWildCardonShadowClass, spoon.test.generics.GenericsTest#testModelBuildingGenericConstructor, spoon.test.generics.GenericsTest#testIsSameSignatureWithReferencedGenerics, spoon.test.generics.GenericsTest#testInvocationGenerics, spoon.test.generics.GenericsTest#testClassTypingContextMethodSignature, spoon.test.generics.GenericsTest#testTypeParameterReferenceAsActualTypeArgument, spoon.test.generics.GenericsTest#testGenericsInConstructorCall, spoon.test.generics.GenericsTest#testClassTypingContext, spoon.test.generics.GenericsTest#testClassContextOnInnerClass, spoon.test.generics.GenericsTest#testGenericTypeReference, spoon.test.generics.GenericsTest#testAccessToGenerics, spoon.test.generics.GenericsTest#testConstructorCallGenerics, spoon.test.generics.GenericsTest#testGenericWithExtendsInDeclaration, spoon.test.generics.GenericsTest#testWildcard, spoon.test.generics.GenericsTest#testCannotAdaptTypeOfNonTypeScope, spoon.test.generics.GenericsTest#testTypeParameterDeclarer, spoon.test.generics.GenericsTest#testCtTypeReference_getSuperclass, spoon.test.generics.GenericsTest#testDiamondComplexGenericsRxJava, spoon.test.generics.GenericsTest#testIsSameSignatureWithMethodGenerics, spoon.test.generics.GenericsTest#testModelBuildingTree, spoon.test.generics.GenericsTest#testBugComparableComparator, spoon.test.generics.GenericsTest#testisGeneric, spoon.test.generics.GenericsTest#testName, spoon.test.generics.GenericsTest#testGenericsInQualifiedNameInConstructorCall, spoon.test.generics.GenericsTest#testGenericMethodCallWithExtend, spoon.test.generics.GenericsTest#testMethodTypingContext, spoon.test.generics.GenericsTest#testIsGenericTypeEqual, spoon.test.generics.GenericsTest#testGenericInField, spoon.test.generics.GenericsTest#testIsGenericsMethod, spoon.test.generics.GenericsTest#testMethodsWithGenericsWhoExtendsObject, spoon.test.generics.GenericsTest#testModelBuildingSimilarSignatureMethods, spoon.test.generics.GenericsTest#testRecursiveTypeAdapting, spoon.test.generics.GenericsTest#testDiamond1, spoon.test.generics.GenericsTest#testDeclarationOfTypeParameterReference, spoon.test.generics.GenericsTest#testGetDeclarationOfTypeParameterReference, spoon.test.generics.GenericsTest#testTypeParameterReference, spoon.test.generics.GenericsTest#testDiamond2, spoon.test.generics.GenericsTest#testTypeAdapted, spoon.test.generics.GenericsTest#testMethodTypingContextAdaptMethod, spoon.test.generics.GenericsTest#testIsSameSignatureWithGenerics, spoon.test.generics.GenericsTest#testGenericsOnLocalType, spoon.test.generics.GenericsTest#testBugCommonCollection, spoon.test.generics.GenericsTest#testNewClassGenerics, spoon.test.generics.GenericsTest#testInstanceOfMapEntryGeneric], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class Diamond {
         java.util.List<String> f = new java.util.ArrayList<>();
        };
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=44}
status: NOPATCH
dateEnd: Mon Apr 02 22:59:26 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@235e45a3', projectTests=[spoon.test.generics.GenericsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #4
location: FailureLocation{className='spoon.test.filters.FilterTest', failingMethods=[], erroringMethods=[spoon.test.filters.FilterTest#testOverriddenMethodFromInterface, spoon.test.filters.FilterTest#testInvalidQueryStep, spoon.test.filters.FilterTest#testElementMapFunctionNull, spoon.test.filters.FilterTest#testClassCastExceptionOnForEach, spoon.test.filters.FilterTest#testQueryWithOptionalNumberOfInputs, spoon.test.filters.FilterTest#testSubInheritanceHierarchyResolver, spoon.test.filters.FilterTest#testQueryStepScannWithConsumer, spoon.test.filters.FilterTest#testReturnOrThrowFilter, spoon.test.filters.FilterTest#testEarlyTerminatingQuery, spoon.test.filters.FilterTest#filteredElementsAreOfTheCorrectType, spoon.test.filters.FilterTest#testgetTopDefinitions, spoon.test.filters.FilterTest#unionOfTwoFilters, spoon.test.filters.FilterTest#classCastExceptionIsNotThrown, spoon.test.filters.FilterTest#intersectionOfTwoFilters, spoon.test.filters.FilterTest#testQueryBuilderWithFilterChain, spoon.test.filters.FilterTest#testLineFilter, spoon.test.filters.FilterTest#testReflectionBasedTypeFilter, spoon.test.filters.FilterTest#testBoundQuery, spoon.test.filters.FilterTest#testOverriddenMethodsFromSubClassOfAbstractClass, spoon.test.filters.FilterTest#testElementMapConsumableFunction, spoon.test.filters.FilterTest#testReuseOfBaseQuery, spoon.test.filters.FilterTest#testOverridingMethodFromInterface, spoon.test.filters.FilterTest#testOverridingMethodFromAbstractClass, spoon.test.filters.FilterTest#testQueryInQuery, spoon.test.filters.FilterTest#testFilterQueryStep, spoon.test.filters.FilterTest#testElementMapFunction, spoon.test.filters.FilterTest#testNameFilterWithGenericType, spoon.test.filters.FilterTest#testEmptyQuery, spoon.test.filters.FilterTest#testOverriddenMethodFromSubClassOfInterface, spoon.test.filters.FilterTest#testReuseOfQuery, spoon.test.filters.FilterTest#testElementMapFunctionOtherContracts, spoon.test.filters.FilterTest#testFilterChildrenWithoutFilterQueryStep, spoon.test.filters.FilterTest#testFilters, spoon.test.filters.FilterTest#testAnnotationFilter, spoon.test.filters.FilterTest#testOverridingMethodFromSubClassOfAbstractClass, spoon.test.filters.FilterTest#testCtScannerListener, spoon.test.filters.FilterTest#testParentFunction, spoon.test.filters.FilterTest#testFieldAccessFilter, spoon.test.filters.FilterTest#testInvalidQueryStepFailurePolicyIgnore, spoon.test.filters.FilterTest#testOverriddenMethodFromAbstractClass, spoon.test.filters.FilterTest#testFunctionQueryStep, spoon.test.filters.FilterTest#testOverridingMethodFromSubClassOfInterface, spoon.test.filters.FilterTest#testInvocationFilterWithExecutableInLibrary], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=43}
status: NOPATCH
dateEnd: Mon Apr 02 22:59:40 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@36b75ac7', projectTests=[spoon.test.filters.FilterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #5
location: FailureLocation{className='spoon.test.annotation.AnnotationTest', failingMethods=[], erroringMethods=[spoon.test.annotation.AnnotationTest#testPersistenceProperty, spoon.test.annotation.AnnotationTest#testAnnotationInterfacePreserveMethods, spoon.test.annotation.AnnotationTest#testOutputGeneratedByTypeAnnotation, spoon.test.annotation.AnnotationTest#testCreateRepeatableAnnotation, spoon.test.annotation.AnnotationTest#testAnnotatedElementTypes, spoon.test.annotation.AnnotationTest#testRepeatableAnnotationAreManagedWithArrays, spoon.test.annotation.AnnotationTest#testInnerAnnotationsWithArray, spoon.test.annotation.AnnotationTest#testRepeatableAnnotationAreManaged, spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationInCast, spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationInReturnTypeInMethod, spoon.test.annotation.AnnotationTest#testAnnotationIntrospection, spoon.test.annotation.AnnotationTest#testGetAnnotationFromParameter, spoon.test.annotation.AnnotationTest#annotationAddValue, spoon.test.annotation.AnnotationTest#testModelBuildingAnnotationBound, spoon.test.annotation.AnnotationTest#testAbstractAllAnnotationProcessorWithGlobalAnnotation, spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationInNewInstance, spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationOnLocalVariableInMethod, spoon.test.annotation.AnnotationTest#testCreateRepeatableAnnotationWithArrays, spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationBeforeExceptionInSignatureOfMethod, spoon.test.annotation.AnnotationTest#testUsageOfParametersInTypeAnnotation, spoon.test.annotation.AnnotationTest#testWritingAnnotParamArray, spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationInExtendsImplementsOfAClass, spoon.test.annotation.AnnotationTest#testAnnotationWithDefaultArrayValue, spoon.test.annotation.AnnotationTest#testAbstractAllAnnotationProcessor, spoon.test.annotation.AnnotationTest#testSpoonSpoonResult, spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationWithGenericTypesInClassDeclaration, spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationOnParameterInMethod, spoon.test.annotation.AnnotationTest#testFieldAndMethodInAnnotation, spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationWithGenericTypesInStatements, spoon.test.annotation.AnnotationTest#testAnnotationNotRepeatableNotArrayAnnotation, spoon.test.annotation.AnnotationTest#annotationOverrideFQNIsOK, spoon.test.annotation.AnnotationTest#testDefaultValueInAnnotationsForAnnotationFields, spoon.test.annotation.AnnotationTest#testGetAnnotationOuter], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=33}
status: NOPATCH
dateEnd: Mon Apr 02 22:59:57 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@5cbcd756', projectTests=[spoon.test.annotation.AnnotationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #6
location: FailureLocation{className='spoon.test.imports.ImportTest', failingMethods=[], erroringMethods=[spoon.test.imports.ImportTest#testCanAccess, spoon.test.imports.ImportTest#testDeepNestedStaticPathWithTypedParameter, spoon.test.imports.ImportTest#testSpoonWithImports, spoon.test.imports.ImportTest#testImportOfInvocationOfPrivateClass, spoon.test.imports.ImportTest#testStaticImportForInvocationInNoClasspath, spoon.test.imports.ImportTest#testmportInCu, spoon.test.imports.ImportTest#testJavaLangIsConsideredAsImported, spoon.test.imports.ImportTest#testNestedAccessPathWithTypedParameterWithImports, spoon.test.imports.ImportTest#testSortImportPutStaticImportAfterTypeImport, spoon.test.imports.ImportTest#testImportStaticAndFieldAccessWithImport, spoon.test.imports.ImportTest#testStaticMethodWithDifferentClassSameNameCollision, spoon.test.imports.ImportTest#testAccessToNestedClass, spoon.test.imports.ImportTest#testWithInnerEnumDoesNotImportStaticInnerMethods, spoon.test.imports.ImportTest#testImportOfAnInnerClassInASuperClassAvailableInLibrary, spoon.test.imports.ImportTest#testImportOfAnInnerClassInASuperClassPackageFullQualified, spoon.test.imports.ImportTest#testNestedStaticPathWithTypedParameter, spoon.test.imports.ImportTest#testDeepNestedStaticPathWithTypedParameterWithImports, spoon.test.imports.ImportTest#testImportStaticAndFieldAccess, spoon.test.imports.ImportTest#testJavaLangIsConsideredAsImportedButNotForSubPackages, spoon.test.imports.ImportTest#testNestedAccessPathWithTypedParameter, spoon.test.imports.ImportTest#testSortingOfImports, spoon.test.imports.ImportTest#testNestedStaticPathWithTypedParameterWithImports, spoon.test.imports.ImportTest#testAccessType, spoon.test.imports.ImportTest#testImportStarredPackageWithNonVisibleClass, spoon.test.imports.ImportTest#testImportOfAnInnerClassInASuperClassPackageAutoImport, spoon.test.imports.ImportTest#testStaticMethodWithDifferentClassSameNameJava3NoCollision, spoon.test.imports.ImportTest#testNotImportExecutableType, spoon.test.imports.ImportTest#testAnotherMissingImport, spoon.test.imports.ImportTest#testImportOfAnInnerClassInAClassPackage, spoon.test.imports.ImportTest#testStaticMethodWithDifferentClassSameNameJava7NoCollision, spoon.test.imports.ImportTest#testNewInnerClassDefinesInItsClassAndSuperClass], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=31}
status: NOPATCH
dateEnd: Mon Apr 02 23:00:12 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@57b85745', projectTests=[spoon.test.imports.ImportTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #7
location: FailureLocation{className='spoon.test.template.TemplateTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateTest#testFieldAccessNameSubstitutionInInnerClass, spoon.test.template.TemplateTest#substituteTypeAccessReference, spoon.test.template.TemplateTest#substituteSubString, spoon.test.template.TemplateTest#testTemplateArrayAccess, spoon.test.template.TemplateTest#testTemplateInterfaces, spoon.test.template.TemplateTest#createTypeFromTemplate, spoon.test.template.TemplateTest#testExtensionBlock, spoon.test.template.TemplateTest#testSubstituteInnerClass, spoon.test.template.TemplateTest#testObjectIsNotParamTemplate, spoon.test.template.TemplateTest#testTemplateWithWrongUsedStringParam, spoon.test.template.TemplateTest#testCheckBoundTemplate, spoon.test.template.TemplateTest#testExtensionDecoupledSubstitutionVisitor, spoon.test.template.TemplateTest#testTemplateMatcherWithWholePackage, spoon.test.template.TemplateTest#testTemplateMatcher, spoon.test.template.TemplateTest#testTemplateC1, spoon.test.template.TemplateTest#testStatementTemplateRootSubstitution, spoon.test.template.TemplateTest#substituteStringLiteral, spoon.test.template.TemplateTest#testTemplateInvocationSubstitution, spoon.test.template.TemplateTest#testTemplateInheritance, spoon.test.template.TemplateTest#testSubstitutionInsertAllNtoN, spoon.test.template.TemplateTest#testFieldAccessNameSubstitution, spoon.test.template.TemplateTest#testSimpleTemplate, spoon.test.template.TemplateTest#testAnotherFieldAccessNameSubstitution], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=23}
status: NOPATCH
dateEnd: Mon Apr 02 23:00:26 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@5c28d9b', projectTests=[spoon.test.template.TemplateTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #8
location: FailureLocation{className='spoon.test.lambda.LambdaTest', failingMethods=[], erroringMethods=[spoon.test.lambda.LambdaTest#testLambdaMethod, spoon.test.lambda.LambdaTest#testFieldAccessInLambdaNoClassPathExternal1Example, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithParameterTyped, spoon.test.lambda.LambdaTest#testLambdaExpressionWithStatementBodyAndWithoutParameters, spoon.test.lambda.LambdaTest#testEqualsLambdaParameterRef, spoon.test.lambda.LambdaTest#testGetOverriddenMethodWithFunction, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithMultiParametersTyped, spoon.test.lambda.LambdaTest#testLambdaFilter, spoon.test.lambda.LambdaTest#testTypeParameterWithImplicitArrayType, spoon.test.lambda.LambdaTest#testTypeParameterOfLambdaWithoutType2, spoon.test.lambda.LambdaTest#testGetDeclarationOnTypeParameterFromLambda, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithoutTypeForParameter, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithoutParameter, spoon.test.lambda.LambdaTest#testFieldAccessInLambdaNoClassPath, spoon.test.lambda.LambdaTest#testLambdaExpressionInIfConditional, spoon.test.lambda.LambdaTest#testBuildExecutableReferenceFromLambda, spoon.test.lambda.LambdaTest#testCompileLambdaGeneratedBySpoon, spoon.test.lambda.LambdaTest#testTypeAccessInLambdaNoClassPath, spoon.test.lambda.LambdaTest#testLambdaWithPrimitiveParameter, spoon.test.lambda.LambdaTest#testTypeParameterOfLambdaWithoutType, spoon.test.lambda.LambdaTest#testLambdaExpressionWithStatementBodyAndWithParameter, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithMultiParameters], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=22}
status: NOPATCH
dateEnd: Mon Apr 02 23:00:40 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@cb82acc', projectTests=[spoon.test.lambda.LambdaTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #9
location: FailureLocation{className='spoon.test.replace.ReplaceTest', failingMethods=[], erroringMethods=[spoon.test.replace.ReplaceTest#testReplaceExpression, spoon.test.replace.ReplaceTest#testReplaceTwoMethods, spoon.test.replace.ReplaceTest#testReplaceStmtByList, spoon.test.replace.ReplaceTest#testReplaceAPackageReferenceByAnotherOne, spoon.test.replace.ReplaceTest#testReplaceMethod, spoon.test.replace.ReplaceTest#testReplaceStmtByListStatementsAndNull, spoon.test.replace.ReplaceTest#testReplaceIntegerReference, spoon.test.replace.ReplaceTest#testReplaceReplace, spoon.test.replace.ReplaceTest#testReplaceExecutableReferenceByAnotherOne, spoon.test.replace.ReplaceTest#testReplaceStmtByListStatements, spoon.test.replace.ReplaceTest#testReplaceAllTypeRefenceWithGenerics, spoon.test.replace.ReplaceTest#testReplaceSet, spoon.test.replace.ReplaceTest#testReplaceField, spoon.test.replace.ReplaceTest#testReplaceAParameterReferenceToFieldReference, spoon.test.replace.ReplaceTest#testReplaceStatement, spoon.test.replace.ReplaceTest#testReplaceBlockTry, spoon.test.replace.ReplaceTest#testReplaceBlock], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=17}
status: NOPATCH
dateEnd: Mon Apr 02 23:00:55 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@188e54de', projectTests=[spoon.test.replace.ReplaceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #10
location: FailureLocation{className='spoon.test.reference.TypeReferenceTest', failingMethods=[], erroringMethods=[spoon.test.reference.TypeReferenceTest#testTypeDeclarationWildcard, spoon.test.reference.TypeReferenceTest#testConstructorCallInNoClasspath, spoon.test.reference.TypeReferenceTest#testSubTypeAnonymous, spoon.test.reference.TypeReferenceTest#testPackageInNoClasspath, spoon.test.reference.TypeReferenceTest#doNotCloseLoader, spoon.test.reference.TypeReferenceTest#testGetTypeDeclaration, spoon.test.reference.TypeReferenceTest#testTypeReferenceSpecifiedInClassDeclarationInNoClasspath, spoon.test.reference.TypeReferenceTest#testIgnoreEnclosingClassInActualTypes, spoon.test.reference.TypeReferenceTest#testAnonymousClassesHaveAnEmptyStringForItsNameInNoClasspath, spoon.test.reference.TypeReferenceTest#testRecursiveTypeReferenceInGenericType, spoon.test.reference.TypeReferenceTest#testToStringEqualityBetweenTwoGenericTypeDifferent, spoon.test.reference.TypeReferenceTest#testEqualityTypeReference, spoon.test.reference.TypeReferenceTest#testInvocationWithFieldAccessInNoClasspath, spoon.test.reference.TypeReferenceTest#testGetAllExecutablesForInterfaces, spoon.test.reference.TypeReferenceTest#testUnknownSuperClassWithSameNameInNoClasspath, spoon.test.reference.TypeReferenceTest#testArgumentOfAInvocationIsNotATypeAccess, spoon.test.reference.TypeReferenceTest#testAnnotationOnMethodWithPrimitiveReturnTypeInNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        java.util.List<?> l = null;
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=17}
status: NOPATCH
dateEnd: Mon Apr 02 23:01:10 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@4f28651', projectTests=[spoon.test.reference.TypeReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #11
location: FailureLocation{className='spoon.test.targeted.TargetedExpressionTest', failingMethods=[], erroringMethods=[spoon.test.targeted.TargetedExpressionTest#testStaticTargetsOfInv, spoon.test.targeted.TargetedExpressionTest#testStaticTargetsOfFieldAccessNoClasspath, spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccessInInnerClass, spoon.test.targeted.TargetedExpressionTest#testClassDeclaredInALambda, spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccess, spoon.test.targeted.TargetedExpressionTest#testNotTargetedExpression, spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldInAnonymousClass, spoon.test.targeted.TargetedExpressionTest#testCastWriteWithGenerics, spoon.test.targeted.TargetedExpressionTest#testTargetOfFieldAccess, spoon.test.targeted.TargetedExpressionTest#testInitializeFieldAccessInNoclasspathMode, spoon.test.targeted.TargetedExpressionTest#testCtThisAccess, spoon.test.targeted.TargetedExpressionTest#testTargetsOfInv, spoon.test.targeted.TargetedExpressionTest#testStaticTargetsOfInvNoClasspath, spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInInnerClass, spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInAnonymousClass, spoon.test.targeted.TargetedExpressionTest#testTargetsOfStaticFieldAccess], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=16}
status: NOPATCH
dateEnd: Mon Apr 02 23:01:23 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@594f421b', projectTests=[spoon.test.targeted.TargetedExpressionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #12
location: FailureLocation{className='spoon.test.fieldaccesses.FieldAccessTest', failingMethods=[], erroringMethods=[spoon.test.fieldaccesses.FieldAccessTest#testTargetedAccessPosition, spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessInLambda, spoon.test.fieldaccesses.FieldAccessTest#testBCUBug20140402, spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessDeclaredInADefaultClass, spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessInAnonymousClass, spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessWithoutAnyImport, spoon.test.fieldaccesses.FieldAccessTest#testGetReference, spoon.test.fieldaccesses.FieldAccessTest#testModelBuildingFieldAccesses, spoon.test.fieldaccesses.FieldAccessTest#testBUG20160112, spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessOnUnknownType, spoon.test.fieldaccesses.FieldAccessTest#testTypeDeclaredInAnonymousClass, spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessNoClasspath, spoon.test.fieldaccesses.FieldAccessTest#testFieldWriteWithPlusEqualsOperation, spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessAutoExplicit, spoon.test.fieldaccesses.FieldAccessTest#testIncrementationOnAVarIsAUnaryOperator, spoon.test.fieldaccesses.FieldAccessTest#testTypeOfFieldAccess], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=16}
status: NOPATCH
dateEnd: Mon Apr 02 23:01:38 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@60e6f456', projectTests=[spoon.test.fieldaccesses.FieldAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #13
location: FailureLocation{className='spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest', failingMethods=[], erroringMethods=[spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testAmbiguousImplicitFieldReference, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testAmbiguousImplicitFieldReferenceAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousStaticField, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testImplicitStaticClassAccess, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testChildOfGenericsWithAmbiguousStaticFieldAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testImplicitStaticFieldReference, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testImplicitStaticFieldReferenceAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testAnnotationInChildWithConstantsAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousMemberField, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testAnnotationInChildWithConstants, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousStaticFieldAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testImplicitFieldReferenceAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testImplicitFieldReference, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousMemberFieldAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testImplicitStaticClassAccessAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testChildOfGenericsWithAmbiguousStaticField], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=16}
status: NOPATCH
dateEnd: Mon Apr 02 23:01:58 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@7a1b183c', projectTests=[spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #14
location: FailureLocation{className='spoon.test.comment.CommentTest', failingMethods=[], erroringMethods=[spoon.test.comment.CommentTest#testCommentsInComment1And2, spoon.test.comment.CommentTest#testCombinedPackageInfoComment, spoon.test.comment.CommentTest#testJavaDocCommentOnMac, spoon.test.comment.CommentTest#testCodeFactory, spoon.test.comment.CommentTest#testWildComments, spoon.test.comment.CommentTest#testJavaDocEmptyCommentAndTag, spoon.test.comment.CommentTest#testDocumentationContract, spoon.test.comment.CommentTest#testInsertNewComment, spoon.test.comment.CommentTest#testJavadocShortAndLongComment, spoon.test.comment.CommentTest#testSnippedWithComments, spoon.test.comment.CommentTest#testBlockComment, spoon.test.comment.CommentTest#testInLineComment, spoon.test.comment.CommentTest#testJavaDocCommentOnUnix, spoon.test.comment.CommentTest#testCoreFactory, spoon.test.comment.CommentTest#testRemoveComment], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=15}
status: NOPATCH
dateEnd: Mon Apr 02 23:02:21 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@4243ad42', projectTests=[spoon.test.comment.CommentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #15
location: FailureLocation{className='spoon.test.delete.DeleteTest', failingMethods=[], erroringMethods=[spoon.test.delete.DeleteTest#testDeleteMethod, spoon.test.delete.DeleteTest#testDeleteConditionInACondition, spoon.test.delete.DeleteTest#testDeleteParameterOfMethod, spoon.test.delete.DeleteTest#testDeleteAStatementInConstructor, spoon.test.delete.DeleteTest#testDeleteChainOfAssignment, spoon.test.delete.DeleteTest#testDeleteAStatementInMethod, spoon.test.delete.DeleteTest#testDeleteAStatementInAnonymousExecutable, spoon.test.delete.DeleteTest#testDeleteAnnotationOnAClass, spoon.test.delete.DeleteTest#testDeleteACaseOfASwitch, spoon.test.delete.DeleteTest#testDeleteStatementInCase, spoon.test.delete.DeleteTest#testDeleteAStatementInStaticAnonymousExecutable, spoon.test.delete.DeleteTest#testDeleteAClassTopLevel, spoon.test.delete.DeleteTest#testDeleteBodyOfAMethod, spoon.test.delete.DeleteTest#testDeleteReturn], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=14}
status: NOPATCH
dateEnd: Mon Apr 02 23:02:55 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@2d617b92', projectTests=[spoon.test.delete.DeleteTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #16
location: FailureLocation{className='spoon.test.methodreference.MethodReferenceTest', failingMethods=[], erroringMethods=[spoon.test.methodreference.MethodReferenceTest#testReferenceToAClassParametrizedConstructor, spoon.test.methodreference.MethodReferenceTest#testNoClasspathSuperExecutable, spoon.test.methodreference.MethodReferenceTest#testNoClasspathExecutableReferenceExpression, spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfMultiParticularObject, spoon.test.methodreference.MethodReferenceTest#testGetGenericMethodFromReference, spoon.test.methodreference.MethodReferenceTest#testReferenceBuilderWithComplexGenerics, spoon.test.methodreference.MethodReferenceTest#testCompileMethodReferenceGeneratedBySpoon, spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfAParticularObject, spoon.test.methodreference.MethodReferenceTest#testReferenceToAJavaUtilClassConstructor, spoon.test.methodreference.MethodReferenceTest#testReferenceToAStaticMethod, spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfAnArbitraryObjectOfAParticularType, spoon.test.methodreference.MethodReferenceTest#testReferenceToAConstructor, spoon.test.methodreference.MethodReferenceTest#testGetGenericExecutableReference], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=13}
status: NOPATCH
dateEnd: Mon Apr 02 23:03:16 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@658ae730', projectTests=[spoon.test.methodreference.MethodReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #17
location: FailureLocation{className='spoon.test.reference.ExecutableReferenceGenericTest', failingMethods=[], erroringMethods=[spoon.test.reference.ExecutableReferenceGenericTest#testMultiReferenceWithGenericMethodOutOfTheClass, spoon.test.reference.ExecutableReferenceGenericTest#testMethodGenericWithoutReferences, spoon.test.reference.ExecutableReferenceGenericTest#testOneReferenceBetweenMethodsInSameClass, spoon.test.reference.ExecutableReferenceGenericTest#testOneReferenceWithGenericMethodOutOfTheClass, spoon.test.reference.ExecutableReferenceGenericTest#testMultiReferenceBetweenMethodsWithGenericInSameClass, spoon.test.reference.ExecutableReferenceGenericTest#testOneReferenceWithMethodNotGenericOutOfTheClass, spoon.test.reference.ExecutableReferenceGenericTest#testReferencesBetweenConstructors, spoon.test.reference.ExecutableReferenceGenericTest#testReferencesBetweenConstructorsInOtherClass, spoon.test.reference.ExecutableReferenceGenericTest#testExecutableReferences, spoon.test.reference.ExecutableReferenceGenericTest#testMethodWithoutReferences, spoon.test.reference.ExecutableReferenceGenericTest#testReferencesBetweenMethods, spoon.test.reference.ExecutableReferenceGenericTest#testMultiReferencesBetweenMethodsWithoutGenericInSameClass], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=12}
status: NOPATCH
dateEnd: Mon Apr 02 23:03:31 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@7852420', projectTests=[spoon.test.reference.ExecutableReferenceGenericTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #18
location: FailureLocation{className='spoon.test.trycatch.TryCatchTest', failingMethods=[], erroringMethods=[spoon.test.trycatch.TryCatchTest#testExceptionJava7, spoon.test.trycatch.TryCatchTest#testTryCatchVariableGetType, spoon.test.trycatch.TryCatchTest#testCatchWithExplicitFinalVariable, spoon.test.trycatch.TryCatchTest#testCatchWithUnknownExceptions, spoon.test.trycatch.TryCatchTest#testCatchOrder, spoon.test.trycatch.TryCatchTest#testTryWithResources, spoon.test.trycatch.TryCatchTest#testRethrowingExceptionsJava7, spoon.test.trycatch.TryCatchTest#testTryWithOneResource, spoon.test.trycatch.TryCatchTest#testMultiTryCatchWithCustomExceptions, spoon.test.trycatch.TryCatchTest#testModelBuildingInitializer, spoon.test.trycatch.TryCatchTest#testCompileMultiTryCatchWithCustomExceptions, spoon.test.trycatch.TryCatchTest#testFullyQualifiedException], failures=[FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { try{}catch(java.lang.RuntimeException e){}}};;
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { try{}catch(RuntimeException | Error e){System.exit(0);}}};;
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { try{}catch(RuntimeException e){java.lang.System.exit(0);}      catch(Exception e){}}};;
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { try{}catch(RuntimeException e){System.exit(0);}}};;
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=12}
status: NOPATCH
dateEnd: Mon Apr 02 23:03:45 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@aa80465', projectTests=[spoon.test.trycatch.TryCatchTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #19
location: FailureLocation{className='spoon.test.position.PositionTest', failingMethods=[], erroringMethods=[spoon.test.position.PositionTest#testPositionParameterTypeReference, spoon.test.position.PositionTest#testPositionGeneric, spoon.test.position.PositionTest#testPositionInterface, spoon.test.position.PositionTest#testPositionStatement, spoon.test.position.PositionTest#testPositionClass, spoon.test.position.PositionTest#testPositionCastExpressionOfVariableRead, spoon.test.position.PositionTest#testPositionMethod, spoon.test.position.PositionTest#testPositionClassWithComments, spoon.test.position.PositionTest#testPositionAbstractMethod, spoon.test.position.PositionTest#testPositionField, spoon.test.position.PositionTest#getPositionOfImplicitBlock, spoon.test.position.PositionTest#testPositionAnnotation], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=12}
status: NOPATCH
dateEnd: Mon Apr 02 23:03:59 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@7f6edbd7', projectTests=[spoon.test.position.PositionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #20
location: FailureLocation{className='spoon.test.api.APITest', failingMethods=[], erroringMethods=[spoon.test.api.APITest#testPrintNotAllSourcesWithFilter, spoon.test.api.APITest#testOverrideOutputWriter, spoon.test.api.APITest#testSetterInNodes, spoon.test.api.APITest#testOneLinerIntro, spoon.test.api.APITest#testDuplicateFilePlusFolder, spoon.test.api.APITest#testPrintNotAllSourcesInCommandLine, spoon.test.api.APITest#testPrintNotAllSourcesWithNames, spoon.test.api.APITest#testDuplicateFolder, spoon.test.api.APITest#testDuplicateEntry, spoon.test.api.APITest#testBasicAPIUsage, spoon.test.api.APITest#testOutputDestinationHandlerWithCUFactory], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=11}
status: NOPATCH
dateEnd: Mon Apr 02 23:04:13 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@5447604a', projectTests=[spoon.test.api.APITest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #21
location: FailureLocation{className='spoon.test.reference.VariableAccessTest', failingMethods=[], erroringMethods=[spoon.test.reference.VariableAccessTest#testReferences, spoon.test.reference.VariableAccessTest#testParameterReferenceInConstructorNoClasspath, spoon.test.reference.VariableAccessTest#testReferencesInInitExpression, spoon.test.reference.VariableAccessTest#testSuperAccess, spoon.test.reference.VariableAccessTest#testDeclaringTypeOfALambdaReferencedByParameterReference, spoon.test.reference.VariableAccessTest#testVariableAccessDeclarationInAnonymousClass, spoon.test.reference.VariableAccessTest#testReferenceToLocalVariableDeclaredInLoop, spoon.test.reference.VariableAccessTest#testDeclarationArray, spoon.test.reference.VariableAccessTest#testDeclarationOfVariableReference, spoon.test.reference.VariableAccessTest#testMultipleDeclarationsOfLocalVariable, spoon.test.reference.VariableAccessTest#testGetDeclarationAfterClone], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=11}
status: NOPATCH
dateEnd: Mon Apr 02 23:04:27 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@11239d35', projectTests=[spoon.test.reference.VariableAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #22
location: FailureLocation{className='spoon.test.parent.ParentTest', failingMethods=[], erroringMethods=[spoon.test.parent.ParentTest#testParentSet, spoon.test.parent.ParentTest#testParentPackage, spoon.test.parent.ParentTest#testParent, spoon.test.parent.ParentTest#testParentOfGenericInTypeReference, spoon.test.parent.ParentTest#testParentOfCtPackageReference, spoon.test.parent.ParentTest#testParentOfPrimitiveReference, spoon.test.parent.ParentTest#testHasParent, spoon.test.parent.ParentTest#testGetParentWithFilter, spoon.test.parent.ParentTest#testParentOfCtVariableReference, spoon.test.parent.ParentTest#testParentOfCtExecutableReference], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=10}
status: NOPATCH
dateEnd: Mon Apr 02 23:04:40 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@24391f66', projectTests=[spoon.test.parent.ParentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #23
location: FailureLocation{className='spoon.test.type.TypeTest', failingMethods=[], erroringMethods=[spoon.test.type.TypeTest#testIntersectionTypeOnTopLevelType, spoon.test.type.TypeTest#testTypeAccessForTypeAccessInInstanceOf, spoon.test.type.TypeTest#testTypeReferenceInGenericsAndCasts, spoon.test.type.TypeTest#test, spoon.test.type.TypeTest#testTypeAccessOnPrimitive, spoon.test.type.TypeTest#testTypeAccessForDotClass, spoon.test.type.TypeTest#testPolyTypBindingInTernaryExpression, spoon.test.type.TypeTest#testTypeAccessOfArrayObjectInFullyQualifiedName, spoon.test.type.TypeTest#testIntersectionTypeReferenceInGenericsAndCasts, spoon.test.type.TypeTest#testTypeMemberOrder], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { Class klass=null;  boolean x= (klass == short.class);}};;
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=10}
status: NOPATCH
dateEnd: Mon Apr 02 23:04:54 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@2418b074', projectTests=[spoon.test.type.TypeTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #24
location: FailureLocation{className='spoon.test.pkg.PackageTest', failingMethods=[], erroringMethods=[spoon.test.pkg.PackageTest#testAddAnnotationToPackage, spoon.test.pkg.PackageTest#testRenamePackageAndPrettyPrintWithProcessor, spoon.test.pkg.PackageTest#testRenamePackageAndPrettyPrintNoclasspath, spoon.test.pkg.PackageTest#testGetFQNSimple, spoon.test.pkg.PackageTest#testAnnotationOnPackage, spoon.test.pkg.PackageTest#testGetFQNInNoClassPath, spoon.test.pkg.PackageTest#testRenameRootPackageWithNullOrEmpty, spoon.test.pkg.PackageTest#testPackage, spoon.test.pkg.PackageTest#testRenamePackageAndPrettyPrint, spoon.test.pkg.PackageTest#testRenameRootPackage], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='java.lang.NullPointerException', failureDetail='null', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=10}
status: NOPATCH
dateEnd: Mon Apr 02 23:05:08 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@2c30689', projectTests=[spoon.test.pkg.PackageTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #25
location: FailureLocation{className='spoon.test.prettyprinter.DefaultPrettyPrinterTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.DefaultPrettyPrinterTest#printerCanPrintInvocationWithoutException, spoon.test.prettyprinter.DefaultPrettyPrinterTest#importsFromMultipleTypesSupported, spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAClassWithImports, spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAMethodWithGeneric, spoon.test.prettyprinter.DefaultPrettyPrinterTest#superInvocationWithEnclosingInstance, spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAMethodWithImports, spoon.test.prettyprinter.DefaultPrettyPrinterTest#testTernaryParenthesesOnLocalVariable, spoon.test.prettyprinter.DefaultPrettyPrinterTest#testIssue1501, spoon.test.prettyprinter.DefaultPrettyPrinterTest#printClassCreatedWithSpoon, spoon.test.prettyprinter.DefaultPrettyPrinterTest#autoImportUsesFullyQualifiedNameWhenImportedNameAlreadyPresent], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        final int foo = (new Object() instanceof Object ? new Object().equals(null) : new Object().equals(new Object())) ? 0 : new Object().hashCode();;
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=10}
status: NOPATCH
dateEnd: Mon Apr 02 23:05:23 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@715695b9', projectTests=[spoon.test.prettyprinter.DefaultPrettyPrinterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #26
location: FailureLocation{className='spoon.test.path.PathTest', failingMethods=[], erroringMethods=[spoon.test.path.PathTest#testPathFromString, spoon.test.path.PathTest#testGetPathFromNonParent, spoon.test.path.PathTest#testBuilder, spoon.test.path.PathTest#exceptionTest, spoon.test.path.PathTest#testMultiPathFromString, spoon.test.path.PathTest#toStringTest, spoon.test.path.PathTest#testIncorrectPathFromString, spoon.test.path.PathTest#testWildcards, spoon.test.path.PathTest#testBuilderMethod, spoon.test.path.PathTest#testRoles], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=10}
status: NOPATCH
dateEnd: Mon Apr 02 23:05:37 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@5bf8d77f', projectTests=[spoon.test.path.PathTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #27
location: FailureLocation{className='spoon.test.variable.AccessFullyQualifiedFieldTest', failingMethods=[], erroringMethods=[spoon.test.variable.AccessFullyQualifiedFieldTest#testPrivateStaticImportShouldNotBeImportedInSameClass, spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNWhenUsedInLoop, spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNWhenShadowedByField, spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNWhenShadowedByLocalVariable, spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNAndStaticImport, spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNWhenUsedInInnerClassAndShadowedByLocalVariable, spoon.test.variable.AccessFullyQualifiedFieldTest#testCheckAssignmentContracts, spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNWhenUsedInTryCatch, spoon.test.variable.AccessFullyQualifiedFieldTest#testStaticImportWithAutoImport], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=9}
status: NOPATCH
dateEnd: Mon Apr 02 23:05:51 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@4d8506d3', projectTests=[spoon.test.variable.AccessFullyQualifiedFieldTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #28
location: FailureLocation{className='spoon.test.intercession.insertBefore.InsertMethodsTest', failingMethods=[], erroringMethods=[spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBeforeWithBrace, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfterWithoutBrace, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBefore, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfterWithBrace, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfterSwitchCase, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBeforeWithoutBrace, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfter, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBeforeSwitchCase, spoon.test.intercession.insertBefore.InsertMethodsTest#insertBeforeAndUpdateParent], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=9}
status: NOPATCH
dateEnd: Mon Apr 02 23:06:05 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@24c41292', projectTests=[spoon.test.intercession.insertBefore.InsertMethodsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #29
location: FailureLocation{className='spoon.test.eval.EvalTest', failingMethods=[], erroringMethods=[spoon.test.eval.EvalTest#testVisitorPartialEvaluatorScanner, spoon.test.eval.EvalTest#testVisitorPartialEvaluator_binary, spoon.test.eval.EvalTest#testDoNotSimplifyToExpressionWhenStatementIsExpected, spoon.test.eval.EvalTest#testVisitorPartialEvaluator_if, spoon.test.eval.EvalTest#testDoNotSimplify, spoon.test.eval.EvalTest#testStringConcatenation, spoon.test.eval.EvalTest#testTryCatchAndStatement, spoon.test.eval.EvalTest#testArrayLength, spoon.test.eval.EvalTest#testDoNotSimplifyCasts], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static java.lang.Object wrap() throws java.lang.Throwable {
        return 0+1;
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        if (false) {System.out.println("foo");} else {System.out.println("bar");} ;
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=9}
status: NOPATCH
dateEnd: Mon Apr 02 23:06:20 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@57b32a7e', projectTests=[spoon.test.eval.EvalTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #30
location: FailureLocation{className='spoon.test.query_function.VariableReferencesTest', failingMethods=[], erroringMethods=[spoon.test.query_function.VariableReferencesTest#testPotentialVariableAccessFromStaticMethod, spoon.test.query_function.VariableReferencesTest#testVariableReferenceFunction, spoon.test.query_function.VariableReferencesTest#testCheckModelConsistency, spoon.test.query_function.VariableReferencesTest#testLocalVariableReferenceDeclarationFunction, spoon.test.query_function.VariableReferencesTest#testCatchVariableReferenceFunction, spoon.test.query_function.VariableReferencesTest#testParameterReferenceFunction, spoon.test.query_function.VariableReferencesTest#testVariableScopeFunction, spoon.test.query_function.VariableReferencesTest#testLocalVariableReferenceFunction], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Mon Apr 02 23:06:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@2aab2db9', projectTests=[spoon.test.query_function.VariableReferencesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #31
location: FailureLocation{className='spoon.test.ctClass.CtClassTest', failingMethods=[], erroringMethods=[spoon.test.ctClass.CtClassTest#testCloneAnonymousClassInvocationWithAutoimports, spoon.test.ctClass.CtClassTest#testSpoonShouldInferImplicitPackageInNoClasspath, spoon.test.ctClass.CtClassTest#testDefaultConstructorAreOk, spoon.test.ctClass.CtClassTest#testCloneAnonymousClassInvocation, spoon.test.ctClass.CtClassTest#testNoClasspathWithSuperClassOfAClassInAnInterface, spoon.test.ctClass.CtClassTest#testParentOfTheEnclosingClassOfStaticClass, spoon.test.ctClass.CtClassTest#testAllTypeReferencesToALocalTypeShouldNotStartWithNumber, spoon.test.ctClass.CtClassTest#getConstructor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Mon Apr 02 23:06:48 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@50825bf5', projectTests=[spoon.test.ctClass.CtClassTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #32
location: FailureLocation{className='spoon.test.signature.SignatureTest', failingMethods=[], erroringMethods=[spoon.test.signature.SignatureTest#testUnboundFieldSignature, spoon.test.signature.SignatureTest#testArgumentNotNullForExecutableReference, spoon.test.signature.SignatureTest#testNullSignatureInUnboundVariable, spoon.test.signature.SignatureTest#testBugSignature, spoon.test.signature.SignatureTest#testMethodInvocationSignatureWithVariableAccess, spoon.test.signature.SignatureTest#testNullSignature, spoon.test.signature.SignatureTest#testMethodInvocationSignatureStaticFieldsVariables, spoon.test.signature.SignatureTest#testLiteralSignature], failures=[FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        Integer.toBinaryString(Integer.MAX_VALUE);
    }
}', isError=true}, FailureType{failureName='java.lang.IndexOutOfBoundsException', failureDetail='Index: 0, Size: 0', isError=true}, FailureType{failureName='java.lang.IndexOutOfBoundsException', failureDetail='Index: 0, Size: 0', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        System.out.println("hello");
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public Object foo() { return null;}};;
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Mon Apr 02 23:07:02 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@1b61cdef', projectTests=[spoon.test.signature.SignatureTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #33
location: FailureLocation{className='spoon.test.architecture.SpoonArchitectureEnforcerTest', failingMethods=[], erroringMethods=[spoon.test.architecture.SpoonArchitectureEnforcerTest#metamodelPackageRule, spoon.test.architecture.SpoonArchitectureEnforcerTest#testSpecPackage, spoon.test.architecture.SpoonArchitectureEnforcerTest#testSrcMainJava, spoon.test.architecture.SpoonArchitectureEnforcerTest#testStaticClasses, spoon.test.architecture.SpoonArchitectureEnforcerTest#statelessFactory, spoon.test.architecture.SpoonArchitectureEnforcerTest#testInterfacesAreCtScannable, spoon.test.architecture.SpoonArchitectureEnforcerTest#testFactorySubFactory, spoon.test.architecture.SpoonArchitectureEnforcerTest#testGoodTestClassNames], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Mon Apr 02 23:07:16 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@34ddddc5', projectTests=[spoon.test.architecture.SpoonArchitectureEnforcerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #34
location: FailureLocation{className='spoon.test.parent.NullParentTest', failingMethods=[], erroringMethods=[spoon.test.parent.NullParentTest#testAssertNullExpression, spoon.test.parent.NullParentTest#testIfNullBranches, spoon.test.parent.NullParentTest#testFieldNullDefaultExpression, spoon.test.parent.NullParentTest#testReturnNullExpression, spoon.test.parent.NullParentTest#testTargetedAccessNullTarget, spoon.test.parent.NullParentTest#testForLoopNullChildren, spoon.test.parent.NullParentTest#testLocalVariableNullDefaultExpression, spoon.test.parent.NullParentTest#testTargetedExpressionNullTarget], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Mon Apr 02 23:07:30 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@7016c80e', projectTests=[spoon.test.parent.NullParentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #35
location: FailureLocation{className='spoon.test.model.TypeTest', failingMethods=[], erroringMethods=[spoon.test.model.TypeTest#testTypeInfoIsInterface, spoon.test.model.TypeTest#testGetDeclaredOrIheritedFieldByReflection, spoon.test.model.TypeTest#testGetUsedTypes, spoon.test.model.TypeTest#testGetDeclaredOrIheritedFieldOnType, spoon.test.model.TypeTest#testGetDeclaredOrIheritedFieldOnTypeRef, spoon.test.model.TypeTest#testGetAllExecutables, spoon.test.model.TypeTest#superclassTest, spoon.test.model.TypeTest#testGetUsedTypesForTypeInRootPackage], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X { X x; };
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Mon Apr 02 23:07:43 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@47d46bb7', projectTests=[spoon.test.model.TypeTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #36
location: FailureLocation{className='spoon.test.ctType.CtTypeTest', failingMethods=[], erroringMethods=[spoon.test.ctType.CtTypeTest#testIsSubTypeOfonTypeParameters, spoon.test.ctType.CtTypeTest#testHasMethodNotHasMethod, spoon.test.ctType.CtTypeTest#testHasMethodInSuperClass, spoon.test.ctType.CtTypeTest#testIsSubTypeOf, spoon.test.ctType.CtTypeTest#testHasMethodOnNull, spoon.test.ctType.CtTypeTest#testIsSubTypeOfonTypeReferences, spoon.test.ctType.CtTypeTest#testHasMethodInDefaultMethod, spoon.test.ctType.CtTypeTest#testHasMethodInDirectMethod], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X { public void foo() {} };
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X { public void foo() {} };
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X { public void foo() {} };
    }
}', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Mon Apr 02 23:07:56 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@40a1dfc3', projectTests=[spoon.test.ctType.CtTypeTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #37
location: FailureLocation{className='spoon.test.compilation.CompilationTest', failingMethods=[], erroringMethods=[spoon.test.compilation.CompilationTest#testNewInstanceFromExistingClass, spoon.test.compilation.CompilationTest#compileCommandLineTest, spoon.test.compilation.CompilationTest#testFilterResourcesDir, spoon.test.compilation.CompilationTest#compileTest, spoon.test.compilation.CompilationTest#testExoticClassLoader, spoon.test.compilation.CompilationTest#testFilterResourcesFile, spoon.test.compilation.CompilationTest#testNewInstance, spoon.test.compilation.CompilationTest#testPrecompile], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X implements spoon.test.compilation.Ifoo { public int foo() {int i=0; return i;} };
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Mon Apr 02 23:08:11 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@6df3cf9d', projectTests=[spoon.test.compilation.CompilationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #38
location: FailureLocation{className='spoon.test.constructorcallnewclass.NewClassTest', failingMethods=[], erroringMethods=[spoon.test.constructorcallnewclass.NewClassTest#testMoreThan9NewClass, spoon.test.constructorcallnewclass.NewClassTest#testNewClassWithObjectClass, spoon.test.constructorcallnewclass.NewClassTest#testNewClassInterfaceWithParameters, spoon.test.constructorcallnewclass.NewClassTest#testNewClassInEnumeration, spoon.test.constructorcallnewclass.NewClassTest#testCtNewClassInNoClasspath, spoon.test.constructorcallnewclass.NewClassTest#testNewClassWithInterface, spoon.test.constructorcallnewclass.NewClassTest#testNewClassWithInterfaceGeneric], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=7}
status: NOPATCH
dateEnd: Mon Apr 02 23:08:24 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@6b1b5c0b', projectTests=[spoon.test.constructorcallnewclass.NewClassTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #39
location: FailureLocation{className='spoon.test.prettyprinter.PrinterTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.PrinterTest#testPrinterTokenListener, spoon.test.prettyprinter.PrinterTest#testPrintingOfOrphanFieldReference, spoon.test.prettyprinter.PrinterTest#testFQNModeWriteFQNConstructorInCtVisitor, spoon.test.prettyprinter.PrinterTest#testJDTBatchCompilerCanBeBuild, spoon.test.prettyprinter.PrinterTest#testAutoimportModeDontImportUselessStatic, spoon.test.prettyprinter.PrinterTest#testRuleCanBeBuild, spoon.test.prettyprinter.PrinterTest#testPrettyPrinter], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=7}
status: NOPATCH
dateEnd: Mon Apr 02 23:08:38 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@426128c1', projectTests=[spoon.test.prettyprinter.PrinterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #40
location: FailureLocation{className='spoon.test.variable.AccessTest', failingMethods=[], erroringMethods=[spoon.test.variable.AccessTest#testCanVisitArrayAccessAndSubClasses, spoon.test.variable.AccessTest#testAccessToStringOnPostIncrement, spoon.test.variable.AccessTest#testFieldWriteDeclaredInTheSuperclass, spoon.test.variable.AccessTest#testVariableAccessInNoClasspath, spoon.test.variable.AccessTest#testCanVisitVariableAccessAndSubClasses, spoon.test.variable.AccessTest#testStackedAssignments, spoon.test.variable.AccessTest#testRHS], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { Integer i = 1; (i++).toString(); int k = 0; k++;}};;
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=7}
status: NOPATCH
dateEnd: Mon Apr 02 23:08:51 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@22ff2291', projectTests=[spoon.test.variable.AccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #41
location: FailureLocation{className='spoon.test.interfaces.InterfaceTest', failingMethods=[], erroringMethods=[spoon.test.interfaces.InterfaceTest#testRedefinesDefaultMethodInSubInterface, spoon.test.interfaces.InterfaceTest#testExtendsStaticMethodInSubInterface, spoon.test.interfaces.InterfaceTest#testExtendsDefaultMethodInSubInterface, spoon.test.interfaces.InterfaceTest#testRedefinesStaticMethodInSubInterface, spoon.test.interfaces.InterfaceTest#testDefaultMethodInInterface, spoon.test.interfaces.InterfaceTest#testDefaultMethodInConsumer], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Mon Apr 02 23:09:05 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@1f04c94e', projectTests=[spoon.test.interfaces.InterfaceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #42
location: FailureLocation{className='spoon.test.constructor.ConstructorTest', failingMethods=[], erroringMethods=[spoon.test.constructor.ConstructorTest#testTransformationOnConstructorWithInsertBegin, spoon.test.constructor.ConstructorTest#testTypeAnnotationWithConstructorsOnFormalType, spoon.test.constructor.ConstructorTest#testConstructorCallFactory, spoon.test.constructor.ConstructorTest#testTransformationOnConstructorWithInsertBefore, spoon.test.constructor.ConstructorTest#callParamConstructor, spoon.test.constructor.ConstructorTest#testTypeAnnotationOnExceptionDeclaredInConstructors], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Mon Apr 02 23:09:20 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@58cad5a5', projectTests=[spoon.test.constructor.ConstructorTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #43
location: FailureLocation{className='spoon.test.intercession.IntercessionTest', failingMethods=[], erroringMethods=[spoon.test.intercession.IntercessionTest#testSettersAreAllGood, spoon.test.intercession.IntercessionTest#testInsertIfIntercession, spoon.test.intercession.IntercessionTest#testEqualConstructor, spoon.test.intercession.IntercessionTest#testInsertEnd, spoon.test.intercession.IntercessionTest#testInsertAfter, spoon.test.intercession.IntercessionTest#testInsertBegin], failures=[FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public int bar() {if (1 == 0)
            return 1;
        else
            return 0;
        }};;
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0; int y=0; int z=x+y;}};;
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0;}};;
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0; String foo="toto";}};;
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X { public X() {} };;
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Mon Apr 02 23:09:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@bdc1f16', projectTests=[spoon.test.intercession.IntercessionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #44
location: FailureLocation{className='spoon.test.ctBodyHolder.CtBodyHolderTest', failingMethods=[], erroringMethods=[spoon.test.ctBodyHolder.CtBodyHolderTest#testConstructor, spoon.test.ctBodyHolder.CtBodyHolderTest#testMethod, spoon.test.ctBodyHolder.CtBodyHolderTest#testForWithStatement, spoon.test.ctBodyHolder.CtBodyHolderTest#testForWithBlock, spoon.test.ctBodyHolder.CtBodyHolderTest#testTryCatch, spoon.test.ctBodyHolder.CtBodyHolderTest#testWhileWithBlock], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Mon Apr 02 23:09:48 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@1eb48caa', projectTests=[spoon.test.ctBodyHolder.CtBodyHolderTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #45
location: FailureLocation{className='spoon.test.factory.FactoryTest', failingMethods=[], erroringMethods=[spoon.test.factory.FactoryTest#specificationCoreFactoryCreate, spoon.test.factory.FactoryTest#testClassAccessCreatedFromFactories, spoon.test.factory.FactoryTest#testCtModel, spoon.test.factory.FactoryTest#testFactoryOverriding, spoon.test.factory.FactoryTest#testClone, spoon.test.factory.FactoryTest#testIncrementalModel], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Mon Apr 02 23:10:01 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@6376d2b8', projectTests=[spoon.test.factory.FactoryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #46
location: FailureLocation{className='spoon.test.constructorcallnewclass.ConstructorCallTest', failingMethods=[], erroringMethods=[spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallWithGenericArray, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallObjectWithoutParameters, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallStringWithParameters, spoon.test.constructorcallnewclass.ConstructorCallTest#testCoreConstructorCall, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallStringWithoutParameters, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallObjectWithParameters], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Mon Apr 02 23:10:17 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@f9d7e72', projectTests=[spoon.test.constructorcallnewclass.ConstructorCallTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #47
location: FailureLocation{className='spoon.test.secondaryclasses.ClassesTest', failingMethods=[], erroringMethods=[spoon.test.secondaryclasses.ClassesTest#testClassWithInternalPublicClassOrInterf, spoon.test.secondaryclasses.ClassesTest#testAnonymousClass, spoon.test.secondaryclasses.ClassesTest#testInnerClassContruction, spoon.test.secondaryclasses.ClassesTest#testIsAnonymousMethodInCtClass, spoon.test.secondaryclasses.ClassesTest#testTopLevel, spoon.test.secondaryclasses.ClassesTest#testAnonymousClassInStaticField], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Mon Apr 02 23:10:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@6462755b', projectTests=[spoon.test.secondaryclasses.ClassesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #48
location: FailureLocation{className='spoon.test.reference.ExecutableReferenceTest', failingMethods=[], erroringMethods=[spoon.test.reference.ExecutableReferenceTest#testSuperClassInGetAllExecutables, spoon.test.reference.ExecutableReferenceTest#testLambdaNoClasspath, spoon.test.reference.ExecutableReferenceTest#testHashcodeWorksWithReference, spoon.test.reference.ExecutableReferenceTest#testSpecifyGetAllExecutablesMethod, spoon.test.reference.ExecutableReferenceTest#testCreateReferenceForAnonymousExecutable, spoon.test.reference.ExecutableReferenceTest#testInvokeEnumMethod], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Mon Apr 02 23:10:49 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@49bc6d88', projectTests=[spoon.test.reference.ExecutableReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #49
location: FailureLocation{className='spoon.test.casts.CastTest', failingMethods=[], erroringMethods=[spoon.test.casts.CastTest#testCast1, spoon.test.casts.CastTest#testCase4, spoon.test.casts.CastTest#testCast3, spoon.test.casts.CastTest#testCast2, spoon.test.casts.CastTest#testTypeAnnotationOnCast], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { String x=(String) new Object();}};;
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { Class<String> x=(Class<String>) new Object();}};;
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X<A> {void addConsumedAnnotationType(Class<? extends A> annotationType) {}
        public void foo() { Class<?> x = null; addConsumedAnnotationType((Class<A>) x);}};;
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Mon Apr 02 23:11:06 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@d813899', projectTests=[spoon.test.casts.CastTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #50
location: FailureLocation{className='spoon.test.compilationunit.TestCompilationUnit', failingMethods=[], erroringMethods=[spoon.test.compilationunit.TestCompilationUnit#testGetUnitTypeWorksWithDeclaredPackage, spoon.test.compilationunit.TestCompilationUnit#testAddDeclaredTypeInCU, spoon.test.compilationunit.TestCompilationUnit#testNewlyCreatedCUWouldGetAPartialPosition, spoon.test.compilationunit.TestCompilationUnit#testIsoEncodingIsSupported, spoon.test.compilationunit.TestCompilationUnit#testCompilationUnitDeclaredTypes], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='java.lang.NullPointerException', failureDetail='null', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Mon Apr 02 23:11:28 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@409dbb20', projectTests=[spoon.test.compilationunit.TestCompilationUnit], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #51
location: FailureLocation{className='spoon.test.compilationunit.GetBinaryFilesTest', failingMethods=[], erroringMethods=[spoon.test.compilationunit.GetBinaryFilesTest#testSingleBinary, spoon.test.compilationunit.GetBinaryFilesTest#testExistingButNotBuiltBinary, spoon.test.compilationunit.GetBinaryFilesTest#testMultiClassInSingleFile, spoon.test.compilationunit.GetBinaryFilesTest#testAnonymousClasses, spoon.test.compilationunit.GetBinaryFilesTest#testNestedTypes], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Mon Apr 02 23:11:59 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@2c9e3565', projectTests=[spoon.test.compilationunit.GetBinaryFilesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #52
location: FailureLocation{className='spoon.reflect.ast.CloneTest', failingMethods=[], erroringMethods=[spoon.reflect.ast.CloneTest#testCloneListener, spoon.reflect.ast.CloneTest#testCopyMethod, spoon.reflect.ast.CloneTest#testCloneCastConditional, spoon.reflect.ast.CloneTest#testCloneMethodsDeclaredInAST, spoon.reflect.ast.CloneTest#testCopyType], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Mon Apr 02 23:12:15 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@435fc911', projectTests=[spoon.reflect.ast.CloneTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #53
location: FailureLocation{className='spoon.test.snippets.SnippetTest', failingMethods=[], erroringMethods=[spoon.test.snippets.SnippetTest#testCompileSnippetWithContext, spoon.test.snippets.SnippetTest#testCompileStatementWithReturn, spoon.test.snippets.SnippetTest#testIssue981, spoon.test.snippets.SnippetTest#testCompileSnippetSeveralTimes, spoon.test.snippets.SnippetTest#testSnippetFullClass], failures=[FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0;}};;
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static java.lang.Object wrap() throws java.lang.Throwable {
        return 1 > 2;
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        int i = 1;;
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static java.lang.Integer wrap() throws java.lang.Throwable {
        return 3;
    }
}', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Mon Apr 02 23:12:30 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@14f429bc', projectTests=[spoon.test.snippets.SnippetTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #54
location: FailureLocation{className='spoon.test.executable.ExecutableRefTest', failingMethods=[], erroringMethods=[spoon.test.executable.ExecutableRefTest#constructorTest, spoon.test.executable.ExecutableRefTest#methodTest, spoon.test.executable.ExecutableRefTest#testSameTypeInConstructorCallBetweenItsObjectAndItsExecutable, spoon.test.executable.ExecutableRefTest#testGetActualClassTest, spoon.test.executable.ExecutableRefTest#testOverridingMethod], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Mon Apr 02 23:12:48 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@7f135f52', projectTests=[spoon.test.executable.ExecutableRefTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #55
location: FailureLocation{className='spoon.test.refactoring.MethodsRefactoringTest', failingMethods=[], erroringMethods=[spoon.test.refactoring.MethodsRefactoringTest#testExecutableReferenceFilter, spoon.test.refactoring.MethodsRefactoringTest#testSubInheritanceHierarchyFunction, spoon.test.refactoring.MethodsRefactoringTest#testAllMethodsSameSignatureFunction, spoon.test.refactoring.MethodsRefactoringTest#testCtParameterRemoveRefactoringValidationCheck, spoon.test.refactoring.MethodsRefactoringTest#testCtParameterRemoveRefactoring], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Mon Apr 02 23:13:03 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@1ae8f4ef', projectTests=[spoon.test.refactoring.MethodsRefactoringTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #56
location: FailureLocation{className='spoon.test.visibility.VisibilityTest', failingMethods=[], erroringMethods=[spoon.test.visibility.VisibilityTest#testVisibilityOfClassesNamedByClassesInJavaLangPackage, spoon.test.visibility.VisibilityTest#testInvocationVisibilityInFieldDeclaration, spoon.test.visibility.VisibilityTest#testMethodeWithNonAccessibleTypeArgument, spoon.test.visibility.VisibilityTest#testName, spoon.test.visibility.VisibilityTest#testFullyQualifiedNameOfTypeReferenceWithGeneric], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Mon Apr 02 23:13:18 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@42c7a65d', projectTests=[spoon.test.visibility.VisibilityTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #57
location: FailureLocation{className='spoon.test.condition.ConditionalTest', failingMethods=[], erroringMethods=[spoon.test.condition.ConditionalTest#testNoBlockInConditionAndLoop, spoon.test.condition.ConditionalTest#testConditional, spoon.test.condition.ConditionalTest#testBlockInConditionAndLoop, spoon.test.condition.ConditionalTest#testConditionalWithAssignment], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Mon Apr 02 23:13:38 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@37e0e196', projectTests=[spoon.test.condition.ConditionalTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #58
location: FailureLocation{className='spoon.test.jdtimportbuilder.ImportBuilderTest', failingMethods=[], erroringMethods=[spoon.test.jdtimportbuilder.ImportBuilderTest#testWithSimpleImportNoAutoimport, spoon.test.jdtimportbuilder.ImportBuilderTest#testWithSimpleImport, spoon.test.jdtimportbuilder.ImportBuilderTest#testInternalImportWhenNoClasspath, spoon.test.jdtimportbuilder.ImportBuilderTest#testWithImportFromItf], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Mon Apr 02 23:14:04 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@53b676ce', projectTests=[spoon.test.jdtimportbuilder.ImportBuilderTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #59
location: FailureLocation{className='spoon.test.literal.LiteralTest', failingMethods=[], erroringMethods=[spoon.test.literal.LiteralTest#testCharLiteralInNoClasspath, spoon.test.literal.LiteralTest#testEscapedString, spoon.test.literal.LiteralTest#testBuildLiternal, spoon.test.literal.LiteralTest#testLiteralInForEachWithNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Mon Apr 02 23:14:20 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@647abc5f', projectTests=[spoon.test.literal.LiteralTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #60
location: FailureLocation{className='spoon.reflect.declaration.CtTypeInformationTest', failingMethods=[], erroringMethods=[spoon.reflect.declaration.CtTypeInformationTest#testClassTypingContextContinueScanning, spoon.reflect.declaration.CtTypeInformationTest#testGetAllMethodsWontReturnOverriddenMethod, spoon.reflect.declaration.CtTypeInformationTest#testGetAllMethodsReturnsTheRightNumber, spoon.reflect.declaration.CtTypeInformationTest#testGetSuperclass], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Mon Apr 02 23:14:35 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@24fcc2bd', projectTests=[spoon.reflect.declaration.CtTypeInformationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #61
location: FailureLocation{className='spoon.test.arrays.ArraysTest', failingMethods=[], erroringMethods=[spoon.test.arrays.ArraysTest#testCtNewArrayInnerCtNewArray, spoon.test.arrays.ArraysTest#testInitializeWithNewArray, spoon.test.arrays.ArraysTest#testCtNewArrayWitComments, spoon.test.arrays.ArraysTest#testArrayReferences], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Mon Apr 02 23:14:52 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@40edc166', projectTests=[spoon.test.arrays.ArraysTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #62
location: FailureLocation{className='spoon.test.method.MethodTest', failingMethods=[], erroringMethods=[spoon.test.method.MethodTest#testGetAllMethodsAdaptingType, spoon.test.method.MethodTest#testGetAllMethods, spoon.test.method.MethodTest#testSearchMethodWithGeneric, spoon.test.method.MethodTest#testClone], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Mon Apr 02 23:15:10 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@5141c11f', projectTests=[spoon.test.method.MethodTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #63
location: FailureLocation{className='spoon.processing.CtGenerationTest', failingMethods=[], erroringMethods=[spoon.processing.CtGenerationTest#testGenerateReplacementVisitor, spoon.processing.CtGenerationTest#testGenerateCloneVisitor, spoon.processing.CtGenerationTest#testGenerateRoleHandler, spoon.processing.CtGenerationTest#testGenerateCtBiScanner], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Mon Apr 02 23:15:27 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@a118a3c', projectTests=[spoon.processing.CtGenerationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #64
location: FailureLocation{className='spoon.testing.CtElementAssertTest', failingMethods=[], erroringMethods=[spoon.testing.CtElementAssertTest#testEqualityBetweenACtElementAndAString, spoon.testing.CtElementAssertTest#testEqualityBetweenTwoCtElementWithTheSameSignatureButNotTheSameContent, spoon.testing.CtElementAssertTest#testEqualityBetweenTwoDifferentCtElement, spoon.testing.CtElementAssertTest#testEqualityBetweenTwoCtElement], failures=[FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.AssertionError> but was<spoon.SpoonException>', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.AssertionError> but was<spoon.SpoonException>', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Mon Apr 02 23:15:44 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@603c5f30', projectTests=[spoon.testing.CtElementAssertTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #65
location: FailureLocation{className='spoon.test.refactoring.RefactoringTest', failingMethods=[], erroringMethods=[spoon.test.refactoring.RefactoringTest#testRefactoringClassChangeAllCtTypeReferenceAssociatedWithClassConcerned, spoon.test.refactoring.RefactoringTest#testThisInConstructorAfterATransformation, spoon.test.refactoring.RefactoringTest#testTransformedInstanceofAfterATransformation, spoon.test.refactoring.RefactoringTest#testThisInConstructor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Mon Apr 02 23:16:01 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@4a446398', projectTests=[spoon.test.refactoring.RefactoringTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #66
location: FailureLocation{className='spoon.test.processing.ProcessingTest', failingMethods=[], erroringMethods=[spoon.test.processing.ProcessingTest#testCallProcessorWithMultipleTypes, spoon.test.processing.ProcessingTest#testInsertBegin, spoon.test.processing.ProcessingTest#testInsertEnd, spoon.test.processing.ProcessingTest#testProcessorWithGenericType], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Mon Apr 02 23:16:17 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@1b12f410', projectTests=[spoon.test.processing.ProcessingTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #67
location: FailureLocation{className='spoon.test.imports.ImportScannerTest', failingMethods=[], erroringMethods=[spoon.test.imports.ImportScannerTest#testComputeImportsInClass, spoon.test.imports.ImportScannerTest#testMultiCatchImport, spoon.test.imports.ImportScannerTest#testComputeImportsInClassWithSameName, spoon.test.imports.ImportScannerTest#testComputeMinimalImportsInClass], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Mon Apr 02 23:17:00 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@dd3983f', projectTests=[spoon.test.imports.ImportScannerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #68
location: FailureLocation{className='spoon.test.modifiers.TestModifiers', failingMethods=[], erroringMethods=[spoon.test.modifiers.TestModifiers#testMethodWithVarargsDoesNotBecomeTransient, spoon.test.modifiers.TestModifiers#testGetModifiersHelpers, spoon.test.modifiers.TestModifiers#testCtModifiableAddRemoveReturnCtModifiable], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 23:17:17 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@7325ac8d', projectTests=[spoon.test.modifiers.TestModifiers], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #69
location: FailureLocation{className='spoon.test.ctBlock.TestCtBlock', failingMethods=[], erroringMethods=[spoon.test.ctBlock.TestCtBlock#testAddStatementInCase, spoon.test.ctBlock.TestCtBlock#testAddStatementInBlock, spoon.test.ctBlock.TestCtBlock#testRemoveStatement], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 23:17:32 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@13a35f51', projectTests=[spoon.test.ctBlock.TestCtBlock], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #70
location: FailureLocation{className='spoon.test.annotation.AnnotationValuesTest', failingMethods=[], erroringMethods=[spoon.test.annotation.AnnotationValuesTest#testValuesOnJava7Annotation, spoon.test.annotation.AnnotationValuesTest#testValuesOnJava8Annotation, spoon.test.annotation.AnnotationValuesTest#testAnnotationPrintAnnotation], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 23:17:47 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@204ccb45', projectTests=[spoon.test.annotation.AnnotationValuesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #71
location: FailureLocation{className='spoon.test.template.TemplateInvocationSubstitutionTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateInvocationSubstitutionTest#testSubstitutionByExpression, spoon.test.template.TemplateInvocationSubstitutionTest#testInvocationSubstitutionByExpression, spoon.test.template.TemplateInvocationSubstitutionTest#testInvocationSubstitutionByStatement], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 23:18:04 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@6b35c50d', projectTests=[spoon.test.template.TemplateInvocationSubstitutionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #72
location: FailureLocation{className='spoon.test.refactoring.CtRenameLocalVariableRefactoringTest', failingMethods=[], erroringMethods=[spoon.test.refactoring.CtRenameLocalVariableRefactoringTest#testRenameAllLocalVariablesOfRenameTestSubject, spoon.test.refactoring.CtRenameLocalVariableRefactoringTest#testRenameLocalVariableToSameName, spoon.test.refactoring.CtRenameLocalVariableRefactoringTest#testRefactorWrongUsage], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 23:18:31 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@46ab5d01', projectTests=[spoon.test.refactoring.CtRenameLocalVariableRefactoringTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #73
location: FailureLocation{className='spoon.test.jar.JarTest', failingMethods=[], erroringMethods=[spoon.test.jar.JarTest#testFile, spoon.test.jar.JarTest#testResource, spoon.test.jar.JarTest#testJar], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 23:18:56 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@2c9a16b7', projectTests=[spoon.test.jar.JarTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #74
location: FailureLocation{className='spoon.test.prettyprinter.LinesTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.LinesTest#testIdenticalPrettyPrinter, spoon.test.prettyprinter.LinesTest#testCompileWhenUsingLinesArgument, spoon.test.prettyprinter.LinesTest#testPrettyPrinterWithLines], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 23:19:11 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@3abe1eb7', projectTests=[spoon.test.prettyprinter.LinesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #75
location: FailureLocation{className='spoon.test.api.NoClasspathTest', failingMethods=[], erroringMethods=[spoon.test.api.NoClasspathTest#test, spoon.test.api.NoClasspathTest#testInheritanceInNoClassPathWithClasses, spoon.test.api.NoClasspathTest#testIssue1747], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 23:19:27 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@33f486d8', projectTests=[spoon.test.api.NoClasspathTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #76
location: FailureLocation{className='spoon.test.api.MetamodelTest', failingMethods=[], erroringMethods=[spoon.test.api.MetamodelTest#testGetterSetterFroRole, spoon.test.api.MetamodelTest#testRoleOnField, spoon.test.api.MetamodelTest#testGetAllMetamodelInterfacess], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 23:19:53 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@2d091589', projectTests=[spoon.test.api.MetamodelTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #77
location: FailureLocation{className='spoon.test.prettyprinter.QualifiedThisRefTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.QualifiedThisRefTest#testPrintCtFieldAccessWorkEvenWhenParentNotInitialized, spoon.test.prettyprinter.QualifiedThisRefTest#testCloneThisAccess, spoon.test.prettyprinter.QualifiedThisRefTest#testQualifiedThisRef], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 23:20:11 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@a2a5b57', projectTests=[spoon.test.prettyprinter.QualifiedThisRefTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #78
location: FailureLocation{className='spoon.reflect.visitor.CtScannerTest', failingMethods=[], erroringMethods=[spoon.reflect.visitor.CtScannerTest#testScannerCallsAllProperties, spoon.reflect.visitor.CtScannerTest#testScan, spoon.reflect.visitor.CtScannerTest#testScannerContract], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 23:20:27 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@814ba67', projectTests=[spoon.reflect.visitor.CtScannerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #79
location: FailureLocation{className='spoon.test.parameters.ParameterTest', failingMethods=[], erroringMethods=[spoon.test.parameters.ParameterTest#testGetParameterReferenceInLambdaNoClasspath, spoon.test.parameters.ParameterTest#testParameterInNoClasspath, spoon.test.parameters.ParameterTest#testMultiParameterLambdaTypeReference], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Mon Apr 02 23:20:43 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@5ca66875', projectTests=[spoon.test.parameters.ParameterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #80
location: FailureLocation{className='spoon.test.staticFieldAccess.StaticAccessTest', failingMethods=[], erroringMethods=[spoon.test.staticFieldAccess.StaticAccessTest#testProcessAndCompile, spoon.test.staticFieldAccess.StaticAccessTest#testReferences], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:20:59 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@6467a8d8', projectTests=[spoon.test.staticFieldAccess.StaticAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #81
location: FailureLocation{className='spoon.test.field.FieldTest', failingMethods=[], erroringMethods=[spoon.test.field.FieldTest#testFieldImplicitTarget, spoon.test.field.FieldTest#testAddFieldsAtTop], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:21:15 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@72790b41', projectTests=[spoon.test.field.FieldTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #82
location: FailureLocation{className='spoon.test.model.BlockTest', failingMethods=[], erroringMethods=[spoon.test.model.BlockTest#testIterationStatements, spoon.test.model.BlockTest#testAddEmptyBlock], failures=[FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { }};;
    }
}', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0;int y=0;}};;
    }
}', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:21:29 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@332d6cc2', projectTests=[spoon.test.model.BlockTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #83
location: FailureLocation{className='spoon.test.sourcePosition.SourcePositionTest', failingMethods=[], erroringMethods=[spoon.test.sourcePosition.SourcePositionTest#equalPositionsHaveSameHashcode, spoon.test.sourcePosition.SourcePositionTest#testSourcePositionOfSecondPrimitiveType], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:21:43 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@825e551', projectTests=[spoon.test.sourcePosition.SourcePositionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #84
location: FailureLocation{className='spoon.test.interfaces.TestInterfaceWithoutSetup', failingMethods=[], erroringMethods=[spoon.test.interfaces.TestInterfaceWithoutSetup#testModifierFromInterfaceFieldAndMethod, spoon.test.interfaces.TestInterfaceWithoutSetup#testInterfacePrettyPrinting], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:21:59 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@73ce0d70', projectTests=[spoon.test.interfaces.TestInterfaceWithoutSetup], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #85
location: FailureLocation{className='spoon.test.template.TemplateArrayAccessTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateArrayAccessTest#testArrayAccess, spoon.test.template.TemplateArrayAccessTest#testArrayLengthAccess], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:22:14 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@173b0866', projectTests=[spoon.test.template.TemplateArrayAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #86
location: FailureLocation{className='spoon.test.control.ControlTest', failingMethods=[], erroringMethods=[spoon.test.control.ControlTest#testModelBuildingFor, spoon.test.control.ControlTest#testModelBuildingDoWhile], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:22:28 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@22279775', projectTests=[spoon.test.control.ControlTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #87
location: FailureLocation{className='spoon.test.enums.EnumsTest', failingMethods=[], erroringMethods=[spoon.test.enums.EnumsTest#testModelBuildingEnum, spoon.test.enums.EnumsTest#testAnnotationsOnEnum], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:22:42 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@240cdaa7', projectTests=[spoon.test.enums.EnumsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #88
location: FailureLocation{className='spoon.test.model.SwitchCaseTest', failingMethods=[], erroringMethods=[spoon.test.model.SwitchCaseTest#testSwitchStatementOnAString, spoon.test.model.SwitchCaseTest#testIterationStatements], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0;switch(x) {case 0: x=x+1;break;case 1: x=0;default: x=-1;}}};;
    }
}', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:22:55 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@6da0f3d1', projectTests=[spoon.test.model.SwitchCaseTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #89
location: FailureLocation{className='spoon.test.method_overriding.MethodOverriddingTest', failingMethods=[], erroringMethods=[spoon.test.method_overriding.MethodOverriddingTest#testMethodOverride, spoon.test.method_overriding.MethodOverriddingTest#testMethodOverrideByReference], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:23:09 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@42b2911a', projectTests=[spoon.test.method_overriding.MethodOverriddingTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #90
location: FailureLocation{className='spoon.test.exceptions.ExceptionTest', failingMethods=[], erroringMethods=[spoon.test.exceptions.ExceptionTest#testExceptionIfNotCompilable, spoon.test.exceptions.ExceptionTest#testUnionCatchExceptionInsideLambdaInNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:23:22 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@26d30aeb', projectTests=[spoon.test.exceptions.ExceptionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #91
location: FailureLocation{className='spoon.test.executable.ExecutableTest', failingMethods=[], erroringMethods=[spoon.test.executable.ExecutableTest#testInfoInsideAnonymousExecutable, spoon.test.executable.ExecutableTest#testBlockInExecutable], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:23:36 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@1c2cb437', projectTests=[spoon.test.executable.ExecutableTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #92
location: FailureLocation{className='spoon.test.factory.TypeFactoryTest', failingMethods=[], erroringMethods=[spoon.test.factory.TypeFactoryTest#testGetClassWithDollarAndNestedClass, spoon.test.factory.TypeFactoryTest#testGetClassInAnInterface], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:23:50 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@2ab9c58d', projectTests=[spoon.test.factory.TypeFactoryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #93
location: FailureLocation{className='spoon.test.initializers.InitializerTest', failingMethods=[], erroringMethods=[spoon.test.initializers.InitializerTest#testModelBuildingInitializer, spoon.test.initializers.InitializerTest#testModelBuildingStaticInitializer], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:24:03 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@3dce8ee4', projectTests=[spoon.test.initializers.InitializerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #94
location: FailureLocation{className='spoon.test.loop.LoopTest', failingMethods=[], erroringMethods=[spoon.test.loop.LoopTest#testForeachShouldHaveAlwaysABlockInItsBody, spoon.test.loop.LoopTest#testAnnotationInForLoop], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:24:17 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@43a656d1', projectTests=[spoon.test.loop.LoopTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #95
location: FailureLocation{className='spoon.test.template.TemplateReplaceReturnTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateReplaceReturnTest#testNoReturnReplaceTemplate, spoon.test.template.TemplateReplaceReturnTest#testReturnReplaceTemplate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:24:30 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@7b448e26', projectTests=[spoon.test.template.TemplateReplaceReturnTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #96
location: FailureLocation{className='spoon.test.prettyprinter.PrintChangesTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.PrintChangesTest#testPrintUnchaged, spoon.test.prettyprinter.PrintChangesTest#testPrintChanged], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:24:44 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@74ea5843', projectTests=[spoon.test.prettyprinter.PrintChangesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #97
location: FailureLocation{className='spoon.LauncherTest', failingMethods=[], erroringMethods=[spoon.LauncherTest#testLLauncherBuildModelReturnAModel, spoon.LauncherTest#testLauncherInEmptyWorkingDir], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:24:58 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@2afc3042', projectTests=[spoon.LauncherTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #98
location: FailureLocation{className='spoon.test.ctCase.SwitchCaseTest', failingMethods=[], erroringMethods=[spoon.test.ctCase.SwitchCaseTest#insertBeforeStatementInSwitchCaseWithoutException, spoon.test.ctCase.SwitchCaseTest#insertAfterStatementInSwitchCaseWithoutException], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:25:12 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@1c02e031', projectTests=[spoon.test.ctCase.SwitchCaseTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #99
location: FailureLocation{className='spoon.test.ctType.CtTypeParameterTest', failingMethods=[], erroringMethods=[spoon.test.ctType.CtTypeParameterTest#testTypeSame, spoon.test.ctType.CtTypeParameterTest#testTypeErasure], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:25:28 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@4567573f', projectTests=[spoon.test.ctType.CtTypeParameterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #100
location: FailureLocation{className='spoon.test.limits.utils.InternalTest', failingMethods=[], erroringMethods=[spoon.test.limits.utils.InternalTest#testStaticFinalFieldInAnonymousClass, spoon.test.limits.utils.InternalTest#testInternalClasses], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:25:44 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@1296dea8', projectTests=[spoon.test.limits.utils.InternalTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #101
location: FailureLocation{className='spoon.reflect.ast.AstCheckerTest', failingMethods=[], erroringMethods=[spoon.reflect.ast.AstCheckerTest#testAvoidSetCollectionSavedOnAST, spoon.reflect.ast.AstCheckerTest#testPushToStackChanges], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:25:58 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@5aeb5752', projectTests=[spoon.reflect.ast.AstCheckerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #102
location: FailureLocation{className='spoon.test.factory.FieldFactoryTest', failingMethods=[], erroringMethods=[spoon.test.factory.FieldFactoryTest#testCreateFromSource, spoon.test.factory.FieldFactoryTest#testCreate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:26:12 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@21bce7aa', projectTests=[spoon.test.factory.FieldFactoryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #103
location: FailureLocation{className='spoon.test.reference.CloneReferenceTest', failingMethods=[], erroringMethods=[spoon.test.reference.CloneReferenceTest#testGetDeclarationOfFieldAfterClone, spoon.test.reference.CloneReferenceTest#testGetDeclarationAfterClone], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:26:26 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@5ccb7558', projectTests=[spoon.test.reference.CloneReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #104
location: FailureLocation{className='spoon.processing.ProcessingTest', failingMethods=[], erroringMethods=[spoon.processing.ProcessingTest#testSpoonTagger, spoon.processing.ProcessingTest#testInterruptAProcessor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='spoon.SpoonException: SourcePosition value must not be negative', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:26:40 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@2cedf720', projectTests=[spoon.processing.ProcessingTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #105
location: FailureLocation{className='spoon.test.javadoc.JavaDocTest', failingMethods=[], erroringMethods=[spoon.test.javadoc.JavaDocTest#testJavadocNotPresentInAST, spoon.test.javadoc.JavaDocTest#testJavaDocReprint], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Mon Apr 02 23:26:54 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@4de543fb', projectTests=[spoon.test.javadoc.JavaDocTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #106
location: FailureLocation{className='spoon.test.imports.ImportAndExtendWithPackageNameTest', failingMethods=[], erroringMethods=[spoon.test.imports.ImportAndExtendWithPackageNameTest#testBuildModel], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:27:07 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@1f30a6eb', projectTests=[spoon.test.imports.ImportAndExtendWithPackageNameTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #107
location: FailureLocation{className='spoon.test.template.TemplateClassAccessTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateClassAccessTest#testClassAccessTest], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:27:21 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@3fe84d24', projectTests=[spoon.test.template.TemplateClassAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #108
location: FailureLocation{className='spoon.test.strings.StringLiteralTest', failingMethods=[], erroringMethods=[spoon.test.strings.StringLiteralTest#testSnippetFullClass], failures=[FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class StringValueUTF {
         String f0 = "toto";
         String f1 = "\n";
         char c1 = '\n';
         String f2 = "\u20ac";
         char c2 = '\u20ac';
         String f3 = "€";
         char c3 = '€';
         String f4 = "\t";
         char c4 = '\t';
         String f5 = " ";
         char c5 = ' ';
         String f6 = "€\u20ac";
        };
    }
}', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:27:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@53993799', projectTests=[spoon.test.strings.StringLiteralTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #109
location: FailureLocation{className='spoon.test.factory.ConstructorFactoryTest', failingMethods=[], erroringMethods=[spoon.test.factory.ConstructorFactoryTest#testCreate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:27:48 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@3913a81a', projectTests=[spoon.test.factory.ConstructorFactoryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #110
location: FailureLocation{className='spoon.test.reflect.visitor.ReferenceQueryTest', failingMethods=[], erroringMethods=[spoon.test.reflect.visitor.ReferenceQueryTest#getAllTypeReferencesInEnum], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:28:01 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@423e0731', projectTests=[spoon.test.reflect.visitor.ReferenceQueryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #111
location: FailureLocation{className='spoon.test.intercession.RemoveTest', failingMethods=[], erroringMethods=[spoon.test.intercession.RemoveTest#testRemoveAllStatements], failures=[FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0;int y=0;}};;
    }
}', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:28:14 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@576170ae', projectTests=[spoon.test.intercession.RemoveTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #112
location: FailureLocation{className='spoon.test.support.ResourceTest', failingMethods=[], erroringMethods=[spoon.test.support.ResourceTest#testFilteringFolder], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:28:28 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@2e77a65', projectTests=[spoon.test.support.ResourceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #113
location: FailureLocation{className='spoon.test.change.ChangeCollectorTest', failingMethods=[], erroringMethods=[spoon.test.change.ChangeCollectorTest#testChangeCollector], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:28:41 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@33609816', projectTests=[spoon.test.change.ChangeCollectorTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #114
location: FailureLocation{className='spoon.reflect.visitor.CtVisitorTest', failingMethods=[], erroringMethods=[spoon.reflect.visitor.CtVisitorTest#testMethodsInVisitor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:28:54 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@11bd7662', projectTests=[spoon.reflect.visitor.CtVisitorTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #115
location: FailureLocation{className='spoon.test.reference.AnnotationFieldReferenceTest', failingMethods=[], erroringMethods=[spoon.test.reference.AnnotationFieldReferenceTest#testAnnotationFieldReference], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:29:08 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@63d7e6f1', projectTests=[spoon.test.reference.AnnotationFieldReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #116
location: FailureLocation{className='spoon.reflect.declaration.UnknownDeclarationTest', failingMethods=[], erroringMethods=[spoon.reflect.declaration.UnknownDeclarationTest#testUnknownCalls], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:29:21 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@65019492', projectTests=[spoon.reflect.declaration.UnknownDeclarationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #117
location: FailureLocation{className='spoon.test.replace.ReplaceParametrizedTest', failingMethods=[], erroringMethods=[spoon.test.replace.ReplaceParametrizedTest#initializationError], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:29:35 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@6506c58c', projectTests=[spoon.test.replace.ReplaceParametrizedTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #118
location: FailureLocation{className='spoon.test.reference.ElasticsearchStackoverflowTest', failingMethods=[], erroringMethods=[spoon.test.reference.ElasticsearchStackoverflowTest#testStackOverflow], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:29:48 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@26b063', projectTests=[spoon.test.reference.ElasticsearchStackoverflowTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #119
location: FailureLocation{className='spoon.test.parent.SetParentTest', failingMethods=[], erroringMethods=[spoon.test.parent.SetParentTest#initializationError], failures=[FailureType{failureName='java.lang.NoClassDefFoundError', failureDetail='Could not initialize class spoon.test.parent.ParentContractTest', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:30:01 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@668df66e', projectTests=[spoon.test.parent.SetParentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #120
location: FailureLocation{className='spoon.reflect.visitor.CtInheritanceScannerMethodsTest', failingMethods=[], erroringMethods=[spoon.reflect.visitor.CtInheritanceScannerMethodsTest#testMethodsInInheritanceScanner], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:30:15 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@33298a1b', projectTests=[spoon.reflect.visitor.CtInheritanceScannerMethodsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #121
location: FailureLocation{className='spoon.test.parent.ParentContractTest', failingMethods=[], erroringMethods=[spoon.test.parent.ParentContractTest#initializationError], failures=[FailureType{failureName='java.lang.ExceptionInInitializerError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:30:29 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@63c7dd03', projectTests=[spoon.test.parent.ParentContractTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #122
location: FailureLocation{className='spoon.test.invocations.InvocationTest', failingMethods=[], erroringMethods=[spoon.test.invocations.InvocationTest#testIssue1753], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:30:42 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@5dabcbe3', projectTests=[spoon.test.invocations.InvocationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #123
location: FailureLocation{className='spoon.test.strings.StringTest', failingMethods=[], erroringMethods=[spoon.test.strings.StringTest#testModelBuildingInitializer], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:30:55 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@e94da6e', projectTests=[spoon.test.strings.StringTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #124
location: FailureLocation{className='spoon.test.varargs.VarArgsTest', failingMethods=[], erroringMethods=[spoon.test.varargs.VarArgsTest#testModelBuildingInitializer], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:31:08 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@350f1036', projectTests=[spoon.test.varargs.VarArgsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #125
location: FailureLocation{className='spoon.test.intercession.IntercessionContractTest', failingMethods=[], erroringMethods=[spoon.test.intercession.IntercessionContractTest#initializationError], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:31:21 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@392e7b0b', projectTests=[spoon.test.intercession.IntercessionContractTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #126
location: FailureLocation{className='spoon.test.template.TemplateEnumAccessTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateEnumAccessTest#testEnumAccessTest], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:31:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@519cae6f', projectTests=[spoon.test.template.TemplateEnumAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #127
location: FailureLocation{className='spoon.test.factory.AnnotationFactoryTest', failingMethods=[], erroringMethods=[spoon.test.factory.AnnotationFactoryTest#testAnnotate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:31:47 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@1e940436', projectTests=[spoon.test.factory.AnnotationFactoryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #128
location: FailureLocation{className='spoon.test.enums.EnumsTypeTest', failingMethods=[], erroringMethods=[spoon.test.enums.EnumsTypeTest#testEnumsType], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:32:00 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@44434a7f', projectTests=[spoon.test.enums.EnumsTypeTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #129
location: FailureLocation{className='spoon.test.labels.TestLabels', failingMethods=[], erroringMethods=[spoon.test.labels.TestLabels#testLabelsAreDetected], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:32:13 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@708cc426', projectTests=[spoon.test.labels.TestLabels], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #130
location: FailureLocation{className='spoon.test.parent.TopLevelTypeTest', failingMethods=[], erroringMethods=[spoon.test.parent.TopLevelTypeTest#testTopLevelType], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:32:26 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@729ea2fe', projectTests=[spoon.test.parent.TopLevelTypeTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #131
location: FailureLocation{className='spoon.test.visitor.AssignmentsEqualsTest', failingMethods=[], erroringMethods=[spoon.test.visitor.AssignmentsEqualsTest#testEquals], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:32:40 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@74dc1ad5', projectTests=[spoon.test.visitor.AssignmentsEqualsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #132
location: FailureLocation{className='spoon.test.model.AnonymousExecutableTest', failingMethods=[], erroringMethods=[spoon.test.model.AnonymousExecutableTest#testStatements], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:32:54 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@1b6d3f9a', projectTests=[spoon.test.model.AnonymousExecutableTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #133
location: FailureLocation{className='spoon.test.properties.PropertiesTest', failingMethods=[], erroringMethods=[spoon.test.properties.PropertiesTest#testNonExistingDirectory], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:33:07 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@29a1db48', projectTests=[spoon.test.properties.PropertiesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #134
location: FailureLocation{className='spoon.test.serializable.SerializableTest', failingMethods=[], erroringMethods=[spoon.test.serializable.SerializableTest#testSerialCtStatement], failures=[FailureType{failureName='spoon.compiler.ModelBuildingException', failureDetail='snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        String hello ="t1"; System.out.println(hello);
    }
}', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:33:22 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@4d794bf9', projectTests=[spoon.test.serializable.SerializableTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #135
location: FailureLocation{className='spoon.test.main.MainTest', failingMethods=[], erroringMethods=[spoon.test.main.MainTest#spoon.test.main.MainTest], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:33:35 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@32b135a6', projectTests=[spoon.test.main.MainTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #136
location: FailureLocation{className='spoon.test.reflect.meta.MetaModelTest', failingMethods=[], erroringMethods=[spoon.test.reflect.meta.MetaModelTest#spoonMetaModelTest], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:33:50 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@fa54c21', projectTests=[spoon.test.reflect.meta.MetaModelTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #137
location: FailureLocation{className='spoon.testing.AbstractAssertTest', failingMethods=[], erroringMethods=[spoon.testing.AbstractAssertTest#testTransformationFromCtElementWithProcessor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 02 23:34:04 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/361353762/src/main/java], projectClasspath='[Ljava.net.URL;@418eba4b', projectTests=[spoon.testing.AbstractAssertTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/361353762, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



