nopolinfo #0
location: FailureLocation{className='io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest', failingMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveChar, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentClusterSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testPutInvalidValue, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetChar, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testClear, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetInt, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetChar, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetInt, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testPutNullValue, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testPutInvalidKey, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testEntryStream, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentChar, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testClosedKeyStream, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetBoolean, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceInt, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testPutIfAbsentInvalidValue, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceClusterSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentBoolean, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentChar, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testEntries, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentBoolean, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetClusterSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveBoolean, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testSize, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testKeyStream, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testKeys, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testValueStream, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveInt, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetBoolean, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentInt, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMultipleMaps, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testGetMapWithNullResultHandler, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testGetMapWithNullName, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceChar, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceBoolean, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testPutIfAbsentInvalidKey, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveClusterSerializableObject], erroringMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutTtl, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentInt, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutTtlThenPut, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testValues, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentClusterSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentTtl, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testPutNullKey, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetClusterSerializableObject], failures=[FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=89, nbErrors=16}
status: NOPATCH
dateEnd: Thu Mar 29 01:47:14 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/vert-x3/vertx-infinispan/359429452/src/main/java], projectClasspath='[Ljava.net.URL;@2b4786dd', projectTests=[io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest], complianceLevel=8, outputFolder=./workspace/vert-x3/vertx-infinispan/359429452, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #1
location: FailureLocation{className='io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest', failingMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveChar, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentClusterSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testPutInvalidValue, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetChar, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testClear, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetInt, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetChar, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetInt, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testPutNullValue, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testPutInvalidKey, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testEntryStream, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentChar, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testClosedKeyStream, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetBoolean, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceInt, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testPutIfAbsentInvalidValue, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceClusterSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentBoolean, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentChar, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testEntries, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentBoolean, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetClusterSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveBoolean, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testSize, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testKeyStream, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testKeys, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testValueStream, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveInt, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetBoolean, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentInt, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMultipleMaps, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testGetMapWithNullResultHandler, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testGetMapWithNullName, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceChar, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceBoolean, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testPutIfAbsentInvalidKey, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveClusterSerializableObject], erroringMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutTtl, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentInt, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutTtlThenPut, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testValues, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentClusterSerializableObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentTtl, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutGetShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapReplaceIfPresentDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testPutNullKey, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapRemoveIfPresentString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest#testMapPutIfAbsentGetClusterSerializableObject], failures=[FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=89, nbErrors=16}
status: NOPATCH
dateEnd: Thu Mar 29 01:47:16 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/vert-x3/vertx-infinispan/359429452/src/main/java], projectClasspath='[Ljava.net.URL;@2262d6d5', projectTests=[io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsyncMapTest], complianceLevel=8, outputFolder=./workspace/vert-x3/vertx-infinispan/359429452, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #2
location: FailureLocation{className='io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest', failingMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyBooleanTrue, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyByteArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testDefaultDecoderSendSymetric, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyNull, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testRegisterRemote2, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testRegisterRemote1, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishInteger, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendInteger, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testDecoderSendSymmetric, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testClusteredPong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testMessageBodyInterceptor, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendByteArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishBuffer, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyWithHeaders, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendWithHeaders, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testDecoderSendAsymmetric, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyFromWorker, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendWithDeliveryOptionsButNoHeaders, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testDefaultCodecReplyExceptionSubclass, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testDefaultDecoderReplyAsymmetric, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishBooleanTrue, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testDefaultDecoderSendAsymmetric, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testConsumerHandlesCompletionAsynchronously1, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishCharacter, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testDecoderReplyAsymmetric, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendBooleanTrue, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testConsumerHandlesCompletionAsynchronously2, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishJsonObject, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testDecoderReplySymmetric, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishBooleanFalse, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishJsonArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendByte, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishNull, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendWhileUnsubscribing, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyCharacter, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyBooleanFalse, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSubsRemovedForKilledNode, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendLong, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishString, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyDouble, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishFloat, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#sendNoContext, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendNull, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testPublishByteArray, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendCharacter, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testNoHandlersCallbackContext, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testLocalHandlerNotReceive, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyShort, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testDefaultDecoderReplySymetric, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testReplyInteger, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendBooleanFalse, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSendFromExecuteBlocking, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest#testSubsRemovedForClosedNode], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}], nbFailures=71, nbErrors=0}
status: NOPATCH
dateEnd: Thu Mar 29 01:47:17 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/vert-x3/vertx-infinispan/359429452/src/main/java], projectClasspath='[Ljava.net.URL;@72c9ebfa', projectTests=[io.vertx.ext.cluster.infinispan.test.InfinispanClusteredEventBusTest], complianceLevel=8, outputFolder=./workspace/vert-x3/vertx-infinispan/359429452, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #3
location: FailureLocation{className='io.vertx.ext.cluster.infinispan.test.InfinispanHATest', failingMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanHATest#testQuorumLost, io.vertx.ext.cluster.infinispan.test.InfinispanHATest#testNonHADeployments, io.vertx.ext.cluster.infinispan.test.InfinispanHATest#testCloseRemovesFromCluster, io.vertx.ext.cluster.infinispan.test.InfinispanHATest#testQuorumWithHaGroups, io.vertx.ext.cluster.infinispan.test.InfinispanHATest#testCleanCloseNoFailover, io.vertx.ext.cluster.infinispan.test.InfinispanHATest#testFailureInFailover, io.vertx.ext.cluster.infinispan.test.InfinispanHATest#testSimpleFailover, io.vertx.ext.cluster.infinispan.test.InfinispanHATest#testQuorum, io.vertx.ext.cluster.infinispan.test.InfinispanHATest#testNoFailoverToNonHANode, io.vertx.ext.cluster.infinispan.test.InfinispanHATest#testHaGroups], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}], nbFailures=10, nbErrors=0}
status: NOPATCH
dateEnd: Thu Mar 29 01:47:18 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/vert-x3/vertx-infinispan/359429452/src/main/java], projectClasspath='[Ljava.net.URL;@5ca22e19', projectTests=[io.vertx.ext.cluster.infinispan.test.InfinispanHATest], complianceLevel=8, outputFolder=./workspace/vert-x3/vertx-infinispan/359429452, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #4
location: FailureLocation{className='io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest', failingMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest#testMapAddGet], erroringMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest#testRemoveAllForValue, io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest#testMapAddGet, io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest#io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=1, nbErrors=3}
status: NOPATCH
dateEnd: Thu Mar 29 01:47:19 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/vert-x3/vertx-infinispan/359429452/src/main/java], projectClasspath='[Ljava.net.URL;@7a274521', projectTests=[io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest], complianceLevel=8, outputFolder=./workspace/vert-x3/vertx-infinispan/359429452, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #5
location: FailureLocation{className='io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest', failingMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest#testMapAddGet], erroringMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest#testRemoveAllForValue, io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest#testMapAddGet, io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest#io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=1, nbErrors=3}
status: NOPATCH
dateEnd: Thu Mar 29 01:47:19 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/vert-x3/vertx-infinispan/359429452/src/main/java], projectClasspath='[Ljava.net.URL;@46bdc55e', projectTests=[io.vertx.ext.cluster.infinispan.test.InfinispanAsyncMultiMapTest], complianceLevel=8, outputFolder=./workspace/vert-x3/vertx-infinispan/359429452, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #6
location: FailureLocation{className='io.vertx.ext.cluster.infinispan.test.InfinispanFaultToleranceTest', failingMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanFaultToleranceTest#testFaultTolerance], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError:', failureDetail='null', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Thu Mar 29 01:47:20 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/vert-x3/vertx-infinispan/359429452/src/main/java], projectClasspath='[Ljava.net.URL;@6a6e410c', projectTests=[io.vertx.ext.cluster.infinispan.test.InfinispanFaultToleranceTest], complianceLevel=8, outputFolder=./workspace/vert-x3/vertx-infinispan/359429452, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #7
location: FailureLocation{className='io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest', failingMethods=[], erroringMethods=[io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testVersion, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testSessionFixation, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testSessionExpires, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testDestroySession, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testSession, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testSessionCookieAttack, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testSessionCookieInvalidatedOnError, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testSessionCookieHttpOnlyFlag, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testSessionCookieSecureFlagAndHttpOnlyFlags, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testClusteredSession, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testSessionCookieName, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testSessionFields, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testSessionCookieSecureFlag, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testLastAccessed2, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testSessionIdLength, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testIssue172_setnull, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testRetryTimeout, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testSessionSerializationNullPrincipal, io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest#testLastAccessed1], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=0, nbErrors=19}
status: NOPATCH
dateEnd: Thu Mar 29 01:47:21 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/vert-x3/vertx-infinispan/359429452/src/main/java], projectClasspath='[Ljava.net.URL;@78de0f6f', projectTests=[io.vertx.ext.web.sstore.InfinispanClusteredSessionHandlerTest], complianceLevel=8, outputFolder=./workspace/vert-x3/vertx-infinispan/359429452, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #8
location: FailureLocation{className='io.vertx.ext.cluster.infinispan.test.InfinispanClusteredSharedCounterTest', failingMethods=[], erroringMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanClusteredSharedCounterTest#testIllegalArguments, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredSharedCounterTest#testDecrementAndGet, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredSharedCounterTest#testIncrementAndGet, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredSharedCounterTest#getAndAdd, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredSharedCounterTest#testGetAndIncrement, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredSharedCounterTest#testGet, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredSharedCounterTest#testCompareAndSet, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredSharedCounterTest#testDifferentCounters, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredSharedCounterTest#testAddAndGet], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=0, nbErrors=9}
status: NOPATCH
dateEnd: Thu Mar 29 01:47:22 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/vert-x3/vertx-infinispan/359429452/src/main/java], projectClasspath='[Ljava.net.URL;@2d85a4c7', projectTests=[io.vertx.ext.cluster.infinispan.test.InfinispanClusteredSharedCounterTest], complianceLevel=8, outputFolder=./workspace/vert-x3/vertx-infinispan/359429452, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #9
location: FailureLocation{className='io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsynchronousLockTest', failingMethods=[], erroringMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsynchronousLockTest#testLockReleasedForClosedNode, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsynchronousLockTest#testLockReleasedForKilledNode, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsynchronousLockTest#testAcquireDifferentLocks, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsynchronousLockTest#testAcquire, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsynchronousLockTest#testAcquireOnSameEventLoop, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsynchronousLockTest#testAcquireOnExecuteBlocking, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsynchronousLockTest#testIllegalArguments, io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsynchronousLockTest#testAcquireTimeout], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Thu Mar 29 01:47:23 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/vert-x3/vertx-infinispan/359429452/src/main/java], projectClasspath='[Ljava.net.URL;@7da6e22a', projectTests=[io.vertx.ext.cluster.infinispan.test.InfinispanClusteredAsynchronousLockTest], complianceLevel=8, outputFolder=./workspace/vert-x3/vertx-infinispan/359429452, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #10
location: FailureLocation{className='io.vertx.ext.cluster.infinispan.test.InfinispanComplexHATest', failingMethods=[], erroringMethods=[io.vertx.ext.cluster.infinispan.test.InfinispanComplexHATest#testComplexFailover], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Thu Mar 29 01:47:24 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/vert-x3/vertx-infinispan/359429452/src/main/java], projectClasspath='[Ljava.net.URL;@ddd0e97', projectTests=[io.vertx.ext.cluster.infinispan.test.InfinispanComplexHATest], complianceLevel=8, outputFolder=./workspace/vert-x3/vertx-infinispan/359429452, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



