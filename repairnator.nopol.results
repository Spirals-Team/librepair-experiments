nopolinfo #0
location: FailureLocation{className='org.apache.calcite.test.SqlToRelConverterTest', failingMethods=[org.apache.calcite.test.SqlToRelConverterTest#testJoinUsing, org.apache.calcite.test.SqlToRelConverterTest#testJoinUsingThreeWay, org.apache.calcite.test.SqlToRelConverterTest#testJoinUsingCompound, org.apache.calcite.test.SqlToRelConverterTest#testCorrelatedSubQueryInJoin, org.apache.calcite.test.SqlToRelConverterTest#testJoinNatural, org.apache.calcite.test.SqlToRelConverterTest#testJoinNaturalMultipleCommonColumn, org.apache.calcite.test.SqlToRelConverterTest#testArrayOfRecord], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='plan expected:<
LogicalProject([EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9]], NAME=[$10])
  Log...> but was:<
LogicalProject([DEPTNO0=[$9], EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], SLACKER=[$8]], NAME=[$10])
  Log...>', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Conversion to relational algebra failed to preserve datatypes:
validated type:
RecordType(VARCHAR(20) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL ENAME, INTEGER NOT NULL DEPTNO, INTEGER NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL JOB, INTEGER MGR, TIMESTAMP(0) NOT NULL HIREDATE, INTEGER NOT NULL SAL, INTEGER NOT NULL COMM, BOOLEAN NOT NULL SLACKER) NOT NULL
converted type:
RecordType(VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL ENAME0, INTEGER NOT NULL DEPTNO0, INTEGER NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL JOB, INTEGER MGR, TIMESTAMP(0) NOT NULL HIREDATE, INTEGER NOT NULL SAL, INTEGER NOT NULL COMM, BOOLEAN NOT NULL SLACKER) NOT NULL
rel:
LogicalProject(ENAME0=[$10], DEPTNO0=[$9], EMPNO=[$0], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], SLACKER=[$8])
  LogicalJoin(condition=[AND(=($1, $10), =($7, $9))], joinType=[inner])
    LogicalTableScan(table=[[CATALOG, SALES, EMP]])
    LogicalProject(DEPTNO=[$0], ENAME=[$1])
      LogicalTableScan(table=[[CATALOG, SALES, DEPT]])
', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='plan expected:<
LogicalProject([EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9]], NAME=[$10])
  Log...> but was:<
LogicalProject([DEPTNO0=[$9], EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], SLACKER=[$8]], NAME=[$10])
  Log...>', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Conversion to relational algebra failed to preserve datatypes:
validated type:
RecordType(INTEGER NOT NULL DEPTNO, INTEGER EMPNO0, VARCHAR(20) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL ENAME, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL JOB, INTEGER MGR, TIMESTAMP(0) NOT NULL HIREDATE, INTEGER NOT NULL SAL, INTEGER NOT NULL COMM, BOOLEAN NOT NULL SLACKER, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NAME) NOT NULL
converted type:
RecordType(INTEGER DEPTNO0, INTEGER NOT NULL EMPNO, VARCHAR(20) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL ENAME, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL JOB, INTEGER MGR, TIMESTAMP(0) NOT NULL HIREDATE, INTEGER NOT NULL SAL, INTEGER NOT NULL COMM, BOOLEAN NOT NULL SLACKER, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NAME) NOT NULL
rel:
LogicalProject(DEPTNO0=[$9], EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], SLACKER=[$8], NAME=[$10])
  LogicalJoin(condition=[AND(=($7, $9), =($0, $11))], joinType=[left])
    LogicalTableScan(table=[[CATALOG, SALES, EMP]])
    LogicalProject(DEPTNO=[$0], NAME=[$1], EMPNO=[*($0, 5)])
      LogicalTableScan(table=[[CATALOG, SALES, DEPT]])
', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='plan expected:<...(ITEM(DOT(DOT(ITEM($[2, 1), 'DETAIL'), 'SKILLS'), +(2, 3)), 'DESC')])
  LogicalProject(DEPTNO=[$0], NAME=[$1], TYPE=[$2.TYPE], DESC=[$2.DESC]], EMPLOYEES=[$3])
 ...> but was:<...(ITEM(DOT(DOT(ITEM($[6, 1), 'DETAIL'), 'SKILLS'), +(2, 3)), 'DESC')])
  LogicalProject(DEPTNO=[$0], NAME=[$1], TYPE=[$2.TYPE], DESC=[$2.DESC], A=[$2.OTHERS.A], B=[$2.OTHERS.B]], EMPLOYEES=[$3])
 ...>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='plan expected:<
LogicalProject([EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9]], NAME=[$10])
  Log...> but was:<
LogicalProject([DEPTNO0=[$9], EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], SLACKER=[$8]], NAME=[$10])
  Log...>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='plan expected:<...LogicalProject(EMPNO[=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9], NAME=[$10], EMPNO0=[$11]], ENAME0=[$12], JOB...> but was:<...LogicalProject(EMPNO[0=[$11], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], SLACKER=[$8], NAME=[$10]], ENAME0=[$12], JOB...>', isError=false}], nbFailures=7, nbErrors=0}
status: NOPATCH
dateEnd: Fri Mar 30 22:13:17 CEST 2018
allocatedtime: 120minutes 
passingTime: 1minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/julianhyde/calcite/360401368/core/src/main/java], projectClasspath='[Ljava.net.URL;@30f4b1a6', projectTests=[org.apache.calcite.test.SqlToRelConverterTest], complianceLevel=8, outputFolder=./workspace/julianhyde/calcite/360401368, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='org.apache.calcite.test.CoreQuidemTest', failingMethods=[org.apache.calcite.test.CoreQuidemTest#test[15: quidem(sql/lateral.iq)], org.apache.calcite.test.CoreQuidemTest#test[5: quidem(sql/sub-query.iq)], org.apache.calcite.test.CoreQuidemTest#test[4: quidem(sql/join.iq)]], erroringMethods=[org.apache.calcite.test.CoreQuidemTest#test[1: quidem(sql/misc.iq)]], failures=[FailureType{failureName='java.lang.reflect.InvocationTargetException', failureDetail='null', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Files differ: /root/workspace/julianhyde/calcite/360401368/core/target/surefire/sql/join.iq /root/workspace/julianhyde/calcite/360401368/core/target/test-classes/sql/join.iq
250,256c250,256
< +-------+-----------+--------+---------+-------------+
< | EMPID | NAME      | DEPTNO | DEPTNO0 | NAME0       |
< +-------+-----------+--------+---------+-------------+
< |   100 | Bill      |      1 |       1 | LeaderShip  |
< |   150 | Sebastian |      3 |       3 | Development |
< |   200 | Eric      |      1 |       1 | LeaderShip  |
< +-------+-----------+--------+---------+-------------+
---
> +--------+-------+-----------+-------------+
> | DEPTNO | EMPID | NAME      | NAME0       |
> +--------+-------+-----------+-------------+
> |      1 |   100 | Bill      | LeaderShip  |
> |      1 |   200 | Eric      | LeaderShip  |
> |      3 |   150 | Sebastian | Development |
> +--------+-------+-----------+-------------+
265,278c265,278
< +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+
< | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO | DEPTNO0 | DNAME      | LOC      |
< +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+
< |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |      30 | SALES      | CHICAGO  |
< |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |      30 | SALES      | CHICAGO  |
< +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+
---
> +--------+-------+--------+-----------+------+------------+---------+---------+------------+----------+
> | DEPTNO | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DNAME      | LOC      |
> +--------+-------+--------+-----------+------+------------+---------+---------+------------+----------+
> |     20 |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         | RESEARCH   | DALLAS   |
> |     30 |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 | SALES      | CHICAGO  |
> |     30 |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 | SALES      | CHICAGO  |
> |     20 |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         | RESEARCH   | DALLAS   |
> |     30 |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 | SALES      | CHICAGO  |
> |     30 |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         | SALES      | CHICAGO  |
> |     10 |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         | ACCOUNTING | NEW YORK |
> |     20 |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         | RESEARCH   | DALLAS   |
> |     10 |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         | ACCOUNTING | NEW YORK |
> |     30 |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 | SALES      | CHICAGO  |
> +--------+-------+--------+-----------+------+------------+---------+---------+------------+----------+
282,287c282,288
< EnumerableLimit(fetch=[10])
<   EnumerableSort(sort0=[$0], dir0=[ASC])
<     EnumerableJoin(condition=[=($7, $8)], joinType=[left])
<       EnumerableLimit(fetch=[10])
<         EnumerableTableScan(table=[[scott, EMP]])
<       EnumerableTableScan(table=[[scott, DEPT]])
---
> EnumerableCalc(expr#0..10=[{inputs}], DEPTNO0=[$t8], EMPNO=[$t0], ENAME=[$t1], JOB=[$t2], MGR=[$t3], HIREDATE=[$t4], SAL=[$t5], COMM=[$t6], DNAME=[$t9], LOC=[$t10])
>   EnumerableLimit(fetch=[10])
>     EnumerableSort(sort0=[$0], dir0=[ASC])
>       EnumerableJoin(condition=[=($7, $8)], joinType=[left])
>         EnumerableLimit(fetch=[10])
>           EnumerableTableScan(table=[[scott, EMP]])
>         EnumerableTableScan(table=[[scott, DEPT]])
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Files differ: /root/workspace/julianhyde/calcite/360401368/core/target/surefire/sql/sub-query.iq /root/workspace/julianhyde/calcite/360401368/core/target/test-classes/sql/sub-query.iq
490,498c490,507
< +-------+-------+-----------+------+------------+---------+------+--------+---------+------------+----------+
< | EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO | DEPTNO0 | DNAME      | LOC      |
< +-------+-------+-----------+------+------------+---------+------+--------+---------+------------+----------+
< |  7698 | BLAKE | MANAGER   | 7839 | 1981-01-05 | 2850.00 |      |     30 |      30 | SALES      | CHICAGO  |
< |  7788 | SCOTT | ANALYST   | 7566 | 1987-04-19 | 3000.00 |      |     20 |      20 | RESEARCH   | DALLAS   |
< |  7839 | KING  | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 |      |     20 |      20 | RESEARCH   | DALLAS   |
< +-------+-------+-----------+------+------------+---------+------+--------+---------+------------+----------+
< (4 rows)
---
> java.lang.AssertionError: Conversion to relational algebra failed to preserve datatypes:
> validated type:
> RecordType(TINYINT DEPTNO, SMALLINT NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" ENAME, VARCHAR(9) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" JOB, SMALLINT MGR, DATE HIREDATE, DECIMAL(7, 2) SAL, DECIMAL(7, 2) COMM, VARCHAR(14) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" DNAME, VARCHAR(13) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" LOC) NOT NULL
> converted type:
> RecordType(TINYINT NOT NULL DEPTNO0, SMALLINT NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" ENAME, VARCHAR(9) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" JOB, SMALLINT MGR, DATE HIREDATE, DECIMAL(7, 2) SAL, DECIMAL(7, 2) COMM, VARCHAR(14) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" DNAME, VARCHAR(13) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" LOC) NOT NULL
> rel:
> LogicalProject(DEPTNO0=[$8], EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DNAME=[$9], LOC=[$10])
>   LogicalFilter(condition=[=($5, $SCALAR_QUERY({
> LogicalAggregate(group=[{}], EXPR$0=[MAX($0)])
>   LogicalProject(SAL=[$5])
>     LogicalFilter(condition=[=($8, $cor0.DEPTNO0)])
>       LogicalJoin(condition=[=($7, $8)], joinType=[inner])
>         EnumerableTableScan(table=[[scott, EMP]])
>         EnumerableTableScan(table=[[scott, DEPT]])
> }))], variablesSet=[[$cor0]])
>     LogicalJoin(condition=[=($7, $8)], joinType=[inner])
>       EnumerableTableScan(table=[[scott, EMP]])
>       EnumerableTableScan(table=[[scott, DEPT]])
499a509,543
>  at org.apache.calcite.sql2rel.SqlToRelConverter.checkConvertedType(SqlToRelConverter.java:454)
>  at org.apache.calcite.sql2rel.SqlToRelConverter.convertQuery(SqlToRelConverter.java:571)
>  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:264)
>  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)
>  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)
>  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)
>  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)
>  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)
>  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)
>  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)
>  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)
>  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)
>  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)
>  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)
>  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>  at java.lang.reflect.Method.invoke(Method.java:498)
>  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
>  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
>  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
>  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
>  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
>  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
>  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
>  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
>  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)
>  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
>  at java.util.concurrent.FutureTask.run(FutureTask.java:266)
>  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
>  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
>  at java.lang.Thread.run(Thread.java:745)
530,548c574,589
< +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+
< | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO | DEPTNO0 | DNAME      | LOC      |
< +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+
< |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |      30 | SALES      | CHICAGO  |
< |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 |      30 | SALES      | CHICAGO  |
< |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |
< +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+
< (14 rows)
---
> java.lang.AssertionError: Conversion to relational algebra failed to preserve datatypes:
> validated type:
> RecordType(TINYINT DEPTNO, SMALLINT NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" ENAME, VARCHAR(9) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" JOB, SMALLINT MGR, DATE HIREDATE, DECIMAL(7, 2) SAL, DECIMAL(7, 2) COMM, VARCHAR(14) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" DNAME, VARCHAR(13) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" LOC) NOT NULL
> converted type:
> RecordType(TINYINT NOT NULL DEPTNO0, SMALLINT NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" ENAME, VARCHAR(9) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" JOB, SMALLINT MGR, DATE HIREDATE, DECIMAL(7, 2) SAL, DECIMAL(7, 2) COMM, VARCHAR(14) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" DNAME, VARCHAR(13) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" LOC) NOT NULL
> rel:
> LogicalProject(DEPTNO0=[$8], EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DNAME=[$9], LOC=[$10])
>   LogicalFilter(condition=[=($9, $SCALAR_QUERY({
> LogicalAggregate(group=[{}], EXPR$0=[MAX($0)])
>   LogicalProject(DNAME=[$1])
>     LogicalFilter(condition=[=($0, $cor0.DEPTNO0)])
>       EnumerableTableScan(table=[[scott, DEPT]])
> }))], variablesSet=[[$cor0]])
>     LogicalJoin(condition=[=($7, $8)], joinType=[inner])
>       EnumerableTableScan(table=[[scott, EMP]])
>       EnumerableTableScan(table=[[scott, DEPT]])
549a591,625
>  at org.apache.calcite.sql2rel.SqlToRelConverter.checkConvertedType(SqlToRelConverter.java:454)
>  at org.apache.calcite.sql2rel.SqlToRelConverter.convertQuery(SqlToRelConverter.java:571)
>  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:264)
>  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)
>  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)
>  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)
>  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)
>  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)
>  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)
>  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)
>  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)
>  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)
>  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)
>  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)
>  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>  at java.lang.reflect.Method.invoke(Method.java:498)
>  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
>  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
>  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
>  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
>  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
>  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
>  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
>  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
>  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)
>  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
>  at java.util.concurrent.FutureTask.run(FutureTask.java:266)
>  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
>  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
>  at java.lang.Thread.run(Thread.java:745)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Files differ: /root/workspace/julianhyde/calcite/360401368/core/target/surefire/sql/lateral.iq /root/workspace/julianhyde/calcite/360401368/core/target/test-classes/sql/lateral.iq
100,107c100,112
< +-------+--------+-----------+------+------------+---------+------+--------+---------+------------+----------+
< | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO | DEPTNO0 | DNAME      | LOC      |
< +-------+--------+-----------+------+------------+---------+------+--------+---------+------------+----------+
< |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |      |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |      |     10 |      10 | ACCOUNTING | NEW YORK |
< +-------+--------+-----------+------+------------+---------+------+--------+---------+------------+----------+
< (3 rows)
---
> java.lang.AssertionError: Conversion to relational algebra failed to preserve datatypes:
> validated type:
> RecordType(TINYINT DEPTNO, SMALLINT NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" ENAME, VARCHAR(9) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" JOB, SMALLINT MGR, DATE HIREDATE, DECIMAL(7, 2) SAL, DECIMAL(7, 2) COMM, VARCHAR(14) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" DNAME, VARCHAR(13) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" LOC) NOT NULL
> converted type:
> RecordType(TINYINT NOT NULL DEPTNO0, SMALLINT NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" ENAME, VARCHAR(9) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" JOB, SMALLINT MGR, DATE HIREDATE, DECIMAL(7, 2) SAL, DECIMAL(7, 2) COMM, VARCHAR(14) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" DNAME, VARCHAR(13) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" LOC) NOT NULL
> rel:
> LogicalProject(DEPTNO0=[$8], EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DNAME=[$9], LOC=[$10])
>   LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
>     LogicalJoin(condition=[=($7, $8)], joinType=[inner])
>       LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7])
>         EnumerableTableScan(table=[[scott, EMP]])
>       LogicalProject(DEPTNO=[$0], DNAME=[$1], LOC=[$2])
>         EnumerableTableScan(table=[[scott, DEPT]])
108a114,148
>  at org.apache.calcite.sql2rel.SqlToRelConverter.checkConvertedType(SqlToRelConverter.java:454)
>  at org.apache.calcite.sql2rel.SqlToRelConverter.convertQuery(SqlToRelConverter.java:571)
>  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:264)
>  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)
>  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)
>  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)
>  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)
>  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)
>  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)
>  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)
>  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)
>  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)
>  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)
>  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)
>  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>  at java.lang.reflect.Method.invoke(Method.java:498)
>  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
>  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
>  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
>  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
>  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
>  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
>  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
>  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
>  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)
>  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
>  at java.util.concurrent.FutureTask.run(FutureTask.java:266)
>  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
>  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
>  at java.lang.Thread.run(Thread.java:745)
', isError=false}], nbFailures=3, nbErrors=1}
status: NOPATCH
dateEnd: Fri Mar 30 22:14:26 CEST 2018
allocatedtime: 119minutes 
passingTime: 1minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/julianhyde/calcite/360401368/core/src/main/java], projectClasspath='[Ljava.net.URL;@56748a6f', projectTests=[org.apache.calcite.test.CoreQuidemTest], complianceLevel=8, outputFolder=./workspace/julianhyde/calcite/360401368, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #2
location: FailureLocation{className='org.apache.calcite.test.CoreQuidemTest', failingMethods=[org.apache.calcite.test.CoreQuidemTest#test[15: quidem(sql/lateral.iq)], org.apache.calcite.test.CoreQuidemTest#test[5: quidem(sql/sub-query.iq)], org.apache.calcite.test.CoreQuidemTest#test[4: quidem(sql/join.iq)]], erroringMethods=[org.apache.calcite.test.CoreQuidemTest#test[1: quidem(sql/misc.iq)]], failures=[FailureType{failureName='java.lang.reflect.InvocationTargetException', failureDetail='null', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Files differ: /root/workspace/julianhyde/calcite/360401368/core/target/surefire/sql/join.iq /root/workspace/julianhyde/calcite/360401368/core/target/test-classes/sql/join.iq
250,256c250,256
< +-------+-----------+--------+---------+-------------+
< | EMPID | NAME      | DEPTNO | DEPTNO0 | NAME0       |
< +-------+-----------+--------+---------+-------------+
< |   100 | Bill      |      1 |       1 | LeaderShip  |
< |   150 | Sebastian |      3 |       3 | Development |
< |   200 | Eric      |      1 |       1 | LeaderShip  |
< +-------+-----------+--------+---------+-------------+
---
> +--------+-------+-----------+-------------+
> | DEPTNO | EMPID | NAME      | NAME0       |
> +--------+-------+-----------+-------------+
> |      1 |   100 | Bill      | LeaderShip  |
> |      1 |   200 | Eric      | LeaderShip  |
> |      3 |   150 | Sebastian | Development |
> +--------+-------+-----------+-------------+
265,278c265,278
< +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+
< | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO | DEPTNO0 | DNAME      | LOC      |
< +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+
< |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |      30 | SALES      | CHICAGO  |
< |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |      30 | SALES      | CHICAGO  |
< +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+
---
> +--------+-------+--------+-----------+------+------------+---------+---------+------------+----------+
> | DEPTNO | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DNAME      | LOC      |
> +--------+-------+--------+-----------+------+------------+---------+---------+------------+----------+
> |     20 |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         | RESEARCH   | DALLAS   |
> |     30 |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 | SALES      | CHICAGO  |
> |     30 |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 | SALES      | CHICAGO  |
> |     20 |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         | RESEARCH   | DALLAS   |
> |     30 |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 | SALES      | CHICAGO  |
> |     30 |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         | SALES      | CHICAGO  |
> |     10 |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         | ACCOUNTING | NEW YORK |
> |     20 |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         | RESEARCH   | DALLAS   |
> |     10 |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         | ACCOUNTING | NEW YORK |
> |     30 |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 | SALES      | CHICAGO  |
> +--------+-------+--------+-----------+------+------------+---------+---------+------------+----------+
282,287c282,288
< EnumerableLimit(fetch=[10])
<   EnumerableSort(sort0=[$0], dir0=[ASC])
<     EnumerableJoin(condition=[=($7, $8)], joinType=[left])
<       EnumerableLimit(fetch=[10])
<         EnumerableTableScan(table=[[scott, EMP]])
<       EnumerableTableScan(table=[[scott, DEPT]])
---
> EnumerableCalc(expr#0..10=[{inputs}], DEPTNO0=[$t8], EMPNO=[$t0], ENAME=[$t1], JOB=[$t2], MGR=[$t3], HIREDATE=[$t4], SAL=[$t5], COMM=[$t6], DNAME=[$t9], LOC=[$t10])
>   EnumerableLimit(fetch=[10])
>     EnumerableSort(sort0=[$0], dir0=[ASC])
>       EnumerableJoin(condition=[=($7, $8)], joinType=[left])
>         EnumerableLimit(fetch=[10])
>           EnumerableTableScan(table=[[scott, EMP]])
>         EnumerableTableScan(table=[[scott, DEPT]])
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Files differ: /root/workspace/julianhyde/calcite/360401368/core/target/surefire/sql/sub-query.iq /root/workspace/julianhyde/calcite/360401368/core/target/test-classes/sql/sub-query.iq
490,498c490,507
< +-------+-------+-----------+------+------------+---------+------+--------+---------+------------+----------+
< | EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO | DEPTNO0 | DNAME      | LOC      |
< +-------+-------+-----------+------+------------+---------+------+--------+---------+------------+----------+
< |  7698 | BLAKE | MANAGER   | 7839 | 1981-01-05 | 2850.00 |      |     30 |      30 | SALES      | CHICAGO  |
< |  7788 | SCOTT | ANALYST   | 7566 | 1987-04-19 | 3000.00 |      |     20 |      20 | RESEARCH   | DALLAS   |
< |  7839 | KING  | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 |      |     20 |      20 | RESEARCH   | DALLAS   |
< +-------+-------+-----------+------+------------+---------+------+--------+---------+------------+----------+
< (4 rows)
---
> java.lang.AssertionError: Conversion to relational algebra failed to preserve datatypes:
> validated type:
> RecordType(TINYINT DEPTNO, SMALLINT NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" ENAME, VARCHAR(9) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" JOB, SMALLINT MGR, DATE HIREDATE, DECIMAL(7, 2) SAL, DECIMAL(7, 2) COMM, VARCHAR(14) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" DNAME, VARCHAR(13) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" LOC) NOT NULL
> converted type:
> RecordType(TINYINT NOT NULL DEPTNO0, SMALLINT NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" ENAME, VARCHAR(9) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" JOB, SMALLINT MGR, DATE HIREDATE, DECIMAL(7, 2) SAL, DECIMAL(7, 2) COMM, VARCHAR(14) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" DNAME, VARCHAR(13) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" LOC) NOT NULL
> rel:
> LogicalProject(DEPTNO0=[$8], EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DNAME=[$9], LOC=[$10])
>   LogicalFilter(condition=[=($5, $SCALAR_QUERY({
> LogicalAggregate(group=[{}], EXPR$0=[MAX($0)])
>   LogicalProject(SAL=[$5])
>     LogicalFilter(condition=[=($8, $cor0.DEPTNO0)])
>       LogicalJoin(condition=[=($7, $8)], joinType=[inner])
>         EnumerableTableScan(table=[[scott, EMP]])
>         EnumerableTableScan(table=[[scott, DEPT]])
> }))], variablesSet=[[$cor0]])
>     LogicalJoin(condition=[=($7, $8)], joinType=[inner])
>       EnumerableTableScan(table=[[scott, EMP]])
>       EnumerableTableScan(table=[[scott, DEPT]])
499a509,543
>  at org.apache.calcite.sql2rel.SqlToRelConverter.checkConvertedType(SqlToRelConverter.java:454)
>  at org.apache.calcite.sql2rel.SqlToRelConverter.convertQuery(SqlToRelConverter.java:571)
>  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:264)
>  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)
>  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)
>  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)
>  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)
>  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)
>  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)
>  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)
>  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)
>  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)
>  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)
>  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)
>  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>  at java.lang.reflect.Method.invoke(Method.java:498)
>  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
>  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
>  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
>  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
>  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
>  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
>  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
>  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
>  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)
>  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
>  at java.util.concurrent.FutureTask.run(FutureTask.java:266)
>  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
>  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
>  at java.lang.Thread.run(Thread.java:745)
530,548c574,589
< +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+
< | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO | DEPTNO0 | DNAME      | LOC      |
< +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+
< |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7566 | JONES  | MANAGER   | 7839 | 1981-02-04 | 2975.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7698 | BLAKE  | MANAGER   | 7839 | 1981-01-05 | 2850.00 |         |     30 |      30 | SALES      | CHICAGO  |
< |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |      30 | SALES      | CHICAGO  |
< |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |         |     30 |      30 | SALES      | CHICAGO  |
< |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |         |     20 |      20 | RESEARCH   | DALLAS   |
< |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |         |     10 |      10 | ACCOUNTING | NEW YORK |
< +-------+--------+-----------+------+------------+---------+---------+--------+---------+------------+----------+
< (14 rows)
---
> java.lang.AssertionError: Conversion to relational algebra failed to preserve datatypes:
> validated type:
> RecordType(TINYINT DEPTNO, SMALLINT NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" ENAME, VARCHAR(9) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" JOB, SMALLINT MGR, DATE HIREDATE, DECIMAL(7, 2) SAL, DECIMAL(7, 2) COMM, VARCHAR(14) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" DNAME, VARCHAR(13) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" LOC) NOT NULL
> converted type:
> RecordType(TINYINT NOT NULL DEPTNO0, SMALLINT NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" ENAME, VARCHAR(9) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" JOB, SMALLINT MGR, DATE HIREDATE, DECIMAL(7, 2) SAL, DECIMAL(7, 2) COMM, VARCHAR(14) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" DNAME, VARCHAR(13) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" LOC) NOT NULL
> rel:
> LogicalProject(DEPTNO0=[$8], EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DNAME=[$9], LOC=[$10])
>   LogicalFilter(condition=[=($9, $SCALAR_QUERY({
> LogicalAggregate(group=[{}], EXPR$0=[MAX($0)])
>   LogicalProject(DNAME=[$1])
>     LogicalFilter(condition=[=($0, $cor0.DEPTNO0)])
>       EnumerableTableScan(table=[[scott, DEPT]])
> }))], variablesSet=[[$cor0]])
>     LogicalJoin(condition=[=($7, $8)], joinType=[inner])
>       EnumerableTableScan(table=[[scott, EMP]])
>       EnumerableTableScan(table=[[scott, DEPT]])
549a591,625
>  at org.apache.calcite.sql2rel.SqlToRelConverter.checkConvertedType(SqlToRelConverter.java:454)
>  at org.apache.calcite.sql2rel.SqlToRelConverter.convertQuery(SqlToRelConverter.java:571)
>  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:264)
>  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)
>  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)
>  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)
>  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)
>  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)
>  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)
>  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)
>  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)
>  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)
>  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)
>  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)
>  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>  at java.lang.reflect.Method.invoke(Method.java:498)
>  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
>  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
>  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
>  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
>  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
>  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
>  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
>  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
>  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)
>  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
>  at java.util.concurrent.FutureTask.run(FutureTask.java:266)
>  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
>  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
>  at java.lang.Thread.run(Thread.java:745)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Files differ: /root/workspace/julianhyde/calcite/360401368/core/target/surefire/sql/lateral.iq /root/workspace/julianhyde/calcite/360401368/core/target/test-classes/sql/lateral.iq
100,107c100,112
< +-------+--------+-----------+------+------------+---------+------+--------+---------+------------+----------+
< | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO | DEPTNO0 | DNAME      | LOC      |
< +-------+--------+-----------+------+------------+---------+------+--------+---------+------------+----------+
< |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |      |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7839 | KING   | PRESIDENT |      | 1981-11-17 | 5000.00 |      |     10 |      10 | ACCOUNTING | NEW YORK |
< |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |      |     10 |      10 | ACCOUNTING | NEW YORK |
< +-------+--------+-----------+------+------------+---------+------+--------+---------+------------+----------+
< (3 rows)
---
> java.lang.AssertionError: Conversion to relational algebra failed to preserve datatypes:
> validated type:
> RecordType(TINYINT DEPTNO, SMALLINT NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" ENAME, VARCHAR(9) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" JOB, SMALLINT MGR, DATE HIREDATE, DECIMAL(7, 2) SAL, DECIMAL(7, 2) COMM, VARCHAR(14) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" DNAME, VARCHAR(13) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" LOC) NOT NULL
> converted type:
> RecordType(TINYINT NOT NULL DEPTNO0, SMALLINT NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" ENAME, VARCHAR(9) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" JOB, SMALLINT MGR, DATE HIREDATE, DECIMAL(7, 2) SAL, DECIMAL(7, 2) COMM, VARCHAR(14) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" DNAME, VARCHAR(13) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" LOC) NOT NULL
> rel:
> LogicalProject(DEPTNO0=[$8], EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DNAME=[$9], LOC=[$10])
>   LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
>     LogicalJoin(condition=[=($7, $8)], joinType=[inner])
>       LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7])
>         EnumerableTableScan(table=[[scott, EMP]])
>       LogicalProject(DEPTNO=[$0], DNAME=[$1], LOC=[$2])
>         EnumerableTableScan(table=[[scott, DEPT]])
108a114,148
>  at org.apache.calcite.sql2rel.SqlToRelConverter.checkConvertedType(SqlToRelConverter.java:454)
>  at org.apache.calcite.sql2rel.SqlToRelConverter.convertQuery(SqlToRelConverter.java:571)
>  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:264)
>  at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:230)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:781)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:640)
>  at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:610)
>  at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:221)
>  at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:603)
>  at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:638)
>  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:149)
>  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:218)
>  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:830)
>  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1450)
>  at net.hydromatic.quidem.Quidem.execute(Quidem.java:197)
>  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:152)
>  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:209)
>  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>  at java.lang.reflect.Method.invoke(Method.java:498)
>  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
>  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
>  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
>  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
>  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
>  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
>  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
>  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
>  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)
>  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
>  at java.util.concurrent.FutureTask.run(FutureTask.java:266)
>  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
>  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
>  at java.lang.Thread.run(Thread.java:745)
', isError=false}], nbFailures=3, nbErrors=1}
status: NOPATCH
dateEnd: Fri Mar 30 22:15:25 CEST 2018
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/julianhyde/calcite/360401368/core/src/main/java], projectClasspath='[Ljava.net.URL;@2ecc9750', projectTests=[org.apache.calcite.test.CoreQuidemTest], complianceLevel=8, outputFolder=./workspace/julianhyde/calcite/360401368, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #3
location: FailureLocation{className='org.apache.calcite.test.SqlToRelConverterExtendedTest', failingMethods=[org.apache.calcite.test.SqlToRelConverterExtendedTest#testJoinNaturalMultipleCommonColumn, org.apache.calcite.test.SqlToRelConverterExtendedTest#testJoinUsingCompound], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='Conversion to relational algebra failed to preserve datatypes:
validated type:
RecordType(VARCHAR(20) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL ENAME, INTEGER NOT NULL DEPTNO, INTEGER NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL JOB, INTEGER MGR, TIMESTAMP(0) NOT NULL HIREDATE, INTEGER NOT NULL SAL, INTEGER NOT NULL COMM, BOOLEAN NOT NULL SLACKER) NOT NULL
converted type:
RecordType(VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL ENAME0, INTEGER NOT NULL DEPTNO0, INTEGER NOT NULL EMPNO, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL JOB, INTEGER MGR, TIMESTAMP(0) NOT NULL HIREDATE, INTEGER NOT NULL SAL, INTEGER NOT NULL COMM, BOOLEAN NOT NULL SLACKER) NOT NULL
rel:
LogicalProject(ENAME0=[$10], DEPTNO0=[$9], EMPNO=[$0], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], SLACKER=[$8])
  LogicalJoin(condition=[AND(=($1, $10), =($7, $9))], joinType=[inner])
    LogicalTableScan(table=[[CATALOG, SALES, EMP]])
    LogicalProject(DEPTNO=[$0], ENAME=[$1])
      LogicalTableScan(table=[[CATALOG, SALES, DEPT]])
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Conversion to relational algebra failed to preserve datatypes:
validated type:
RecordType(INTEGER NOT NULL DEPTNO, INTEGER EMPNO0, VARCHAR(20) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL ENAME, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL JOB, INTEGER MGR, TIMESTAMP(0) NOT NULL HIREDATE, INTEGER NOT NULL SAL, INTEGER NOT NULL COMM, BOOLEAN NOT NULL SLACKER, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NAME) NOT NULL
converted type:
RecordType(INTEGER DEPTNO0, INTEGER NOT NULL EMPNO, VARCHAR(20) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL ENAME, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NOT NULL JOB, INTEGER MGR, TIMESTAMP(0) NOT NULL HIREDATE, INTEGER NOT NULL SAL, INTEGER NOT NULL COMM, BOOLEAN NOT NULL SLACKER, VARCHAR(10) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary" NAME) NOT NULL
rel:
LogicalProject(DEPTNO0=[$9], EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], SLACKER=[$8], NAME=[$10])
  LogicalJoin(condition=[AND(=($7, $9), =($0, $11))], joinType=[left])
    LogicalTableScan(table=[[CATALOG, SALES, EMP]])
    LogicalProject(DEPTNO=[$0], NAME=[$1], EMPNO=[*($0, 5)])
      LogicalTableScan(table=[[CATALOG, SALES, DEPT]])
', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Fri Mar 30 22:16:20 CEST 2018
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/julianhyde/calcite/360401368/core/src/main/java], projectClasspath='[Ljava.net.URL;@3727784c', projectTests=[org.apache.calcite.test.SqlToRelConverterExtendedTest], complianceLevel=8, outputFolder=./workspace/julianhyde/calcite/360401368, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #4
location: FailureLocation{className='org.apache.calcite.rel.rel2sql.RelToSqlConverterTest', failingMethods=[org.apache.calcite.rel.rel2sql.RelToSqlConverterTest#testSimpleJoinUsing], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: is "SELECT *\nFROM \"foodmart\".\"sales_fact_1997\"\nINNER JOIN \"foodmart\".\"customer\" ON \"sales_fact_1997\".\"customer_id\" = \"customer\".\"customer_id\"\nINNER JOIN \"foodmart\".\"product\" ON \"sales_fact_1997\".\"product_id\" = \"product\".\"product_id\"\nINNER JOIN \"foodmart\".\"product_class\" ON \"product\".\"product_class_id\" = \"product_class\".\"product_class_id\"\nWHERE \"customer\".\"city\" = 'San Francisco' AND \"product_class\".\"product_department\" = 'Snacks'"
     but: was "SELECT \"product_class\".\"product_class_id\" AS \"product_class_id0\", \"sales_fact_1997\".\"time_id\", \"sales_fact_1997\".\"promotion_id\", \"sales_fact_1997\".\"store_id\", \"sales_fact_1997\".\"store_sales\", \"sales_fact_1997\".\"store_cost\", \"sales_fact_1997\".\"unit_sales\", \"customer\".\"account_num\", \"customer\".\"lname\", \"customer\".\"fname\", \"customer\".\"mi\", \"customer\".\"address1\", \"customer\".\"address2\", \"customer\".\"address3\", \"customer\".\"address4\", \"customer\".\"city\", \"customer\".\"state_province\", \"customer\".\"postal_code\", \"customer\".\"country\", \"customer\".\"customer_region_id\", \"customer\".\"phone1\", \"customer\".\"phone2\", \"customer\".\"birthdate\", \"customer\".\"marital_status\", \"customer\".\"yearly_income\", \"customer\".\"gender\", \"customer\".\"total_children\", \"customer\".\"num_children_at_home\", \"customer\".\"education\", \"customer\".\"date_accnt_opened\", \"customer\".\"member_card\", \"customer\".\"occupation\", \"customer\".\"houseowner\", \"customer\".\"num_cars_owned\", \"customer\".\"fullname\", \"product\".\"brand_name\", \"product\".\"product_name\", \"product\".\"SKU\", \"product\".\"SRP\", \"product\".\"gross_weight\", \"product\".\"net_weight\", \"product\".\"recyclable_package\", \"product\".\"low_fat\", \"product\".\"units_per_case\", \"product\".\"cases_per_pallet\", \"product\".\"shelf_width\", \"product\".\"shelf_height\", \"product\".\"shelf_depth\", \"product_class\".\"product_subcategory\", \"product_class\".\"product_category\", \"product_class\".\"product_department\", \"product_class\".\"product_family\"\nFROM \"foodmart\".\"sales_fact_1997\"\nINNER JOIN \"foodmart\".\"customer\" ON \"sales_fact_1997\".\"customer_id\" = \"customer\".\"customer_id\"\nINNER JOIN \"foodmart\".\"product\" ON \"sales_fact_1997\".\"product_id\" = \"product\".\"product_id\"\nINNER JOIN \"foodmart\".\"product_class\" ON \"product\".\"product_class_id\" = \"product_class\".\"product_class_id\"\nWHERE \"customer\".\"city\" = 'San Francisco' AND \"product_class\".\"product_department\" = 'Snacks'"', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Fri Mar 30 22:17:16 CEST 2018
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/julianhyde/calcite/360401368/core/src/main/java], projectClasspath='[Ljava.net.URL;@202053d8', projectTests=[org.apache.calcite.rel.rel2sql.RelToSqlConverterTest], complianceLevel=8, outputFolder=./workspace/julianhyde/calcite/360401368, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #5
location: FailureLocation{className='org.apache.calcite.test.LatticeTest', failingMethods=[], erroringMethods=[org.apache.calcite.test.LatticeTest#testTileAlgorithm2, org.apache.calcite.test.LatticeTest#testTileAlgorithm, org.apache.calcite.test.LatticeTest#testTwoLattices], failures=[FailureType{failureName='java.lang.RuntimeException', failureDetail='exception while preparing [select s."unit_sales", p."brand_name"
from "foodmart"."sales_fact_1997" as s
join "foodmart"."product" as p using ("product_id")
]', isError=true}, FailureType{failureName='java.lang.RuntimeException', failureDetail='exception while executing [explain plan for select distinct t."the_year", t."quarter"
from "foodmart"."sales_fact_1997" as s
join "foodmart"."time_by_day" as t using ("time_id")
]', isError=true}, FailureType{failureName='java.lang.RuntimeException', failureDetail='exception while executing [explain plan for select distinct t."the_year", t."quarter"
from "foodmart"."sales_fact_1997" as s
join "foodmart"."time_by_day" as t using ("time_id")
]', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Fri Mar 30 22:18:21 CEST 2018
allocatedtime: 119minutes 
passingTime: 1minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/julianhyde/calcite/360401368/core/src/main/java], projectClasspath='[Ljava.net.URL;@755e20b3', projectTests=[org.apache.calcite.test.LatticeTest], complianceLevel=8, outputFolder=./workspace/julianhyde/calcite/360401368, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



