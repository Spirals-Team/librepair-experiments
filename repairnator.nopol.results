nopolinfo #0
location: FailureLocation{className='org.everit.json.schema.V7TestSuiteTest', failingMethods=[org.everit.json.schema.V7TestSuiteTest#test[[relative-json-pointer.json]/validation of Relative JSON Pointers (RJP)], org.everit.json.schema.V7TestSuiteTest#test[[if-then-else.json]/validate against correct branch, then vs else], org.everit.json.schema.V7TestSuiteTest#test[[propertyNames.json]/propertyNames with boolean schema false], org.everit.json.schema.V7TestSuiteTest#test[[regex.json]/validation of regular expressions], org.everit.json.schema.V7TestSuiteTest#test[[idn-email.json]/validation of an internationalized e-mail addresses], org.everit.json.schema.V7TestSuiteTest#test[[if-then-else.json]/if and then without else], org.everit.json.schema.V7TestSuiteTest#test[[propertyNames.json]/propertyNames validation], org.everit.json.schema.V7TestSuiteTest#test[[idn-hostname.json]/validation of internationalized host names], org.everit.json.schema.V7TestSuiteTest#test[[iri.json]/validation of IRIs], org.everit.json.schema.V7TestSuiteTest#test[[uri.json]/validation of URIs], org.everit.json.schema.V7TestSuiteTest#test[[iri-reference.json]/validation of IRI References], org.everit.json.schema.V7TestSuiteTest#test[[if-then-else.json]/if and else without then]], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [relative-json-pointer.json]/an invalid RJP that is a valid JSON Pointer', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [regex.json]/a regular expression with unclosed parens is invalid', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [iri.json]/an invalid relative IRI Reference', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [iri.json]/an invalid IRI', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [iri.json]/an invalid IRI though valid IRI reference', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [idn-hostname.json]/illegal first char U+302E Hangul single dot tone mark', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [idn-hostname.json]/contains illegal char U+302E Hangul single dot tone mark', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [idn-hostname.json]/a host name with a component too long', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [uri.json]/an invalid protocol-relative URI Reference', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [idn-email.json]/an invalid idn e-mail address', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [if-then-else.json]/invalid through then', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [if-then-else.json]/invalid through else', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [if-then-else.json]/invalid through then', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [if-then-else.json]/invalid through else', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [propertyNames.json]/some property names invalid', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [propertyNames.json]/object with any properties is invalid', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [iri-reference.json]/an invalid IRI Reference', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='false success for [iri-reference.json]/an invalid IRI fragment', isError=false}], nbFailures=18, nbErrors=0}
status: NOPATCH
dateEnd: Wed Jan 10 00:10:42 CET 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/everit-org/json-schema/327015648/tests/../core/src/main/java], projectClasspath='[Ljava.net.URL;@1813f3e9', projectTests=[org.everit.json.schema.V7TestSuiteTest], complianceLevel=8, outputFolder=./, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



