nopolinfo #0
location: FailureLocation{className='br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#addConnection, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#removeConnectionNoOp, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#noSuchConnectionFactory, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findUserIdsConnectedTo, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findConnectionsByProviderIdEmptyResult, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findConnectionByApiToUser, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findConnectionsByProviderId, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#removeConnectionsToProviderNoOp, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findPrimaryConnectionNotConnected, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findUserIdWithConnectionMultipleConnectionsToSameProviderUser, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findConnectionByKey, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#updateConnectionProfileFields, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findUserIdWithConnectionNoSuchConnection, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findConnectionsByApi, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findConnectionByKeyNoSuchConnection, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findConnectionsToUsers, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#updateConnectionAccessFields, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findConnectionsToUsersEmptyInput, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findPrimaryConnection_afterRemove, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findPrimaryConnection, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findUserIdWithConnection, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findConnectionsToUsersEmptyResult, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findAllConnectionsMultipleConnectionResults, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#removeConnection, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findAllConnectionsEmptyResult, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findConnectionByApiToUserNoSuchConnection, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#removeConnections, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#addConnectionDuplicate, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findPrimaryConnectionSelectFromMultipleByRank, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findConnectionsByApiEmptyResult, br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest#findAllConnections], failures=[FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}], nbFailures=0, nbErrors=31}
status: NOPATCH
dateEnd: Tue Mar 27 10:41:56 EDT 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@c689973', projectTests=[br.com.vitrine.repository.CustomSocialUsersConnectionRepositoryIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 305
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='br.com.vitrine.web.rest.AccountResourceIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.web.rest.AccountResourceIntTest#testRegisterInvalidEmail, br.com.vitrine.web.rest.AccountResourceIntTest#testRequestPasswordResetWrongEmail, br.com.vitrine.web.rest.AccountResourceIntTest#testRegisterValid, br.com.vitrine.web.rest.AccountResourceIntTest#testSaveExistingEmailAndLogin, br.com.vitrine.web.rest.AccountResourceIntTest#testChangePasswordTooLong, br.com.vitrine.web.rest.AccountResourceIntTest#testGetUnknownAccount, br.com.vitrine.web.rest.AccountResourceIntTest#testFinishPasswordResetTooSmall, br.com.vitrine.web.rest.AccountResourceIntTest#testChangePassword, br.com.vitrine.web.rest.AccountResourceIntTest#testSaveExistingEmail, br.com.vitrine.web.rest.AccountResourceIntTest#testActivateAccountWithWrongKey, br.com.vitrine.web.rest.AccountResourceIntTest#testSaveInvalidEmail, br.com.vitrine.web.rest.AccountResourceIntTest#testGetExistingAccount, br.com.vitrine.web.rest.AccountResourceIntTest#testRegisterInvalidLogin, br.com.vitrine.web.rest.AccountResourceIntTest#testFinishPasswordResetWrongKey, br.com.vitrine.web.rest.AccountResourceIntTest#testFinishPasswordReset, br.com.vitrine.web.rest.AccountResourceIntTest#testRequestPasswordResetUpperCaseEmail, br.com.vitrine.web.rest.AccountResourceIntTest#testAuthenticatedUser, br.com.vitrine.web.rest.AccountResourceIntTest#testActivateAccount, br.com.vitrine.web.rest.AccountResourceIntTest#testRegisterInvalidPassword, br.com.vitrine.web.rest.AccountResourceIntTest#testChangePasswordTooSmall, br.com.vitrine.web.rest.AccountResourceIntTest#testRegisterDuplicateEmail, br.com.vitrine.web.rest.AccountResourceIntTest#testRegisterAdminIsIgnored, br.com.vitrine.web.rest.AccountResourceIntTest#testRegisterDuplicateLogin, br.com.vitrine.web.rest.AccountResourceIntTest#testRequestPasswordReset, br.com.vitrine.web.rest.AccountResourceIntTest#testChangePasswordEmpty, br.com.vitrine.web.rest.AccountResourceIntTest#testSaveAccount, br.com.vitrine.web.rest.AccountResourceIntTest#testRegisterNullPassword, br.com.vitrine.web.rest.AccountResourceIntTest#testNonAuthenticatedUser], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=0, nbErrors=28}
status: TIMEOUT
dateEnd: Tue Mar 27 12:41:57 EDT 2018
allocatedtime: 120minutes 
passingTime: 120minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@7548e1fb', projectTests=[br.com.vitrine.web.rest.AccountResourceIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 118
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #2
location: FailureLocation{className='br.com.vitrine.web.rest.UserResourceIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.web.rest.UserResourceIntTest#createUser, br.com.vitrine.web.rest.UserResourceIntTest#updateUserLogin, br.com.vitrine.web.rest.UserResourceIntTest#createUserWithExistingLogin, br.com.vitrine.web.rest.UserResourceIntTest#testAuthorityEquals, br.com.vitrine.web.rest.UserResourceIntTest#getNonExistingUser, br.com.vitrine.web.rest.UserResourceIntTest#testUserFromId, br.com.vitrine.web.rest.UserResourceIntTest#deleteUser, br.com.vitrine.web.rest.UserResourceIntTest#testUserToUserDTO, br.com.vitrine.web.rest.UserResourceIntTest#testUserEquals, br.com.vitrine.web.rest.UserResourceIntTest#updateUserExistingEmail, br.com.vitrine.web.rest.UserResourceIntTest#createUserWithExistingEmail, br.com.vitrine.web.rest.UserResourceIntTest#getUser, br.com.vitrine.web.rest.UserResourceIntTest#createUserWithExistingId, br.com.vitrine.web.rest.UserResourceIntTest#updateUserExistingLogin, br.com.vitrine.web.rest.UserResourceIntTest#testUserDTOtoUser, br.com.vitrine.web.rest.UserResourceIntTest#getAllUsers, br.com.vitrine.web.rest.UserResourceIntTest#updateUser, br.com.vitrine.web.rest.UserResourceIntTest#getAllAuthorities], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}], nbFailures=0, nbErrors=18}
status: TIMEOUT
dateEnd: Tue Mar 27 13:42:02 EDT 2018
allocatedtime: 60minutes 
passingTime: 60minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@61d7bb61', projectTests=[br.com.vitrine.web.rest.UserResourceIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 118
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #3
location: FailureLocation{className='br.com.vitrine.service.SocialServiceIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.service.SocialServiceIntTest#testCreateSocialUserShouldThrowExceptionIfConnectionIsNull, br.com.vitrine.service.SocialServiceIntTest#testCreateSocialUserShouldCreateUserIfNotExist, br.com.vitrine.service.SocialServiceIntTest#testCreateSocialUserShouldCreateUserWithExactLangKey, br.com.vitrine.service.SocialServiceIntTest#testCreateSocialUserShouldThrowExceptionIfConnectionHasNoEmailAndLoginAlreadyExist, br.com.vitrine.service.SocialServiceIntTest#testCreateSocialUserShouldNotChangeUserIfEmailAlreadyExist, br.com.vitrine.service.SocialServiceIntTest#testCreateSocialUserShouldCreateUserWithSocialInformation, br.com.vitrine.service.SocialServiceIntTest#testCreateSocialUserShouldSendRegistrationValidationEmail, br.com.vitrine.service.SocialServiceIntTest#testCreateSocialUserShouldNotCreateUserIfEmailAlreadyExist, br.com.vitrine.service.SocialServiceIntTest#testCreateSocialUserShouldCreateActivatedUserWithRoleUserAndPassword, br.com.vitrine.service.SocialServiceIntTest#testDeleteUserSocialConnection, br.com.vitrine.service.SocialServiceIntTest#testCreateSocialUserShouldCreateUserWithLoginSameAsEmailIfNotTwitter, br.com.vitrine.service.SocialServiceIntTest#testCreateSocialUserShouldCreateUserWithSocialLoginWhenIsTwitter, br.com.vitrine.service.SocialServiceIntTest#testCreateSocialUserShouldCreateSocialConnection, br.com.vitrine.service.SocialServiceIntTest#testCreateSocialUserShouldThrowExceptionIfConnectionHasNoEmailAndNoLogin], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=0, nbErrors=14}
status: TIMEOUT
dateEnd: Tue Mar 27 14:12:06 EDT 2018
allocatedtime: 30minutes 
passingTime: 30minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@45482f82', projectTests=[br.com.vitrine.service.SocialServiceIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 118
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #4
location: FailureLocation{className='br.com.vitrine.web.rest.ProdutoResourceIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.web.rest.ProdutoResourceIntTest#checkDataCadastroIsRequired, br.com.vitrine.web.rest.ProdutoResourceIntTest#deleteProduto, br.com.vitrine.web.rest.ProdutoResourceIntTest#checkNomeIsRequired, br.com.vitrine.web.rest.ProdutoResourceIntTest#getNonExistingProduto, br.com.vitrine.web.rest.ProdutoResourceIntTest#getProduto, br.com.vitrine.web.rest.ProdutoResourceIntTest#testEntityFromId, br.com.vitrine.web.rest.ProdutoResourceIntTest#createProdutoWithExistingId, br.com.vitrine.web.rest.ProdutoResourceIntTest#getAllProdutos, br.com.vitrine.web.rest.ProdutoResourceIntTest#equalsVerifier, br.com.vitrine.web.rest.ProdutoResourceIntTest#searchProduto, br.com.vitrine.web.rest.ProdutoResourceIntTest#updateNonExistingProduto, br.com.vitrine.web.rest.ProdutoResourceIntTest#createProduto, br.com.vitrine.web.rest.ProdutoResourceIntTest#updateProduto, br.com.vitrine.web.rest.ProdutoResourceIntTest#dtoEqualsVerifier], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}], nbFailures=0, nbErrors=14}
status: NOPATCH
dateEnd: Tue Mar 27 14:17:34 EDT 2018
allocatedtime: 15minutes 
passingTime: 5minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@3119fcad', projectTests=[br.com.vitrine.web.rest.ProdutoResourceIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #5
location: FailureLocation{className='br.com.vitrine.repository.CustomAuditEventRepositoryIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.repository.CustomAuditEventRepositoryIntTest#testFindByPrincipalNotNullAndAfterIsNull, br.com.vitrine.repository.CustomAuditEventRepositoryIntTest#findByPrincipalAndType, br.com.vitrine.repository.CustomAuditEventRepositoryIntTest#testAddEventWithNullData, br.com.vitrine.repository.CustomAuditEventRepositoryIntTest#addAuditEventTruncateLargeData, br.com.vitrine.repository.CustomAuditEventRepositoryIntTest#testFindAfter, br.com.vitrine.repository.CustomAuditEventRepositoryIntTest#addAuditEventWithAuthorizationFailureType, br.com.vitrine.repository.CustomAuditEventRepositoryIntTest#testAddEventWithWebAuthenticationDetails, br.com.vitrine.repository.CustomAuditEventRepositoryIntTest#addAuditEvent, br.com.vitrine.repository.CustomAuditEventRepositoryIntTest#addAuditEventWithAnonymousUser, br.com.vitrine.repository.CustomAuditEventRepositoryIntTest#testFindByPrincipal, br.com.vitrine.repository.CustomAuditEventRepositoryIntTest#testFindByPrincipalIsNullAndAfterIsNull], failures=[FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}], nbFailures=0, nbErrors=11}
status: NOPATCH
dateEnd: Tue Mar 27 14:23:02 EDT 2018
allocatedtime: 12minutes 
passingTime: 5minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@7eeabaf3', projectTests=[br.com.vitrine.repository.CustomAuditEventRepositoryIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #6
location: FailureLocation{className='br.com.vitrine.web.rest.errors.ExceptionTranslatorIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.web.rest.errors.ExceptionTranslatorIntTest#testInternalServerError, br.com.vitrine.web.rest.errors.ExceptionTranslatorIntTest#testMethodNotSupported, br.com.vitrine.web.rest.errors.ExceptionTranslatorIntTest#testAccessDenied, br.com.vitrine.web.rest.errors.ExceptionTranslatorIntTest#testUnauthorized, br.com.vitrine.web.rest.errors.ExceptionTranslatorIntTest#testExceptionWithResponseStatus, br.com.vitrine.web.rest.errors.ExceptionTranslatorIntTest#testConcurrencyFailure, br.com.vitrine.web.rest.errors.ExceptionTranslatorIntTest#testMissingServletRequestPartException, br.com.vitrine.web.rest.errors.ExceptionTranslatorIntTest#testParameterizedError, br.com.vitrine.web.rest.errors.ExceptionTranslatorIntTest#testParameterizedError2, br.com.vitrine.web.rest.errors.ExceptionTranslatorIntTest#testMissingServletRequestParameterException, br.com.vitrine.web.rest.errors.ExceptionTranslatorIntTest#testMethodArgumentNotValid], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}], nbFailures=0, nbErrors=11}
status: NOPATCH
dateEnd: Tue Mar 27 14:28:23 EDT 2018
allocatedtime: 10minutes 
passingTime: 5minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@6c6a7553', projectTests=[br.com.vitrine.web.rest.errors.ExceptionTranslatorIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #7
location: FailureLocation{className='br.com.vitrine.service.MailServiceIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.service.MailServiceIntTest#testSendEmail, br.com.vitrine.service.MailServiceIntTest#testSendPasswordResetMail, br.com.vitrine.service.MailServiceIntTest#testSendEmailWithException, br.com.vitrine.service.MailServiceIntTest#testCreationEmail, br.com.vitrine.service.MailServiceIntTest#testSendEmailFromTemplate, br.com.vitrine.service.MailServiceIntTest#testSendHtmlEmail, br.com.vitrine.service.MailServiceIntTest#testSendMultipartHtmlEmail, br.com.vitrine.service.MailServiceIntTest#testSendMultipartEmail, br.com.vitrine.service.MailServiceIntTest#testSendActivationEmail], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=0, nbErrors=9}
status: NOPATCH
dateEnd: Tue Mar 27 14:33:51 EDT 2018
allocatedtime: 7minutes 
passingTime: 5minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@19a71722', projectTests=[br.com.vitrine.service.MailServiceIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #8
location: FailureLocation{className='br.com.vitrine.service.UserServiceIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.service.UserServiceIntTest#assertThatAnonymousUserIsNotGet, br.com.vitrine.service.UserServiceIntTest#testFindNotActivatedUsersByCreationDateBefore, br.com.vitrine.service.UserServiceIntTest#assertThatUserCanResetPassword, br.com.vitrine.service.UserServiceIntTest#testRemoveNotActivatedUsers, br.com.vitrine.service.UserServiceIntTest#assertThatResetKeyMustBeValid, br.com.vitrine.service.UserServiceIntTest#assertThatUserMustExistToResetPassword, br.com.vitrine.service.UserServiceIntTest#assertThatOnlyActivatedUserCanRequestPasswordReset, br.com.vitrine.service.UserServiceIntTest#assertThatResetKeyMustNotBeOlderThan24Hours], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=0, nbErrors=8}
status: TIMEOUT
dateEnd: Tue Mar 27 14:38:55 EDT 2018
allocatedtime: 5minutes 
passingTime: 5minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@38bf7a37', projectTests=[br.com.vitrine.service.UserServiceIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #9
location: FailureLocation{className='br.com.vitrine.security.DomainUserDetailsServiceIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.security.DomainUserDetailsServiceIntTest#assertThatUserCanBeFoundByLoginIgnoreCase, br.com.vitrine.security.DomainUserDetailsServiceIntTest#assertThatUserCanBeFoundByLogin, br.com.vitrine.security.DomainUserDetailsServiceIntTest#assertThatUserCanBeFoundByEmailIgnoreCase, br.com.vitrine.security.DomainUserDetailsServiceIntTest#assertThatUserNotActivatedExceptionIsThrownForNotActivatedUsers, br.com.vitrine.security.DomainUserDetailsServiceIntTest#assertThatUserCanBeFoundByEmail, br.com.vitrine.security.DomainUserDetailsServiceIntTest#assertThatEmailIsPrioritizedOverLogin], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}], nbFailures=0, nbErrors=6}
status: TIMEOUT
dateEnd: Tue Mar 27 14:41:01 EDT 2018
allocatedtime: 2minutes 
passingTime: 2minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@b96fb73', projectTests=[br.com.vitrine.security.DomainUserDetailsServiceIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #10
location: FailureLocation{className='br.com.vitrine.web.rest.AuditResourceIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.web.rest.AuditResourceIntTest#getAudit, br.com.vitrine.web.rest.AuditResourceIntTest#getNonExistingAudit, br.com.vitrine.web.rest.AuditResourceIntTest#getAuditsByDate, br.com.vitrine.web.rest.AuditResourceIntTest#getNonExistingAuditsByDate, br.com.vitrine.web.rest.AuditResourceIntTest#getAllAudits], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=0, nbErrors=5}
status: TIMEOUT
dateEnd: Tue Mar 27 14:43:04 EDT 2018
allocatedtime: 2minutes 
passingTime: 2minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@7a97e7f', projectTests=[br.com.vitrine.web.rest.AuditResourceIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #11
location: FailureLocation{className='br.com.vitrine.web.rest.LogsResourceIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.web.rest.LogsResourceIntTest#changeLogs, br.com.vitrine.web.rest.LogsResourceIntTest#getAllLogs, br.com.vitrine.web.rest.LogsResourceIntTest#testLogstashAppender], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='Java heap space', isError=true}], nbFailures=0, nbErrors=3}
status: TIMEOUT
dateEnd: Tue Mar 27 14:45:11 EDT 2018
allocatedtime: 2minutes 
passingTime: 2minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@1e723481', projectTests=[br.com.vitrine.web.rest.LogsResourceIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #12
location: FailureLocation{className='br.com.vitrine.web.rest.UserJWTControllerIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.web.rest.UserJWTControllerIntTest#testAuthorize, br.com.vitrine.web.rest.UserJWTControllerIntTest#testAuthorizeWithRememberMe, br.com.vitrine.web.rest.UserJWTControllerIntTest#testAuthorizeFails], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}], nbFailures=0, nbErrors=3}
status: TIMEOUT
dateEnd: Tue Mar 27 14:47:15 EDT 2018
allocatedtime: 2minutes 
passingTime: 2minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@486e6b30', projectTests=[br.com.vitrine.web.rest.UserJWTControllerIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #13
location: FailureLocation{className='br.com.vitrine.web.rest.ProfileInfoResourceIntTest', failingMethods=[], erroringMethods=[br.com.vitrine.web.rest.ProfileInfoResourceIntTest#getProfileInfoWithoutActiveProfiles, br.com.vitrine.web.rest.ProfileInfoResourceIntTest#getProfileInfoWithRibbon, br.com.vitrine.web.rest.ProfileInfoResourceIntTest#getProfileInfoWithoutRibbon], failures=[FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}, FailureType{failureName='java.lang.OutOfMemoryError', failureDetail='GC overhead limit exceeded', isError=true}], nbFailures=0, nbErrors=3}
status: TIMEOUT
dateEnd: Tue Mar 27 14:49:18 EDT 2018
allocatedtime: 2minutes 
passingTime: 2minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/allanmoreira8/vitrine/358851790/src/main/java], projectClasspath='[Ljava.net.URL;@7ffefe13', projectTests=[br.com.vitrine.web.rest.ProfileInfoResourceIntTest], complianceLevel=8, outputFolder=./workspace/allanmoreira8/vitrine/358851790, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



