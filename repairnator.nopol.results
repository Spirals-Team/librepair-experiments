nopolinfo #0
location: FailureLocation{className='io.github.bucket4j.BucketListenerSpecification', failingMethods=[io.github.bucket4j.BucketListenerSpecification#GRID test listener for tryConsume, io.github.bucket4j.BucketListenerSpecification#GRID test listener for tryConsumeAsMuchAsPossible with limit, io.github.bucket4j.BucketListenerSpecification#GRID test listener for tryConsumeAsMuchAsPossible, io.github.bucket4j.BucketListenerSpecification#LOCAL_SYNCHRONIZED test listener for async tryConsumeAsMuchAsPossible, io.github.bucket4j.BucketListenerSpecification#GRID test listener for async tryConsume, io.github.bucket4j.BucketListenerSpecification#GRID test listener for tryConsumeAndReturnRemaining, io.github.bucket4j.BucketListenerSpecification#GRID test listener for blocking consume, io.github.bucket4j.BucketListenerSpecification#LOCAL_UNSAFE test listener for async tryConsumeAsMuchAsPossible, io.github.bucket4j.BucketListenerSpecification#GRID test listener for async tryConsumeAsMuchAsPossible, io.github.bucket4j.BucketListenerSpecification#GRID test listener for blocking tryConsume, io.github.bucket4j.BucketListenerSpecification#GRID test listener for blocking tryConsumeUninterruptibly, io.github.bucket4j.BucketListenerSpecification#GRID test listener for blocking consumeUninterruptibly], erroringMethods=[], failures=[FailureType{failureName='org.spockframework.runtime.SpockComparisonFailure', failureDetail='Condition not satisfied:

listener.getConsumed() == 9
|        |             |
|        0             false
io.github.bucket4j.SimpleBucketListener@31edaa7d
', isError=false}, FailureType{failureName='org.spockframework.runtime.SpockComparisonFailure', failureDetail='Condition not satisfied:

listener.getConsumed() == 9
|        |             |
|        0             false
io.github.bucket4j.SimpleBucketListener@7d94beb9
', isError=false}, FailureType{failureName='org.spockframework.runtime.SpockComparisonFailure', failureDetail='Condition not satisfied:

listener.getConsumed() == 9
|        |             |
|        0             false
io.github.bucket4j.SimpleBucketListener@2a7ed1f
', isError=false}, FailureType{failureName='org.spockframework.runtime.SpockComparisonFailure', failureDetail='Condition not satisfied:

listener.getConsumed() == 9
|        |             |
|        0             false
io.github.bucket4j.SimpleBucketListener@352ff4da
', isError=false}, FailureType{failureName='org.spockframework.runtime.SpockComparisonFailure', failureDetail='Condition not satisfied:

listener.getConsumed() == 9
|        |             |
|        0             false
io.github.bucket4j.SimpleBucketListener@1b266842
', isError=false}, FailureType{failureName='org.spockframework.runtime.SpockComparisonFailure', failureDetail='Condition not satisfied:

listener.getConsumed() == 10
|        |             |
|        0             false
io.github.bucket4j.SimpleBucketListener@6736fa8d
', isError=false}, FailureType{failureName='org.spockframework.runtime.SpockComparisonFailure', failureDetail='Condition not satisfied:

listener.getConsumed() == 8
|        |             |
|        0             false
io.github.bucket4j.SimpleBucketListener@7354b8c5
', isError=false}, FailureType{failureName='org.spockframework.runtime.SpockComparisonFailure', failureDetail='Condition not satisfied:

listener.getConsumed() == 9
|        |             |
|        0             false
io.github.bucket4j.SimpleBucketListener@a37aefe
', isError=false}, FailureType{failureName='org.spockframework.runtime.SpockComparisonFailure', failureDetail='Condition not satisfied:

listener.getConsumed() == 9
|        |             |
|        0             false
io.github.bucket4j.SimpleBucketListener@48c76607
', isError=false}, FailureType{failureName='org.spockframework.runtime.SpockComparisonFailure', failureDetail='Condition not satisfied:

listener.getConsumed() == 10
|        |             |
|        20            false
io.github.bucket4j.SimpleBucketListener@1f81aa00
', isError=false}, FailureType{failureName='org.spockframework.runtime.SpockComparisonFailure', failureDetail='Condition not satisfied:

listener.getConsumed() == 10
|        |             |
|        20            false
io.github.bucket4j.SimpleBucketListener@6b6776cb
', isError=false}, FailureType{failureName='org.spockframework.runtime.SpockComparisonFailure', failureDetail='Condition not satisfied:

listener.getConsumed() == 10
|        |             |
|        0             false
io.github.bucket4j.SimpleBucketListener@4a3631f8
', isError=false}], nbFailures=12, nbErrors=0}
status: NOPATCH
dateEnd: Sun Apr 01 22:48:28 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/vladimir-bukhtoyarov/bucket4j/360971169/bucket4j-core/src/main/java], projectClasspath='[Ljava.net.URL;@54afd745', projectTests=[io.github.bucket4j.BucketListenerSpecification], complianceLevel=8, outputFolder=./workspace/vladimir-bukhtoyarov/bucket4j/360971169, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



