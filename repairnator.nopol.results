nopolinfo #0
location: FailureLocation{className='io.github.binaryoverload.JSONConfigTest', failingMethods=[], erroringMethods=[io.github.binaryoverload.JSONConfigTest#testSubConfigPositive, io.github.binaryoverload.JSONConfigTest#testGetBooleanPositive, io.github.binaryoverload.JSONConfigTest#testGetIntegerPositive, io.github.binaryoverload.JSONConfigTest#testGetPositive, io.github.binaryoverload.JSONConfigTest#testGetArrayNegative, io.github.binaryoverload.JSONConfigTest#testGetIntegerNegative, io.github.binaryoverload.JSONConfigTest#testGetDoubleNegative, io.github.binaryoverload.JSONConfigTest#testSubConfigNegative, io.github.binaryoverload.JSONConfigTest#testSetPositive, io.github.binaryoverload.JSONConfigTest#testReloadFile, io.github.binaryoverload.JSONConfigTest#testGetStringPositive, io.github.binaryoverload.JSONConfigTest#testRemovePositive, io.github.binaryoverload.JSONConfigTest#testGetDoublePositive, io.github.binaryoverload.JSONConfigTest#testGetArrayPositive, io.github.binaryoverload.JSONConfigTest#testGetLongPositive, io.github.binaryoverload.JSONConfigTest#testGetLongNegative, io.github.binaryoverload.JSONConfigTest#testGetBooleanNegative, io.github.binaryoverload.JSONConfigTest#testGetStringNegative, io.github.binaryoverload.JSONConfigTest#testRemoveNegative], failures=[FailureType{failureName='java.lang.IllegalArgumentException', failureDetail='Malformed path, could not match 'type' with separator '.'. Allowed charset: [-, +, _, $]', isError=true}, FailureType{failureName='java.lang.IllegalArgumentException', failureDetail='Malformed path, could not match 'id' with separator '.'. Allowed charset: [-, +, _, $]', isError=true}, FailureType{failureName='java.lang.IllegalArgumentException', failureDetail='Malformed path, could not match 'title' with separator '.'. Allowed charset: [-, +, _, $]', isError=true}, FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.IllegalStateException> but was<java.lang.IllegalArgumentException>', isError=true}, FailureType{failureName='java.lang.IllegalArgumentException', failureDetail='Malformed path, could not match 'exclusiveMinimum' with separator '.'. Allowed charset: [-, +, _, $]', isError=true}, FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.IllegalStateException> but was<java.lang.IllegalArgumentException>', isError=true}, FailureType{failureName='java.lang.IllegalArgumentException', failureDetail='Malformed path, could not match 'date' with separator '.'. Allowed charset: [-, +, _, $]', isError=true}, FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.IllegalStateException> but was<java.lang.IllegalArgumentException>', isError=true}, FailureType{failureName='java.lang.IllegalArgumentException', failureDetail='Malformed path, could not match 'date' with separator '.'. Allowed charset: [-, +, _, $]', isError=true}, FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.IllegalStateException> but was<java.lang.IllegalArgumentException>', isError=true}, FailureType{failureName='java.lang.IllegalArgumentException', failureDetail='Malformed path, could not match 'title' with separator '.'. Allowed charset: [-, +, _, $]', isError=true}, FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.IllegalStateException> but was<java.lang.IllegalArgumentException>', isError=true}, FailureType{failureName='java.lang.IllegalArgumentException', failureDetail='Malformed path, could not match 'date' with separator '.'. Allowed charset: [-, +, _, $]', isError=true}, FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.IllegalStateException> but was<java.lang.IllegalArgumentException>', isError=true}, FailureType{failureName='java.lang.IllegalArgumentException', failureDetail='Malformed path, could not match 'items' with separator '.'. Allowed charset: [-, +, _, $]', isError=true}, FailureType{failureName='java.lang.IllegalArgumentException', failureDetail='Malformed path, could not match 'required' with separator '.'. Allowed charset: [-, +, _, $]', isError=true}, FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.IllegalStateException> but was<java.lang.IllegalArgumentException>', isError=true}, FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.IllegalStateException> but was<java.lang.IllegalArgumentException>', isError=true}, FailureType{failureName='java.lang.IllegalArgumentException', failureDetail='Malformed path, could not match 'title' with separator '.'. Allowed charset: [-, +, _, $]', isError=true}], nbFailures=0, nbErrors=19}
status: NOPATCH
dateEnd: Thu Mar 22 18:04:35 EDT 2018
allocatedtime: 120minutes 
passingTime: 6minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/binaryoverload/JSON-Config/357118325/src/main/java], projectClasspath='[Ljava.net.URL;@7c8326a4', projectTests=[io.github.binaryoverload.JSONConfigTest], complianceLevel=8, outputFolder=./workspace/binaryoverload/JSON-Config/357118325, json=false}
exception: null
nbStatements: 68
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



