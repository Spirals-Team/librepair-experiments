nopolinfo #0
location: FailureLocation{className='spoon.MavenLauncherTest', failingMethods=[spoon.MavenLauncherTest#spoonMavenLauncherTest, spoon.MavenLauncherTest#mavenLauncherTestMultiModulesAndVariables], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='Content of classpath: ', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='expected:<7> but was:<0>', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Wed Apr 04 23:32:43 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@997d532', projectTests=[spoon.MavenLauncherTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='spoon.test.prettyprinter.PrintChangesTest', failingMethods=[spoon.test.prettyprinter.PrintChangesTest#testPrintUnchaged, spoon.test.prettyprinter.PrintChangesTest#testPrintChanged], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...inter.testclasses;

[import java.util.ArrayList;
import java.util.List;

/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T /* let's confuse > it */ > implements List<T>,
 Cloneable
{
 
 
 /**/
 final
 //
 private String string = "a"
   + "b" + "c"+"d";
 
 //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2         , List<?>[][] ... twoDArrayOfLists)
 {/**/
  System.out.println("aaa"
    + "xyz");
 /*x*/}
 List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

//and what about this comment? ]> but was:<...inter.testclasses;

[
/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T /* let's confuse > it */ > implements List<T>,
 Cloneable
{
 
 
 /**/
 final
 //
 private String string = "a"
   + "b" + "c"+"d";
 
 //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2         , List<?>[][] ... twoDArrayOfLists)
 {/**/
  System.out.println("aaa"
    + "xyz");
 /*x*/}
 List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

]>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...inter.testclasses;

[import java.util.ArrayList;
import java.util.List;

/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T /* let's confuse > it */ > implements List<T>,
 Cloneable
{
 
 
 /**/
 final
 //
 private String string = "a"
   + "b" + "c"+"d";
 
 //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2         , List<?>[][] ... twoDArrayOfLists)
 {/**/
  System.out.println("aaa"
    + "xyz");
 /*x*/}
 List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

//and what about this comment? ]> but was:<...inter.testclasses;

[
import java.util.ArrayList;
import java.util.List;


/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T /* let's confuse > it */ > implements List<T>,
 Cloneable
{
    /**/
 final
 //
 private String modified = "a"
   + "b" + "c"+"d";

    //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2         , List<?>[][] ... twoDArrayOfLists)
 {/**/
  System.out.println("aaa"
    + "xyz");
 /*x*/}

    List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

]>', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Wed Apr 04 23:32:59 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@72769bf5', projectTests=[spoon.test.prettyprinter.PrintChangesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #2
location: FailureLocation{className='spoon.test.filters.FilterTest', failingMethods=[], erroringMethods=[spoon.test.filters.FilterTest#testOverriddenMethodFromInterface, spoon.test.filters.FilterTest#testInvalidQueryStep, spoon.test.filters.FilterTest#testClassCastExceptionOnForEach, spoon.test.filters.FilterTest#testQueryWithOptionalNumberOfInputs, spoon.test.filters.FilterTest#testSubInheritanceHierarchyResolver, spoon.test.filters.FilterTest#testQueryStepScannWithConsumer, spoon.test.filters.FilterTest#testEarlyTerminatingQuery, spoon.test.filters.FilterTest#filteredElementsAreOfTheCorrectType, spoon.test.filters.FilterTest#testgetTopDefinitions, spoon.test.filters.FilterTest#unionOfTwoFilters, spoon.test.filters.FilterTest#classCastExceptionIsNotThrown, spoon.test.filters.FilterTest#intersectionOfTwoFilters, spoon.test.filters.FilterTest#testQueryBuilderWithFilterChain, spoon.test.filters.FilterTest#testReflectionBasedTypeFilter, spoon.test.filters.FilterTest#testOverriddenMethodsFromSubClassOfAbstractClass, spoon.test.filters.FilterTest#testElementMapConsumableFunction, spoon.test.filters.FilterTest#testReuseOfBaseQuery, spoon.test.filters.FilterTest#testOverridingMethodFromInterface, spoon.test.filters.FilterTest#testOverridingMethodFromAbstractClass, spoon.test.filters.FilterTest#testQueryInQuery, spoon.test.filters.FilterTest#testFilterQueryStep, spoon.test.filters.FilterTest#testElementMapFunction, spoon.test.filters.FilterTest#testOverriddenMethodFromSubClassOfInterface, spoon.test.filters.FilterTest#testReuseOfQuery, spoon.test.filters.FilterTest#testFilterChildrenWithoutFilterQueryStep, spoon.test.filters.FilterTest#testOverridingMethodFromSubClassOfAbstractClass, spoon.test.filters.FilterTest#testCtScannerListener, spoon.test.filters.FilterTest#testParentFunction, spoon.test.filters.FilterTest#testInvalidQueryStepFailurePolicyIgnore, spoon.test.filters.FilterTest#testOverriddenMethodFromAbstractClass, spoon.test.filters.FilterTest#testFunctionQueryStep, spoon.test.filters.FilterTest#testOverridingMethodFromSubClassOfInterface, spoon.test.filters.FilterTest#testInvocationFilterWithExecutableInLibrary], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=33}
status: NOPATCH
dateEnd: Wed Apr 04 23:33:14 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@5162bede', projectTests=[spoon.test.filters.FilterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #3
location: FailureLocation{className='spoon.test.generics.GenericsTest', failingMethods=[], erroringMethods=[spoon.test.generics.GenericsTest#testisGeneric, spoon.test.generics.GenericsTest#testName, spoon.test.generics.GenericsTest#testGenericsInQualifiedNameInConstructorCall, spoon.test.generics.GenericsTest#testInvocationGenerics, spoon.test.generics.GenericsTest#testMethodTypingContext, spoon.test.generics.GenericsTest#testIsGenericsMethod, spoon.test.generics.GenericsTest#testClassTypingContextMethodSignature, spoon.test.generics.GenericsTest#testMethodsWithGenericsWhoExtendsObject, spoon.test.generics.GenericsTest#testClassTypingContext, spoon.test.generics.GenericsTest#testGenericTypeReference, spoon.test.generics.GenericsTest#testAccessToGenerics, spoon.test.generics.GenericsTest#testDeclarationOfTypeParameterReference, spoon.test.generics.GenericsTest#testConstructorCallGenerics, spoon.test.generics.GenericsTest#testMethodTypingContextAdaptMethod, spoon.test.generics.GenericsTest#testCannotAdaptTypeOfNonTypeScope, spoon.test.generics.GenericsTest#testNewClassGenerics, spoon.test.generics.GenericsTest#testCtTypeReference_getSuperclass], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=17}
status: NOPATCH
dateEnd: Wed Apr 04 23:33:29 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@2b704646', projectTests=[spoon.test.generics.GenericsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #4
location: FailureLocation{className='spoon.test.delete.DeleteTest', failingMethods=[], erroringMethods=[spoon.test.delete.DeleteTest#testDeleteMethod, spoon.test.delete.DeleteTest#testDeleteConditionInACondition, spoon.test.delete.DeleteTest#testDeleteParameterOfMethod, spoon.test.delete.DeleteTest#testDeleteAStatementInConstructor, spoon.test.delete.DeleteTest#testDeleteChainOfAssignment, spoon.test.delete.DeleteTest#testDeleteAStatementInMethod, spoon.test.delete.DeleteTest#testDeleteAStatementInAnonymousExecutable, spoon.test.delete.DeleteTest#testDeleteAnnotationOnAClass, spoon.test.delete.DeleteTest#testDeleteACaseOfASwitch, spoon.test.delete.DeleteTest#testDeleteStatementInCase, spoon.test.delete.DeleteTest#testDeleteAStatementInStaticAnonymousExecutable, spoon.test.delete.DeleteTest#testDeleteAClassTopLevel, spoon.test.delete.DeleteTest#testDeleteBodyOfAMethod, spoon.test.delete.DeleteTest#testDeleteReturn], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=14}
status: NOPATCH
dateEnd: Wed Apr 04 23:33:43 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@501a89d1', projectTests=[spoon.test.delete.DeleteTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #5
location: FailureLocation{className='spoon.test.targeted.TargetedExpressionTest', failingMethods=[], erroringMethods=[spoon.test.targeted.TargetedExpressionTest#testStaticTargetsOfInv, spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccessInInnerClass, spoon.test.targeted.TargetedExpressionTest#testTargetsOfInv, spoon.test.targeted.TargetedExpressionTest#testClassDeclaredInALambda, spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInInnerClass, spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccess, spoon.test.targeted.TargetedExpressionTest#testNotTargetedExpression, spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldInAnonymousClass, spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInAnonymousClass, spoon.test.targeted.TargetedExpressionTest#testTargetsOfStaticFieldAccess, spoon.test.targeted.TargetedExpressionTest#testTargetOfFieldAccess], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=11}
status: NOPATCH
dateEnd: Wed Apr 04 23:33:58 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@82e553d', projectTests=[spoon.test.targeted.TargetedExpressionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #6
location: FailureLocation{className='spoon.test.parent.ParentTest', failingMethods=[], erroringMethods=[spoon.test.parent.ParentTest#testParentSet, spoon.test.parent.ParentTest#testParentPackage, spoon.test.parent.ParentTest#testParent, spoon.test.parent.ParentTest#testParentOfGenericInTypeReference, spoon.test.parent.ParentTest#testParentOfCtPackageReference, spoon.test.parent.ParentTest#testParentOfPrimitiveReference, spoon.test.parent.ParentTest#testHasParent, spoon.test.parent.ParentTest#testGetParentWithFilter, spoon.test.parent.ParentTest#testParentOfCtVariableReference, spoon.test.parent.ParentTest#testParentOfCtExecutableReference], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=10}
status: NOPATCH
dateEnd: Wed Apr 04 23:34:11 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@5edda63a', projectTests=[spoon.test.parent.ParentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #7
location: FailureLocation{className='spoon.test.parent.NullParentTest', failingMethods=[], erroringMethods=[spoon.test.parent.NullParentTest#testAssertNullExpression, spoon.test.parent.NullParentTest#testIfNullBranches, spoon.test.parent.NullParentTest#testFieldNullDefaultExpression, spoon.test.parent.NullParentTest#testReturnNullExpression, spoon.test.parent.NullParentTest#testTargetedAccessNullTarget, spoon.test.parent.NullParentTest#testForLoopNullChildren, spoon.test.parent.NullParentTest#testLocalVariableNullDefaultExpression, spoon.test.parent.NullParentTest#testTargetedExpressionNullTarget], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Wed Apr 04 23:34:26 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@7924fdd2', projectTests=[spoon.test.parent.NullParentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #8
location: FailureLocation{className='spoon.test.query_function.VariableReferencesTest', failingMethods=[], erroringMethods=[spoon.test.query_function.VariableReferencesTest#testPotentialVariableAccessFromStaticMethod, spoon.test.query_function.VariableReferencesTest#testVariableReferenceFunction, spoon.test.query_function.VariableReferencesTest#testCheckModelConsistency, spoon.test.query_function.VariableReferencesTest#testLocalVariableReferenceDeclarationFunction, spoon.test.query_function.VariableReferencesTest#testCatchVariableReferenceFunction, spoon.test.query_function.VariableReferencesTest#testParameterReferenceFunction, spoon.test.query_function.VariableReferencesTest#testVariableScopeFunction, spoon.test.query_function.VariableReferencesTest#testLocalVariableReferenceFunction], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Wed Apr 04 23:34:40 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@1240e78a', projectTests=[spoon.test.query_function.VariableReferencesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #9
location: FailureLocation{className='spoon.test.architecture.SpoonArchitectureEnforcerTest', failingMethods=[], erroringMethods=[spoon.test.architecture.SpoonArchitectureEnforcerTest#metamodelPackageRule, spoon.test.architecture.SpoonArchitectureEnforcerTest#testSpecPackage, spoon.test.architecture.SpoonArchitectureEnforcerTest#testSrcMainJava, spoon.test.architecture.SpoonArchitectureEnforcerTest#testStaticClasses, spoon.test.architecture.SpoonArchitectureEnforcerTest#statelessFactory, spoon.test.architecture.SpoonArchitectureEnforcerTest#testInterfacesAreCtScannable, spoon.test.architecture.SpoonArchitectureEnforcerTest#testFactorySubFactory, spoon.test.architecture.SpoonArchitectureEnforcerTest#testGoodTestClassNames], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Wed Apr 04 23:34:54 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@40eccd9b', projectTests=[spoon.test.architecture.SpoonArchitectureEnforcerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #10
location: FailureLocation{className='spoon.test.reference.TypeReferenceTest', failingMethods=[], erroringMethods=[spoon.test.reference.TypeReferenceTest#testConstructorCallInNoClasspath, spoon.test.reference.TypeReferenceTest#testIgnoreEnclosingClassInActualTypes, spoon.test.reference.TypeReferenceTest#testSubTypeAnonymous, spoon.test.reference.TypeReferenceTest#testAnonymousClassesHaveAnEmptyStringForItsNameInNoClasspath, spoon.test.reference.TypeReferenceTest#testToStringEqualityBetweenTwoGenericTypeDifferent, spoon.test.reference.TypeReferenceTest#testUnknownSuperClassWithSameNameInNoClasspath, spoon.test.reference.TypeReferenceTest#testAnnotationOnMethodWithPrimitiveReturnTypeInNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=7}
status: NOPATCH
dateEnd: Wed Apr 04 23:35:07 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@11f22f4f', projectTests=[spoon.test.reference.TypeReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #11
location: FailureLocation{className='spoon.test.constructorcallnewclass.NewClassTest', failingMethods=[], erroringMethods=[spoon.test.constructorcallnewclass.NewClassTest#testMoreThan9NewClass, spoon.test.constructorcallnewclass.NewClassTest#testNewClassWithObjectClass, spoon.test.constructorcallnewclass.NewClassTest#testNewClassInterfaceWithParameters, spoon.test.constructorcallnewclass.NewClassTest#testNewClassInEnumeration, spoon.test.constructorcallnewclass.NewClassTest#testCtNewClassInNoClasspath, spoon.test.constructorcallnewclass.NewClassTest#testNewClassWithInterface, spoon.test.constructorcallnewclass.NewClassTest#testNewClassWithInterfaceGeneric], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=7}
status: NOPATCH
dateEnd: Wed Apr 04 23:35:20 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@6c6fb2e9', projectTests=[spoon.test.constructorcallnewclass.NewClassTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #12
location: FailureLocation{className='spoon.test.constructorcallnewclass.ConstructorCallTest', failingMethods=[], erroringMethods=[spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallWithGenericArray, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallObjectWithoutParameters, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallStringWithParameters, spoon.test.constructorcallnewclass.ConstructorCallTest#testCoreConstructorCall, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallStringWithoutParameters, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallObjectWithParameters], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Wed Apr 04 23:35:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@7bd755cf', projectTests=[spoon.test.constructorcallnewclass.ConstructorCallTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #13
location: FailureLocation{className='spoon.test.fieldaccesses.FieldAccessTest', failingMethods=[], erroringMethods=[spoon.test.fieldaccesses.FieldAccessTest#testTypeDeclaredInAnonymousClass, spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessInAnonymousClass, spoon.test.fieldaccesses.FieldAccessTest#testFieldWriteWithPlusEqualsOperation, spoon.test.fieldaccesses.FieldAccessTest#testGetReference, spoon.test.fieldaccesses.FieldAccessTest#testIncrementationOnAVarIsAUnaryOperator, spoon.test.fieldaccesses.FieldAccessTest#testTypeOfFieldAccess], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Wed Apr 04 23:35:47 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@3797ec32', projectTests=[spoon.test.fieldaccesses.FieldAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #14
location: FailureLocation{className='spoon.test.imports.ImportTest', failingMethods=[], erroringMethods=[spoon.test.imports.ImportTest#testCanAccess, spoon.test.imports.ImportTest#testSpoonWithImports, spoon.test.imports.ImportTest#testSortImportPutStaticImportAfterTypeImport, spoon.test.imports.ImportTest#testAccessType, spoon.test.imports.ImportTest#testAccessToNestedClass], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Wed Apr 04 23:36:01 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@24ab7847', projectTests=[spoon.test.imports.ImportTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #15
location: FailureLocation{className='spoon.test.api.APITest', failingMethods=[], erroringMethods=[spoon.test.api.APITest#testPrintNotAllSourcesWithFilter, spoon.test.api.APITest#testSetterInNodes, spoon.test.api.APITest#testPrintNotAllSourcesInCommandLine, spoon.test.api.APITest#testPrintNotAllSourcesWithNames, spoon.test.api.APITest#testOutputDestinationHandlerWithCUFactory], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Wed Apr 04 23:36:14 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@79ba693b', projectTests=[spoon.test.api.APITest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #16
location: FailureLocation{className='spoon.test.refactoring.MethodsRefactoringTest', failingMethods=[], erroringMethods=[spoon.test.refactoring.MethodsRefactoringTest#testExecutableReferenceFilter, spoon.test.refactoring.MethodsRefactoringTest#testSubInheritanceHierarchyFunction, spoon.test.refactoring.MethodsRefactoringTest#testAllMethodsSameSignatureFunction, spoon.test.refactoring.MethodsRefactoringTest#testCtParameterRemoveRefactoringValidationCheck, spoon.test.refactoring.MethodsRefactoringTest#testCtParameterRemoveRefactoring], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Wed Apr 04 23:36:28 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@1f40d2c0', projectTests=[spoon.test.refactoring.MethodsRefactoringTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #17
location: FailureLocation{className='spoon.test.prettyprinter.DefaultPrettyPrinterTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAClassWithImports, spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAMethodWithGeneric, spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAMethodWithImports, spoon.test.prettyprinter.DefaultPrettyPrinterTest#testIssue1501, spoon.test.prettyprinter.DefaultPrettyPrinterTest#printClassCreatedWithSpoon], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Wed Apr 04 23:36:42 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@b8a0580', projectTests=[spoon.test.prettyprinter.DefaultPrettyPrinterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #18
location: FailureLocation{className='spoon.test.refactoring.RefactoringTest', failingMethods=[], erroringMethods=[spoon.test.refactoring.RefactoringTest#testRefactoringClassChangeAllCtTypeReferenceAssociatedWithClassConcerned, spoon.test.refactoring.RefactoringTest#testThisInConstructorAfterATransformation, spoon.test.refactoring.RefactoringTest#testTransformedInstanceofAfterATransformation, spoon.test.refactoring.RefactoringTest#testThisInConstructor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Wed Apr 04 23:36:55 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@38d84f22', projectTests=[spoon.test.refactoring.RefactoringTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #19
location: FailureLocation{className='spoon.test.prettyprinter.PrinterTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.PrinterTest#testPrinterTokenListener, spoon.test.prettyprinter.PrinterTest#testJDTBatchCompilerCanBeBuild, spoon.test.prettyprinter.PrinterTest#testRuleCanBeBuild, spoon.test.prettyprinter.PrinterTest#testPrettyPrinter], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Wed Apr 04 23:37:09 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@2d19b868', projectTests=[spoon.test.prettyprinter.PrinterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #20
location: FailureLocation{className='spoon.test.ctClass.CtClassTest', failingMethods=[], erroringMethods=[spoon.test.ctClass.CtClassTest#testCloneAnonymousClassInvocationWithAutoimports, spoon.test.ctClass.CtClassTest#testSpoonShouldInferImplicitPackageInNoClasspath, spoon.test.ctClass.CtClassTest#testCloneAnonymousClassInvocation, spoon.test.ctClass.CtClassTest#testNoClasspathWithSuperClassOfAClassInAnInterface], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Wed Apr 04 23:37:24 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@3de4c5b7', projectTests=[spoon.test.ctClass.CtClassTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #21
location: FailureLocation{className='spoon.test.processing.ProcessingTest', failingMethods=[], erroringMethods=[spoon.test.processing.ProcessingTest#testCallProcessorWithMultipleTypes, spoon.test.processing.ProcessingTest#testInsertBegin, spoon.test.processing.ProcessingTest#testInsertEnd, spoon.test.processing.ProcessingTest#testProcessorWithGenericType], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Wed Apr 04 23:37:37 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@6946f228', projectTests=[spoon.test.processing.ProcessingTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #22
location: FailureLocation{className='spoon.test.trycatch.TryCatchTest', failingMethods=[], erroringMethods=[spoon.test.trycatch.TryCatchTest#testCatchWithExplicitFinalVariable, spoon.test.trycatch.TryCatchTest#testMultiTryCatchWithCustomExceptions, spoon.test.trycatch.TryCatchTest#testCompileMultiTryCatchWithCustomExceptions], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Wed Apr 04 23:37:51 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@328e4175', projectTests=[spoon.test.trycatch.TryCatchTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #23
location: FailureLocation{className='spoon.test.refactoring.CtRenameLocalVariableRefactoringTest', failingMethods=[], erroringMethods=[spoon.test.refactoring.CtRenameLocalVariableRefactoringTest#testRenameAllLocalVariablesOfRenameTestSubject, spoon.test.refactoring.CtRenameLocalVariableRefactoringTest#testRenameLocalVariableToSameName, spoon.test.refactoring.CtRenameLocalVariableRefactoringTest#testRefactorWrongUsage], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Wed Apr 04 23:38:05 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@12334cc4', projectTests=[spoon.test.refactoring.CtRenameLocalVariableRefactoringTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #24
location: FailureLocation{className='spoon.test.annotation.AnnotationTest', failingMethods=[], erroringMethods=[spoon.test.annotation.AnnotationTest#testAnnotatedElementTypes, spoon.test.annotation.AnnotationTest#testAbstractAllAnnotationProcessorWithGlobalAnnotation, spoon.test.annotation.AnnotationTest#annotationOverrideFQNIsOK], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Wed Apr 04 23:38:19 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@38bc7d6', projectTests=[spoon.test.annotation.AnnotationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #25
location: FailureLocation{className='spoon.test.variable.AccessFullyQualifiedFieldTest', failingMethods=[], erroringMethods=[spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNAndStaticImport, spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNWhenUsedInInnerClassAndShadowedByLocalVariable, spoon.test.variable.AccessFullyQualifiedFieldTest#testStaticImportWithAutoImport], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Wed Apr 04 23:38:33 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@29e0091a', projectTests=[spoon.test.variable.AccessFullyQualifiedFieldTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #26
location: FailureLocation{className='spoon.test.factory.FactoryTest', failingMethods=[], erroringMethods=[spoon.test.factory.FactoryTest#specificationCoreFactoryCreate, spoon.test.factory.FactoryTest#testFactoryOverriding, spoon.test.factory.FactoryTest#testClone], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Wed Apr 04 23:38:47 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@6dfb141c', projectTests=[spoon.test.factory.FactoryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #27
location: FailureLocation{className='spoon.test.prettyprinter.LinesTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.LinesTest#testIdenticalPrettyPrinter, spoon.test.prettyprinter.LinesTest#testCompileWhenUsingLinesArgument, spoon.test.prettyprinter.LinesTest#testPrettyPrinterWithLines], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Wed Apr 04 23:39:00 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@2d84da00', projectTests=[spoon.test.prettyprinter.LinesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #28
location: FailureLocation{className='spoon.reflect.visitor.CtScannerTest', failingMethods=[], erroringMethods=[spoon.reflect.visitor.CtScannerTest#testScannerCallsAllProperties, spoon.reflect.visitor.CtScannerTest#testScan, spoon.reflect.visitor.CtScannerTest#testScannerContract], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Wed Apr 04 23:39:13 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@60b08072', projectTests=[spoon.reflect.visitor.CtScannerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #29
location: FailureLocation{className='spoon.test.secondaryclasses.ClassesTest', failingMethods=[], erroringMethods=[spoon.test.secondaryclasses.ClassesTest#testAnonymousClass, spoon.test.secondaryclasses.ClassesTest#testIsAnonymousMethodInCtClass, spoon.test.secondaryclasses.ClassesTest#testAnonymousClassInStaticField], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Wed Apr 04 23:39:27 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@1389df02', projectTests=[spoon.test.secondaryclasses.ClassesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #30
location: FailureLocation{className='spoon.test.staticFieldAccess.StaticAccessTest', failingMethods=[], erroringMethods=[spoon.test.staticFieldAccess.StaticAccessTest#testProcessAndCompile, spoon.test.staticFieldAccess.StaticAccessTest#testReferences], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Wed Apr 04 23:39:40 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@18a30e3', projectTests=[spoon.test.staticFieldAccess.StaticAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #31
location: FailureLocation{className='spoon.test.annotation.AnnotationValuesTest', failingMethods=[], erroringMethods=[spoon.test.annotation.AnnotationValuesTest#testValuesOnJava7Annotation, spoon.test.annotation.AnnotationValuesTest#testValuesOnJava8Annotation], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Wed Apr 04 23:39:53 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@50afcb5f', projectTests=[spoon.test.annotation.AnnotationValuesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #32
location: FailureLocation{className='spoon.test.template.TemplateReplaceReturnTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateReplaceReturnTest#testNoReturnReplaceTemplate, spoon.test.template.TemplateReplaceReturnTest#testReturnReplaceTemplate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Wed Apr 04 23:40:07 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@ec4fe82', projectTests=[spoon.test.template.TemplateReplaceReturnTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #33
location: FailureLocation{className='spoon.test.pkg.PackageTest', failingMethods=[], erroringMethods=[spoon.test.pkg.PackageTest#testGetFQNInNoClassPath, spoon.test.pkg.PackageTest#testPackage], failures=[FailureType{failureName='java.lang.NullPointerException', failureDetail='null', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Wed Apr 04 23:40:20 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@328f921f', projectTests=[spoon.test.pkg.PackageTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #34
location: FailureLocation{className='spoon.test.compilationunit.TestCompilationUnit', failingMethods=[], erroringMethods=[spoon.test.compilationunit.TestCompilationUnit#testGetUnitTypeWorksWithDeclaredPackage, spoon.test.compilationunit.TestCompilationUnit#testNewlyCreatedCUWouldGetAPartialPosition], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}, FailureType{failureName='java.lang.NullPointerException', failureDetail='null', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Wed Apr 04 23:40:33 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@61074ed', projectTests=[spoon.test.compilationunit.TestCompilationUnit], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #35
location: FailureLocation{className='spoon.test.limits.utils.InternalTest', failingMethods=[], erroringMethods=[spoon.test.limits.utils.InternalTest#testStaticFinalFieldInAnonymousClass, spoon.test.limits.utils.InternalTest#testInternalClasses], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Wed Apr 04 23:40:46 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@6c3f76cb', projectTests=[spoon.test.limits.utils.InternalTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #36
location: FailureLocation{className='spoon.reflect.ast.AstCheckerTest', failingMethods=[], erroringMethods=[spoon.reflect.ast.AstCheckerTest#testAvoidSetCollectionSavedOnAST, spoon.reflect.ast.AstCheckerTest#testPushToStackChanges], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Wed Apr 04 23:40:59 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@6e458ded', projectTests=[spoon.reflect.ast.AstCheckerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #37
location: FailureLocation{className='spoon.test.factory.FieldFactoryTest', failingMethods=[], erroringMethods=[spoon.test.factory.FieldFactoryTest#testCreateFromSource, spoon.test.factory.FieldFactoryTest#testCreate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Wed Apr 04 23:41:12 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@45d88bbb', projectTests=[spoon.test.factory.FieldFactoryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #38
location: FailureLocation{className='spoon.test.reference.VariableAccessTest', failingMethods=[], erroringMethods=[spoon.test.reference.VariableAccessTest#testVariableAccessDeclarationInAnonymousClass, spoon.test.reference.VariableAccessTest#testDeclarationOfVariableReference], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Wed Apr 04 23:41:26 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@1f6e8b35', projectTests=[spoon.test.reference.VariableAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #39
location: FailureLocation{className='spoon.test.method.MethodTest', failingMethods=[], erroringMethods=[spoon.test.method.MethodTest#testGetAllMethods, spoon.test.method.MethodTest#testClone], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Wed Apr 04 23:41:38 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@6df2c7ae', projectTests=[spoon.test.method.MethodTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #40
location: FailureLocation{className='spoon.processing.CtGenerationTest', failingMethods=[], erroringMethods=[spoon.processing.CtGenerationTest#testGenerateCloneVisitor, spoon.processing.CtGenerationTest#testGenerateRoleHandler], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Wed Apr 04 23:41:52 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@12e7ca49', projectTests=[spoon.processing.CtGenerationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #41
location: FailureLocation{className='spoon.test.imports.ImportScannerTest', failingMethods=[], erroringMethods=[spoon.test.imports.ImportScannerTest#testComputeImportsInClass, spoon.test.imports.ImportScannerTest#testComputeMinimalImportsInClass], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Wed Apr 04 23:42:06 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@41ea6966', projectTests=[spoon.test.imports.ImportScannerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #42
location: FailureLocation{className='spoon.test.reference.ExecutableReferenceTest', failingMethods=[], erroringMethods=[spoon.test.reference.ExecutableReferenceTest#testSuperClassInGetAllExecutables, spoon.test.reference.ExecutableReferenceTest#testSpecifyGetAllExecutablesMethod], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Wed Apr 04 23:42:20 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@677d0a7a', projectTests=[spoon.test.reference.ExecutableReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #43
location: FailureLocation{className='spoon.test.initializers.InitializerTest', failingMethods=[], erroringMethods=[spoon.test.initializers.InitializerTest#testModelBuildingInitializer], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:42:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@3c2317c6', projectTests=[spoon.test.initializers.InitializerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #44
location: FailureLocation{className='spoon.test.parent.ParentContractTest', failingMethods=[], erroringMethods=[spoon.test.parent.ParentContractTest#initializationError], failures=[FailureType{failureName='java.lang.NoClassDefFoundError', failureDetail='Could not initialize class spoon.test.parent.ParentContractTest', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:42:48 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@253560b0', projectTests=[spoon.test.parent.ParentContractTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #45
location: FailureLocation{className='spoon.test.sourcePosition.SourcePositionTest', failingMethods=[], erroringMethods=[spoon.test.sourcePosition.SourcePositionTest#equalPositionsHaveSameHashcode], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:43:03 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@6913611', projectTests=[spoon.test.sourcePosition.SourcePositionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #46
location: FailureLocation{className='spoon.test.template.TemplateTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateTest#substituteTypeAccessReference], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='spoon.SpoonException: SourcePosition value must not be negative', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:43:18 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@30c61885', projectTests=[spoon.test.template.TemplateTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #47
location: FailureLocation{className='spoon.test.invocations.InvocationTest', failingMethods=[], erroringMethods=[spoon.test.invocations.InvocationTest#testIssue1753], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:43:32 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@34373d67', projectTests=[spoon.test.invocations.InvocationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #48
location: FailureLocation{className='spoon.test.factory.ConstructorFactoryTest', failingMethods=[], erroringMethods=[spoon.test.factory.ConstructorFactoryTest#testCreate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:43:46 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@31ee3893', projectTests=[spoon.test.factory.ConstructorFactoryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #49
location: FailureLocation{className='spoon.test.support.ResourceTest', failingMethods=[], erroringMethods=[spoon.test.support.ResourceTest#testFilteringFolder], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:44:00 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@ffc20b0', projectTests=[spoon.test.support.ResourceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #50
location: FailureLocation{className='spoon.reflect.visitor.CtVisitorTest', failingMethods=[], erroringMethods=[spoon.reflect.visitor.CtVisitorTest#testMethodsInVisitor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:44:15 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@51c517d1', projectTests=[spoon.reflect.visitor.CtVisitorTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #51
location: FailureLocation{className='spoon.test.intercession.IntercessionContractTest', failingMethods=[], erroringMethods=[spoon.test.intercession.IntercessionContractTest#initializationError], failures=[FailureType{failureName='java.lang.ExceptionInInitializerError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:44:30 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@357890ab', projectTests=[spoon.test.intercession.IntercessionContractTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #52
location: FailureLocation{className='spoon.test.template.TemplateEnumAccessTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateEnumAccessTest#testEnumAccessTest], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition value must not be negative', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:44:45 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@56a19da7', projectTests=[spoon.test.template.TemplateEnumAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #53
location: FailureLocation{className='spoon.test.jdtimportbuilder.ImportBuilderTest', failingMethods=[], erroringMethods=[spoon.test.jdtimportbuilder.ImportBuilderTest#testInternalImportWhenNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:45:00 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@6b7828e4', projectTests=[spoon.test.jdtimportbuilder.ImportBuilderTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #54
location: FailureLocation{className='spoon.test.factory.AnnotationFactoryTest', failingMethods=[], erroringMethods=[spoon.test.factory.AnnotationFactoryTest#testAnnotate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:45:13 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@4d5b2d9c', projectTests=[spoon.test.factory.AnnotationFactoryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #55
location: FailureLocation{className='spoon.test.literal.LiteralTest', failingMethods=[], erroringMethods=[spoon.test.literal.LiteralTest#testCharLiteralInNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:45:26 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@2399e565', projectTests=[spoon.test.literal.LiteralTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #56
location: FailureLocation{className='spoon.test.parent.TopLevelTypeTest', failingMethods=[], erroringMethods=[spoon.test.parent.TopLevelTypeTest#testTopLevelType], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:45:40 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@bfad726', projectTests=[spoon.test.parent.TopLevelTypeTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #57
location: FailureLocation{className='spoon.test.replace.ReplaceParametrizedTest', failingMethods=[], erroringMethods=[spoon.test.replace.ReplaceParametrizedTest#initializationError], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:45:54 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@1ac0604', projectTests=[spoon.test.replace.ReplaceParametrizedTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #58
location: FailureLocation{className='spoon.test.api.MetamodelTest', failingMethods=[], erroringMethods=[spoon.test.api.MetamodelTest#testRoleOnField], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:46:08 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@4c71f074', projectTests=[spoon.test.api.MetamodelTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #59
location: FailureLocation{className='spoon.test.arrays.ArraysTest', failingMethods=[], erroringMethods=[spoon.test.arrays.ArraysTest#testInitializeWithNewArray], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:46:22 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@11fa67f1', projectTests=[spoon.test.arrays.ArraysTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #60
location: FailureLocation{className='spoon.test.reference.ElasticsearchStackoverflowTest', failingMethods=[], erroringMethods=[spoon.test.reference.ElasticsearchStackoverflowTest#testStackOverflow], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:46:36 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@20064b59', projectTests=[spoon.test.reference.ElasticsearchStackoverflowTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #61
location: FailureLocation{className='spoon.test.prettyprinter.QualifiedThisRefTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.QualifiedThisRefTest#testCloneThisAccess], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:46:49 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@525756c2', projectTests=[spoon.test.prettyprinter.QualifiedThisRefTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #62
location: FailureLocation{className='spoon.test.variable.AccessTest', failingMethods=[], erroringMethods=[spoon.test.variable.AccessTest#testFieldWriteDeclaredInTheSuperclass], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:47:04 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@34c13232', projectTests=[spoon.test.variable.AccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #63
location: FailureLocation{className='spoon.test.parent.SetParentTest', failingMethods=[], erroringMethods=[spoon.test.parent.SetParentTest#initializationError], failures=[FailureType{failureName='java.lang.NoClassDefFoundError', failureDetail='Could not initialize class spoon.test.parent.ParentContractTest', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:47:17 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@71536e74', projectTests=[spoon.test.parent.SetParentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #64
location: FailureLocation{className='spoon.test.comment.CommentTest', failingMethods=[], erroringMethods=[spoon.test.comment.CommentTest#testDocumentationContract], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:47:31 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@1cf0e517', projectTests=[spoon.test.comment.CommentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #65
location: FailureLocation{className='spoon.test.visibility.VisibilityTest', failingMethods=[], erroringMethods=[spoon.test.visibility.VisibilityTest#testInvocationVisibilityInFieldDeclaration], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:47:44 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@279d4dd9', projectTests=[spoon.test.visibility.VisibilityTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #66
location: FailureLocation{className='spoon.test.compilationunit.GetBinaryFilesTest', failingMethods=[], erroringMethods=[spoon.test.compilationunit.GetBinaryFilesTest#testAnonymousClasses], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:47:58 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@9514d2c', projectTests=[spoon.test.compilationunit.GetBinaryFilesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #67
location: FailureLocation{className='spoon.test.type.TypeTest', failingMethods=[], erroringMethods=[spoon.test.type.TypeTest#test], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:48:13 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@618bac82', projectTests=[spoon.test.type.TypeTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #68
location: FailureLocation{className='spoon.test.model.AnonymousExecutableTest', failingMethods=[], erroringMethods=[spoon.test.model.AnonymousExecutableTest#testStatements], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:48:28 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@5f007608', projectTests=[spoon.test.model.AnonymousExecutableTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #69
location: FailureLocation{className='spoon.reflect.visitor.CtInheritanceScannerMethodsTest', failingMethods=[], erroringMethods=[spoon.reflect.visitor.CtInheritanceScannerMethodsTest#testMethodsInInheritanceScanner], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:48:43 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@2ac663fa', projectTests=[spoon.reflect.visitor.CtInheritanceScannerMethodsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #70
location: FailureLocation{className='spoon.reflect.ast.CloneTest', failingMethods=[], erroringMethods=[spoon.reflect.ast.CloneTest#testCloneMethodsDeclaredInAST], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:48:57 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@7243316f', projectTests=[spoon.reflect.ast.CloneTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #71
location: FailureLocation{className='spoon.test.properties.PropertiesTest', failingMethods=[], erroringMethods=[spoon.test.properties.PropertiesTest#testNonExistingDirectory], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:49:12 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@2e3c3c35', projectTests=[spoon.test.properties.PropertiesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #72
location: FailureLocation{className='spoon.processing.ProcessingTest', failingMethods=[], erroringMethods=[spoon.processing.ProcessingTest#testSpoonTagger], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='spoon.SpoonException: SourcePosition value must not be negative', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:49:26 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@3d915851', projectTests=[spoon.processing.ProcessingTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #73
location: FailureLocation{className='spoon.test.intercession.IntercessionTest', failingMethods=[], erroringMethods=[spoon.test.intercession.IntercessionTest#testSettersAreAllGood], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:49:40 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@33b025b1', projectTests=[spoon.test.intercession.IntercessionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #74
location: FailureLocation{className='spoon.test.main.MainTest', failingMethods=[], erroringMethods=[spoon.test.main.MainTest#spoon.test.main.MainTest], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:49:54 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@cfbbb70', projectTests=[spoon.test.main.MainTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #75
location: FailureLocation{className='spoon.test.reflect.meta.MetaModelTest', failingMethods=[], erroringMethods=[spoon.test.reflect.meta.MetaModelTest#spoonMetaModelTest], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:50:08 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@61549ea5', projectTests=[spoon.test.reflect.meta.MetaModelTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #76
location: FailureLocation{className='spoon.test.compilation.CompilationTest', failingMethods=[], erroringMethods=[spoon.test.compilation.CompilationTest#testFilterResourcesDir], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePosition values must be ascending or equal', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Wed Apr 04 23:50:21 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/362343075/src/main/java], projectClasspath='[Ljava.net.URL;@2a642ccc', projectTests=[spoon.test.compilation.CompilationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/362343075, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



