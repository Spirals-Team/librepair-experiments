nopolinfo #0
location: FailureLocation{className='spoon.test.parent.CollectionsContractTest', failingMethods=[spoon.test.parent.CollectionsContractTest#testContract[CtCatchVariableReference], spoon.test.parent.CollectionsContractTest#testContract[CtThisAccess], spoon.test.parent.CollectionsContractTest#testContract[CtDo], spoon.test.parent.CollectionsContractTest#testContract[CtFor], spoon.test.parent.CollectionsContractTest#testContract[CtConstructor], spoon.test.parent.CollectionsContractTest#testContract[CtLocalVariable], spoon.test.parent.CollectionsContractTest#testContract[CtVariableWrite], spoon.test.parent.CollectionsContractTest#testContract[CtCase], spoon.test.parent.CollectionsContractTest#testContract[CtConstructorCall], spoon.test.parent.CollectionsContractTest#testContract[CtAnnotationFieldAccess], spoon.test.parent.CollectionsContractTest#testContract[CtVariableRead], spoon.test.parent.CollectionsContractTest#testContract[CtForEach], spoon.test.parent.CollectionsContractTest#testContract[CtComment], spoon.test.parent.CollectionsContractTest#testContract[CtCatch], spoon.test.parent.CollectionsContractTest#testContract[CtNewClass], spoon.test.parent.CollectionsContractTest#testContract[CtImport], spoon.test.parent.CollectionsContractTest#testContract[CtTypeAccess], spoon.test.parent.CollectionsContractTest#testContract[CtOperatorAssignment], spoon.test.parent.CollectionsContractTest#testContract[CtJavaDoc], spoon.test.parent.CollectionsContractTest#testContract[CtFieldWrite], spoon.test.parent.CollectionsContractTest#testContract[CtLocalVariableReference], spoon.test.parent.CollectionsContractTest#testContract[CtArrayTypeReference], spoon.test.parent.CollectionsContractTest#testContract[CtInvocation], spoon.test.parent.CollectionsContractTest#testContract[CtAssert], spoon.test.parent.CollectionsContractTest#testContract[CtIntersectionTypeReference], spoon.test.parent.CollectionsContractTest#testContract[CtFieldRead], spoon.test.parent.CollectionsContractTest#testContract[CtInterface], spoon.test.parent.CollectionsContractTest#testContract[CtTypeReference], spoon.test.parent.CollectionsContractTest#testContract[CtLambda], spoon.test.parent.CollectionsContractTest#testContract[CtField], spoon.test.parent.CollectionsContractTest#testContract[CtArrayWrite], spoon.test.parent.CollectionsContractTest#testContract[CtConditional], spoon.test.parent.CollectionsContractTest#testContract[CtAssignment], spoon.test.parent.CollectionsContractTest#testContract[CtExecutableReference], spoon.test.parent.CollectionsContractTest#testContract[CtJavaDocTag], spoon.test.parent.CollectionsContractTest#testContract[CtThrow], spoon.test.parent.CollectionsContractTest#testContract[CtCatchVariable], spoon.test.parent.CollectionsContractTest#testContract[CtModuleRequirement], spoon.test.parent.CollectionsContractTest#testContract[CtNewArray], spoon.test.parent.CollectionsContractTest#testContract[CtReturn], spoon.test.parent.CollectionsContractTest#testContract[CtAnnotationType], spoon.test.parent.CollectionsContractTest#testContract[CtStatementList], spoon.test.parent.CollectionsContractTest#testContract[CtSwitch], spoon.test.parent.CollectionsContractTest#testContract[CtAnnotationMethod], spoon.test.parent.CollectionsContractTest#testContract[CtWildcardReference], spoon.test.parent.CollectionsContractTest#testContract[CtSynchronized], spoon.test.parent.CollectionsContractTest#testContract[CtProvidedService], spoon.test.parent.CollectionsContractTest#testContract[CtTry], spoon.test.parent.CollectionsContractTest#testContract[CtPackageReference], spoon.test.parent.CollectionsContractTest#testContract[CtTypeParameterReference], spoon.test.parent.CollectionsContractTest#testContract[CtBinaryOperator], spoon.test.parent.CollectionsContractTest#testContract[CtTypeParameter], spoon.test.parent.CollectionsContractTest#testContract[CtMethod], spoon.test.parent.CollectionsContractTest#testContract[CtLiteral], spoon.test.parent.CollectionsContractTest#testContract[CtParameterReference], spoon.test.parent.CollectionsContractTest#testContract[CtTryWithResource], spoon.test.parent.CollectionsContractTest#testContract[CtUsedService], spoon.test.parent.CollectionsContractTest#testContract[CtIf], spoon.test.parent.CollectionsContractTest#testContract[CtModule], spoon.test.parent.CollectionsContractTest#testContract[CtEnum], spoon.test.parent.CollectionsContractTest#testContract[CtEnumValue], spoon.test.parent.CollectionsContractTest#testContract[CtWhile], spoon.test.parent.CollectionsContractTest#testContract[CtAnnotation], spoon.test.parent.CollectionsContractTest#testContract[CtSuperAccess], spoon.test.parent.CollectionsContractTest#testContract[CtBlock], spoon.test.parent.CollectionsContractTest#testContract[CtClass], spoon.test.parent.CollectionsContractTest#testContract[CtModuleReference], spoon.test.parent.CollectionsContractTest#testContract[CtContinue], spoon.test.parent.CollectionsContractTest#testContract[CtAnonymousExecutable], spoon.test.parent.CollectionsContractTest#testContract[CtBreak], spoon.test.parent.CollectionsContractTest#testContract[CtCodeSnippetStatement], spoon.test.parent.CollectionsContractTest#testContract[CtFieldReference], spoon.test.parent.CollectionsContractTest#testContract[CtExecutableReferenceExpression], spoon.test.parent.CollectionsContractTest#testContract[CtPackageExport], spoon.test.parent.CollectionsContractTest#testContract[CtUnaryOperator], spoon.test.parent.CollectionsContractTest#testContract[CtParameter], spoon.test.parent.CollectionsContractTest#testContract[CtArrayRead], spoon.test.parent.CollectionsContractTest#testContract[CtCodeSnippetExpression], spoon.test.parent.CollectionsContractTest#testContract[CtPackage]], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtConditional#cast;READ_ONLY
normal;CtConditional#annotation;READ_ONLY
normal;CtConditional#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtProvidedService#implementationType;READ_ONLY
normal;CtProvidedService#annotation;READ_ONLY
normal;CtProvidedService#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtParameter#annotation;READ_ONLY
normal;CtParameter#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtWhile#annotation;READ_ONLY
normal;CtWhile#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtTypeReference#typeArgument;READ_ONLY
derived;CtTypeReference#interface;MUTABLE_DETACHED
normal;CtTypeReference#annotation;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtCatchVariableReference#annotation;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtContinue#annotation;READ_ONLY
normal;CtContinue#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtInterface#typeMember;READ_ONLY
derived;CtInterface#field;MUTABLE_DETACHED
derived;CtInterface#nestedType;MUTABLE_DETACHED
derived;CtInterface#method;MUTABLE_DETACHED
normal;CtInterface#interface;READ_ONLY
normal;CtInterface#typeParameter;READ_ONLY
normal;CtInterface#annotation;READ_ONLY
normal;CtInterface#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtAssignment#cast;READ_ONLY
normal;CtAssignment#annotation;READ_ONLY
normal;CtAssignment#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtBinaryOperator#cast;READ_ONLY
normal;CtBinaryOperator#annotation;READ_ONLY
normal;CtBinaryOperator#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtEnumValue#annotation;READ_ONLY
normal;CtEnumValue#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtModuleRequirement#annotation;READ_ONLY
normal;CtModuleRequirement#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtForEach#annotation;READ_ONLY
normal;CtForEach#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtConstructor#typeParameter;READ_ONLY
normal;CtConstructor#parameter;READ_ONLY
normal;CtConstructor#thrown;READ_ONLY
normal;CtConstructor#annotation;READ_ONLY
normal;CtConstructor#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtSuperAccess#cast;READ_ONLY
normal;CtSuperAccess#annotation;READ_ONLY
normal;CtSuperAccess#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtAnonymousExecutable#annotation;READ_ONLY
normal;CtAnonymousExecutable#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtComment#annotation;READ_ONLY
normal;CtComment#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Failed check of;CtWildcardReference#interface
normal;CtWildcardReference#annotation;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtThisAccess#cast;READ_ONLY
normal;CtThisAccess#annotation;READ_ONLY
normal;CtThisAccess#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtArrayWrite#cast;READ_ONLY
normal;CtArrayWrite#annotation;READ_ONLY
normal;CtArrayWrite#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtPackageReference#annotation;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtJavaDoc#commentTag;MUTABLE_DETACHED
normal;CtJavaDoc#annotation;READ_ONLY
normal;CtJavaDoc#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtArrayRead#cast;READ_ONLY
normal;CtArrayRead#annotation;READ_ONLY
normal;CtArrayRead#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtStatementList#statement;READ_ONLY
normal;CtStatementList#annotation;READ_ONLY
normal;CtStatementList#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtVariableWrite#cast;READ_ONLY
normal;CtVariableWrite#annotation;READ_ONLY
normal;CtVariableWrite#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtParameterReference#annotation;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtOperatorAssignment#cast;READ_ONLY
normal;CtOperatorAssignment#annotation;READ_ONLY
normal;CtOperatorAssignment#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtAnnotationFieldAccess#cast;READ_ONLY
normal;CtAnnotationFieldAccess#annotation;READ_ONLY
normal;CtAnnotationFieldAccess#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtAnnotationMethod#annotation;READ_ONLY
normal;CtAnnotationMethod#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='derived;CtClass#annonymousExecutable;MUTABLE_DETACHED
derived;CtClass#constructor;MUTABLE_DETACHED
normal;CtClass#typeMember;READ_ONLY
derived;CtClass#field;MUTABLE_DETACHED
derived;CtClass#nestedType;MUTABLE_DETACHED
derived;CtClass#method;MUTABLE_DETACHED
normal;CtClass#interface;READ_ONLY
normal;CtClass#typeParameter;READ_ONLY
normal;CtClass#annotation;READ_ONLY
normal;CtClass#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtBlock#statement;MUTABLE_ATTACHED_INCORRECT
normal;CtBlock#annotation;READ_ONLY
normal;CtBlock#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtPackage#subPackage;MUTABLE_ATTACHED_INCORRECT
normal;CtPackage#containedType;MUTABLE_ATTACHED_INCORRECT
normal;CtPackage#annotation;READ_ONLY
normal;CtPackage#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtTryWithResource#tryResource;READ_ONLY
normal;CtTryWithResource#catch;READ_ONLY
normal;CtTryWithResource#annotation;READ_ONLY
normal;CtTryWithResource#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtAssert#annotation;READ_ONLY
normal;CtAssert#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtSwitch#case;READ_ONLY
normal;CtSwitch#annotation;READ_ONLY
normal;CtSwitch#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtTry#catch;READ_ONLY
normal;CtTry#annotation;READ_ONLY
normal;CtTry#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtSynchronized#annotation;READ_ONLY
normal;CtSynchronized#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtImport#annotation;READ_ONLY
normal;CtImport#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Failed check of;CtTypeParameterReference#interface
normal;CtTypeParameterReference#annotation;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtInvocation#argument;READ_ONLY
normal;CtInvocation#cast;READ_ONLY
normal;CtInvocation#annotation;READ_ONLY
normal;CtInvocation#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtCodeSnippetExpression#cast;READ_ONLY
normal;CtCodeSnippetExpression#annotation;READ_ONLY
normal;CtCodeSnippetExpression#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtFieldWrite#cast;READ_ONLY
normal;CtFieldWrite#annotation;READ_ONLY
normal;CtFieldWrite#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtUnaryOperator#cast;READ_ONLY
normal;CtUnaryOperator#annotation;READ_ONLY
normal;CtUnaryOperator#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtExecutableReference#typeArgument;READ_ONLY
normal;CtExecutableReference#argumentType;READ_ONLY
normal;CtExecutableReference#annotation;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtFor#forInit;READ_ONLY
normal;CtFor#forUpdate;READ_ONLY
normal;CtFor#annotation;READ_ONLY
normal;CtFor#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtVariableRead#cast;READ_ONLY
normal;CtVariableRead#annotation;READ_ONLY
normal;CtVariableRead#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtTypeParameter#annotation;READ_ONLY
normal;CtTypeParameter#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtLocalVariable#annotation;READ_ONLY
normal;CtLocalVariable#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtIf#annotation;READ_ONLY
normal;CtIf#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtModule#moduleDirective;READ_ONLY
normal;CtModule#annotation;READ_ONLY
normal;CtModule#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtPackageExport#moduleRef;READ_ONLY
normal;CtPackageExport#annotation;READ_ONLY
normal;CtPackageExport#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtConstructorCall#argument;READ_ONLY
normal;CtConstructorCall#cast;READ_ONLY
normal;CtConstructorCall#annotation;READ_ONLY
normal;CtConstructorCall#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtCase#statement;READ_ONLY
normal;CtCase#annotation;READ_ONLY
normal;CtCase#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtModuleReference#annotation;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtCatch#annotation;READ_ONLY
normal;CtCatch#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtArrayTypeReference#typeArgument;READ_ONLY
derived;CtArrayTypeReference#interface;MUTABLE_DETACHED
normal;CtArrayTypeReference#annotation;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtMethod#typeParameter;READ_ONLY
normal;CtMethod#parameter;READ_ONLY
normal;CtMethod#thrown;READ_ONLY
normal;CtMethod#annotation;READ_ONLY
normal;CtMethod#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtLambda#parameter;READ_ONLY
normal;CtLambda#cast;READ_ONLY
normal;CtLambda#annotation;READ_ONLY
normal;CtLambda#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtNewArray#dimension;READ_ONLY
normal;CtNewArray#expression;READ_ONLY
normal;CtNewArray#cast;READ_ONLY
normal;CtNewArray#annotation;READ_ONLY
normal;CtNewArray#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtUsedService#annotation;READ_ONLY
normal;CtUsedService#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtIntersectionTypeReference#bound;READ_ONLY
normal;CtIntersectionTypeReference#typeArgument;READ_ONLY
Failed check of;CtIntersectionTypeReference#interface
normal;CtIntersectionTypeReference#annotation;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtThrow#annotation;READ_ONLY
normal;CtThrow#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtLiteral#cast;READ_ONLY
normal;CtLiteral#annotation;READ_ONLY
normal;CtLiteral#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtReturn#annotation;READ_ONLY
normal;CtReturn#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtJavaDocTag#annotation;READ_ONLY
normal;CtJavaDocTag#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtField#annotation;READ_ONLY
normal;CtField#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtTypeAccess#cast;READ_ONLY
normal;CtTypeAccess#annotation;READ_ONLY
normal;CtTypeAccess#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtCodeSnippetStatement#annotation;READ_ONLY
normal;CtCodeSnippetStatement#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtDo#annotation;READ_ONLY
normal;CtDo#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtAnnotation#value;READ_ONLY
normal;CtAnnotation#annotation;READ_ONLY
normal;CtAnnotation#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtFieldRead#cast;READ_ONLY
normal;CtFieldRead#annotation;READ_ONLY
normal;CtFieldRead#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtBreak#annotation;READ_ONLY
normal;CtBreak#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtFieldReference#annotation;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtEnum#value;READ_ONLY
derived;CtEnum#field;MUTABLE_DETACHED
derived;CtEnum#method;MUTABLE_DETACHED
derived;CtEnum#annonymousExecutable;MUTABLE_DETACHED
derived;CtEnum#constructor;MUTABLE_DETACHED
normal;CtEnum#typeMember;READ_ONLY
derived;CtEnum#nestedType;MUTABLE_DETACHED
normal;CtEnum#interface;READ_ONLY
normal;CtEnum#annotation;READ_ONLY
normal;CtEnum#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtNewClass#argument;READ_ONLY
normal;CtNewClass#cast;READ_ONLY
normal;CtNewClass#annotation;READ_ONLY
normal;CtNewClass#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtLocalVariableReference#annotation;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='derived;CtAnnotationType#method;MUTABLE_DETACHED
normal;CtAnnotationType#typeMember;READ_ONLY
derived;CtAnnotationType#field;MUTABLE_DETACHED
derived;CtAnnotationType#nestedType;MUTABLE_DETACHED
normal;CtAnnotationType#annotation;READ_ONLY
normal;CtAnnotationType#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtCatchVariable#multiType;READ_ONLY
normal;CtCatchVariable#annotation;READ_ONLY
normal;CtCatchVariable#comment;READ_ONLY', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='normal;CtExecutableReferenceExpression#cast;READ_ONLY
normal;CtExecutableReferenceExpression#annotation;READ_ONLY
normal;CtExecutableReferenceExpression#comment;READ_ONLY', isError=false}], nbFailures=79, nbErrors=0}
status: NOPATCH
dateEnd: Sun Mar 18 12:05:19 CET 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/354963921/src/main/java], projectClasspath='[Ljava.net.URL;@682bd3c4', projectTests=[spoon.test.parent.CollectionsContractTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/354963921, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='spoon.MavenLauncherTest', failingMethods=[spoon.MavenLauncherTest#spoonMavenLauncherTest, spoon.MavenLauncherTest#mavenLauncherTestMultiModulesAndVariables], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='Content of classpath: ', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='expected:<7> but was:<0>', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Sun Mar 18 12:05:27 CET 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/354963921/src/main/java], projectClasspath='[Ljava.net.URL;@468dbd07', projectTests=[spoon.MavenLauncherTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/354963921, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



