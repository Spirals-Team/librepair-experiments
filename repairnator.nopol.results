nopolinfo #0
location: FailureLocation{className='com.milaboratory.mixcr.basictypes.RandomAccessVDJCAReaderTest', failingMethods=[com.milaboratory.mixcr.basictypes.RandomAccessVDJCAReaderTest#test1], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='expected:<VDJCAlignerParameters{alignmentParameters={Variable=KGeneAlignmentParameters{parameters=KAlignerParameters{
  "type": "kaligner",
  "mapperKValue": 5,
  "floatingLeftBound": true,
  "floatingRightBound": true,
  "mapperAbsoluteMinScore": 1.5,
  "mapperRelativeMinScore": 0.7,
  "mapperMatchScore": 1.0,
  "mapperMismatchPenalty": -0.1,
  "mapperOffsetShiftPenalty": -0.3,
  "mapperMinSeedsDistance": 4,
  "mapperMaxSeedsDistance": 10,
  "minAlignmentLength": 15,
  "maxAdjacentIndels": 2,
  "alignmentStopPenalty": -1000,
  "absoluteMinScore": 40.0,
  "relativeMinScore": 0.87,
  "maxHits": 7,
  "scoring": {
    "type": "linear",
    "alphabet": "nucleotide",
    "subsMatrix": "simple(match = 5, mismatch = -9)",
    "gapPenalty": -12
  }
}, minSumScore=50, relativeMinScore=0.87}, Diversity=DAlignerParameters{absoluteMinScore=25.0, relativeMinScore=0.85, maxHits=3, scoring=com.milaboratory.core.alignment.LinearGapAlignmentScoring@f55466c2}, Joining=KGeneAlignmentParameters{parameters=KAlignerParameters{
  "type": "kaligner",
  "mapperKValue": 5,
  "floatingLeftBound": true,
  "floatingRightBound": false,
  "mapperAbsoluteMinScore": 1.5,
  "mapperRelativeMinScore": 0.75,
  "mapperMatchScore": 1.0,
  "mapperMismatchPenalty": -0.1,
  "mapperOffsetShiftPenalty": -0.3,
  "mapperMinSeedsDistance": 4,
  "mapperMaxSeedsDistance": 10,
  "minAlignmentLength": 15,
  "maxAdjacentIndels": 2,
  "alignmentStopPenalty": -1000,
  "absoluteMinScore": 40.0,
  "relativeMinScore": 0.87,
  "maxHits": 7,
  "scoring": {
    "type": "linear",
    "alphabet": "nucleotide",
    "subsMatrix": "simple(match = 5, mismatch = -9)",
    "gapPenalty": -12
  }
}, minSumScore=40, relativeMinScore=0.87}, Constant=KGeneAlignmentParameters{parameters=KAlignerParameters{
  "type": "kaligner",
  "mapperKValue": 5,
  "floatingLeftBound": false,
  "floatingRightBound": false,
  "mapperAbsoluteMinScore": 1.5,
  "mapperRelativeMinScore": 0.75,
  "mapperMatchScore": 1.0,
  "mapperMismatchPenalty": -0.1,
  "mapperOffsetShiftPenalty": -0.3,
  "mapperMinSeedsDistance": 4,
  "mapperMaxSeedsDistance": 10,
  "minAlignmentLength": 15,
  "maxAdjacentIndels": 2,
  "alignmentStopPenalty": -1000,
  "absoluteMinScore": 40.0,
  "relativeMinScore": 0.87,
  "maxHits": 7,
  "scoring": {
    "type": "linear",
    "alphabet": "nucleotide",
    "subsMatrix": "simple(match = 5, mismatch = -9)",
    "gapPenalty": -12
  }
}, minSumScore=40, relativeMinScore=0.87}}, vjAlignmentOrder=VThenJ, includeDScore=false, includeCScore=false, minSumScore=120.0, maxHits=5, relativeMinVFR3CDR3Score=0.7, allowPartialAlignments=false, allowNoCDR3PartAlignments=false, allowChimeras=false, readsLayout=Opposite, mergerParameters=com.milaboratory.core.merger.MergerParameters@c2774492, fixSeed=true, alignmentBoundaryTolerance=3, minChimeraDetectionScore=5, vjOverlapWindow=120, saveOriginalReads=false}> but was:<VDJCAlignerParameters{alignmentParameters={Variable=KGeneAlignmentParameters{parameters=KAlignerParameters{
  "type": "kaligner",
  "mapperKValue": 5,
  "floatingLeftBound": true,
  "floatingRightBound": true,
  "mapperAbsoluteMinScore": 1.5,
  "mapperRelativeMinScore": 0.7,
  "mapperMatchScore": 1.0,
  "mapperMismatchPenalty": -0.1,
  "mapperOffsetShiftPenalty": -0.3,
  "mapperMinSeedsDistance": 4,
  "mapperMaxSeedsDistance": 10,
  "minAlignmentLength": 15,
  "maxAdjacentIndels": 2,
  "alignmentStopPenalty": -1000,
  "absoluteMinScore": 40.0,
  "relativeMinScore": 0.87,
  "maxHits": 7,
  "scoring": {
    "type": "linear",
    "alphabet": "nucleotide",
    "subsMatrix": "simple(match = 5, mismatch = -9)",
    "gapPenalty": -12
  }
}, minSumScore=50, relativeMinScore=0.87}, Diversity=DAlignerParameters{absoluteMinScore=25.0, relativeMinScore=0.85, maxHits=3, scoring=com.milaboratory.core.alignment.LinearGapAlignmentScoring@f55466c2}, Joining=KGeneAlignmentParameters{parameters=KAlignerParameters{
  "type": "kaligner",
  "mapperKValue": 5,
  "floatingLeftBound": true,
  "floatingRightBound": false,
  "mapperAbsoluteMinScore": 1.5,
  "mapperRelativeMinScore": 0.75,
  "mapperMatchScore": 1.0,
  "mapperMismatchPenalty": -0.1,
  "mapperOffsetShiftPenalty": -0.3,
  "mapperMinSeedsDistance": 4,
  "mapperMaxSeedsDistance": 10,
  "minAlignmentLength": 15,
  "maxAdjacentIndels": 2,
  "alignmentStopPenalty": -1000,
  "absoluteMinScore": 40.0,
  "relativeMinScore": 0.87,
  "maxHits": 7,
  "scoring": {
    "type": "linear",
    "alphabet": "nucleotide",
    "subsMatrix": "simple(match = 5, mismatch = -9)",
    "gapPenalty": -12
  }
}, minSumScore=40, relativeMinScore=0.87}, Constant=KGeneAlignmentParameters{parameters=KAlignerParameters{
  "type": "kaligner",
  "mapperKValue": 5,
  "floatingLeftBound": false,
  "floatingRightBound": false,
  "mapperAbsoluteMinScore": 1.5,
  "mapperRelativeMinScore": 0.75,
  "mapperMatchScore": 1.0,
  "mapperMismatchPenalty": -0.1,
  "mapperOffsetShiftPenalty": -0.3,
  "mapperMinSeedsDistance": 4,
  "mapperMaxSeedsDistance": 10,
  "minAlignmentLength": 15,
  "maxAdjacentIndels": 2,
  "alignmentStopPenalty": -1000,
  "absoluteMinScore": 40.0,
  "relativeMinScore": 0.87,
  "maxHits": 7,
  "scoring": {
    "type": "linear",
    "alphabet": "nucleotide",
    "subsMatrix": "simple(match = 5, mismatch = -9)",
    "gapPenalty": -12
  }
}, minSumScore=40, relativeMinScore=0.87}}, vjAlignmentOrder=VThenJ, includeDScore=false, includeCScore=false, minSumScore=120.0, maxHits=5, relativeMinVFR3CDR3Score=0.7, allowPartialAlignments=false, allowNoCDR3PartAlignments=false, allowChimeras=false, readsLayout=Opposite, mergerParameters=com.milaboratory.core.merger.MergerParameters@c2774492, fixSeed=true, alignmentBoundaryTolerance=5, minChimeraDetectionScore=120, vjOverlapWindow=3, saveOriginalReads=false}>', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Fri Mar 30 18:13:59 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/milaboratory/mixcr/360301735/src/main/java], projectClasspath='[Ljava.net.URL;@2102a4d5', projectTests=[com.milaboratory.mixcr.basictypes.RandomAccessVDJCAReaderTest], complianceLevel=8, outputFolder=./workspace/milaboratory/mixcr/360301735, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='com.milaboratory.mixcr.assembler.fullseq.FullSeqAssemblerTest', failingMethods=[com.milaboratory.mixcr.assembler.fullseq.FullSeqAssemblerTest#testLargeCloneNoMismatches], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='expected:<1> but was:<2>', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Fri Mar 30 18:14:00 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/milaboratory/mixcr/360301735/src/main/java], projectClasspath='[Ljava.net.URL;@4c0e426a', projectTests=[com.milaboratory.mixcr.assembler.fullseq.FullSeqAssemblerTest], complianceLevel=8, outputFolder=./workspace/milaboratory/mixcr/360301735, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #2
location: FailureLocation{className='com.milaboratory.mixcr.vdjaligners.VDJCAlignerParametersTest', failingMethods=[com.milaboratory.mixcr.vdjaligners.VDJCAlignerParametersTest#test1], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='expected:<VDJCAlignerParameters{alignmentParameters={Variable=KGeneAlignmentParameters{parameters=KAlignerParameters{
  "type": "kaligner",
  "mapperKValue": 5,
  "floatingLeftBound": false,
  "floatingRightBound": false,
  "mapperAbsoluteMinScore": 1.5,
  "mapperRelativeMinScore": 0.75,
  "mapperMatchScore": 1.0,
  "mapperMismatchPenalty": -0.1,
  "mapperOffsetShiftPenalty": -0.3,
  "mapperMinSeedsDistance": 4,
  "mapperMaxSeedsDistance": 10,
  "minAlignmentLength": 15,
  "maxAdjacentIndels": 2,
  "alignmentStopPenalty": -10,
  "absoluteMinScore": 40.0,
  "relativeMinScore": 0.87,
  "maxHits": 7,
  "scoring": {
    "type": "linear",
    "alphabet": "nucleotide",
    "subsMatrix": "simple(match = 5, mismatch = -4)",
    "gapPenalty": -5
  }
}, minSumScore=120, relativeMinScore=0.87}, Diversity=DAlignerParameters{absoluteMinScore=30.0, relativeMinScore=0.85, maxHits=3, scoring=com.milaboratory.core.alignment.AffineGapAlignmentScoring@b29b2809}, Joining=KGeneAlignmentParameters{parameters=KAlignerParameters{
  "type": "kaligner",
  "mapperKValue": 5,
  "floatingLeftBound": false,
  "floatingRightBound": false,
  "mapperAbsoluteMinScore": 1.5,
  "mapperRelativeMinScore": 0.75,
  "mapperMatchScore": 1.0,
  "mapperMismatchPenalty": -0.1,
  "mapperOffsetShiftPenalty": -0.3,
  "mapperMinSeedsDistance": 4,
  "mapperMaxSeedsDistance": 10,
  "minAlignmentLength": 15,
  "maxAdjacentIndels": 2,
  "alignmentStopPenalty": -10,
  "absoluteMinScore": 40.0,
  "relativeMinScore": 0.87,
  "maxHits": 7,
  "scoring": {
    "type": "linear",
    "alphabet": "nucleotide",
    "subsMatrix": "simple(match = 5, mismatch = -4)",
    "gapPenalty": -5
  }
}, minSumScore=120, relativeMinScore=0.87}, Constant=KGeneAlignmentParameters{parameters=KAlignerParameters{
  "type": "kaligner",
  "mapperKValue": 5,
  "floatingLeftBound": false,
  "floatingRightBound": false,
  "mapperAbsoluteMinScore": 1.5,
  "mapperRelativeMinScore": 0.75,
  "mapperMatchScore": 1.0,
  "mapperMismatchPenalty": -0.1,
  "mapperOffsetShiftPenalty": -0.3,
  "mapperMinSeedsDistance": 4,
  "mapperMaxSeedsDistance": 10,
  "minAlignmentLength": 15,
  "maxAdjacentIndels": 2,
  "alignmentStopPenalty": -10,
  "absoluteMinScore": 40.0,
  "relativeMinScore": 0.87,
  "maxHits": 7,
  "scoring": {
    "type": "linear",
    "alphabet": "nucleotide",
    "subsMatrix": "simple(match = 5, mismatch = -4)",
    "gapPenalty": -5
  }
}, minSumScore=120, relativeMinScore=0.87}}, vjAlignmentOrder=JThenV, includeDScore=false, includeCScore=false, minSumScore=120.0, maxHits=5, relativeMinVFR3CDR3Score=0.7, allowPartialAlignments=false, allowNoCDR3PartAlignments=false, allowChimeras=false, readsLayout=Opposite, mergerParameters=com.milaboratory.core.merger.MergerParameters@ef7faa9, fixSeed=false, alignmentBoundaryTolerance=5, minChimeraDetectionScore=120, vjOverlapWindow=10, saveOriginalReads=true}> but was:<VDJCAlignerParameters{alignmentParameters={Variable=KGeneAlignmentParameters{parameters=KAlignerParameters{
  "type": "kaligner",
  "mapperKValue": 5,
  "floatingLeftBound": false,
  "floatingRightBound": false,
  "mapperAbsoluteMinScore": 1.5,
  "mapperRelativeMinScore": 0.75,
  "mapperMatchScore": 1.0,
  "mapperMismatchPenalty": -0.1,
  "mapperOffsetShiftPenalty": -0.3,
  "mapperMinSeedsDistance": 4,
  "mapperMaxSeedsDistance": 10,
  "minAlignmentLength": 15,
  "maxAdjacentIndels": 2,
  "alignmentStopPenalty": -10,
  "absoluteMinScore": 40.0,
  "relativeMinScore": 0.87,
  "maxHits": 7,
  "scoring": {
    "type": "linear",
    "alphabet": "nucleotide",
    "subsMatrix": "simple(match = 5, mismatch = -4)",
    "gapPenalty": -5
  }
}, minSumScore=120, relativeMinScore=0.87}, Diversity=DAlignerParameters{absoluteMinScore=30.0, relativeMinScore=0.85, maxHits=3, scoring=com.milaboratory.core.alignment.AffineGapAlignmentScoring@b29b2809}, Joining=KGeneAlignmentParameters{parameters=KAlignerParameters{
  "type": "kaligner",
  "mapperKValue": 5,
  "floatingLeftBound": false,
  "floatingRightBound": false,
  "mapperAbsoluteMinScore": 1.5,
  "mapperRelativeMinScore": 0.75,
  "mapperMatchScore": 1.0,
  "mapperMismatchPenalty": -0.1,
  "mapperOffsetShiftPenalty": -0.3,
  "mapperMinSeedsDistance": 4,
  "mapperMaxSeedsDistance": 10,
  "minAlignmentLength": 15,
  "maxAdjacentIndels": 2,
  "alignmentStopPenalty": -10,
  "absoluteMinScore": 40.0,
  "relativeMinScore": 0.87,
  "maxHits": 7,
  "scoring": {
    "type": "linear",
    "alphabet": "nucleotide",
    "subsMatrix": "simple(match = 5, mismatch = -4)",
    "gapPenalty": -5
  }
}, minSumScore=120, relativeMinScore=0.87}, Constant=KGeneAlignmentParameters{parameters=KAlignerParameters{
  "type": "kaligner",
  "mapperKValue": 5,
  "floatingLeftBound": false,
  "floatingRightBound": false,
  "mapperAbsoluteMinScore": 1.5,
  "mapperRelativeMinScore": 0.75,
  "mapperMatchScore": 1.0,
  "mapperMismatchPenalty": -0.1,
  "mapperOffsetShiftPenalty": -0.3,
  "mapperMinSeedsDistance": 4,
  "mapperMaxSeedsDistance": 10,
  "minAlignmentLength": 15,
  "maxAdjacentIndels": 2,
  "alignmentStopPenalty": -10,
  "absoluteMinScore": 40.0,
  "relativeMinScore": 0.87,
  "maxHits": 7,
  "scoring": {
    "type": "linear",
    "alphabet": "nucleotide",
    "subsMatrix": "simple(match = 5, mismatch = -4)",
    "gapPenalty": -5
  }
}, minSumScore=120, relativeMinScore=0.87}}, vjAlignmentOrder=JThenV, includeDScore=false, includeCScore=false, minSumScore=120.0, maxHits=5, relativeMinVFR3CDR3Score=0.7, allowPartialAlignments=false, allowNoCDR3PartAlignments=false, allowChimeras=false, readsLayout=Opposite, mergerParameters=com.milaboratory.core.merger.MergerParameters@ef7faa9, fixSeed=false, alignmentBoundaryTolerance=10, minChimeraDetectionScore=5, vjOverlapWindow=120, saveOriginalReads=true}>', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Fri Mar 30 18:14:02 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/milaboratory/mixcr/360301735/src/main/java], projectClasspath='[Ljava.net.URL;@b0d3e7', projectTests=[com.milaboratory.mixcr.vdjaligners.VDJCAlignerParametersTest], complianceLevel=8, outputFolder=./workspace/milaboratory/mixcr/360301735, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



