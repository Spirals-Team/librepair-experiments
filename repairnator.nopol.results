nopolinfo #0
location: FailureLocation{className='spoon.test.architecture.SpoonArchitectureEnforcerTest', failingMethods=[spoon.test.architecture.SpoonArchitectureEnforcerTest#testSpecPackage, spoon.test.architecture.SpoonArchitectureEnforcerTest#testSrcMainJava], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='1 public methods should be documented with proper API documentation: 
spoon.reflect.visitor.printer.change.PrintAction#run()', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='you have created a new package or removed an existing one, please declare it explicitly in SpoonArchitectureEnforcerTest#testSpecPackage

Details: Package spoon.reflect.visitor.printer.change presents in computed but not expected set.', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Thu Mar 29 23:50:03 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360025399/src/main/java], projectClasspath='[Ljava.net.URL;@6ef81f31', projectTests=[spoon.test.architecture.SpoonArchitectureEnforcerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360025399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='spoon.test.prettyprinter.PrintChangesTest', failingMethods=[spoon.test.prettyprinter.PrintChangesTest#testPrintUnchaged, spoon.test.prettyprinter.PrintChangesTest#testPrintChanged], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...inter.testclasses;

[import java.util.ArrayList;
import java.util.List;

/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T> implements List<T>,
 Cloneable
{
 
 
 /**/
 final
 //
 private String string = "a"
   + "b" + "c"+"d";
 
 //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2)
 {
  System.out.println("aaa"
    + "xyz");
 }
}

//and what about this comment? ]> but was:<...inter.testclasses;

[
/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T> implements List<T>,
 Cloneable
{
 
 
 /**/
 final
 //
 private String string = "a"
   + "b" + "c"+"d";
 
 //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2)
 {
  System.out.println("aaa"
    + "xyz");
 }
}

]>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...inter.testclasses;

[import java.util.ArrayList;
import java.util.List;

/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T> implements List<T>,
 Cloneable
{
 
 
 /**/
 final
 //
 private String string = "a"
   + "b" + "c"+"d";
 
 //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2)
 {
  System.out.println("aaa"
    + "xyz");
 }
}

//and what about this comment? ]> but was:<...inter.testclasses;

[
import java.util.ArrayList;
import java.util.List;


/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T> implements List<T>,
 Cloneable
{
    /**/
 final
 //
 private String modified = "a"
   + "b" + "c"+"d";

    //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2)
 {
  System.out.println("aaa"
    + "xyz");
 }
}

]>', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Thu Mar 29 23:50:18 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360025399/src/main/java], projectClasspath='[Ljava.net.URL;@335ff774', projectTests=[spoon.test.prettyprinter.PrintChangesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360025399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #2
location: FailureLocation{className='spoon.MavenLauncherTest', failingMethods=[spoon.MavenLauncherTest#spoonMavenLauncherTest, spoon.MavenLauncherTest#mavenLauncherTestMultiModulesAndVariables], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='Content of classpath: ', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='expected:<7> but was:<0>', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Thu Mar 29 23:50:32 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360025399/src/main/java], projectClasspath='[Ljava.net.URL;@d449860', projectTests=[spoon.MavenLauncherTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360025399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #3
location: FailureLocation{className='spoon.test.position.PositionTest', failingMethods=[spoon.test.position.PositionTest#testPositionClassWithComments], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...
public /*c2*/
//lc2[]> but was:<...
public /*c2*/
//lc2[
class]>', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Thu Mar 29 23:50:45 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360025399/src/main/java], projectClasspath='[Ljava.net.URL;@1510b629', projectTests=[spoon.test.position.PositionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360025399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #4
location: FailureLocation{className='spoon.test.main.MainTest', failingMethods=[], erroringMethods=[spoon.test.main.MainTest#testTest, spoon.test.main.MainTest#testMain_checkGenericContracts], failures=[FailureType{failureName='java.lang.StringIndexOutOfBoundsException', failureDetail='String index out of range: -1', isError=true}, FailureType{failureName='java.lang.StringIndexOutOfBoundsException', failureDetail='String index out of range: -1', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Thu Mar 29 23:50:59 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360025399/src/main/java], projectClasspath='[Ljava.net.URL;@1c19d744', projectTests=[spoon.test.main.MainTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360025399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



