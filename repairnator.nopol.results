nopolinfo #0
location: FailureLocation{className='me.josephcosentino.service.UserServiceImplTest', failingMethods=[], erroringMethods=[me.josephcosentino.service.UserServiceImplTest#adminAccessFindByGroup, me.josephcosentino.service.UserServiceImplTest#findByGroupIdCache, me.josephcosentino.service.UserServiceImplTest#clearCache, me.josephcosentino.service.UserServiceImplTest#findAllUsersByGroupId, me.josephcosentino.service.UserServiceImplTest#invalidUserAccessFindByGroup, me.josephcosentino.service.UserServiceImplTest#validUserAccessFindById, me.josephcosentino.service.UserServiceImplTest#findNonExistantUsers, me.josephcosentino.service.UserServiceImplTest#clearCacheById, me.josephcosentino.service.UserServiceImplTest#findNonExistentUserById, me.josephcosentino.service.UserServiceImplTest#findUsersByNonExistentGroupId, me.josephcosentino.service.UserServiceImplTest#findUsers, me.josephcosentino.service.UserServiceImplTest#findByIdCache, me.josephcosentino.service.UserServiceImplTest#findUserById, me.josephcosentino.service.UserServiceImplTest#userAccessFindAll, me.josephcosentino.service.UserServiceImplTest#findUser, me.josephcosentino.service.UserServiceImplTest#adminAccessFindAll, me.josephcosentino.service.UserServiceImplTest#findUserByGroupId, me.josephcosentino.service.UserServiceImplTest#validUserAccessFindByGroup, me.josephcosentino.service.UserServiceImplTest#invalidUserAccessFindById, me.josephcosentino.service.UserServiceImplTest#findAllCache, me.josephcosentino.service.UserServiceImplTest#adminAccessFindById], failures=[FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}], nbFailures=0, nbErrors=21}
status: NOPATCH
dateEnd: Sat May 12 18:01:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/jcosentino11/meals-api/378126797/src/main/java], projectClasspath='[Ljava.net.URL;@7e9da981', projectTests=[me.josephcosentino.service.UserServiceImplTest], complianceLevel=8, outputFolder=./workspace/jcosentino11/meals-api/378126797, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='me.josephcosentino.service.GroupServiceImplTest', failingMethods=[], erroringMethods=[me.josephcosentino.service.GroupServiceImplTest#userAccessFindAll, me.josephcosentino.service.GroupServiceImplTest#invalidUserAccessFindById, me.josephcosentino.service.GroupServiceImplTest#findGroupById, me.josephcosentino.service.GroupServiceImplTest#findAllCache, me.josephcosentino.service.GroupServiceImplTest#findGroup, me.josephcosentino.service.GroupServiceImplTest#validUserAccessFindById, me.josephcosentino.service.GroupServiceImplTest#adminAccessFindAll, me.josephcosentino.service.GroupServiceImplTest#findNonExistantUsers, me.josephcosentino.service.GroupServiceImplTest#adminAccessFindById, me.josephcosentino.service.GroupServiceImplTest#findByIdCache, me.josephcosentino.service.GroupServiceImplTest#clearCache, me.josephcosentino.service.GroupServiceImplTest#findGroups, me.josephcosentino.service.GroupServiceImplTest#findNonExistentGroupById, me.josephcosentino.service.GroupServiceImplTest#clearCacheById], failures=[FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Failed to load ApplicationContext', isError=true}], nbFailures=0, nbErrors=14}
status: NOPATCH
dateEnd: Sat May 12 18:01:53 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/jcosentino11/meals-api/378126797/src/main/java], projectClasspath='[Ljava.net.URL;@5853495b', projectTests=[me.josephcosentino.service.GroupServiceImplTest], complianceLevel=8, outputFolder=./workspace/jcosentino11/meals-api/378126797, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



