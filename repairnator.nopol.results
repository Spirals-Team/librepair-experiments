nopolinfo #0
location: FailureLocation{className='com.facebook.presto.tests.TestTpchDistributedQueries', failingMethods=[com.facebook.presto.tests.TestTpchDistributedQueries#testNonEqualityRightJoin, com.facebook.presto.tests.TestTpchDistributedQueries#testAggregationWithProjection2, com.facebook.presto.tests.TestTpchDistributedQueries#testTableSampleBernoulli, com.facebook.presto.tests.TestTpchDistributedQueries#testIfExpression, com.facebook.presto.tests.TestTpchDistributedQueries#testGroupingSetsWithMultipleDistinctNoInput, com.facebook.presto.tests.TestTpchDistributedQueries#testCoercions, com.facebook.presto.tests.TestTpchDistributedQueries#testTry, com.facebook.presto.tests.TestTpchDistributedQueries#testGroupingSetsRepeatedSetsAllNoInput, com.facebook.presto.tests.TestTpchDistributedQueries#testCountWithOrPredicate, com.facebook.presto.tests.TestTpchDistributedQueries#testExistsSubquery, com.facebook.presto.tests.TestTpchDistributedQueries#testNonDeterministicJoinPredicatePushdown, com.facebook.presto.tests.TestTpchDistributedQueries#testDefaultDecimalLiteralSwitch, com.facebook.presto.tests.TestTpchDistributedQueries#testApproxPercentile, com.facebook.presto.tests.TestTpchDistributedQueries#testCountWithAndPredicate, com.facebook.presto.tests.TestTpchDistributedQueries#testNonDeterministicFilter, com.facebook.presto.tests.TestTpchDistributedQueries#testSameWindowFunctionsTwoCoerces, com.facebook.presto.tests.TestTpchDistributedQueries#testGroupingSetsMultipleGrandTotalSetsNoInput, com.facebook.presto.tests.TestTpchDistributedQueries#testHaving3, com.facebook.presto.tests.TestTpchDistributedQueries#testTrivialNonDeterministicPredicatePushdown, com.facebook.presto.tests.TestTpchDistributedQueries#testAggregationWithProjection, com.facebook.presto.tests.TestTpchDistributedQueries#testCubeNoInput, com.facebook.presto.tests.TestTpchDistributedQueries#testScalarSubquery, com.facebook.presto.tests.TestTpchDistributedQueries#testJoinCoercion, com.facebook.presto.tests.TestTpchDistributedQueries#testGroupingSetsWithGlobalAggregationNoInput, com.facebook.presto.tests.TestTpchDistributedQueries#testGroupingSetsNoInput, com.facebook.presto.tests.TestTpchDistributedQueries#testNonDeterministicAggregationPredicatePushdown, com.facebook.presto.tests.TestTpchDistributedQueries#testValues, com.facebook.presto.tests.TestTpchDistributedQueries#testNonEqualityFullJoin, com.facebook.presto.tests.TestTpchDistributedQueries#testApproximateCountDistinctGroupByWithStandardError, com.facebook.presto.tests.TestTpchDistributedQueries#testNonEqualityLeftJoin, com.facebook.presto.tests.TestTpchDistributedQueries#testAggregationWithSomeArgumentCasts, com.facebook.presto.tests.TestTpchDistributedQueries#testApproximateCountDistinct, com.facebook.presto.tests.TestTpchDistributedQueries#testNonDeterministicTableScanPredicatePushdown, com.facebook.presto.tests.TestTpchDistributedQueries#testNonEqualityJoin, com.facebook.presto.tests.TestTpchDistributedQueries#testJoinCriteriaCoercion, com.facebook.presto.tests.TestTpchDistributedQueries#testColumnAliases, com.facebook.presto.tests.TestTpchDistributedQueries#testComplexDistinct, com.facebook.presto.tests.TestTpchDistributedQueries#testCorrelatedScalarSubqueriesWithScalarAggregation, com.facebook.presto.tests.TestTpchDistributedQueries#testIn], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT sum(totalprice * 2) - sum(totalprice) FROM orders', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT sum(totalprice * 2) + sum(totalprice * 2) FROM orders', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='For query: 
 SELECT APPROX_PERCENTILE(0.1E0, x), AVG(x), MIN(x) FROM (values 1, 1, 1) t(x)
not equal
Actual 1 rows:
    [4.9E-324, 1.0, 1]
Expected 1 rows:
    [0.1, 1.0, 1]
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='expected [true] but found [false]', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT approx_distinct(custkey, 0.023) FROM orders', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='Max standard error must be in [0.0115, 0.26]: 1.14E-322', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='For query: 
 SELECT CAST(1.1 AS DECIMAL(38,1)) + CAST(1.1 AS DOUBLE)
not equal
Actual 1 rows:
    [1.1E-322]
Expected 1 rows:
    [2.2]
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT x, T.y, z + 1 FROM (SELECT custkey, orderstatus, totalprice FROM orders) T (x, y, z)', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(DISTINCT custkey), SUM(DISTINCT custkey), SUM(DISTINCT custkey + 1.0E0), AVG(DISTINCT custkey), VARIANCE(DISTINCT custkey) FROM orders', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT (SELECT round(3 * avg(i.a)) FROM (VALUES 1, 1, 1, 2, 2, 3, 4) i(a) WHERE i.a < o.a AND i.a < 4) FROM (VALUES 0, 3, 3, 5) o(a)', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(*) FROM lineitem WHERE tax < discount AND tax > 0.01 AND discount < 0.05', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(*) FROM lineitem WHERE tax < 0.01 OR discount > 0.05', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT linenumber, suppkey, SUM(CAST(quantity AS BIGINT)) FROM lineitem WHERE quantity < 0 GROUP BY CUBE (linenumber, suppkey)', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='expected [1.0] but found [4.9E-323]', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT o1.orderkey, COUNT(*) FROM orders o1  JOIN (SELECT * FROM orders LIMIT 10) o2 ON (SELECT avg(orderkey) FROM ORDERS) > 3 GROUP BY o1.orderkey ORDER BY o1.orderkey LIMIT 5', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT SUM(CAST(quantity AS BIGINT)) FROM lineitem WHERE quantity < 0 GROUP BY GROUPING SETS ((), ())', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT linenumber, suppkey, SUM(CAST(quantity AS BIGINT)) FROM lineitem WHERE quantity < 0 GROUP BY GROUPING SETS ((linenumber, suppkey), (suppkey))', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT linenumber, suppkey, SUM(CAST(quantity AS BIGINT)) FROM lineitem WHERE quantity < 0 GROUP BY GROUPING SETS ((), (linenumber, suppkey), (), (linenumber, suppkey))', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT linenumber, suppkey, SUM(CAST(quantity AS BIGINT)) FROM lineitem WHERE quantity < 0 GROUP BY GROUPING SETS ((linenumber, suppkey), (suppkey), ())', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT linenumber, suppkey, SUM(DISTINCT CAST(quantity AS BIGINT)), COUNT(DISTINCT linestatus) FROM lineitem WHERE quantity < 0 GROUP BY GROUPING SETS ((linenumber, suppkey), (suppkey))', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT custkey, sum(totalprice) * 2 FROM orders GROUP BY custkey', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT sum(IF(orderstatus = 'F', totalprice, 0.0)) FROM orders', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT orderkey FROM orders WHERE orderkey IN (1, CAST(2.0 AS DOUBLE), 3)', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(*) FROM orders t join (SELECT * FROM orders LIMIT 1) t2 ON sin(t2.custkey) = 0', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='For query: 
 SELECT * FROM (VALUES (1, 2.0)) x (a, b) JOIN (VALUES (DOUBLE '1.0', 3)) y (a, b) USING(a)
not equal
Actual 0 rows:
    
Expected 1 rows:
    [1, 2.0, 1.0, 3]
', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='$operator$GREATER_THAN(double,decimal(1,1)):boolean not found', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='$operator$GREATER_THAN(double,decimal(1,1)):boolean not found', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='$operator$MULTIPLY(double,decimal(5,1)):double not found', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='$operator$GREATER_THAN(double,decimal(1,1)):boolean not found', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(*) FROM lineitem FULL JOIN orders ON lineitem.orderkey = orders.orderkey AND lineitem.quantity > 5 WHERE lineitem.orderkey IS NULL OR orders.orderkey IS NULL', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(*) FROM lineitem JOIN orders ON lineitem.orderkey = orders.orderkey AND lineitem.quantity + length(orders.comment) > 7', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(*) FROM lineitem LEFT OUTER JOIN orders ON lineitem.orderkey = orders.orderkey AND lineitem.quantity > 5 WHERE orders.orderkey IS NULL', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(*) FROM       (SELECT * FROM lineitem ORDER BY orderkey,linenumber LIMIT 5) l          RIGHT OUTER JOIN       (SELECT * FROM orders ORDER BY orderkey LIMIT 5) o          ON       l.quantity != 5 WHERE l.orderkey IS NULL', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='$operator$MULTIPLY(decimal(3,1),double):double not found', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT DISTINCT orderkey FROM lineitem WHERE orderkey BETWEEN   (SELECT avg(orderkey) FROM orders) - 10    AND   (SELECT avg(orderkey) FROM orders) + 10', isError=false}, FailureType{failureName='com.facebook.presto.client.FailureInfo$FailureException', failureDetail='$operator$LESS_THAN(double,decimal(1,1)):boolean not found', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(*) WHERE rand() >= 0', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT linenumber, sum(TRY(100/(CAST (tax*10 AS BIGINT)))) FROM lineitem GROUP BY linenumber', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='For query: 
 VALUES (1.1, 2, 'foo'), (sin(3.3), 2+2, 'bar')
not equal
Actual 2 rows:
    [11.0, 2, foo]
    [-1.577456941432482E15, 4, bar]
Expected 2 rows:
    [1.1, 2, foo]
    [-0.1577456941432482, 4, bar]
', isError=false}], nbFailures=39, nbErrors=0}
status: NOPATCH
dateEnd: Sat May 06 06:13:33 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/prestodb/presto/229311285/presto-tests/src/main/java], projectClasspath='[Ljava.net.URL;@59546cfe', projectTests=[com.facebook.presto.tests.TestTpchDistributedQueries], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='com.facebook.presto.tests.TestDistributedQueriesIndexed', failingMethods=[com.facebook.presto.tests.TestDistributedQueriesIndexed#testOuterNonEquiJoins, com.facebook.presto.tests.TestDistributedQueriesIndexed#testNonEquiJoin], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(*) FROM lineitem JOIN orders ON lineitem.orderkey = orders.orderkey AND lineitem.quantity + length(orders.comment) > 7', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Execution of 'actual' query failed: SELECT COUNT(*) FROM lineitem LEFT OUTER JOIN orders ON lineitem.orderkey = orders.orderkey AND lineitem.quantity > 5 WHERE orders.orderkey IS NULL', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Sat May 06 06:13:41 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/prestodb/presto/229311285/presto-tests/src/main/java], projectClasspath='[Ljava.net.URL;@4a1dda83', projectTests=[com.facebook.presto.tests.TestDistributedQueriesIndexed], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #2
location: FailureLocation{className='com.facebook.presto.tests.TestQueryPlanDeterminism', failingMethods=[com.facebook.presto.tests.TestQueryPlanDeterminism#testDefaultDecimalLiteralSwitch], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='expected [SELECT 1.0

] but found [SELECT DECIMAL '1.0'

]', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Sat May 06 06:13:51 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/prestodb/presto/229311285/presto-tests/src/main/java], projectClasspath='[Ljava.net.URL;@6eab92f3', projectTests=[com.facebook.presto.tests.TestQueryPlanDeterminism], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



