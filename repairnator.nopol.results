nopolinfo #0
location: FailureLocation{className='zipkin2.internal.Proto3CodecInteropTest', failingMethods=[zipkin2.internal.Proto3CodecInteropTest#encodeIsCompatible, zipkin2.internal.Proto3CodecInteropTest#writeMapEntryField_matchesProto3, zipkin2.internal.Proto3CodecInteropTest#encodeListIsCompatible_buff, zipkin2.internal.Proto3CodecInteropTest#encodeListIsCompatible], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...15, 105, 111, 110, 1[8, 6, 54, 46, 52, 53, 46, 48, 90, 36, 10, 5, 101, 114, 114, 111, 114, 18, 27, -26, -83, -92, -25, -108, -88, -26, -120, -73, -26, -78, -95, -26, -100, -119, -26, -109, -115, -28, -67, -100, -26, -99, -125, -23, -103, -112, 90, 34, 10, 9, 104, 116, 116, 112, 46, 112, 97, 116, 104, 18, 21, 47, 112, 101, 114, 115, 111, 110, 47, 112, 114, 111, 102, 105, 108, 101, 47, 113, 117, 101, 114, 121, 90, 23, 10, 16, 104, 116, 116, 112, 46, 115, 116, 97, 116, 117, 115, 95, 99, 111, 100, 101, 18, 3, 52, 48, 51, 104, 1, 10, -82, 2, 10, 16, 77, 30, 0, -64, -37, -112, 16, -37, -122, 21, 74, 75, -90, -23, 19, -123, 18, 8, -122, 21, 74, 75, -90, -23, 19, -123, 26, 8, 77, 30, 0, -64, -37, -112, 16, -37, 32, 2, 42, 18, -28, -72, -86, -28, -70, -70, -28, -65, -95, -26, -127, -81, -26, -97, -91, -24, -81, -94, 49, 88, -90, -85, 94, 52, 59, 5, 0, 56, -104, -47, 12, 66, 38, 10, 18, -24, -82, -94, -27, -115, -107, -25, -69, -76, -26, -118, -92, -26, -100, -115, -27, -118, -95, 26, 16, 32, 1, 13, -72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -64, 1, 74, 29, 10, 18, -28, -72, -86, -28, -70, -70, -28, -65, -95, -26, -127, -81, -26, -100, -115, -27, -118, -95, 18, 4, -64, -88, 99, 101, 32, -88, 70, 82, 23, 9, 88, -90, -85, 94, 52, 59, 5, 0, 18, 12, 102, 111, 111, 32, 104, 97, 112, 112, 101, 110, 101, 100, 90, 30, 10, 20, 99, 108, 110, 116, 47, 102, 105, 110, 97, 103, 108, 101, 46, 118, 101, 114, 115, 105, 111, 110, 18, 6, 54, 46, 52, 53, 46, 48, 90, 36, 10, 5, 101, 114, 114, 111, 114, 18, 27, -26, -83, -92, -25, -108, -88, -26, -120, -73, -26, -78, -95, -26, -100, -119, -26, -109, -115, -28, -67, -100, -26, -99, -125, -23, -103, -112, 90, 34, 10, 9, 104, 116, 116, 112, 46, 112, 97, 116, 104, 18, 21, 47, 112, 101, 114, 115, 111, 110, 47, 112, 114, 111, 102, 105, 108, 101, 47, 113, 117, 101, 114, 121, 90, 23, 10, 16, 104, 116, 116, 112, 46, 115, 116, 97, 116, 117, 115, 95, 99, 111, 100, 101, 18], 3, 52, 48, 51, 104...> but was:<...15, 105, 111, 110, 1[0, 6, 54, 46, 52, 53, 46, 48, 90, 36, 10, 5, 101, 114, 114, 111, 114, 10, 27, -26, -83, -92, -25, -108, -88, -26, -120, -73, -26, -78, -95, -26, -100, -119, -26, -109, -115, -28, -67, -100, -26, -99, -125, -23, -103, -112, 90, 34, 10, 9, 104, 116, 116, 112, 46, 112, 97, 116, 104, 10, 21, 47, 112, 101, 114, 115, 111, 110, 47, 112, 114, 111, 102, 105, 108, 101, 47, 113, 117, 101, 114, 121, 90, 23, 10, 16, 104, 116, 116, 112, 46, 115, 116, 97, 116, 117, 115, 95, 99, 111, 100, 101, 10, 3, 52, 48, 51, 104, 1, 10, -82, 2, 10, 16, 77, 30, 0, -64, -37, -112, 16, -37, -122, 21, 74, 75, -90, -23, 19, -123, 18, 8, -122, 21, 74, 75, -90, -23, 19, -123, 26, 8, 77, 30, 0, -64, -37, -112, 16, -37, 32, 2, 42, 18, -28, -72, -86, -28, -70, -70, -28, -65, -95, -26, -127, -81, -26, -97, -91, -24, -81, -94, 49, 88, -90, -85, 94, 52, 59, 5, 0, 56, -104, -47, 12, 66, 38, 10, 18, -24, -82, -94, -27, -115, -107, -25, -69, -76, -26, -118, -92, -26, -100, -115, -27, -118, -95, 26, 16, 32, 1, 13, -72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -64, 1, 74, 29, 10, 18, -28, -72, -86, -28, -70, -70, -28, -65, -95, -26, -127, -81, -26, -100, -115, -27, -118, -95, 18, 4, -64, -88, 99, 101, 32, -88, 70, 82, 23, 9, 88, -90, -85, 94, 52, 59, 5, 0, 18, 12, 102, 111, 111, 32, 104, 97, 112, 112, 101, 110, 101, 100, 90, 30, 10, 20, 99, 108, 110, 116, 47, 102, 105, 110, 97, 103, 108, 101, 46, 118, 101, 114, 115, 105, 111, 110, 10, 6, 54, 46, 52, 53, 46, 48, 90, 36, 10, 5, 101, 114, 114, 111, 114, 10, 27, -26, -83, -92, -25, -108, -88, -26, -120, -73, -26, -78, -95, -26, -100, -119, -26, -109, -115, -28, -67, -100, -26, -99, -125, -23, -103, -112, 90, 34, 10, 9, 104, 116, 116, 112, 46, 112, 97, 116, 104, 10, 21, 47, 112, 101, 114, 115, 111, 110, 47, 112, 114, 111, 102, 105, 108, 101, 47, 113, 117, 101, 114, 121, 90, 23, 10, 16, 104, 116, 116, 112, 46, 115, 116, 97, 116, 117, 115, 95, 99, 111, 100, 101, 10], 3, 52, 48, 51, 104...>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...15, 105, 111, 110, 1[8], 6, 54, 46, 52, 53,...> but was:<...15, 105, 111, 110, 1[0], 6, 54, 46, 52, 53,...>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...15, 105, 111, 110, 1[8, 6, 54, 46, 52, 53, 46, 48, 90, 36, 10, 5, 101, 114, 114, 111, 114, 18, 27, -26, -83, -92, -25, -108, -88, -26, -120, -73, -26, -78, -95, -26, -100, -119, -26, -109, -115, -28, -67, -100, -26, -99, -125, -23, -103, -112, 90, 34, 10, 9, 104, 116, 116, 112, 46, 112, 97, 116, 104, 18, 21, 47, 112, 101, 114, 115, 111, 110, 47, 112, 114, 111, 102, 105, 108, 101, 47, 113, 117, 101, 114, 121, 90, 23, 10, 16, 104, 116, 116, 112, 46, 115, 116, 97, 116, 117, 115, 95, 99, 111, 100, 101, 18], 3, 52, 48, 51, 104...> but was:<...15, 105, 111, 110, 1[0, 6, 54, 46, 52, 53, 46, 48, 90, 36, 10, 5, 101, 114, 114, 111, 114, 10, 27, -26, -83, -92, -25, -108, -88, -26, -120, -73, -26, -78, -95, -26, -100, -119, -26, -109, -115, -28, -67, -100, -26, -99, -125, -23, -103, -112, 90, 34, 10, 9, 104, 116, 116, 112, 46, 112, 97, 116, 104, 10, 21, 47, 112, 101, 114, 115, 111, 110, 47, 112, 114, 111, 102, 105, 108, 101, 47, 113, 117, 101, 114, 121, 90, 23, 10, 16, 104, 116, 116, 112, 46, 115, 116, 97, 116, 117, 115, 95, 99, 111, 100, 101, 10], 3, 52, 48, 51, 104...>', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expecting:
  <[0, 0, 0, 0, 0, 10, -82, 2, 10, 16, 77, 30, 0, -64, -37, -112, 16, -37, -122, 21, 74, 75, -90, -23, 19, -123, 18, 8, -122, 21, 74, 75, -90, -23, 19, -123, 26, 8, 77, 30, 0, -64, -37, -112, 16, -37, 32, 2, 42, 18, -28, -72, -86, -28, -70, -70, -28, -65, -95, -26, -127, -81, -26, -97, -91, -24, -81, -94, 49, 88, -90, -85, 94, 52, 59, 5, 0, 56, -104, -47, 12, 66, 38, 10, 18, -24, -82, -94, -27, -115, -107, -25, -69, -76, -26, -118, -92, -26, -100, -115, -27, -118, -95, 26, 16, 32, 1, 13, -72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -64, 1, 74, 29, 10, 18, -28, -72, -86, -28, -70, -70, -28, -65, -95, -26, -127, -81, -26, -100, -115, -27, -118, -95, 18, 4, -64, -88, 99, 101, 32, -88, 70, 82, 23, 9, 88, -90, -85, 94, 52, 59, 5, 0, 18, 12, 102, 111, 111, 32, 104, 97, 112, 112, 101, 110, 101, 100, 90, 30, 10, 20, 99, 108, 110, 116, 47, 102, 105, 110, 97, 103, 108, 101, 46, 118, 101, 114, 115, 105, 111, 110, 10, 6, 54, 46, 52, 53, 46, 48, 90, 36, 10, 5, 101, 114, 114, 111, 114, 10, 27, -26, -83, -92, -25, -108, -88, -26, -120, -73, -26, -78, -95, -26, -100, -119, -26, -109, -115, -28, -67, -100, -26, -99, -125, -23, -103, -112, 90, 34, 10, 9, 104, 116, 116, 112, 46, 112, 97, 116, 104, 10, 21, 47, 112, 101, 114, 115, 111, 110, 47, 112, 114, 111, 102, 105, 108, 101, 47, 113, 117, 101, 114, 121, 90, 23, 10, 16, 104, 116, 116, 112, 46, 115, 116, 97, 116, 117, 115, 95, 99, 111, 100, 101, 10, 3, 52, 48, 51, 104, 1, 10, -82, 2, 10, 16, 77, 30, 0, -64, -37, -112, 16, -37, -122, 21, 74, 75, -90, -23, 19, -123, 18, 8, -122, 21, 74, 75, -90, -23, 19, -123, 26, 8, 77, 30, 0, -64, -37, -112, 16, -37, 32, 2, 42, 18, -28, -72, -86, -28, -70, -70, -28, -65, -95, -26, -127, -81, -26, -97, -91, -24, -81, -94, 49, 88, -90, -85, 94, 52, 59, 5, 0, 56, -104, -47, 12, 66, 38, 10, 18, -24, -82, -94, -27, -115, -107, -25, -69, -76, -26, -118, -92, -26, -100, -115, -27, -118, -95, 26, 16, 32, 1, 13, -72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -64, 1, 74, 29, 10, 18, -28, -72, -86, -28, -70, -70, -28, -65, -95, -26, -127, -81, -26, -100, -115, -27, -118, -95, 18, 4, -64, -88, 99, 101, 32, -88, 70, 82, 23, 9, 88, -90, -85, 94, 52, 59, 5, 0, 18, 12, 102, 111, 111, 32, 104, 97, 112, 112, 101, 110, 101, 100, 90, 30, 10, 20, 99, 108, 110, 116, 47, 102, 105, 110, 97, 103, 108, 101, 46, 118, 101, 114, 115, 105, 111, 110, 10, 6, 54, 46, 52, 53, 46, 48, 90, 36, 10, 5, 101, 114, 114, 111, 114, 10, 27, -26, -83, -92, -25, -108, -88, -26, -120, -73, -26, -78, -95, -26, -100, -119, -26, -109, -115, -28, -67, -100, -26, -99, -125, -23, -103, -112, 90, 34, 10, 9, 104, 116, 116, 112, 46, 112, 97, 116, 104, 10, 21, 47, 112, 101, 114, 115, 111, 110, 47, 112, 114, 111, 102, 105, 108, 101, 47, 113, 117, 101, 114, 121, 90, 23, 10, 16, 104, 116, 116, 112, 46, 115, 116, 97, 116, 117, 115, 95, 99, 111, 100, 101, 10, 3, 52, 48, 51, 104, 1, 0, 0, 0, 0, 0]>
to contain sequence:
  <[10, -82, 2, 10, 16, 77, 30, 0, -64, -37, -112, 16, -37, -122, 21, 74, 75, -90, -23, 19, -123, 18, 8, -122, 21, 74, 75, -90, -23, 19, -123, 26, 8, 77, 30, 0, -64, -37, -112, 16, -37, 32, 2, 42, 18, -28, -72, -86, -28, -70, -70, -28, -65, -95, -26, -127, -81, -26, -97, -91, -24, -81, -94, 49, 88, -90, -85, 94, 52, 59, 5, 0, 56, -104, -47, 12, 66, 38, 10, 18, -24, -82, -94, -27, -115, -107, -25, -69, -76, -26, -118, -92, -26, -100, -115, -27, -118, -95, 26, 16, 32, 1, 13, -72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -64, 1, 74, 29, 10, 18, -28, -72, -86, -28, -70, -70, -28, -65, -95, -26, -127, -81, -26, -100, -115, -27, -118, -95, 18, 4, -64, -88, 99, 101, 32, -88, 70, 82, 23, 9, 88, -90, -85, 94, 52, 59, 5, 0, 18, 12, 102, 111, 111, 32, 104, 97, 112, 112, 101, 110, 101, 100, 90, 30, 10, 20, 99, 108, 110, 116, 47, 102, 105, 110, 97, 103, 108, 101, 46, 118, 101, 114, 115, 105, 111, 110, 18, 6, 54, 46, 52, 53, 46, 48, 90, 36, 10, 5, 101, 114, 114, 111, 114, 18, 27, -26, -83, -92, -25, -108, -88, -26, -120, -73, -26, -78, -95, -26, -100, -119, -26, -109, -115, -28, -67, -100, -26, -99, -125, -23, -103, -112, 90, 34, 10, 9, 104, 116, 116, 112, 46, 112, 97, 116, 104, 18, 21, 47, 112, 101, 114, 115, 111, 110, 47, 112, 114, 111, 102, 105, 108, 101, 47, 113, 117, 101, 114, 121, 90, 23, 10, 16, 104, 116, 116, 112, 46, 115, 116, 97, 116, 117, 115, 95, 99, 111, 100, 101, 18, 3, 52, 48, 51, 104, 1, 10, -82, 2, 10, 16, 77, 30, 0, -64, -37, -112, 16, -37, -122, 21, 74, 75, -90, -23, 19, -123, 18, 8, -122, 21, 74, 75, -90, -23, 19, -123, 26, 8, 77, 30, 0, -64, -37, -112, 16, -37, 32, 2, 42, 18, -28, -72, -86, -28, -70, -70, -28, -65, -95, -26, -127, -81, -26, -97, -91, -24, -81, -94, 49, 88, -90, -85, 94, 52, 59, 5, 0, 56, -104, -47, 12, 66, 38, 10, 18, -24, -82, -94, -27, -115, -107, -25, -69, -76, -26, -118, -92, -26, -100, -115, -27, -118, -95, 26, 16, 32, 1, 13, -72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -64, 1, 74, 29, 10, 18, -28, -72, -86, -28, -70, -70, -28, -65, -95, -26, -127, -81, -26, -100, -115, -27, -118, -95, 18, 4, -64, -88, 99, 101, 32, -88, 70, 82, 23, 9, 88, -90, -85, 94, 52, 59, 5, 0, 18, 12, 102, 111, 111, 32, 104, 97, 112, 112, 101, 110, 101, 100, 90, 30, 10, 20, 99, 108, 110, 116, 47, 102, 105, 110, 97, 103, 108, 101, 46, 118, 101, 114, 115, 105, 111, 110, 18, 6, 54, 46, 52, 53, 46, 48, 90, 36, 10, 5, 101, 114, 114, 111, 114, 18, 27, -26, -83, -92, -25, -108, -88, -26, -120, -73, -26, -78, -95, -26, -100, -119, -26, -109, -115, -28, -67, -100, -26, -99, -125, -23, -103, -112, 90, 34, 10, 9, 104, 116, 116, 112, 46, 112, 97, 116, 104, 18, 21, 47, 112, 101, 114, 115, 111, 110, 47, 112, 114, 111, 102, 105, 108, 101, 47, 113, 117, 101, 114, 121, 90, 23, 10, 16, 104, 116, 116, 112, 46, 115, 116, 97, 116, 117, 115, 95, 99, 111, 100, 101, 18, 3, 52, 48, 51, 104, 1]>
', isError=false}], nbFailures=4, nbErrors=0}
status: NOPATCH
dateEnd: Thu Apr 26 10:56:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/openzipkin/zipkin/371434547/benchmarks/src/main/java], projectClasspath='[Ljava.net.URL;@528f8f8b', projectTests=[zipkin2.internal.Proto3CodecInteropTest], complianceLevel=8, outputFolder=./workspace/openzipkin/zipkin/371434547, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



