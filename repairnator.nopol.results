nopolinfo #0
location: FailureLocation{className='de.yfu.intranet.methodendb.endpoints.MethodEndpointTest', failingMethods=[], erroringMethods=[de.yfu.intranet.methodendb.endpoints.MethodEndpointTest#createMethodType_returnsMethodType_ifNameIsProvided, de.yfu.intranet.methodendb.endpoints.MethodEndpointTest#createMethodLevel_returnsMethodLevel_ifNameIsProvided, de.yfu.intranet.methodendb.endpoints.MethodEndpointTest#updateMethodType_returns400_ifNoIdIsGivenInUrl, de.yfu.intranet.methodendb.endpoints.MethodEndpointTest#getMethodTypes_returnsEmptySet_ifNoMethodTypesExist, de.yfu.intranet.methodendb.endpoints.MethodEndpointTest#updateMethodLevel_returnsUpdatedMethodLevel_ifIdIsGivenAsUrlParameter, de.yfu.intranet.methodendb.endpoints.MethodEndpointTest#getMethodTypes_returnsMethodTypes_ifMethodTypeServiceReturnsAMethodType, de.yfu.intranet.methodendb.endpoints.MethodEndpointTest#getMethodLevels_returnsEmptySet_ifNoMethodLevelsExist, de.yfu.intranet.methodendb.endpoints.MethodEndpointTest#updateMethodLevel_returns400_ifNoIdIsGivenInUrl, de.yfu.intranet.methodendb.endpoints.MethodEndpointTest#getMethodLevels_returnsMethodLevels_ifMethodLevelServiceReturnsAMethodLevel, de.yfu.intranet.methodendb.endpoints.MethodEndpointTest#updateMethodType_returnsUpdatedMethodType_ifIdIsGivenAsUrlParameter], failures=[FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}], nbFailures=0, nbErrors=20}
status: NOPATCH
dateEnd: Thu Mar 22 21:36:43 CET 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/MethodenDB-YFU/backend/357082426/src/main/java], projectClasspath='[Ljava.net.URL;@3f049056', projectTests=[de.yfu.intranet.methodendb.endpoints.MethodEndpointTest], complianceLevel=8, outputFolder=./workspace/MethodenDB-YFU/backend/357082426, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='de.yfu.intranet.methodendb.endpoints.SeminarEndpointTest', failingMethods=[], erroringMethods=[de.yfu.intranet.methodendb.endpoints.SeminarEndpointTest#createSeminarType_returnsSeminarType_ifNameIsProvided, de.yfu.intranet.methodendb.endpoints.SeminarEndpointTest#getSeminarTypes_returnsSeminarTypes_ifSeminarTypeServiceReturnsASeminarType, de.yfu.intranet.methodendb.endpoints.SeminarEndpointTest#updateSeminarType_returnsUpdatedSeminarType_ifIdIsGivenAsUrlParameter, de.yfu.intranet.methodendb.endpoints.SeminarEndpointTest#updateSeminarType_returns405_ifNoIdIsGivenInUrl, de.yfu.intranet.methodendb.endpoints.SeminarEndpointTest#updateSeminarGoal_returnsUpdatedSeminarGoal_ifIdIsProvidedAsPathParam, de.yfu.intranet.methodendb.endpoints.SeminarEndpointTest#createSeminarGoal_returnsSeminarGoal_ifAllRequiredInfoIsProvided, de.yfu.intranet.methodendb.endpoints.SeminarEndpointTest#getSeminarGoals_returnsEmptySet_ifNoSeminarGoalExist, de.yfu.intranet.methodendb.endpoints.SeminarEndpointTest#getSeminarTypes_returnsEmptySet_ifNoSeminarTypesExist, de.yfu.intranet.methodendb.endpoints.SeminarEndpointTest#getSeminarGoalsForSeminarType_returnsSeminarGoalsForSeminarType_ifSeminarGoalsExist], failures=[FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection', isError=true}], nbFailures=0, nbErrors=18}
status: NOPATCH
dateEnd: Thu Mar 22 21:36:44 CET 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/MethodenDB-YFU/backend/357082426/src/main/java], projectClasspath='[Ljava.net.URL;@d5af0a5', projectTests=[de.yfu.intranet.methodendb.endpoints.SeminarEndpointTest], complianceLevel=8, outputFolder=./workspace/MethodenDB-YFU/backend/357082426, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



