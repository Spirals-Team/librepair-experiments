nopolinfo #0
location: FailureLocation{className='net.bytebuddy.asm.AdviceInconsistentStackMapFrameTest', failingMethods=[], erroringMethods=[net.bytebuddy.asm.AdviceInconsistentStackMapFrameTest#testFrameTooShortBackupArgument, net.bytebuddy.asm.AdviceInconsistentStackMapFrameTest#testFrameInconsistentThisParameterBackupArgument, net.bytebuddy.asm.AdviceInconsistentStackMapFrameTest#testFrameDropImplicitBackupArgument, net.bytebuddy.asm.AdviceInconsistentStackMapFrameTest#testFrameInconsistentParameterBackupArgument], failures=[FailureType{failureName='java.lang.VerifyError', failureDetail='Inconsistent stackmap frames at branch target 4
Exception Details:
  Location:
    net/bytebuddy/renamed/java/lang/Object$ByteBuddy$TRnt44EO.foo()Ljava/lang/String; @4: istore_1
  Reason:
    Type top (current frame, locals[0]) is not assignable to 'net/bytebuddy/renamed/java/lang/Object$ByteBuddy$TRnt44EO' (stack map, locals[0])
  Current Frame:
    bci: @1
    flags: { }
    locals: { }
    stack: { integer }
  Stackmap Frame:
    bci: @4
    flags: { }
    locals: { 'net/bytebuddy/renamed/java/lang/Object$ByteBuddy$TRnt44EO' }
    stack: { integer }
  Bytecode:
    0x0000000: 03a7 0003 3c2a 4d12 08a7 0003 4d03 57a7
    0x0000010: 0003 2cb0                              
  Stackmap Table:
    chop_frame(@0,1)
    full_frame(@4,{Object[#2]},{Integer})
    append_frame(@5,Integer)
    append_frame(@7,Object[#2])
    full_frame(@12,{Object[#2],Integer},{Object[#16]})
    append_frame(@13,Object[#16])
    same_frame(@18)
', isError=true}, FailureType{failureName='java.lang.VerifyError', failureDetail='Instruction type does not match stack map
Exception Details:
  Location:
    net/bytebuddy/renamed/java/lang/Object$ByteBuddy$0HeKxffI.foo()Ljava/lang/String; @0: iconst_0
  Reason:
    Type top (current frame, locals[1]) is not assignable to integer (stack map, locals[1])
  Current Frame:
    bci: @0
    flags: { }
    locals: { 'net/bytebuddy/renamed/java/lang/Object$ByteBuddy$0HeKxffI' }
    stack: { }
  Stackmap Frame:
    bci: @0
    flags: { }
    locals: { 'net/bytebuddy/renamed/java/lang/Object$ByteBuddy$0HeKxffI', integer, 'java/lang/Object' }
    stack: { }
  Bytecode:
    0x0000000: 03a7 0003 3c2a 4d12 08a7 0003 4d03 57a7
    0x0000010: 0003 2cb0                              
  Stackmap Table:
    full_frame(@0,{Object[#2],Integer,Object[#4]},{})
    full_frame(@4,{Object[#2]},{Integer})
    append_frame(@5,Integer)
    append_frame(@7,Object[#2])
    full_frame(@12,{Object[#2],Integer},{Object[#16]})
    append_frame(@13,Object[#16])
    same_frame(@18)
', isError=true}, FailureType{failureName='java.lang.VerifyError', failureDetail='Instruction type does not match stack map
Exception Details:
  Location:
    net/bytebuddy/renamed/java/lang/Object$ByteBuddy$Rqrgsjnd.foo(Ljava/lang/Void;)Ljava/lang/String; @0: iconst_0
  Reason:
    Type top (current frame, locals[1]) is not assignable to integer (stack map, locals[1])
  Current Frame:
    bci: @0
    flags: { }
    locals: { 'java/lang/Void' }
    stack: { }
  Stackmap Frame:
    bci: @0
    flags: { }
    locals: { 'java/lang/Void', integer, 'java/lang/Object' }
    stack: { }
  Bytecode:
    0x0000000: 03a7 0003 3c2a 4d12 08a7 0003 4d03 57a7
    0x0000010: 0003 2cb0                              
  Stackmap Table:
    full_frame(@0,{Object[#16],Integer,Object[#4]},{})
    full_frame(@4,{Object[#16]},{Integer})
    append_frame(@5,Integer)
    append_frame(@7,Object[#16])
    full_frame(@12,{Object[#16],Integer},{Object[#18]})
    append_frame(@13,Object[#18])
    same_frame(@18)
', isError=true}, FailureType{failureName='java.lang.VerifyError', failureDetail='Instruction type does not match stack map
Exception Details:
  Location:
    net/bytebuddy/renamed/java/lang/Object$ByteBuddy$jIN2fB22.foo()Ljava/lang/String; @0: iconst_0
  Reason:
    Type top (current frame, locals[1]) is not assignable to integer (stack map, locals[1])
  Current Frame:
    bci: @0
    flags: { }
    locals: { 'net/bytebuddy/renamed/java/lang/Object$ByteBuddy$jIN2fB22' }
    stack: { }
  Stackmap Frame:
    bci: @0
    flags: { }
    locals: { 'net/bytebuddy/renamed/java/lang/Object$ByteBuddy$jIN2fB22', integer }
    stack: { }
  Bytecode:
    0x0000000: 03a7 0003 3c2a 4d12 08a7 0003 4d03 57a7
    0x0000010: 0003 2cb0                              
  Stackmap Table:
    full_frame(@0,{Object[#2],Integer},{})
    same_locals_1_stack_item_frame(@4,Integer)
    append_frame(@5,Integer)
    append_frame(@7,Object[#2])
    full_frame(@12,{Object[#2],Integer},{Object[#16]})
    append_frame(@13,Object[#16])
    same_frame(@18)
', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Fri Mar 09 19:00:26 CET 2018
allocatedtime: 120minutes 
passingTime: 18minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/raphw/byte-buddy/351409830/byte-buddy-dep/src/main/java], projectClasspath='[Ljava.net.URL;@71f67a79', projectTests=[net.bytebuddy.asm.AdviceInconsistentStackMapFrameTest], complianceLevel=8, outputFolder=./workspace/raphw/byte-buddy/351409830, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



