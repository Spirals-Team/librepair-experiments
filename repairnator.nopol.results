nopolinfo #0
location: FailureLocation{className='spoon.MavenLauncherTest', failingMethods=[spoon.MavenLauncherTest#spoonMavenLauncherTest, spoon.MavenLauncherTest#mavenLauncherTestMultiModulesAndVariables], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='Content of classpath: ', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='expected:<7> but was:<0>', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Sat Mar 31 22:50:41 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@6075b2d3', projectTests=[spoon.MavenLauncherTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='spoon.test.prettyprinter.PrintChangesTest', failingMethods=[spoon.test.prettyprinter.PrintChangesTest#testPrintUnchaged, spoon.test.prettyprinter.PrintChangesTest#testPrintChanged], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...inter.testclasses;

[import java.util.ArrayList;
import java.util.List;

/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T /* let's confuse > it */ > implements List<T>,
 Cloneable
{
 
 
 /**/
 final
 //
 private String string = "a"
   + "b" + "c"+"d";
 
 //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2         , List<?>[][] ... twoDArrayOfLists)
 {/**/
  System.out.println("aaa"
    + "xyz");
 /*x*/}
 List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

//and what about this comment? ]> but was:<...inter.testclasses;

[
/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T /* let's confuse > it */ > implements List<T>,
 Cloneable
{
 
 
 /**/
 final
 //
 private String string = "a"
   + "b" + "c"+"d";
 
 //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2         , List<?>[][] ... twoDArrayOfLists)
 {/**/
  System.out.println("aaa"
    + "xyz");
 /*x*/}
 List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

]>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...inter.testclasses;

[import java.util.ArrayList;
import java.util.List;

/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T /* let's confuse > it */ > implements List<T>,
 Cloneable
{
 
 
 /**/
 final
 //
 private String string = "a"
   + "b" + "c"+"d";
 
 //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2         , List<?>[][] ... twoDArrayOfLists)
 {/**/
  System.out.println("aaa"
    + "xyz");
 /*x*/}
 List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

//and what about this comment? ]> but was:<...inter.testclasses;

[
import java.util.ArrayList;
import java.util.List;


/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T /* let's confuse > it */ > implements List<T>,
 Cloneable
{
    /**/
 final
 //
 private String modified = "a"
   + "b" + "c"+"d";

    //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2         , List<?>[][] ... twoDArrayOfLists)
 {/**/
  System.out.println("aaa"
    + "xyz");
 /*x*/}

    List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

]>', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Sat Mar 31 22:50:53 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@2f95ce11', projectTests=[spoon.test.prettyprinter.PrintChangesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #2
location: FailureLocation{className='spoon.test.reference.TypeReferenceTest', failingMethods=[spoon.test.reference.TypeReferenceTest#testInvocationWithFieldAccessInNoClasspath], erroringMethods=[spoon.test.reference.TypeReferenceTest#testConstructorCallInNoClasspath, spoon.test.reference.TypeReferenceTest#testIgnoreEnclosingClassInActualTypes, spoon.test.reference.TypeReferenceTest#testSubTypeAnonymous, spoon.test.reference.TypeReferenceTest#testRecursiveTypeReferenceInGenericType, spoon.test.reference.TypeReferenceTest#testToStringEqualityBetweenTwoGenericTypeDifferent, spoon.test.reference.TypeReferenceTest#testTypeReferenceSpecifiedInClassDeclarationInNoClasspathWithGenerics, spoon.test.reference.TypeReferenceTest#testUnknownSuperClassWithSameNameInNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [122, 140] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [122, 140] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [2839, 2871] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [104, 117] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [76, 90] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Can't compile TestBot.java because Cannot compare this: [28212, 28227] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=false}], nbFailures=1, nbErrors=7}
status: NOPATCH
dateEnd: Sat Mar 31 22:51:06 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@2376463f', projectTests=[spoon.test.reference.TypeReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #3
location: FailureLocation{className='spoon.test.reference.TypeReferenceTest', failingMethods=[spoon.test.reference.TypeReferenceTest#testInvocationWithFieldAccessInNoClasspath], erroringMethods=[spoon.test.reference.TypeReferenceTest#testConstructorCallInNoClasspath, spoon.test.reference.TypeReferenceTest#testIgnoreEnclosingClassInActualTypes, spoon.test.reference.TypeReferenceTest#testSubTypeAnonymous, spoon.test.reference.TypeReferenceTest#testRecursiveTypeReferenceInGenericType, spoon.test.reference.TypeReferenceTest#testToStringEqualityBetweenTwoGenericTypeDifferent, spoon.test.reference.TypeReferenceTest#testTypeReferenceSpecifiedInClassDeclarationInNoClasspathWithGenerics, spoon.test.reference.TypeReferenceTest#testUnknownSuperClassWithSameNameInNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [122, 140] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [122, 140] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [2839, 2871] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [104, 117] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [76, 90] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Can't compile TestBot.java because Cannot compare this: [28212, 28227] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=false}], nbFailures=1, nbErrors=7}
status: NOPATCH
dateEnd: Sat Mar 31 22:51:18 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@49f079ee', projectTests=[spoon.test.reference.TypeReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #4
location: FailureLocation{className='spoon.test.pkg.PackageTest', failingMethods=[spoon.test.pkg.PackageTest#testAddAnnotationToPackage], erroringMethods=[spoon.test.pkg.PackageTest#testPrintPackageInfoWhenNothingInPackage, spoon.test.pkg.PackageTest#testAnnotationInPackageInfoWhenTemplatesCompiled, spoon.test.pkg.PackageTest#testAnnotationOnPackage, spoon.test.pkg.PackageTest#testGetFQNInNoClassPath, spoon.test.pkg.PackageTest#testPackage], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Can't compile package-info.java because Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=false}], nbFailures=1, nbErrors=5}
status: NOPATCH
dateEnd: Sat Mar 31 22:51:29 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@1ee137ed', projectTests=[spoon.test.pkg.PackageTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #5
location: FailureLocation{className='spoon.test.pkg.PackageTest', failingMethods=[spoon.test.pkg.PackageTest#testAddAnnotationToPackage], erroringMethods=[spoon.test.pkg.PackageTest#testPrintPackageInfoWhenNothingInPackage, spoon.test.pkg.PackageTest#testAnnotationInPackageInfoWhenTemplatesCompiled, spoon.test.pkg.PackageTest#testAnnotationOnPackage, spoon.test.pkg.PackageTest#testGetFQNInNoClassPath, spoon.test.pkg.PackageTest#testPackage], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Can't compile package-info.java because Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=false}], nbFailures=1, nbErrors=5}
status: NOPATCH
dateEnd: Sat Mar 31 22:51:41 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@26a74350', projectTests=[spoon.test.pkg.PackageTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #6
location: FailureLocation{className='spoon.test.annotation.AnnotationTest', failingMethods=[spoon.test.annotation.AnnotationTest#testSpoonSpoonResult], erroringMethods=[spoon.test.annotation.AnnotationTest#testRepeatSameAnnotationOnPackage, spoon.test.annotation.AnnotationTest#testAnnotatedElementTypes, spoon.test.annotation.AnnotationTest#testAbstractAllAnnotationProcessorWithGlobalAnnotation, spoon.test.annotation.AnnotationTest#annotationOverrideFQNIsOK], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [547, 567] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Number of annotation for return type of method getPort should be 1 expected:<1> but was:<0>', isError=false}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.StringIndexOutOfBoundsException', failureDetail='String index out of range: -1', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=1, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 22:51:53 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@2cbc1e18', projectTests=[spoon.test.annotation.AnnotationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #7
location: FailureLocation{className='spoon.test.annotation.AnnotationTest', failingMethods=[spoon.test.annotation.AnnotationTest#testSpoonSpoonResult], erroringMethods=[spoon.test.annotation.AnnotationTest#testRepeatSameAnnotationOnPackage, spoon.test.annotation.AnnotationTest#testAnnotatedElementTypes, spoon.test.annotation.AnnotationTest#testAbstractAllAnnotationProcessorWithGlobalAnnotation, spoon.test.annotation.AnnotationTest#annotationOverrideFQNIsOK], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [547, 567] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Number of annotation for return type of method getPort should be 1 expected:<1> but was:<0>', isError=false}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.StringIndexOutOfBoundsException', failureDetail='String index out of range: -1', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=1, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 22:52:05 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@36ecf5f0', projectTests=[spoon.test.annotation.AnnotationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #8
location: FailureLocation{className='spoon.test.filters.FilterTest', failingMethods=[], erroringMethods=[spoon.test.filters.FilterTest#testOverriddenMethodFromInterface, spoon.test.filters.FilterTest#testInvalidQueryStep, spoon.test.filters.FilterTest#testClassCastExceptionOnForEach, spoon.test.filters.FilterTest#testQueryWithOptionalNumberOfInputs, spoon.test.filters.FilterTest#testSubInheritanceHierarchyResolver, spoon.test.filters.FilterTest#testQueryStepScannWithConsumer, spoon.test.filters.FilterTest#testEarlyTerminatingQuery, spoon.test.filters.FilterTest#testgetTopDefinitions, spoon.test.filters.FilterTest#testQueryBuilderWithFilterChain, spoon.test.filters.FilterTest#testReflectionBasedTypeFilter, spoon.test.filters.FilterTest#testOverriddenMethodsFromSubClassOfAbstractClass, spoon.test.filters.FilterTest#testElementMapConsumableFunction, spoon.test.filters.FilterTest#testReuseOfBaseQuery, spoon.test.filters.FilterTest#testOverridingMethodFromInterface, spoon.test.filters.FilterTest#testOverridingMethodFromAbstractClass, spoon.test.filters.FilterTest#testQueryInQuery, spoon.test.filters.FilterTest#testFilterQueryStep, spoon.test.filters.FilterTest#testElementMapFunction, spoon.test.filters.FilterTest#testOverriddenMethodFromSubClassOfInterface, spoon.test.filters.FilterTest#testReuseOfQuery, spoon.test.filters.FilterTest#testFilterChildrenWithoutFilterQueryStep, spoon.test.filters.FilterTest#testOverridingMethodFromSubClassOfAbstractClass, spoon.test.filters.FilterTest#testCtScannerListener, spoon.test.filters.FilterTest#testParentFunction, spoon.test.filters.FilterTest#testInvalidQueryStepFailurePolicyIgnore, spoon.test.filters.FilterTest#testOverriddenMethodFromAbstractClass, spoon.test.filters.FilterTest#testFunctionQueryStep, spoon.test.filters.FilterTest#testOverridingMethodFromSubClassOfInterface, spoon.test.filters.FilterTest#testInvocationFilterWithExecutableInLibrary], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=29}
status: NOPATCH
dateEnd: Sat Mar 31 22:52:16 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@600a1168', projectTests=[spoon.test.filters.FilterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #9
location: FailureLocation{className='spoon.test.generics.GenericsTest', failingMethods=[], erroringMethods=[spoon.test.generics.GenericsTest#testInvocationGenerics, spoon.test.generics.GenericsTest#testClassTypingContextMethodSignature, spoon.test.generics.GenericsTest#testClassTypingContext, spoon.test.generics.GenericsTest#testGenericTypeReference, spoon.test.generics.GenericsTest#testConstructorCallGenerics, spoon.test.generics.GenericsTest#testWildcard, spoon.test.generics.GenericsTest#testCannotAdaptTypeOfNonTypeScope, spoon.test.generics.GenericsTest#testCtTypeReference_getSuperclass, spoon.test.generics.GenericsTest#testDiamondComplexGenericsRxJava, spoon.test.generics.GenericsTest#testModelBuildingTree, spoon.test.generics.GenericsTest#testBugComparableComparator, spoon.test.generics.GenericsTest#testisGeneric, spoon.test.generics.GenericsTest#testName, spoon.test.generics.GenericsTest#testGenericsInQualifiedNameInConstructorCall, spoon.test.generics.GenericsTest#testGenericMethodCallWithExtend, spoon.test.generics.GenericsTest#testMethodTypingContext, spoon.test.generics.GenericsTest#testIsGenericTypeEqual, spoon.test.generics.GenericsTest#testIsGenericsMethod, spoon.test.generics.GenericsTest#testMethodsWithGenericsWhoExtendsObject, spoon.test.generics.GenericsTest#testRecursiveTypeAdapting, spoon.test.generics.GenericsTest#testDeclarationOfTypeParameterReference, spoon.test.generics.GenericsTest#testGetDeclarationOfTypeParameterReference, spoon.test.generics.GenericsTest#testTypeAdapted, spoon.test.generics.GenericsTest#testMethodTypingContextAdaptMethod, spoon.test.generics.GenericsTest#testBugCommonCollection, spoon.test.generics.GenericsTest#testNewClassGenerics, spoon.test.generics.GenericsTest#testInstanceOfMapEntryGeneric], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [140, 149] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [615, 633] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [162, 175] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [92, 111] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [141, 162] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [193, 206] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [891, 901] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [122, 156] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [140, 163] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1806, 1825] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=27}
status: NOPATCH
dateEnd: Sat Mar 31 22:52:27 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@60f2ef4a', projectTests=[spoon.test.generics.GenericsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #10
location: FailureLocation{className='spoon.test.lambda.LambdaTest', failingMethods=[], erroringMethods=[spoon.test.lambda.LambdaTest#testLambdaMethod, spoon.test.lambda.LambdaTest#testFieldAccessInLambdaNoClassPathExternal1Example, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithParameterTyped, spoon.test.lambda.LambdaTest#testLambdaExpressionWithStatementBodyAndWithoutParameters, spoon.test.lambda.LambdaTest#testEqualsLambdaParameterRef, spoon.test.lambda.LambdaTest#testGetOverriddenMethodWithFunction, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithMultiParametersTyped, spoon.test.lambda.LambdaTest#testLambdaFilter, spoon.test.lambda.LambdaTest#testTypeParameterWithImplicitArrayType, spoon.test.lambda.LambdaTest#testTypeParameterOfLambdaWithoutType2, spoon.test.lambda.LambdaTest#testGetDeclarationOnTypeParameterFromLambda, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithoutTypeForParameter, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithoutParameter, spoon.test.lambda.LambdaTest#testFieldAccessInLambdaNoClassPath, spoon.test.lambda.LambdaTest#testLambdaExpressionInIfConditional, spoon.test.lambda.LambdaTest#testBuildExecutableReferenceFromLambda, spoon.test.lambda.LambdaTest#testCompileLambdaGeneratedBySpoon, spoon.test.lambda.LambdaTest#testTypeAccessInLambdaNoClassPath, spoon.test.lambda.LambdaTest#testLambdaWithPrimitiveParameter, spoon.test.lambda.LambdaTest#testTypeParameterOfLambdaWithoutType, spoon.test.lambda.LambdaTest#testLambdaExpressionWithStatementBodyAndWithParameter, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithMultiParameters], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=22}
status: NOPATCH
dateEnd: Sat Mar 31 22:52:39 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@14af2105', projectTests=[spoon.test.lambda.LambdaTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #11
location: FailureLocation{className='spoon.test.delete.DeleteTest', failingMethods=[], erroringMethods=[spoon.test.delete.DeleteTest#testDeleteMethod, spoon.test.delete.DeleteTest#testDeleteConditionInACondition, spoon.test.delete.DeleteTest#testDeleteParameterOfMethod, spoon.test.delete.DeleteTest#testDeleteAStatementInConstructor, spoon.test.delete.DeleteTest#testDeleteChainOfAssignment, spoon.test.delete.DeleteTest#testDeleteAStatementInMethod, spoon.test.delete.DeleteTest#testDeleteAStatementInAnonymousExecutable, spoon.test.delete.DeleteTest#testDeleteAnnotationOnAClass, spoon.test.delete.DeleteTest#testDeleteACaseOfASwitch, spoon.test.delete.DeleteTest#testDeleteStatementInCase, spoon.test.delete.DeleteTest#testDeleteAStatementInStaticAnonymousExecutable, spoon.test.delete.DeleteTest#testDeleteAClassTopLevel, spoon.test.delete.DeleteTest#testDeleteBodyOfAMethod, spoon.test.delete.DeleteTest#testDeleteReturn], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=14}
status: NOPATCH
dateEnd: Sat Mar 31 22:52:51 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@41cc4301', projectTests=[spoon.test.delete.DeleteTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #12
location: FailureLocation{className='spoon.test.methodreference.MethodReferenceTest', failingMethods=[], erroringMethods=[spoon.test.methodreference.MethodReferenceTest#testReferenceToAClassParametrizedConstructor, spoon.test.methodreference.MethodReferenceTest#testNoClasspathSuperExecutable, spoon.test.methodreference.MethodReferenceTest#testNoClasspathExecutableReferenceExpression, spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfMultiParticularObject, spoon.test.methodreference.MethodReferenceTest#testGetGenericMethodFromReference, spoon.test.methodreference.MethodReferenceTest#testReferenceBuilderWithComplexGenerics, spoon.test.methodreference.MethodReferenceTest#testCompileMethodReferenceGeneratedBySpoon, spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfAParticularObject, spoon.test.methodreference.MethodReferenceTest#testReferenceToAJavaUtilClassConstructor, spoon.test.methodreference.MethodReferenceTest#testReferenceToAStaticMethod, spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfAnArbitraryObjectOfAParticularType, spoon.test.methodreference.MethodReferenceTest#testReferenceToAConstructor, spoon.test.methodreference.MethodReferenceTest#testGetGenericExecutableReference], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=13}
status: NOPATCH
dateEnd: Sat Mar 31 22:53:02 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@39c0c590', projectTests=[spoon.test.methodreference.MethodReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #13
location: FailureLocation{className='spoon.test.comment.CommentTest', failingMethods=[], erroringMethods=[spoon.test.comment.CommentTest#testCommentsInComment1And2, spoon.test.comment.CommentTest#testCombinedPackageInfoComment, spoon.test.comment.CommentTest#testCodeFactory, spoon.test.comment.CommentTest#testWildComments, spoon.test.comment.CommentTest#testJavaDocEmptyCommentAndTag, spoon.test.comment.CommentTest#testDocumentationContract, spoon.test.comment.CommentTest#testInsertNewComment, spoon.test.comment.CommentTest#testJavadocShortAndLongComment, spoon.test.comment.CommentTest#testBlockComment, spoon.test.comment.CommentTest#testInLineComment, spoon.test.comment.CommentTest#testJavaDocCommentOnUnix, spoon.test.comment.CommentTest#testCoreFactory, spoon.test.comment.CommentTest#testRemoveComment], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=13}
status: NOPATCH
dateEnd: Sat Mar 31 22:53:13 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@26fcf001', projectTests=[spoon.test.comment.CommentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #14
location: FailureLocation{className='spoon.test.targeted.TargetedExpressionTest', failingMethods=[], erroringMethods=[spoon.test.targeted.TargetedExpressionTest#testStaticTargetsOfInv, spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccessInInnerClass, spoon.test.targeted.TargetedExpressionTest#testTargetsOfInv, spoon.test.targeted.TargetedExpressionTest#testClassDeclaredInALambda, spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInInnerClass, spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccess, spoon.test.targeted.TargetedExpressionTest#testNotTargetedExpression, spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldInAnonymousClass, spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInAnonymousClass, spoon.test.targeted.TargetedExpressionTest#testTargetsOfStaticFieldAccess, spoon.test.targeted.TargetedExpressionTest#testTargetOfFieldAccess], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1303, 1303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1303, 1303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1303, 1303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1303, 1303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1303, 1303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [925, 950] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1303, 1303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1303, 1303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1303, 1303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1303, 1303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1303, 1303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=11}
status: NOPATCH
dateEnd: Sat Mar 31 22:53:25 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@1c56a381', projectTests=[spoon.test.targeted.TargetedExpressionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #15
location: FailureLocation{className='spoon.test.parent.ParentTest', failingMethods=[], erroringMethods=[spoon.test.parent.ParentTest#testParentSet, spoon.test.parent.ParentTest#testParentPackage, spoon.test.parent.ParentTest#testParent, spoon.test.parent.ParentTest#testParentOfGenericInTypeReference, spoon.test.parent.ParentTest#testParentOfCtPackageReference, spoon.test.parent.ParentTest#testParentOfPrimitiveReference, spoon.test.parent.ParentTest#testHasParent, spoon.test.parent.ParentTest#testGetParentWithFilter, spoon.test.parent.ParentTest#testParentOfCtVariableReference, spoon.test.parent.ParentTest#testParentOfCtExecutableReference], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=10}
status: NOPATCH
dateEnd: Sat Mar 31 22:53:37 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@12c807e0', projectTests=[spoon.test.parent.ParentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #16
location: FailureLocation{className='spoon.test.intercession.insertBefore.InsertMethodsTest', failingMethods=[], erroringMethods=[spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBeforeWithBrace, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfterWithoutBrace, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBefore, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfterWithBrace, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfterSwitchCase, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBeforeWithoutBrace, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfter, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBeforeSwitchCase, spoon.test.intercession.insertBefore.InsertMethodsTest#insertBeforeAndUpdateParent], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [405, 405] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [405, 405] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [405, 405] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [405, 405] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [405, 405] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [405, 405] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [405, 405] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [405, 405] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [405, 405] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=9}
status: NOPATCH
dateEnd: Sat Mar 31 22:53:48 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@1f4b40fc', projectTests=[spoon.test.intercession.insertBefore.InsertMethodsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #17
location: FailureLocation{className='spoon.test.parent.NullParentTest', failingMethods=[], erroringMethods=[spoon.test.parent.NullParentTest#testAssertNullExpression, spoon.test.parent.NullParentTest#testIfNullBranches, spoon.test.parent.NullParentTest#testFieldNullDefaultExpression, spoon.test.parent.NullParentTest#testReturnNullExpression, spoon.test.parent.NullParentTest#testTargetedAccessNullTarget, spoon.test.parent.NullParentTest#testForLoopNullChildren, spoon.test.parent.NullParentTest#testLocalVariableNullDefaultExpression, spoon.test.parent.NullParentTest#testTargetedExpressionNullTarget], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Sat Mar 31 22:54:00 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@31a29e07', projectTests=[spoon.test.parent.NullParentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #18
location: FailureLocation{className='spoon.test.query_function.VariableReferencesTest', failingMethods=[], erroringMethods=[spoon.test.query_function.VariableReferencesTest#testPotentialVariableAccessFromStaticMethod, spoon.test.query_function.VariableReferencesTest#testVariableReferenceFunction, spoon.test.query_function.VariableReferencesTest#testCheckModelConsistency, spoon.test.query_function.VariableReferencesTest#testLocalVariableReferenceDeclarationFunction, spoon.test.query_function.VariableReferencesTest#testCatchVariableReferenceFunction, spoon.test.query_function.VariableReferencesTest#testParameterReferenceFunction, spoon.test.query_function.VariableReferencesTest#testVariableScopeFunction, spoon.test.query_function.VariableReferencesTest#testLocalVariableReferenceFunction], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Sat Mar 31 22:54:12 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@23d8db9f', projectTests=[spoon.test.query_function.VariableReferencesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #19
location: FailureLocation{className='spoon.test.architecture.SpoonArchitectureEnforcerTest', failingMethods=[], erroringMethods=[spoon.test.architecture.SpoonArchitectureEnforcerTest#metamodelPackageRule, spoon.test.architecture.SpoonArchitectureEnforcerTest#testSpecPackage, spoon.test.architecture.SpoonArchitectureEnforcerTest#testSrcMainJava, spoon.test.architecture.SpoonArchitectureEnforcerTest#testStaticClasses, spoon.test.architecture.SpoonArchitectureEnforcerTest#statelessFactory, spoon.test.architecture.SpoonArchitectureEnforcerTest#testInterfacesAreCtScannable, spoon.test.architecture.SpoonArchitectureEnforcerTest#testFactorySubFactory, spoon.test.architecture.SpoonArchitectureEnforcerTest#testGoodTestClassNames], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1081, 1102] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [837, 861] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [837, 861] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [3559, 3576] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [6140, 6159] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [6140, 6159] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [837, 861] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Sat Mar 31 22:54:23 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@2fb00a07', projectTests=[spoon.test.architecture.SpoonArchitectureEnforcerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #20
location: FailureLocation{className='spoon.test.constructorcallnewclass.NewClassTest', failingMethods=[], erroringMethods=[spoon.test.constructorcallnewclass.NewClassTest#testMoreThan9NewClass, spoon.test.constructorcallnewclass.NewClassTest#testNewClassWithObjectClass, spoon.test.constructorcallnewclass.NewClassTest#testNewClassInterfaceWithParameters, spoon.test.constructorcallnewclass.NewClassTest#testNewClassInEnumeration, spoon.test.constructorcallnewclass.NewClassTest#testCtNewClassInNoClasspath, spoon.test.constructorcallnewclass.NewClassTest#testNewClassWithInterface, spoon.test.constructorcallnewclass.NewClassTest#testNewClassWithInterfaceGeneric], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=7}
status: NOPATCH
dateEnd: Sat Mar 31 22:54:35 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@7dae6ec1', projectTests=[spoon.test.constructorcallnewclass.NewClassTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #21
location: FailureLocation{className='spoon.test.type.TypeTest', failingMethods=[], erroringMethods=[spoon.test.type.TypeTest#testIntersectionTypeOnTopLevelType, spoon.test.type.TypeTest#testTypeAccessForTypeAccessInInstanceOf, spoon.test.type.TypeTest#testTypeReferenceInGenericsAndCasts, spoon.test.type.TypeTest#test, spoon.test.type.TypeTest#testTypeAccessForDotClass, spoon.test.type.TypeTest#testTypeAccessOfArrayObjectInFullyQualifiedName, spoon.test.type.TypeTest#testIntersectionTypeReferenceInGenericsAndCasts], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [56, 89] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [56, 89] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [56, 89] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [56, 89] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [56, 89] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [56, 89] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=7}
status: NOPATCH
dateEnd: Sat Mar 31 22:54:47 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@66d44079', projectTests=[spoon.test.type.TypeTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #22
location: FailureLocation{className='spoon.test.api.APITest', failingMethods=[], erroringMethods=[spoon.test.api.APITest#testPrintNotAllSourcesWithFilter, spoon.test.api.APITest#testSetterInNodes, spoon.test.api.APITest#testOneLinerIntro, spoon.test.api.APITest#testPrintNotAllSourcesInCommandLine, spoon.test.api.APITest#testPrintNotAllSourcesWithNames, spoon.test.api.APITest#testOutputDestinationHandlerWithCUFactory], failures=[FailureType{failureName='java.lang.RuntimeException', failureDetail='java.io.FileNotFoundException: virtual_file (No such file or directory)', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1328, 1352] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [837, 861] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Invalid source position', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1328, 1352] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sat Mar 31 22:54:58 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@6fff4cac', projectTests=[spoon.test.api.APITest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #23
location: FailureLocation{className='spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest', failingMethods=[], erroringMethods=[spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousStaticFieldAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousStaticField, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousMemberFieldAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testChildOfGenericsWithAmbiguousStaticFieldAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testChildOfGenericsWithAmbiguousStaticField, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousMemberField], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [167, 190] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [157, 180] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [167, 190] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [160, 183] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [157, 180] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [160, 183] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sat Mar 31 22:55:10 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@120e82fc', projectTests=[spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #24
location: FailureLocation{className='spoon.test.constructorcallnewclass.ConstructorCallTest', failingMethods=[], erroringMethods=[spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallWithGenericArray, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallObjectWithoutParameters, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallStringWithParameters, spoon.test.constructorcallnewclass.ConstructorCallTest#testCoreConstructorCall, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallStringWithoutParameters, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallObjectWithParameters], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sat Mar 31 22:55:22 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@23c54711', projectTests=[spoon.test.constructorcallnewclass.ConstructorCallTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #25
location: FailureLocation{className='spoon.test.constructor.ConstructorTest', failingMethods=[], erroringMethods=[spoon.test.constructor.ConstructorTest#testTransformationOnConstructorWithInsertBegin, spoon.test.constructor.ConstructorTest#testTypeAnnotationWithConstructorsOnFormalType, spoon.test.constructor.ConstructorTest#testConstructorCallFactory, spoon.test.constructor.ConstructorTest#testTransformationOnConstructorWithInsertBefore, spoon.test.constructor.ConstructorTest#callParamConstructor, spoon.test.constructor.ConstructorTest#testTypeAnnotationOnExceptionDeclaredInConstructors], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sat Mar 31 22:55:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@5bd436da', projectTests=[spoon.test.constructor.ConstructorTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #26
location: FailureLocation{className='spoon.test.fieldaccesses.FieldAccessTest', failingMethods=[], erroringMethods=[spoon.test.fieldaccesses.FieldAccessTest#testTypeDeclaredInAnonymousClass, spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessInAnonymousClass, spoon.test.fieldaccesses.FieldAccessTest#testFieldWriteWithPlusEqualsOperation, spoon.test.fieldaccesses.FieldAccessTest#testGetReference, spoon.test.fieldaccesses.FieldAccessTest#testIncrementationOnAVarIsAUnaryOperator, spoon.test.fieldaccesses.FieldAccessTest#testTypeOfFieldAccess], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sat Mar 31 22:55:46 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@7afbd716', projectTests=[spoon.test.fieldaccesses.FieldAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #27
location: FailureLocation{className='spoon.test.refactoring.MethodsRefactoringTest', failingMethods=[], erroringMethods=[spoon.test.refactoring.MethodsRefactoringTest#testExecutableReferenceFilter, spoon.test.refactoring.MethodsRefactoringTest#testSubInheritanceHierarchyFunction, spoon.test.refactoring.MethodsRefactoringTest#testAllMethodsSameSignatureFunction, spoon.test.refactoring.MethodsRefactoringTest#testCtParameterRemoveRefactoringValidationCheck, spoon.test.refactoring.MethodsRefactoringTest#testCtParameterRemoveRefactoring], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Sat Mar 31 22:55:58 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@4ff7c31c', projectTests=[spoon.test.refactoring.MethodsRefactoringTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #28
location: FailureLocation{className='spoon.test.ctType.CtTypeTest', failingMethods=[], erroringMethods=[spoon.test.ctType.CtTypeTest#testIsSubTypeOfonTypeParameters, spoon.test.ctType.CtTypeTest#testHasMethodInSuperClass, spoon.test.ctType.CtTypeTest#testIsSubTypeOf, spoon.test.ctType.CtTypeTest#testIsSubTypeOfonTypeReferences, spoon.test.ctType.CtTypeTest#testHasMethodInDefaultMethod], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [788, 805] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [347, 360] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [347, 360] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [347, 360] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [347, 360] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Sat Mar 31 22:56:10 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@73c65a76', projectTests=[spoon.test.ctType.CtTypeTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #29
location: FailureLocation{className='spoon.test.template.TemplateTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateTest#testTemplateMatcher, spoon.test.template.TemplateTest#substituteTypeAccessReference, spoon.test.template.TemplateTest#testSubstitutionInsertAllNtoN, spoon.test.template.TemplateTest#testCheckBoundTemplate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='spoon.SpoonException: Invalid source position', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [271, 299] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [437, 461] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [372, 400] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 22:56:22 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@762ade83', projectTests=[spoon.test.template.TemplateTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #30
location: FailureLocation{className='spoon.processing.CtGenerationTest', failingMethods=[], erroringMethods=[spoon.processing.CtGenerationTest#testGenerateReplacementVisitor, spoon.processing.CtGenerationTest#testGenerateCloneVisitor, spoon.processing.CtGenerationTest#testGenerateRoleHandler, spoon.processing.CtGenerationTest#testGenerateCtBiScanner], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 22:56:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@191d5250', projectTests=[spoon.processing.CtGenerationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #31
location: FailureLocation{className='spoon.testing.CtElementAssertTest', failingMethods=[], erroringMethods=[spoon.testing.CtElementAssertTest#testEqualityBetweenACtElementAndAString, spoon.testing.CtElementAssertTest#testEqualityBetweenTwoCtElementWithTheSameSignatureButNotTheSameContent, spoon.testing.CtElementAssertTest#testEqualityBetweenTwoDifferentCtElement, spoon.testing.CtElementAssertTest#testEqualityBetweenTwoCtElement], failures=[FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.AssertionError> but was<spoon.SpoonException>', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [2038, 2057] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.AssertionError> but was<spoon.SpoonException>', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [2038, 2057] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 22:56:45 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@5bc3689e', projectTests=[spoon.testing.CtElementAssertTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #32
location: FailureLocation{className='spoon.test.reference.ExecutableReferenceTest', failingMethods=[], erroringMethods=[spoon.test.reference.ExecutableReferenceTest#testSuperClassInGetAllExecutables, spoon.test.reference.ExecutableReferenceTest#testLambdaNoClasspath, spoon.test.reference.ExecutableReferenceTest#testHashcodeWorksWithReference, spoon.test.reference.ExecutableReferenceTest#testSpecifyGetAllExecutablesMethod], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [5229, 5246] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [104, 117] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [104, 117] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [104, 117] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 22:56:56 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@4e010b9f', projectTests=[spoon.test.reference.ExecutableReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #33
location: FailureLocation{className='spoon.test.trycatch.TryCatchTest', failingMethods=[], erroringMethods=[spoon.test.trycatch.TryCatchTest#testCatchWithExplicitFinalVariable, spoon.test.trycatch.TryCatchTest#testMultiTryCatchWithCustomExceptions, spoon.test.trycatch.TryCatchTest#testCompileMultiTryCatchWithCustomExceptions], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Sat Mar 31 22:57:08 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@7e21a56e', projectTests=[spoon.test.trycatch.TryCatchTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #34
location: FailureLocation{className='spoon.test.ctClass.CtClassTest', failingMethods=[], erroringMethods=[spoon.test.ctClass.CtClassTest#testSpoonShouldInferImplicitPackageInNoClasspath, spoon.test.ctClass.CtClassTest#testNoClasspathWithSuperClassOfAClassInAnInterface, spoon.test.ctClass.CtClassTest#testParentOfTheEnclosingClassOfStaticClass], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [86209, 86222] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Sat Mar 31 22:57:20 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@f714e5', projectTests=[spoon.test.ctClass.CtClassTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #35
location: FailureLocation{className='spoon.test.api.MetamodelTest', failingMethods=[], erroringMethods=[spoon.test.api.MetamodelTest#testGetterSetterFroRole, spoon.test.api.MetamodelTest#testRoleOnField, spoon.test.api.MetamodelTest#testGetAllMetamodelInterfacess], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1081, 1102] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Sat Mar 31 22:57:31 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@5d01e520', projectTests=[spoon.test.api.MetamodelTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #36
location: FailureLocation{className='spoon.reflect.visitor.CtScannerTest', failingMethods=[], erroringMethods=[spoon.reflect.visitor.CtScannerTest#testScannerCallsAllProperties, spoon.reflect.visitor.CtScannerTest#testScan, spoon.reflect.visitor.CtScannerTest#testScannerContract], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Sat Mar 31 22:57:43 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@e942ca0', projectTests=[spoon.reflect.visitor.CtScannerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #37
location: FailureLocation{className='spoon.reflect.ast.CloneTest', failingMethods=[], erroringMethods=[spoon.reflect.ast.CloneTest#testCloneListener, spoon.reflect.ast.CloneTest#testCloneMethodsDeclaredInAST, spoon.reflect.ast.CloneTest#testCopyType], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [14757, 14778] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [14757, 14778] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Sat Mar 31 22:57:55 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@6b07a189', projectTests=[spoon.reflect.ast.CloneTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #38
location: FailureLocation{className='spoon.test.annotation.AnnotationValuesTest', failingMethods=[], erroringMethods=[spoon.test.annotation.AnnotationValuesTest#testValuesOnJava7Annotation, spoon.test.annotation.AnnotationValuesTest#testValuesOnJava8Annotation], failures=[FailureType{failureName='java.lang.StringIndexOutOfBoundsException', failureDetail='String index out of range: -1', isError=true}, FailureType{failureName='java.lang.StringIndexOutOfBoundsException', failureDetail='String index out of range: -1', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 22:58:07 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@1cba2645', projectTests=[spoon.test.annotation.AnnotationValuesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #39
location: FailureLocation{className='spoon.test.template.TemplateReplaceReturnTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateReplaceReturnTest#testNoReturnReplaceTemplate, spoon.test.template.TemplateReplaceReturnTest#testReturnReplaceTemplate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Invalid source position', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Invalid source position', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 22:58:18 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@366e3bee', projectTests=[spoon.test.template.TemplateReplaceReturnTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #40
location: FailureLocation{className='spoon.test.prettyprinter.PrinterTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.PrinterTest#testPrinterTokenListener, spoon.test.prettyprinter.PrinterTest#testFQNModeWriteFQNConstructorInCtVisitor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [67465, 67488] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 22:58:30 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@5a93a846', projectTests=[spoon.test.prettyprinter.PrinterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #41
location: FailureLocation{className='spoon.test.ctType.CtTypeParameterTest', failingMethods=[], erroringMethods=[spoon.test.ctType.CtTypeParameterTest#testTypeSame, spoon.test.ctType.CtTypeParameterTest#testTypeErasure], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [162, 175] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [162, 175] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 22:58:41 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@7ff491cd', projectTests=[spoon.test.ctType.CtTypeParameterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #42
location: FailureLocation{className='spoon.reflect.ast.AstCheckerTest', failingMethods=[], erroringMethods=[spoon.reflect.ast.AstCheckerTest#testAvoidSetCollectionSavedOnAST, spoon.reflect.ast.AstCheckerTest#testPushToStackChanges], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [837, 861] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1282, 1302] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 22:58:53 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@84b2ae8', projectTests=[spoon.reflect.ast.AstCheckerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #43
location: FailureLocation{className='spoon.test.reference.VariableAccessTest', failingMethods=[], erroringMethods=[spoon.test.reference.VariableAccessTest#testVariableAccessDeclarationInAnonymousClass, spoon.test.reference.VariableAccessTest#testDeclarationOfVariableReference], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 22:59:04 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@6314f362', projectTests=[spoon.test.reference.VariableAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #44
location: FailureLocation{className='spoon.test.method_overriding.MethodOverriddingTest', failingMethods=[], erroringMethods=[spoon.test.method_overriding.MethodOverriddingTest#testMethodOverride, spoon.test.method_overriding.MethodOverriddingTest#testMethodOverrideByReference], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [164, 174] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [164, 174] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 22:59:16 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@1e922a31', projectTests=[spoon.test.method_overriding.MethodOverriddingTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #45
location: FailureLocation{className='spoon.test.secondaryclasses.ClassesTest', failingMethods=[], erroringMethods=[spoon.test.secondaryclasses.ClassesTest#testInnerClassContruction, spoon.test.secondaryclasses.ClassesTest#testAnonymousClassInStaticField], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [162, 178] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 22:59:27 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@6f1c6efc', projectTests=[spoon.test.secondaryclasses.ClassesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #46
location: FailureLocation{className='spoon.test.prettyprinter.DefaultPrettyPrinterTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.DefaultPrettyPrinterTest#testIssue1501, spoon.test.prettyprinter.DefaultPrettyPrinterTest#printClassCreatedWithSpoon], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Invalid source position', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 22:59:38 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@3f2616eb', projectTests=[spoon.test.prettyprinter.DefaultPrettyPrinterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #47
location: FailureLocation{className='spoon.processing.ProcessingTest', failingMethods=[], erroringMethods=[spoon.processing.ProcessingTest#testSpoonTagger, spoon.processing.ProcessingTest#testInterruptAProcessor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [10519, 10532] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='spoon.SpoonException: Invalid source position', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 22:59:50 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@254ff189', projectTests=[spoon.processing.ProcessingTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #48
location: FailureLocation{className='spoon.test.compilation.CompilationTest', failingMethods=[], erroringMethods=[spoon.test.compilation.CompilationTest#testFilterResourcesDir, spoon.test.compilation.CompilationTest#testPrecompile], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [266, 290] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [104, 117] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 23:00:01 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@67def90c', projectTests=[spoon.test.compilation.CompilationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #49
location: FailureLocation{className='spoon.test.imports.ImportTest', failingMethods=[], erroringMethods=[spoon.test.imports.ImportTest#testSortingOfImports], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [14757, 14778] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:00:13 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@4f27d68c', projectTests=[spoon.test.imports.ImportTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #50
location: FailureLocation{className='spoon.test.initializers.InitializerTest', failingMethods=[], erroringMethods=[spoon.test.initializers.InitializerTest#testModelBuildingInitializer], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:00:25 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@5529cbcc', projectTests=[spoon.test.initializers.InitializerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #51
location: FailureLocation{className='spoon.test.parent.ParentContractTest', failingMethods=[], erroringMethods=[spoon.test.parent.ParentContractTest#initializationError], failures=[FailureType{failureName='java.lang.ExceptionInInitializerError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:00:36 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@7f4de2a3', projectTests=[spoon.test.parent.ParentContractTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #52
location: FailureLocation{className='spoon.test.loop.LoopTest', failingMethods=[], erroringMethods=[spoon.test.loop.LoopTest#testForeachShouldHaveAlwaysABlockInItsBody], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [981, 1001] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:00:48 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@6f65c052', projectTests=[spoon.test.loop.LoopTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #53
location: FailureLocation{className='spoon.test.annotation.AnnotationLoopTest', failingMethods=[], erroringMethods=[spoon.test.annotation.AnnotationLoopTest#testAnnotationDeclaredInForInit], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [95, 145] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:01:00 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@6bf4f46f', projectTests=[spoon.test.annotation.AnnotationLoopTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #54
location: FailureLocation{className='spoon.test.invocations.InvocationTest', failingMethods=[], erroringMethods=[spoon.test.invocations.InvocationTest#testIssue1753], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [5226, 5238] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:01:11 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@323972e1', projectTests=[spoon.test.invocations.InvocationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #55
location: FailureLocation{className='spoon.test.support.ResourceTest', failingMethods=[], erroringMethods=[spoon.test.support.ResourceTest#testFilteringFolder], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [6076, 6097] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:01:23 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@39f01f4b', projectTests=[spoon.test.support.ResourceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #56
location: FailureLocation{className='spoon.test.jar.JarTest', failingMethods=[], erroringMethods=[spoon.test.jar.JarTest#testJar], failures=[FailureType{failureName='java.lang.RuntimeException', failureDetail='java.io.FileNotFoundException: spoon/test/strings/Main.java (No such file or directory)', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:01:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@4d8d9f80', projectTests=[spoon.test.jar.JarTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #57
location: FailureLocation{className='spoon.reflect.visitor.CtVisitorTest', failingMethods=[], erroringMethods=[spoon.reflect.visitor.CtVisitorTest#testMethodsInVisitor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:01:45 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@381a9ca8', projectTests=[spoon.reflect.visitor.CtVisitorTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #58
location: FailureLocation{className='spoon.test.intercession.IntercessionContractTest', failingMethods=[], erroringMethods=[spoon.test.intercession.IntercessionContractTest#initializationError], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:01:57 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@2d37b1b0', projectTests=[spoon.test.intercession.IntercessionContractTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #59
location: FailureLocation{className='spoon.test.template.TemplateEnumAccessTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateEnumAccessTest#testEnumAccessTest], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Invalid source position', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:02:08 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@7f260218', projectTests=[spoon.test.template.TemplateEnumAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #60
location: FailureLocation{className='spoon.test.jdtimportbuilder.ImportBuilderTest', failingMethods=[], erroringMethods=[spoon.test.jdtimportbuilder.ImportBuilderTest#testInternalImportWhenNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:02:20 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@7f17941b', projectTests=[spoon.test.jdtimportbuilder.ImportBuilderTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #61
location: FailureLocation{className='spoon.test.factory.FactoryTest', failingMethods=[], erroringMethods=[spoon.test.factory.FactoryTest#specificationCoreFactoryCreate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:02:31 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@107d66b4', projectTests=[spoon.test.factory.FactoryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #62
location: FailureLocation{className='spoon.test.literal.LiteralTest', failingMethods=[], erroringMethods=[spoon.test.literal.LiteralTest#testCharLiteralInNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [17072, 17083] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:02:42 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@7a1ef036', projectTests=[spoon.test.literal.LiteralTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #63
location: FailureLocation{className='spoon.test.compilationunit.TestCompilationUnit', failingMethods=[], erroringMethods=[spoon.test.compilationunit.TestCompilationUnit#testNewlyCreatedCUWouldGetAPartialPosition], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Invalid source position', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:02:54 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@32404a9d', projectTests=[spoon.test.compilationunit.TestCompilationUnit], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #64
location: FailureLocation{className='spoon.test.parent.TopLevelTypeTest', failingMethods=[], erroringMethods=[spoon.test.parent.TopLevelTypeTest#testTopLevelType], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:03:05 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@6e04a917', projectTests=[spoon.test.parent.TopLevelTypeTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #65
location: FailureLocation{className='spoon.test.replace.ReplaceParametrizedTest', failingMethods=[], erroringMethods=[spoon.test.replace.ReplaceParametrizedTest#initializationError], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:03:18 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@5e152699', projectTests=[spoon.test.replace.ReplaceParametrizedTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #66
location: FailureLocation{className='spoon.test.signature.SignatureTest', failingMethods=[], erroringMethods=[spoon.test.signature.SignatureTest#testBugSignature], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [4432, 4452] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:03:29 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@31f2b94b', projectTests=[spoon.test.signature.SignatureTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #67
location: FailureLocation{className='spoon.test.arrays.ArraysTest', failingMethods=[], erroringMethods=[spoon.test.arrays.ArraysTest#testInitializeWithNewArray], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:03:41 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@4da72dcc', projectTests=[spoon.test.arrays.ArraysTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #68
location: FailureLocation{className='spoon.test.factory.FieldFactoryTest', failingMethods=[], erroringMethods=[spoon.test.factory.FieldFactoryTest#testCreateFromSource], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1303, 1303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:03:53 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@9921e80', projectTests=[spoon.test.factory.FieldFactoryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #69
location: FailureLocation{className='spoon.test.reference.ElasticsearchStackoverflowTest', failingMethods=[], erroringMethods=[spoon.test.reference.ElasticsearchStackoverflowTest#testStackOverflow], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [2313, 2344] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:04:05 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@2971b751', projectTests=[spoon.test.reference.ElasticsearchStackoverflowTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #70
location: FailureLocation{className='spoon.test.prettyprinter.QualifiedThisRefTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.QualifiedThisRefTest#testCloneThisAccess], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:04:16 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@2248fee9', projectTests=[spoon.test.prettyprinter.QualifiedThisRefTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #71
location: FailureLocation{className='spoon.test.method.MethodTest', failingMethods=[], erroringMethods=[spoon.test.method.MethodTest#testClone], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:04:28 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@30872eea', projectTests=[spoon.test.method.MethodTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #72
location: FailureLocation{className='spoon.test.variable.AccessTest', failingMethods=[], erroringMethods=[spoon.test.variable.AccessTest#testFieldWriteDeclaredInTheSuperclass], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:04:40 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@5aa608b8', projectTests=[spoon.test.variable.AccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #73
location: FailureLocation{className='spoon.test.parent.SetParentTest', failingMethods=[], erroringMethods=[spoon.test.parent.SetParentTest#initializationError], failures=[FailureType{failureName='java.lang.NoClassDefFoundError', failureDetail='Could not initialize class spoon.test.parent.ParentContractTest', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:04:52 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@4ddef140', projectTests=[spoon.test.parent.SetParentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #74
location: FailureLocation{className='spoon.test.visibility.VisibilityTest', failingMethods=[], erroringMethods=[spoon.test.visibility.VisibilityTest#testInvocationVisibilityInFieldDeclaration], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:05:03 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@32054f8f', projectTests=[spoon.test.visibility.VisibilityTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #75
location: FailureLocation{className='spoon.test.model.AnonymousExecutableTest', failingMethods=[], erroringMethods=[spoon.test.model.AnonymousExecutableTest#testStatements], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:05:15 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@64ad1ef4', projectTests=[spoon.test.model.AnonymousExecutableTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #76
location: FailureLocation{className='spoon.reflect.visitor.CtInheritanceScannerMethodsTest', failingMethods=[], erroringMethods=[spoon.reflect.visitor.CtInheritanceScannerMethodsTest#testMethodsInInheritanceScanner], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:05:26 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@68146b0f', projectTests=[spoon.reflect.visitor.CtInheritanceScannerMethodsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #77
location: FailureLocation{className='spoon.test.intercession.IntercessionTest', failingMethods=[], erroringMethods=[spoon.test.intercession.IntercessionTest#testSettersAreAllGood], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:05:38 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@55d6826f', projectTests=[spoon.test.intercession.IntercessionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #78
location: FailureLocation{className='spoon.test.parameters.ParameterTest', failingMethods=[], erroringMethods=[spoon.test.parameters.ParameterTest#testParameterInNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [7586, 7586] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:05:49 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@3aabecf4', projectTests=[spoon.test.parameters.ParameterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #79
location: FailureLocation{className='spoon.test.main.MainTest', failingMethods=[], erroringMethods=[spoon.test.main.MainTest#spoon.test.main.MainTest], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [837, 861] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:06:01 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@23841713', projectTests=[spoon.test.main.MainTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #80
location: FailureLocation{className='spoon.test.reflect.meta.MetaModelTest', failingMethods=[], erroringMethods=[spoon.test.reflect.meta.MetaModelTest#spoonMetaModelTest], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:06:12 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@a3ce724', projectTests=[spoon.test.reflect.meta.MetaModelTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #81
location: FailureLocation{className='spoon.testing.AbstractAssertTest', failingMethods=[], erroringMethods=[spoon.testing.AbstractAssertTest#testTransformationFromCtElementWithProcessor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [2038, 2057] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 23:06:23 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360710399/src/main/java], projectClasspath='[Ljava.net.URL;@53c7277c', projectTests=[spoon.testing.AbstractAssertTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360710399, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



