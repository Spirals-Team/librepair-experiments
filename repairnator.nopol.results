nopolinfo #0
location: FailureLocation{className='org.apache.calcite.test.JdbcTest', failingMethods=[org.apache.calcite.test.JdbcTest#testBushy, org.apache.calcite.test.JdbcTest#testExplainJoinOrderingWithOr, org.apache.calcite.test.JdbcTest#testCloneGroupBy2Plan, org.apache.calcite.test.JdbcTest#testCloneGroupBy2, org.apache.calcite.test.JdbcTest#testExplainJoin, org.apache.calcite.test.JdbcTest#testJoinJoin, org.apache.calcite.test.JdbcTest#testTableFunctionNonNullableMustBeLiterals, org.apache.calcite.test.JdbcTest#testNtileConstantArgs, org.apache.calcite.test.JdbcTest#testComparingIntAndString, org.apache.calcite.test.JdbcTest#testIn, org.apache.calcite.test.JdbcTest#testCloneQueries, org.apache.calcite.test.JdbcTest#testFoodmartLattice, org.apache.calcite.test.JdbcTest#testNoCalcBetweenJoins, org.apache.calcite.test.JdbcTest#testCorrelatedScalarSubQuery, org.apache.calcite.test.JdbcTest#testTableFunctionCursorsInputs, org.apache.calcite.test.JdbcTest#testNotInQuery, org.apache.calcite.test.JdbcTest#testModelWithMaterializedView, org.apache.calcite.test.JdbcTest#testNotInEmptyQuery, org.apache.calcite.test.JdbcTest#testExplainJoin4, org.apache.calcite.test.JdbcTest#testExplainJoin3, org.apache.calcite.test.JdbcTest#testTableFunctionCursorInputs, org.apache.calcite.test.JdbcTest#testJoinFiveWay, org.apache.calcite.test.JdbcTest#testExplainJoin2], erroringMethods=[org.apache.calcite.test.JdbcTest#testTrue], failures=[FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='Have no idea how to validate that expression is constant', isError=false}, FailureType{failureName='skipped', failureDetail='[CALCITE-685]', isError=false}, FailureType{failureName='skipped', failureDetail='extremely slow - a bit better if you disable ProjectMergeRule', isError=false}, FailureType{failureName='java.lang.RuntimeException', failureDetail='exception while executing [select case when deptno = 10 then null else true end as x
from (values (10), (20)) as t(deptno)]', isError=true}, FailureType{failureName='skipped', failureDetail='SQLException does not include message from nested exception', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='CannotPlanException: Node [rel#24:Subset#6.ENUMERABLE.[]] could not be implemented', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "DEPTNO=10\nDEPTNO=10\nDEPTNO=20\nDEPTNO=30\nDEPTNO=30\nDEPTNO=50\nDEPTNO=50\nDEPTNO=60\nDEPTNO=null"
     but: was ""', isError=false}, FailureType{failureName='skipped', failureDetail='The actual and expected plan differ', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "DEPTNO=50\nDEPTNO=50\nDEPTNO=60"
     but: was ""', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='The test returns expected results. Not sure why it is disabled', isError=false}, FailureType{failureName='skipped', failureDetail='until JdbcSchema can define materialized views', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='Fails with org.codehaus.commons.compiler.CompileException: Line 16, Column 112: Cannot compare types "int" and "java.lang.String"
', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='CannotPlanException: Node [rel#18:Subset#4.ENUMERABLE.[]] could not be implemented', isError=false}], nbFailures=23, nbErrors=1}
status: NOPATCH
dateEnd: Tue May 16 20:57:14 CEST 2017
allocatedtime: 120minutes 
passingTime: 1minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/apache/calcite/232850531/core/src/main/java], projectClasspath='[Ljava.net.URL;@8a62297', projectTests=[org.apache.calcite.test.JdbcTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #1
location: FailureLocation{className='org.apache.calcite.test.JdbcTest', failingMethods=[org.apache.calcite.test.JdbcTest#testBushy, org.apache.calcite.test.JdbcTest#testExplainJoinOrderingWithOr, org.apache.calcite.test.JdbcTest#testCloneGroupBy2Plan, org.apache.calcite.test.JdbcTest#testCloneGroupBy2, org.apache.calcite.test.JdbcTest#testExplainJoin, org.apache.calcite.test.JdbcTest#testJoinJoin, org.apache.calcite.test.JdbcTest#testTableFunctionNonNullableMustBeLiterals, org.apache.calcite.test.JdbcTest#testNtileConstantArgs, org.apache.calcite.test.JdbcTest#testComparingIntAndString, org.apache.calcite.test.JdbcTest#testIn, org.apache.calcite.test.JdbcTest#testCloneQueries, org.apache.calcite.test.JdbcTest#testFoodmartLattice, org.apache.calcite.test.JdbcTest#testNoCalcBetweenJoins, org.apache.calcite.test.JdbcTest#testCorrelatedScalarSubQuery, org.apache.calcite.test.JdbcTest#testTableFunctionCursorsInputs, org.apache.calcite.test.JdbcTest#testNotInQuery, org.apache.calcite.test.JdbcTest#testModelWithMaterializedView, org.apache.calcite.test.JdbcTest#testNotInEmptyQuery, org.apache.calcite.test.JdbcTest#testExplainJoin4, org.apache.calcite.test.JdbcTest#testExplainJoin3, org.apache.calcite.test.JdbcTest#testTableFunctionCursorInputs, org.apache.calcite.test.JdbcTest#testJoinFiveWay, org.apache.calcite.test.JdbcTest#testExplainJoin2], erroringMethods=[org.apache.calcite.test.JdbcTest#testTrue], failures=[FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='Have no idea how to validate that expression is constant', isError=false}, FailureType{failureName='skipped', failureDetail='[CALCITE-685]', isError=false}, FailureType{failureName='skipped', failureDetail='extremely slow - a bit better if you disable ProjectMergeRule', isError=false}, FailureType{failureName='java.lang.RuntimeException', failureDetail='exception while executing [select case when deptno = 10 then null else true end as x
from (values (10), (20)) as t(deptno)]', isError=true}, FailureType{failureName='skipped', failureDetail='SQLException does not include message from nested exception', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='CannotPlanException: Node [rel#24:Subset#6.ENUMERABLE.[]] could not be implemented', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "DEPTNO=10\nDEPTNO=10\nDEPTNO=20\nDEPTNO=30\nDEPTNO=30\nDEPTNO=50\nDEPTNO=50\nDEPTNO=60\nDEPTNO=null"
     but: was ""', isError=false}, FailureType{failureName='skipped', failureDetail='The actual and expected plan differ', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "DEPTNO=50\nDEPTNO=50\nDEPTNO=60"
     but: was ""', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='The test returns expected results. Not sure why it is disabled', isError=false}, FailureType{failureName='skipped', failureDetail='until JdbcSchema can define materialized views', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='Fails with org.codehaus.commons.compiler.CompileException: Line 16, Column 112: Cannot compare types "int" and "java.lang.String"
', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='CannotPlanException: Node [rel#18:Subset#4.ENUMERABLE.[]] could not be implemented', isError=false}], nbFailures=23, nbErrors=1}
status: NOPATCH
dateEnd: Tue May 16 20:57:52 CEST 2017
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/apache/calcite/232850531/core/src/main/java], projectClasspath='[Ljava.net.URL;@7a5bccb8', projectTests=[org.apache.calcite.test.JdbcTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #2
location: FailureLocation{className='org.apache.calcite.test.RelOptRulesTest', failingMethods=[org.apache.calcite.test.RelOptRulesTest#testReduceConstantsCaseEquals2, org.apache.calcite.test.RelOptRulesTest#testDecorrelateTwoScalar, org.apache.calcite.test.RelOptRulesTest#testReduceCase, org.apache.calcite.test.RelOptRulesTest#testExpandJoinInComposite, org.apache.calcite.test.RelOptRulesTest#testTransitiveInferenceUnion3wayOr, org.apache.calcite.test.RelOptRulesTest#testReduceCastsNullable, org.apache.calcite.test.RelOptRulesTest#testHeterogeneousConversion, org.apache.calcite.test.RelOptRulesTest#testReduceValuesNull, org.apache.calcite.test.RelOptRulesTest#testReduceNestedCaseWhen, org.apache.calcite.test.RelOptRulesTest#testMergeFilterWithJoinCondition, org.apache.calcite.test.RelOptRulesTest#testExpandJoinIn], erroringMethods=[], failures=[FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='[CALCITE-1045]', isError=false}, FailureType{failureName='skipped', failureDetail='cycles', isError=false}, FailureType{failureName='skipped', failureDetail='[CALCITE-1045]', isError=false}, FailureType{failureName='skipped', failureDetail='cycles', isError=false}, FailureType{failureName='skipped', failureDetail='not working', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='planAfter expected:<...alFilter(condition=[[=($7, 10])])
      LogicalTab...> but was:<...alFilter(condition=[[OR(AND(<>($7, 20), =($7, 10)), AND(<>($7, 20), <>($7, 10), null)])])
      LogicalTab...>', isError=false}, FailureType{failureName='skipped', failureDetail='[CALCITE-1045]', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='planAfter expected:<...alFilter(condition=[[CASE(=($5, 1000), =($5, 1000), =($5, 2000]))])
    LogicalTabl...> but was:<...alFilter(condition=[[OR(=($5, 1000), AND(<>($5, 1000), =($5, 2000)]))])
    LogicalTabl...>', isError=false}], nbFailures=11, nbErrors=0}
status: NOPATCH
dateEnd: Tue May 16 20:58:23 CEST 2017
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/apache/calcite/232850531/core/src/main/java], projectClasspath='[Ljava.net.URL;@3378af4e', projectTests=[org.apache.calcite.test.RelOptRulesTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #3
location: FailureLocation{className='org.apache.calcite.test.ReflectiveSchemaTest', failingMethods=[org.apache.calcite.test.ReflectiveSchemaTest#testArrayOfBoxedPrimitives, org.apache.calcite.test.ReflectiveSchemaTest#testOperator, org.apache.calcite.test.ReflectiveSchemaTest#testArrayOfPrimitives, org.apache.calcite.test.ReflectiveSchemaTest#testTableMacroIsView, org.apache.calcite.test.ReflectiveSchemaTest#testTableMacro], erroringMethods=[org.apache.calcite.test.ReflectiveSchemaTest#testCompareJavaAndSqlTypes], failures=[FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='java.lang.AssertionError RelDataTypeImpl.getFieldList(RelDataTypeImpl.java:99)', isError=false}, FailureType{failureName='skipped', failureDetail='java.lang.AssertionError RelDataTypeImpl.getFieldList(RelDataTypeImpl.java:99)', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='java.lang.RuntimeException', failureDetail='exception while executing [select count("primitiveBoolean") as p,
  count("wrapperBoolean") as w,
  count(nullif("primitiveShort" >= 0, false)) as sp,
  count(nullif("wrapperShort" >= 0, false)) as sw,
  count(nullif("primitiveInt" >= 0, false)) as ip,
  count(nullif("wrapperInteger" >= 0, false)) as iw,
  count(nullif("primitiveLong" >= 0, false)) as lp,
  count(nullif("wrapperLong" >= 0, false)) as lw
from "s"."everyTypes"]', isError=true}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}], nbFailures=5, nbErrors=1}
status: NOPATCH
dateEnd: Tue May 16 20:58:48 CEST 2017
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/apache/calcite/232850531/core/src/main/java], projectClasspath='[Ljava.net.URL;@29316a39', projectTests=[org.apache.calcite.test.ReflectiveSchemaTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #4
location: FailureLocation{className='org.apache.calcite.test.ReflectiveSchemaTest', failingMethods=[org.apache.calcite.test.ReflectiveSchemaTest#testArrayOfBoxedPrimitives, org.apache.calcite.test.ReflectiveSchemaTest#testOperator, org.apache.calcite.test.ReflectiveSchemaTest#testArrayOfPrimitives, org.apache.calcite.test.ReflectiveSchemaTest#testTableMacroIsView, org.apache.calcite.test.ReflectiveSchemaTest#testTableMacro], erroringMethods=[org.apache.calcite.test.ReflectiveSchemaTest#testCompareJavaAndSqlTypes], failures=[FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='java.lang.AssertionError RelDataTypeImpl.getFieldList(RelDataTypeImpl.java:99)', isError=false}, FailureType{failureName='skipped', failureDetail='java.lang.AssertionError RelDataTypeImpl.getFieldList(RelDataTypeImpl.java:99)', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='java.lang.RuntimeException', failureDetail='exception while executing [select count("primitiveBoolean") as p,
  count("wrapperBoolean") as w,
  count(nullif("primitiveShort" >= 0, false)) as sp,
  count(nullif("wrapperShort" >= 0, false)) as sw,
  count(nullif("primitiveInt" >= 0, false)) as ip,
  count(nullif("wrapperInteger" >= 0, false)) as iw,
  count(nullif("primitiveLong" >= 0, false)) as lp,
  count(nullif("wrapperLong" >= 0, false)) as lw
from "s"."everyTypes"]', isError=true}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}], nbFailures=5, nbErrors=1}
status: NOPATCH
dateEnd: Tue May 16 20:59:14 CEST 2017
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/apache/calcite/232850531/core/src/main/java], projectClasspath='[Ljava.net.URL;@2ce934a2', projectTests=[org.apache.calcite.test.ReflectiveSchemaTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #5
location: FailureLocation{className='org.apache.calcite.test.SqlToRelConverterTest', failingMethods=[org.apache.calcite.test.SqlToRelConverterTest#testUpdateBindExtendedColumn, org.apache.calcite.test.SqlToRelConverterTest#testInUncorrelatedSubQueryInSelect, org.apache.calcite.test.SqlToRelConverterTest#testUpdateBindExtendedColumnModifiableView, org.apache.calcite.test.SqlToRelConverterTest#testUpdateSubQuery, org.apache.calcite.test.SqlToRelConverterTest#testMerge], erroringMethods=[], failures=[FailureType{failureName='skipped', failureDetail='CALCITE-1708', isError=false}, FailureType{failureName='skipped', failureDetail='CALCITE-985', isError=false}, FailureType{failureName='skipped', failureDetail='CALCITE-1708', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='plan expected:<...(NAME=[$1], EXPR$1=[[CASE(=($2, 0), false, IS NOT NULL($6), true, <($3, $2), null, false])])
  LogicalJoin(co...> but was:<...(NAME=[$1], EXPR$1=[[OR(AND(<>($2, 0), IS NOT NULL($6)), AND(<>($2, 0), IS NULL($6), <($3, $2), null)])])
  LogicalJoin(co...>', isError=false}, FailureType{failureName='skipped', failureDetail='CALCITE-1527', isError=false}], nbFailures=5, nbErrors=0}
status: NOPATCH
dateEnd: Tue May 16 20:59:40 CEST 2017
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/apache/calcite/232850531/core/src/main/java], projectClasspath='[Ljava.net.URL;@1642caa6', projectTests=[org.apache.calcite.test.SqlToRelConverterTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #6
location: FailureLocation{className='org.apache.calcite.test.CalciteSqlOperatorTest', failingMethods=[org.apache.calcite.test.CalciteSqlOperatorTest#testCastInvalid, org.apache.calcite.test.CalciteSqlOperatorTest#testDecodeFunc, org.apache.calcite.test.CalciteSqlOperatorTest#testLikeEscape2], erroringMethods=[org.apache.calcite.test.CalciteSqlOperatorTest#testIsNotDistinctFromOperator, org.apache.calcite.test.CalciteSqlOperatorTest#testAndOperator2, org.apache.calcite.test.CalciteSqlOperatorTest#testIsDistinctFromOperator], failures=[FailureType{failureName='java.lang.RuntimeException', failureDetail='java.sql.SQLException: Error while executing SQL "values (cast(null as integer) is not distinct from 2)": null', isError=true}, FailureType{failureName='skipped', failureDetail='[CALCITE-1439] Handling errors during constant reduction', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='expected:<[b]> but was:<[d]>', isError=false}, FailureType{failureName='skipped', failureDetail='[CALCITE-525] Exception-handling in built-in functions', isError=false}, FailureType{failureName='java.lang.RuntimeException', failureDetail='java.sql.SQLException: Error while executing SQL "select case when p2 then p1 else p0 end and true from (values (true, unknown, false)) as t(p0, p1, p2)": Error while compiling generated Java code:
org.apache.calcite.DataContext root;

public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {
  root = root0;
  final org.apache.calcite.linq4j.Enumerable _inputEnumerable = org.apache.calcite.linq4j.Linq4j.asEnumerable(new Object[] {
    new Object[] {
      true,
      null,
      false}});
  return new org.apache.calcite.linq4j.AbstractEnumerable(){
      public org.apache.calcite.linq4j.Enumerator enumerator() {
        return new org.apache.calcite.linq4j.Enumerator(){
            public final org.apache.calcite.linq4j.Enumerator inputEnumerator = _inputEnumerable.enumerator();
            public void reset() {
              inputEnumerator.reset();
            }

            public boolean moveNext() {
              return inputEnumerator.moveNext();
            }

            public void close() {
              inputEnumerator.close();
            }

            public Object current() {
              final Object[] current = (Object[]) inputEnumerator.current();
              final boolean inp2_ = org.apache.calcite.runtime.SqlFunctions.toBoolean(current[2]);
              final Boolean inp1_ = (Boolean) current[1];
              final boolean inp0_ = org.apache.calcite.runtime.SqlFunctions.toBoolean(current[0]);
              final boolean v0 = !inp2_;
              return inp2_ && org.apache.calcite.runtime.SqlFunctions.isTrue(inp1_) || inp0_ && v0 ? Boolean.TRUE : (inp2_ && org.apache.calcite.runtime.SqlFunctions.isNotFalse(inp1_) ? (inp1_ == null ? (Boolean) null : Boolean.TRUE) : Boolean.FALSE) == null || (inp0_ && v0 || $L4J$C$_null) ? (Boolean) null : Boolean.FALSE;
            }

            static final Object $L4J$C$_null = !null;
          };
      }

    };
}


public Class getElementType() {
  return java.lang.Boolean.class;
}


', isError=true}, FailureType{failureName='java.lang.RuntimeException', failureDetail='java.sql.SQLException: Error while executing SQL "values (cast(null as integer) is distinct from 2)": null', isError=true}], nbFailures=3, nbErrors=3}
status: NOPATCH
dateEnd: Tue May 16 21:00:03 CEST 2017
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/apache/calcite/232850531/core/src/main/java], projectClasspath='[Ljava.net.URL;@114a1945', projectTests=[org.apache.calcite.test.CalciteSqlOperatorTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #7
location: FailureLocation{className='org.apache.calcite.test.CalciteSqlOperatorTest', failingMethods=[org.apache.calcite.test.CalciteSqlOperatorTest#testCastInvalid, org.apache.calcite.test.CalciteSqlOperatorTest#testDecodeFunc, org.apache.calcite.test.CalciteSqlOperatorTest#testLikeEscape2], erroringMethods=[org.apache.calcite.test.CalciteSqlOperatorTest#testIsNotDistinctFromOperator, org.apache.calcite.test.CalciteSqlOperatorTest#testAndOperator2, org.apache.calcite.test.CalciteSqlOperatorTest#testIsDistinctFromOperator], failures=[FailureType{failureName='java.lang.RuntimeException', failureDetail='java.sql.SQLException: Error while executing SQL "values (cast(null as integer) is not distinct from 2)": null', isError=true}, FailureType{failureName='skipped', failureDetail='[CALCITE-1439] Handling errors during constant reduction', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='expected:<[b]> but was:<[d]>', isError=false}, FailureType{failureName='skipped', failureDetail='[CALCITE-525] Exception-handling in built-in functions', isError=false}, FailureType{failureName='java.lang.RuntimeException', failureDetail='java.sql.SQLException: Error while executing SQL "select case when p2 then p1 else p0 end and true from (values (true, unknown, false)) as t(p0, p1, p2)": Error while compiling generated Java code:
org.apache.calcite.DataContext root;

public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {
  root = root0;
  final org.apache.calcite.linq4j.Enumerable _inputEnumerable = org.apache.calcite.linq4j.Linq4j.asEnumerable(new Object[] {
    new Object[] {
      true,
      null,
      false}});
  return new org.apache.calcite.linq4j.AbstractEnumerable(){
      public org.apache.calcite.linq4j.Enumerator enumerator() {
        return new org.apache.calcite.linq4j.Enumerator(){
            public final org.apache.calcite.linq4j.Enumerator inputEnumerator = _inputEnumerable.enumerator();
            public void reset() {
              inputEnumerator.reset();
            }

            public boolean moveNext() {
              return inputEnumerator.moveNext();
            }

            public void close() {
              inputEnumerator.close();
            }

            public Object current() {
              final Object[] current = (Object[]) inputEnumerator.current();
              final boolean inp2_ = org.apache.calcite.runtime.SqlFunctions.toBoolean(current[2]);
              final Boolean inp1_ = (Boolean) current[1];
              final boolean inp0_ = org.apache.calcite.runtime.SqlFunctions.toBoolean(current[0]);
              final boolean v0 = !inp2_;
              return inp2_ && org.apache.calcite.runtime.SqlFunctions.isTrue(inp1_) || inp0_ && v0 ? Boolean.TRUE : (inp2_ && org.apache.calcite.runtime.SqlFunctions.isNotFalse(inp1_) ? (inp1_ == null ? (Boolean) null : Boolean.TRUE) : Boolean.FALSE) == null || (inp0_ && v0 || $L4J$C$_null) ? (Boolean) null : Boolean.FALSE;
            }

            static final Object $L4J$C$_null = !null;
          };
      }

    };
}


public Class getElementType() {
  return java.lang.Boolean.class;
}


', isError=true}, FailureType{failureName='java.lang.RuntimeException', failureDetail='java.sql.SQLException: Error while executing SQL "values (cast(null as integer) is distinct from 2)": null', isError=true}], nbFailures=3, nbErrors=3}
status: NOPATCH
dateEnd: Tue May 16 21:00:27 CEST 2017
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/apache/calcite/232850531/core/src/main/java], projectClasspath='[Ljava.net.URL;@2e67f025', projectTests=[org.apache.calcite.test.CalciteSqlOperatorTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #8
location: FailureLocation{className='org.apache.calcite.test.RexProgramTest', failingMethods=[org.apache.calcite.test.RexProgramTest#testSimplify], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "CASE(=(?0.b, ?0.c), ?0.d, ?0.e)"
     but: was "OR(AND(=(?0.b, ?0.c), ?0.d), AND(<>(?0.b, ?0.c), ?0.e))"', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Tue May 16 21:00:49 CEST 2017
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/apache/calcite/232850531/core/src/main/java], projectClasspath='[Ljava.net.URL;@16ae5957', projectTests=[org.apache.calcite.test.RexProgramTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



