nopolinfo #0
location: FailureLocation{className='com.facebook.presto.sql.planner.optimizations.TestEliminateCrossJoins', failingMethods=[com.facebook.presto.sql.planner.optimizations.TestEliminateCrossJoins#testEliminateCrossJoinPreserveFilters, com.facebook.presto.sql.planner.optimizations.TestEliminateCrossJoins#testEliminateCrossJoinWithNonEqualityCondition], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='Plan does not match, expected [

- anyTree
    - node(JoinNode)
        JoinMatcher{equiCriteria=[L_ORDERKEY = O_ORDERKEY], dynamicFilter=Optional.empty}
        - anyTree
            - node(JoinNode)
                JoinMatcher{equiCriteria=[P_PARTKEY = L_PARTKEY], filter=("P_NAME" < CAST("L_COMMENT" AS varchar(55))), dynamicFilter=Optional.empty}
                - anyTree
                    - node(TableScanNode)
                        TableScanMatcher{expectedTableName=part}
                        bind P_PARTKEY -> Column part:partkey
                        bind P_NAME -> Column part:name
                - anyTree
                    - node(FilterNode)
                        FilterMatcher{predicate=(("L_PARTKEY" <> "L_ORDERKEY") AND "$internal$dynamic_filter"("EQUAL", "L_ORDERKEY", "dynamic_filter_orderkey", "128"))}
                        - node(TableScanNode)
                            TableScanMatcher{expectedTableName=lineitem}
                            bind L_PARTKEY -> Column lineitem:partkey
                            bind L_ORDERKEY -> Column lineitem:orderkey
                            bind L_COMMENT -> Column lineitem:comment
        - anyTree
            - node(TableScanNode)
                TableScanMatcher{expectedTableName=orders}
                bind O_ORDERKEY -> Column orders:orderkey

] but found [

- Output[orderkey] => [orderkey_2:bigint]
        Cost: {rows: 120350 (1.15MB), cpu: ?, memory: ?, network: ?}
        orderkey := orderkey_2
    - InnerJoin[("orderkey_2" = "orderkey")][$hashvalue_12, $hashvalue_13] => [orderkey_2:bigint]
            dynamicFilterAssignments = {df <- "orderkey"}
            Cost: {rows: 120350 (1.15MB), cpu: ?, memory: ?, network: ?}
        - Project[] => [orderkey_2:bigint, $hashvalue_12:bigint]
                Cost: {rows: 60175 (1.15MB), cpu: ?, memory: ?, network: ?}
                $hashvalue_12 := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("orderkey_2"), 0))
            - InnerJoin[("partkey" = "partkey_3") AND ("name" < CAST("comment_4" AS varchar(55)))][$hashvalue, $hashvalue_10] => [orderkey_2:bigint]
                    dynamicFilterAssignments = {df_9 <- "partkey_3"}
                    Cost: {rows: 60175 (587.65kB), cpu: ?, memory: ?, network: ?}
                - ScanFilterProject[table = local:tpch:part:sf0.01, originalConstraint = true, filterPredicate = true, dynamicFilter = {df_9 -> "partkey"}] => [partkey:bigint, name:varchar(55), $hashvalue:bigint]
                        Cost: {rows: 2000 (39.06kB), cpu: ?, memory: ?, network: ?}/{rows: 1000 (19.53kB), cpu: ?, memory: ?, network: ?}/{rows: 1000 (29.30kB), cpu: ?, memory: ?, network: ?}
                        $hashvalue := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("partkey"), 0))
                        partkey := tpch:partkey
                        name := tpch:name
                        tpch:container
                            :: [[JUMBO BAG, WRAP PKG]]
                        tpch:type
                            :: [[ECONOMY ANODIZED BRASS, STANDARD POLISHED TIN]]
                - LocalExchange[SINGLE] () => orderkey_2:bigint, partkey_3:bigint, comment_4:varchar(44), $hashvalue_10:bigint
                        Cost: {rows: 30088 (1.15MB), cpu: ?, memory: ?, network: ?}
                    - ScanFilterProject[table = local:tpch:lineitem:sf0.01, originalConstraint = true, filterPredicate = ("partkey_3" <> "orderkey_2"), dynamicFilter = {df -> "orderkey_2"}] => [orderkey_2:bigint, partkey_3:bigint, comment_4:varchar(44), $hashvalue_11:bigint]
                            Cost: {rows: 60175 (1.72MB), cpu: ?, memory: ?, network: ?}/{rows: 30088 (881.47kB), cpu: ?, memory: ?, network: ?}/{rows: 30088 (1.15MB), cpu: ?, memory: ?, network: ?}
                            $hashvalue_11 := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("partkey_3"), 0))
                            comment_4 := tpch:comment
                            orderkey_2 := tpch:orderkey
                            partkey_3 := tpch:partkey
        - LocalExchange[SINGLE] () => orderkey:bigint, $hashvalue_13:bigint
                Cost: {rows: 15000 (292.97kB), cpu: ?, memory: ?, network: ?}
            - ScanProject[table = local:tpch:orders:sf0.01, originalConstraint = true] => [orderkey:bigint, $hashvalue_14:bigint]
                    Cost: {rows: 15000 (146.48kB), cpu: ?, memory: ?, network: ?}/{rows: 15000 (292.97kB), cpu: ?, memory: ?, network: ?}
                    $hashvalue_14 := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("orderkey"), 0))
                    orderkey := tpch:orderkey
                    tpch:orderstatus
                        :: [[F], [O], [P]]

] which resolves to [

- Output[orderkey] => [orderkey_2:bigint]
        Cost: {rows: 120350 (1.15MB), cpu: ?, memory: ?, network: ?}
        orderkey := orderkey_2
    - InnerJoin[("orderkey_2" = "orderkey")][$hashvalue_12, $hashvalue_13] => [orderkey_2:bigint]
            dynamicFilterAssignments = {df <- "orderkey"}
            Cost: {rows: 120350 (1.15MB), cpu: ?, memory: ?, network: ?}
        - Project[] => [orderkey_2:bigint, $hashvalue_12:bigint]
                Cost: {rows: 60175 (1.15MB), cpu: ?, memory: ?, network: ?}
                $hashvalue_12 := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("orderkey_2"), 0))
            - InnerJoin[("partkey" = "partkey_3") AND ("name" < CAST("comment_4" AS varchar(55)))][$hashvalue, $hashvalue_10] => [orderkey_2:bigint]
                    dynamicFilterAssignments = {df_9 <- "partkey_3"}
                    Cost: {rows: 60175 (587.65kB), cpu: ?, memory: ?, network: ?}
                - ScanFilterProject[table = local:tpch:part:sf0.01, originalConstraint = true, filterPredicate = true, dynamicFilter = {df_9 -> "partkey"}] => [partkey:bigint, name:varchar(55), $hashvalue:bigint]
                        Cost: {rows: 2000 (39.06kB), cpu: ?, memory: ?, network: ?}/{rows: 1000 (19.53kB), cpu: ?, memory: ?, network: ?}/{rows: 1000 (29.30kB), cpu: ?, memory: ?, network: ?}
                        $hashvalue := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("partkey"), 0))
                        partkey := tpch:partkey
                        name := tpch:name
                        tpch:container
                            :: [[JUMBO BAG, WRAP PKG]]
                        tpch:type
                            :: [[ECONOMY ANODIZED BRASS, STANDARD POLISHED TIN]]
                - LocalExchange[SINGLE] () => orderkey_2:bigint, partkey_3:bigint, comment_4:varchar(44), $hashvalue_10:bigint
                        Cost: {rows: 30088 (1.15MB), cpu: ?, memory: ?, network: ?}
                    - ScanFilterProject[table = local:tpch:lineitem:sf0.01, originalConstraint = true, filterPredicate = ("partkey_3" <> "orderkey_2"), dynamicFilter = {df -> "orderkey_2"}] => [orderkey_2:bigint, partkey_3:bigint, comment_4:varchar(44), $hashvalue_11:bigint]
                            Cost: {rows: 60175 (1.72MB), cpu: ?, memory: ?, network: ?}/{rows: 30088 (881.47kB), cpu: ?, memory: ?, network: ?}/{rows: 30088 (1.15MB), cpu: ?, memory: ?, network: ?}
                            $hashvalue_11 := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("partkey_3"), 0))
                            comment_4 := tpch:comment
                            orderkey_2 := tpch:orderkey
                            partkey_3 := tpch:partkey
        - LocalExchange[SINGLE] () => orderkey:bigint, $hashvalue_13:bigint
                Cost: {rows: 15000 (292.97kB), cpu: ?, memory: ?, network: ?}
            - ScanProject[table = local:tpch:orders:sf0.01, originalConstraint = true] => [orderkey:bigint, $hashvalue_14:bigint]
                    Cost: {rows: 15000 (146.48kB), cpu: ?, memory: ?, network: ?}/{rows: 15000 (292.97kB), cpu: ?, memory: ?, network: ?}
                    $hashvalue_14 := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("orderkey"), 0))
                    orderkey := tpch:orderkey
                    tpch:orderstatus
                        :: [[F], [O], [P]]

]', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Plan does not match, expected [

- anyTree
    - node(JoinNode)
        JoinMatcher{equiCriteria=[L_ORDERKEY = O_ORDERKEY], dynamicFilter=Optional.empty}
        - anyTree
            - node(JoinNode)
                JoinMatcher{equiCriteria=[P_PARTKEY = L_PARTKEY], dynamicFilter=Optional.empty}
                - anyTree
                    - node(TableScanNode)
                        TableScanMatcher{expectedTableName=part}
                        bind P_PARTKEY -> Column part:partkey
                - anyTree
                    - node(FilterNode)
                        FilterMatcher{predicate=(("L_RETURNFLAG" = 'R') AND "$internal$dynamic_filter"("EQUAL", "L_ORDERKEY", "dynamic_filter_orderkey", "128"))}
                        - node(TableScanNode)
                            TableScanMatcher{expectedTableName=lineitem}
                            bind L_PARTKEY -> Column lineitem:partkey
                            bind L_ORDERKEY -> Column lineitem:orderkey
                            bind L_RETURNFLAG -> Column lineitem:returnflag
        - anyTree
            - node(FilterNode)
                FilterMatcher{predicate=("O_SHIPPRIORITY" >= 10)}
                - node(TableScanNode)
                    TableScanMatcher{expectedTableName=orders}
                    bind O_ORDERKEY -> Column orders:orderkey
                    bind O_SHIPPRIORITY -> Column orders:shippriority

] but found [

- Output[orderkey] => [orderkey_2:bigint]
        Cost: {rows: 120350 (1.15MB), cpu: ?, memory: ?, network: ?}
        orderkey := orderkey_2
    - InnerJoin[("orderkey_2" = "orderkey")][$hashvalue_12, $hashvalue_13] => [orderkey_2:bigint]
            dynamicFilterAssignments = {df <- "orderkey"}
            Cost: {rows: 120350 (1.15MB), cpu: ?, memory: ?, network: ?}
        - Project[] => [orderkey_2:bigint, $hashvalue_12:bigint]
                Cost: {rows: 60175 (1.15MB), cpu: ?, memory: ?, network: ?}
                $hashvalue_12 := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("orderkey_2"), 0))
            - InnerJoin[("partkey" = "partkey_3")][$hashvalue, $hashvalue_10] => [orderkey_2:bigint]
                    dynamicFilterAssignments = {df_9 <- "partkey_3"}
                    Cost: {rows: 60175 (587.65kB), cpu: ?, memory: ?, network: ?}
                - ScanFilterProject[table = local:tpch:part:sf0.01, originalConstraint = true, filterPredicate = true, dynamicFilter = {df_9 -> "partkey"}] => [partkey:bigint, $hashvalue:bigint]
                        Cost: {rows: 2000 (19.53kB), cpu: ?, memory: ?, network: ?}/{rows: 1000 (9.77kB), cpu: ?, memory: ?, network: ?}/{rows: 1000 (19.53kB), cpu: ?, memory: ?, network: ?}
                        $hashvalue := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("partkey"), 0))
                        partkey := tpch:partkey
                        tpch:container
                            :: [[JUMBO BAG, WRAP PKG]]
                        tpch:type
                            :: [[ECONOMY ANODIZED BRASS, STANDARD POLISHED TIN]]
                - LocalExchange[SINGLE] () => orderkey_2:bigint, partkey_3:bigint, returnflag:varchar(1), $hashvalue_10:bigint
                        Cost: {rows: 30088 (1.15MB), cpu: ?, memory: ?, network: ?}
                    - ScanFilterProject[table = local:tpch:lineitem:sf0.01, originalConstraint = ('R' = "returnflag"), filterPredicate = ("returnflag" = 'R'), dynamicFilter = {df -> "orderkey_2"}] => [orderkey_2:bigint, partkey_3:bigint, returnflag:varchar(1), $hashvalue_11:bigint]
                            Cost: {rows: 60175 (1.72MB), cpu: ?, memory: ?, network: ?}/{rows: 30088 (881.47kB), cpu: ?, memory: ?, network: ?}/{rows: 30088 (1.15MB), cpu: ?, memory: ?, network: ?}
                            $hashvalue_11 := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("partkey_3"), 0))
                            returnflag := tpch:returnflag
                                :: [[R]]
                            orderkey_2 := tpch:orderkey
                            partkey_3 := tpch:partkey
        - LocalExchange[SINGLE] () => orderkey:bigint, shippriority:integer, $hashvalue_13:bigint
                Cost: {rows: 7500 (219.73kB), cpu: ?, memory: ?, network: ?}
            - ScanFilterProject[table = local:tpch:orders:sf0.01, originalConstraint = ("shippriority" >= 10), filterPredicate = ("shippriority" >= 10)] => [orderkey:bigint, shippriority:integer, $hashvalue_14:bigint]
                    Cost: {rows: 15000 (292.97kB), cpu: ?, memory: ?, network: ?}/{rows: 7500 (146.48kB), cpu: ?, memory: ?, network: ?}/{rows: 7500 (219.73kB), cpu: ?, memory: ?, network: ?}
                    $hashvalue_14 := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("orderkey"), 0))
                    orderkey := tpch:orderkey
                    shippriority := tpch:shippriority
                        :: [[10, <max>)]
                    tpch:orderstatus
                        :: [[F], [O], [P]]

] which resolves to [

- Output[orderkey] => [orderkey_2:bigint]
        Cost: {rows: 120350 (1.15MB), cpu: ?, memory: ?, network: ?}
        orderkey := orderkey_2
    - InnerJoin[("orderkey_2" = "orderkey")][$hashvalue_12, $hashvalue_13] => [orderkey_2:bigint]
            dynamicFilterAssignments = {df <- "orderkey"}
            Cost: {rows: 120350 (1.15MB), cpu: ?, memory: ?, network: ?}
        - Project[] => [orderkey_2:bigint, $hashvalue_12:bigint]
                Cost: {rows: 60175 (1.15MB), cpu: ?, memory: ?, network: ?}
                $hashvalue_12 := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("orderkey_2"), 0))
            - InnerJoin[("partkey" = "partkey_3")][$hashvalue, $hashvalue_10] => [orderkey_2:bigint]
                    dynamicFilterAssignments = {df_9 <- "partkey_3"}
                    Cost: {rows: 60175 (587.65kB), cpu: ?, memory: ?, network: ?}
                - ScanFilterProject[table = local:tpch:part:sf0.01, originalConstraint = true, filterPredicate = true, dynamicFilter = {df_9 -> "partkey"}] => [partkey:bigint, $hashvalue:bigint]
                        Cost: {rows: 2000 (19.53kB), cpu: ?, memory: ?, network: ?}/{rows: 1000 (9.77kB), cpu: ?, memory: ?, network: ?}/{rows: 1000 (19.53kB), cpu: ?, memory: ?, network: ?}
                        $hashvalue := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("partkey"), 0))
                        partkey := tpch:partkey
                        tpch:container
                            :: [[JUMBO BAG, WRAP PKG]]
                        tpch:type
                            :: [[ECONOMY ANODIZED BRASS, STANDARD POLISHED TIN]]
                - LocalExchange[SINGLE] () => orderkey_2:bigint, partkey_3:bigint, returnflag:varchar(1), $hashvalue_10:bigint
                        Cost: {rows: 30088 (1.15MB), cpu: ?, memory: ?, network: ?}
                    - ScanFilterProject[table = local:tpch:lineitem:sf0.01, originalConstraint = ('R' = "returnflag"), filterPredicate = ("returnflag" = 'R'), dynamicFilter = {df -> "orderkey_2"}] => [orderkey_2:bigint, partkey_3:bigint, returnflag:varchar(1), $hashvalue_11:bigint]
                            Cost: {rows: 60175 (1.72MB), cpu: ?, memory: ?, network: ?}/{rows: 30088 (881.47kB), cpu: ?, memory: ?, network: ?}/{rows: 30088 (1.15MB), cpu: ?, memory: ?, network: ?}
                            $hashvalue_11 := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("partkey_3"), 0))
                            returnflag := tpch:returnflag
                                :: [[R]]
                            orderkey_2 := tpch:orderkey
                            partkey_3 := tpch:partkey
        - LocalExchange[SINGLE] () => orderkey:bigint, shippriority:integer, $hashvalue_13:bigint
                Cost: {rows: 7500 (219.73kB), cpu: ?, memory: ?, network: ?}
            - ScanFilterProject[table = local:tpch:orders:sf0.01, originalConstraint = ("shippriority" >= 10), filterPredicate = ("shippriority" >= 10)] => [orderkey:bigint, shippriority:integer, $hashvalue_14:bigint]
                    Cost: {rows: 15000 (292.97kB), cpu: ?, memory: ?, network: ?}/{rows: 7500 (146.48kB), cpu: ?, memory: ?, network: ?}/{rows: 7500 (219.73kB), cpu: ?, memory: ?, network: ?}
                    $hashvalue_14 := "combine_hash"(bigint '0', COALESCE("$operator$hash_code"("orderkey"), 0))
                    orderkey := tpch:orderkey
                    shippriority := tpch:shippriority
                        :: [[10, <max>)]
                    tpch:orderstatus
                        :: [[F], [O], [P]]

]', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Thu Apr 26 06:20:44 CEST 2018
allocatedtime: 120minutes 
passingTime: 1minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/prestodb/presto/371370594/presto-main/src/main/java], projectClasspath='[Ljava.net.URL;@6a4d7f76', projectTests=[com.facebook.presto.sql.planner.optimizations.TestEliminateCrossJoins], complianceLevel=8, outputFolder=./workspace/prestodb/presto/371370594, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='com.facebook.presto.type.TestMapOperators', failingMethods=[com.facebook.presto.type.TestMapOperators#testDistinctFrom, com.facebook.presto.type.TestMapOperators#testMapConcat], erroringMethods=[], failures=[FailureType{failureName='com.facebook.presto.spi.PrestoException', failureDetail='Value 3895915360 exceeds MAX_INT', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='expected [{5.1=33.22, 1.0=2.20}] but found [{5.1=33.22, 388595701.6=2.20}]', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Thu Apr 26 06:21:33 CEST 2018
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/prestodb/presto/371370594/presto-main/src/main/java], projectClasspath='[Ljava.net.URL;@6be87b35', projectTests=[com.facebook.presto.type.TestMapOperators], complianceLevel=8, outputFolder=./workspace/prestodb/presto/371370594, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #2
location: FailureLocation{className='com.facebook.presto.sql.TestExpressionSerialization', failingMethods=[com.facebook.presto.sql.TestExpressionSerialization#testDynamicFilterExpressionSerialization], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='expected ["$INTERNAL$DYNAMIC_FILTER"("EQUAL", "probe", "name", "source")] but found ["$internal$dynamic_filter"("EQUAL", "probe", "name", "source")]', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Thu Apr 26 06:22:25 CEST 2018
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/prestodb/presto/371370594/presto-main/src/main/java], projectClasspath='[Ljava.net.URL;@17307576', projectTests=[com.facebook.presto.sql.TestExpressionSerialization], complianceLevel=8, outputFolder=./workspace/prestodb/presto/371370594, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #3
location: FailureLocation{className='com.facebook.presto.sql.gen.TestExpressionCompiler', failingMethods=[com.facebook.presto.sql.gen.TestExpressionCompiler#testNullif], erroringMethods=[], failures=[FailureType{failureName='java.lang.RuntimeException', failureDetail='Error processing nullif(map(array[1], array[smallint '1']), map(array[1], array[integer '1']))', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Thu Apr 26 06:23:15 CEST 2018
allocatedtime: 119minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/prestodb/presto/371370594/presto-main/src/main/java], projectClasspath='[Ljava.net.URL;@761cb5d0', projectTests=[com.facebook.presto.sql.gen.TestExpressionCompiler], complianceLevel=8, outputFolder=./workspace/prestodb/presto/371370594, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



