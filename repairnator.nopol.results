nopolinfo #0
location: FailureLocation{className='org.opennars.core.NALTest', failingMethods=[], erroringMethods=[org.opennars.core.NALTest#test[159], org.opennars.core.NALTest#test[147], org.opennars.core.NALTest#test[191], org.opennars.core.NALTest#test[88], org.opennars.core.NALTest#test[64], org.opennars.core.NALTest#test[76], org.opennars.core.NALTest#test[2], org.opennars.core.NALTest#test[111], org.opennars.core.NALTest#test[40], org.opennars.core.NALTest#test[123], org.opennars.core.NALTest#test[52], org.opennars.core.NALTest#test[135], org.opennars.core.NALTest#test[158], org.opennars.core.NALTest#test[146], org.opennars.core.NALTest#test[190], org.opennars.core.NALTest#test[77], org.opennars.core.NALTest#test[1], org.opennars.core.NALTest#test[89], org.opennars.core.NALTest#test[53], org.opennars.core.NALTest#test[65], org.opennars.core.NALTest#test[110], org.opennars.core.NALTest#test[122], org.opennars.core.NALTest#test[134], org.opennars.core.NALTest#test[41], org.opennars.core.NALTest#test[169], org.opennars.core.NALTest#test[157], org.opennars.core.NALTest#test[145], org.opennars.core.NALTest#test[18], org.opennars.core.NALTest#test[0], org.opennars.core.NALTest#test[86], org.opennars.core.NALTest#test[98], org.opennars.core.NALTest#test[121], org.opennars.core.NALTest#test[133], org.opennars.core.NALTest#test[62], org.opennars.core.NALTest#test[74], org.opennars.core.NALTest#test[50], org.opennars.core.NALTest#test[168], org.opennars.core.NALTest#test[156], org.opennars.core.NALTest#test[144], org.opennars.core.NALTest#test[19], org.opennars.core.NALTest#test[99], org.opennars.core.NALTest#test[75], org.opennars.core.NALTest#test[87], org.opennars.core.NALTest#test[120], org.opennars.core.NALTest#test[132], org.opennars.core.NALTest#test[51], org.opennars.core.NALTest#test[63], org.opennars.core.NALTest#test[127], org.opennars.core.NALTest#test[139], org.opennars.core.NALTest#test[195], org.opennars.core.NALTest#test[183], org.opennars.core.NALTest#test[6], org.opennars.core.NALTest#test[171], org.opennars.core.NALTest#test[44], org.opennars.core.NALTest#test[56], org.opennars.core.NALTest#test[20], org.opennars.core.NALTest#test[32], org.opennars.core.NALTest#test[68], org.opennars.core.NALTest#test[103], org.opennars.core.NALTest#test[115], org.opennars.core.NALTest#test[138], org.opennars.core.NALTest#test[194], org.opennars.core.NALTest#test[182], org.opennars.core.NALTest#test[170], org.opennars.core.NALTest#test[33], org.opennars.core.NALTest#test[45], org.opennars.core.NALTest#test[21], org.opennars.core.NALTest#test[5], org.opennars.core.NALTest#test[57], org.opennars.core.NALTest#test[69], org.opennars.core.NALTest#test[102], org.opennars.core.NALTest#test[114], org.opennars.core.NALTest#test[126], org.opennars.core.NALTest#test[193], org.opennars.core.NALTest#test[181], org.opennars.core.NALTest#test[66], org.opennars.core.NALTest#test[78], org.opennars.core.NALTest#test[42], org.opennars.core.NALTest#test[54], org.opennars.core.NALTest#test[4], org.opennars.core.NALTest#test[101], org.opennars.core.NALTest#test[30], org.opennars.core.NALTest#test[113], org.opennars.core.NALTest#test[125], org.opennars.core.NALTest#test[137], org.opennars.core.NALTest#test[149], org.opennars.core.NALTest#test[148], org.opennars.core.NALTest#test[192], org.opennars.core.NALTest#test[180], org.opennars.core.NALTest#test[55], org.opennars.core.NALTest#test[67], org.opennars.core.NALTest#test[31], org.opennars.core.NALTest#test[43], org.opennars.core.NALTest#test[79], org.opennars.core.NALTest#test[3], org.opennars.core.NALTest#test[100], org.opennars.core.NALTest#test[112], org.opennars.core.NALTest#test[124], org.opennars.core.NALTest#test[136], org.opennars.core.NALTest#test[107], org.opennars.core.NALTest#test[119], org.opennars.core.NALTest#test[187], org.opennars.core.NALTest#test[175], org.opennars.core.NALTest#test[163], org.opennars.core.NALTest#test[151], org.opennars.core.NALTest#test[12], org.opennars.core.NALTest#test[48], org.opennars.core.NALTest#test[24], org.opennars.core.NALTest#test[36], org.opennars.core.NALTest#test[80], org.opennars.core.NALTest#test[92], org.opennars.core.NALTest#test[106], org.opennars.core.NALTest#test[118], org.opennars.core.NALTest#test[186], org.opennars.core.NALTest#test[174], org.opennars.core.NALTest#test[162], org.opennars.core.NALTest#test[9], org.opennars.core.NALTest#test[150], org.opennars.core.NALTest#test[37], org.opennars.core.NALTest#test[49], org.opennars.core.NALTest#test[13], org.opennars.core.NALTest#test[25], org.opennars.core.NALTest#test[81], org.opennars.core.NALTest#test[93], org.opennars.core.NALTest#test[105], org.opennars.core.NALTest#test[117], org.opennars.core.NALTest#test[129], org.opennars.core.NALTest#test[197], org.opennars.core.NALTest#test[185], org.opennars.core.NALTest#test[8], org.opennars.core.NALTest#test[173], org.opennars.core.NALTest#test[161], org.opennars.core.NALTest#test[22], org.opennars.core.NALTest#test[34], org.opennars.core.NALTest#test[10], org.opennars.core.NALTest#test[46], org.opennars.core.NALTest#test[58], org.opennars.core.NALTest#test[90], org.opennars.core.NALTest#test[116], org.opennars.core.NALTest#test[128], org.opennars.core.NALTest#test[196], org.opennars.core.NALTest#test[184], org.opennars.core.NALTest#test[172], org.opennars.core.NALTest#test[160], org.opennars.core.NALTest#test[7], org.opennars.core.NALTest#test[11], org.opennars.core.NALTest#test[23], org.opennars.core.NALTest#test[59], org.opennars.core.NALTest#test[35], org.opennars.core.NALTest#test[47], org.opennars.core.NALTest#test[91], org.opennars.core.NALTest#test[104], org.opennars.core.NALTest#test[179], org.opennars.core.NALTest#test[167], org.opennars.core.NALTest#test[155], org.opennars.core.NALTest#test[28], org.opennars.core.NALTest#test[16], org.opennars.core.NALTest#test[131], org.opennars.core.NALTest#test[143], org.opennars.core.NALTest#test[84], org.opennars.core.NALTest#test[96], org.opennars.core.NALTest#test[60], org.opennars.core.NALTest#test[72], org.opennars.core.NALTest#test[178], org.opennars.core.NALTest#test[166], org.opennars.core.NALTest#test[154], org.opennars.core.NALTest#test[17], org.opennars.core.NALTest#test[29], org.opennars.core.NALTest#test[97], org.opennars.core.NALTest#test[130], org.opennars.core.NALTest#test[142], org.opennars.core.NALTest#test[73], org.opennars.core.NALTest#test[85], org.opennars.core.NALTest#test[61], org.opennars.core.NALTest#test[189], org.opennars.core.NALTest#test[109], org.opennars.core.NALTest#test[177], org.opennars.core.NALTest#test[165], org.opennars.core.NALTest#test[153], org.opennars.core.NALTest#test[26], org.opennars.core.NALTest#test[38], org.opennars.core.NALTest#test[14], org.opennars.core.NALTest#test[141], org.opennars.core.NALTest#test[70], org.opennars.core.NALTest#test[82], org.opennars.core.NALTest#test[94], org.opennars.core.NALTest#test[108], org.opennars.core.NALTest#test[188], org.opennars.core.NALTest#test[176], org.opennars.core.NALTest#test[164], org.opennars.core.NALTest#test[152], org.opennars.core.NALTest#test[39], org.opennars.core.NALTest#test[15], org.opennars.core.NALTest#test[27], org.opennars.core.NALTest#test[140], org.opennars.core.NALTest#test[95], org.opennars.core.NALTest#test[71], org.opennars.core.NALTest#test[83]], failures=[FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.RuntimeException', failureDetail='invalid order: #1 = #1', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.NullPointerException', failureDetail='null', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}, FailureType{failureName='java.lang.NullPointerException', failureDetail='null', isError=true}, FailureType{failureName='java.lang.NullPointerException', failureDetail='null', isError=true}, FailureType{failureName='java.lang.IllegalStateException', failureDetail='Invalid input.', isError=true}], nbFailures=0, nbErrors=198}
status: NOPATCH
dateEnd: Sat May 05 09:12:03 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/opennars/opennars/375199664/src/main/java], projectClasspath='[Ljava.net.URL;@54e81b21', projectTests=[org.opennars.core.NALTest], complianceLevel=8, outputFolder=./workspace/opennars/opennars/375199664, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='org.opennars.core.VariableTest', failingMethods=[], erroringMethods=[org.opennars.core.VariableTest#testDepQueryVariableDistinct, org.opennars.core.VariableTest#testQueryVariableUnification], failures=[FailureType{failureName='java.lang.NullPointerException', failureDetail='null', isError=true}, FailureType{failureName='java.lang.NullPointerException', failureDetail='null', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat May 05 09:12:06 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/opennars/opennars/375199664/src/main/java], projectClasspath='[Ljava.net.URL;@646c0a67', projectTests=[org.opennars.core.VariableTest], complianceLevel=8, outputFolder=./workspace/opennars/opennars/375199664, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #2
location: FailureLocation{className='org.opennars.core.TestMultistepEdited', failingMethods=[], erroringMethods=[org.opennars.core.TestMultistepEdited#testMultistepEndState], failures=[FailureType{failureName='java.lang.IllegalStateException', failureDetail='Could not open specified file', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat May 05 09:12:09 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/opennars/opennars/375199664/src/main/java], projectClasspath='[Ljava.net.URL;@ab24484', projectTests=[org.opennars.core.TestMultistepEdited], complianceLevel=8, outputFolder=./workspace/opennars/opennars/375199664, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



