nopolinfo #0
location: FailureLocation{className='io.druid.query.groupby.GroupByQueryRunnerTest', failingMethods=[io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2SmallBuffer, runner=noRollupMMappedTestIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2, runner=noRollupMMappedTestIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2SmallDictionary, runner=mergedRealtimeIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2, runner=mMappedTestIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2SmallBuffer, runner=noRollupRtIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2SmallBuffer, runner=noRollupMMappedTestIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2SmallDictionary, runner=rtIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2SmallBuffer, runner=rtIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2, runner=noRollupMMappedTestIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2SmallDictionary, runner=noRollupRtIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2, runner=noRollupRtIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2SmallBuffer, runner=noRollupRtIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2, runner=rtIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2SmallBuffer, runner=mergedRealtimeIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2SmallDictionary, runner=noRollupMMappedTestIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2, runner=mergedRealtimeIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2, runner=noRollupRtIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2SmallDictionary, runner=rtIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2SmallBuffer, runner=mMappedTestIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2SmallDictionary, runner=mergedRealtimeIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2SmallBuffer, runner=mMappedTestIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2, runner=mMappedTestIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2, runner=mergedRealtimeIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2SmallBuffer, runner=mergedRealtimeIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2SmallDictionary, runner=noRollupRtIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2SmallDictionary, runner=mMappedTestIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2SmallDictionary, runner=noRollupMMappedTestIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2SmallBuffer, runner=rtIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config=v2, runner=rtIndex], io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config=v2SmallDictionary, runner=mMappedTestIndex]], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)
 at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)
 at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing "Grouping resources exhausted")
     but: exception with message a string containing "Grouping resources exhausted" message was "Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes."
Stacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.
 at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)
 at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)
 at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)
 at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)
 at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)
 at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)
 at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)
 at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)
 at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)
 at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)
 at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
 at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
 at org.junit.rules.RunRules.evaluate(RunRules.java:20)
 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.junit.runners.Suite.runChild(Suite.java:127)
 at org.junit.runners.Suite.runChild(Suite.java:26)
 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
 at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
 at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
 at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
', isError=false}], nbFailures=30, nbErrors=0}
status: NOPATCH
dateEnd: Thu Jan 25 21:09:59 CET 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/druid-io/druid/210761325/processing/src/main/java], projectClasspath='[Ljava.net.URL;@4b432e53', projectTests=[io.druid.query.groupby.GroupByQueryRunnerTest], complianceLevel=8, outputFolder=./, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



