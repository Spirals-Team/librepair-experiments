nopolinfo #0
location: FailureLocation{className='com.github.writethemfirst.approvals.ApprovalsFolderTest', failingMethods=[com.github.writethemfirst.approvals.ApprovalsFolderTest#shouldCreateAllReceivedFiles, com.github.writethemfirst.approvals.ApprovalsFolderTest#shouldCreateEmptyApprovedFiles, com.github.writethemfirst.approvals.ApprovalsFolderTest#shouldThrowWhenAFileIsDifferent, com.github.writethemfirst.approvals.ApprovalsFolderTest#shouldFireReporterOnEachMismatch, com.github.writethemfirst.approvals.ApprovalsFolderTest#shouldRemoveMatchedReceivedFiles], erroringMethods=[], failures=[FailureType{failureName='org.mockito.exceptions.verification.junit.ArgumentsAreDifferent', failureDetail='
Argument(s) are different! Wanted:
reporter.mismatch(
    src\test\resources\com\github\writethemfirst\approvals\ApprovalsFolderTest/shouldFireReporterOnEachMismatch.approved/sample.xml,
    src\test\resources\com\github\writethemfirst\approvals\ApprovalsFolderTest/shouldFireReporterOnEachMismatch.received/sample.xml
);
-> at com.github.writethemfirst.approvals.ApprovalsFolderTest.shouldFireReporterOnEachMismatch(ApprovalsFolderTest.java:96)
Actual invocation has different arguments:
reporter.mismatch(
    src/test/resources/com/github/writethemfirst/approvals/ApprovalsFolderTest/shouldFireReporterOnEachMismatch.approved/sample2.xml,
    src/test/resources/com/github/writethemfirst/approvals/ApprovalsFolderTest/shouldFireReporterOnEachMismatch.received/sample2.xml
);
-> at com.github.writethemfirst.approvals.Approvals.lambda$verifyAgainstMasterFolder$3(Approvals.java:193)
', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expecting path:
  <src\test\resources\com\github\writethemfirst\approvals\ApprovalsFolderTest/shouldRemoveMatchedReceivedFiles.received/sample.xml>
not to exist', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expecting code to raise a throwable.', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expecting path:
  <src\test\resources\com\github\writethemfirst\approvals\ApprovalsFolderTest/shouldCreateAllReceivedFiles.received/sample.xml>
to exist (symbolic links were followed).', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expecting path:
  <src\test\resources\com\github\writethemfirst\approvals\ApprovalsFolderTest/shouldCreateEmptyApprovedFiles.approved/sample.xml>
to exist (symbolic links were followed).', isError=false}], nbFailures=5, nbErrors=0}
status: NOPATCH
dateEnd: Thu Mar 15 22:19:13 CET 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/WriteThemFirst/approvals-java/354049555/src/main/java], projectClasspath='[Ljava.net.URL;@1f130eaf', projectTests=[com.github.writethemfirst.approvals.ApprovalsFolderTest], complianceLevel=8, outputFolder=./workspace/WriteThemFirst/approvals-java/354049555, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



