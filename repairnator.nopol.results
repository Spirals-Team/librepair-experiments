nopolinfo #0
location: FailureLocation{className='spoon.MavenLauncherTest', failingMethods=[spoon.MavenLauncherTest#spoonMavenLauncherTest, spoon.MavenLauncherTest#mavenLauncherTestMultiModulesAndVariables], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='Content of classpath: ', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='expected:<7> but was:<0>', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Sat Mar 31 01:01:36 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@33abde31', projectTests=[spoon.MavenLauncherTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='spoon.test.reference.TypeReferenceTest', failingMethods=[spoon.test.reference.TypeReferenceTest#testInvocationWithFieldAccessInNoClasspath], erroringMethods=[spoon.test.reference.TypeReferenceTest#testConstructorCallInNoClasspath, spoon.test.reference.TypeReferenceTest#testIgnoreEnclosingClassInActualTypes, spoon.test.reference.TypeReferenceTest#testSubTypeAnonymous, spoon.test.reference.TypeReferenceTest#testRecursiveTypeReferenceInGenericType, spoon.test.reference.TypeReferenceTest#testToStringEqualityBetweenTwoGenericTypeDifferent, spoon.test.reference.TypeReferenceTest#testTypeReferenceSpecifiedInClassDeclarationInNoClasspathWithGenerics, spoon.test.reference.TypeReferenceTest#loadReferencedClassFromClasspath, spoon.test.reference.TypeReferenceTest#testUnknownSuperClassWithSameNameInNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [122, 140] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [122, 140] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [2839, 2871] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [104, 117] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [76, 90] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Can't compile TestBot.java because SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=false}], nbFailures=1, nbErrors=8}
status: NOPATCH
dateEnd: Sat Mar 31 01:01:55 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@34ad750f', projectTests=[spoon.test.reference.TypeReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #2
location: FailureLocation{className='spoon.test.reference.TypeReferenceTest', failingMethods=[spoon.test.reference.TypeReferenceTest#testInvocationWithFieldAccessInNoClasspath], erroringMethods=[spoon.test.reference.TypeReferenceTest#testConstructorCallInNoClasspath, spoon.test.reference.TypeReferenceTest#testIgnoreEnclosingClassInActualTypes, spoon.test.reference.TypeReferenceTest#testSubTypeAnonymous, spoon.test.reference.TypeReferenceTest#testRecursiveTypeReferenceInGenericType, spoon.test.reference.TypeReferenceTest#testToStringEqualityBetweenTwoGenericTypeDifferent, spoon.test.reference.TypeReferenceTest#testTypeReferenceSpecifiedInClassDeclarationInNoClasspathWithGenerics, spoon.test.reference.TypeReferenceTest#loadReferencedClassFromClasspath, spoon.test.reference.TypeReferenceTest#testUnknownSuperClassWithSameNameInNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [122, 140] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [122, 140] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [2839, 2871] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [104, 117] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [76, 90] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Can't compile TestBot.java because SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=false}], nbFailures=1, nbErrors=8}
status: NOPATCH
dateEnd: Sat Mar 31 01:02:14 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@28c0942f', projectTests=[spoon.test.reference.TypeReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #3
location: FailureLocation{className='spoon.test.pkg.PackageTest', failingMethods=[spoon.test.pkg.PackageTest#testAddAnnotationToPackage], erroringMethods=[spoon.test.pkg.PackageTest#testPrintPackageInfoWhenNothingInPackage, spoon.test.pkg.PackageTest#testAnnotationInPackageInfoWhenTemplatesCompiled, spoon.test.pkg.PackageTest#testAnnotationOnPackage, spoon.test.pkg.PackageTest#testGetFQNInNoClassPath, spoon.test.pkg.PackageTest#testPackage], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Can't compile package-info.java because Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=false}], nbFailures=1, nbErrors=5}
status: NOPATCH
dateEnd: Sat Mar 31 01:02:30 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@4db00a8c', projectTests=[spoon.test.pkg.PackageTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #4
location: FailureLocation{className='spoon.test.pkg.PackageTest', failingMethods=[spoon.test.pkg.PackageTest#testAddAnnotationToPackage], erroringMethods=[spoon.test.pkg.PackageTest#testPrintPackageInfoWhenNothingInPackage, spoon.test.pkg.PackageTest#testAnnotationInPackageInfoWhenTemplatesCompiled, spoon.test.pkg.PackageTest#testAnnotationOnPackage, spoon.test.pkg.PackageTest#testGetFQNInNoClassPath, spoon.test.pkg.PackageTest#testPackage], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Can't compile package-info.java because Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=false}], nbFailures=1, nbErrors=5}
status: NOPATCH
dateEnd: Sat Mar 31 01:02:46 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@70c59221', projectTests=[spoon.test.pkg.PackageTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #5
location: FailureLocation{className='spoon.test.annotation.AnnotationTest', failingMethods=[spoon.test.annotation.AnnotationTest#testSpoonSpoonResult], erroringMethods=[spoon.test.annotation.AnnotationTest#testRepeatSameAnnotationOnPackage, spoon.test.annotation.AnnotationTest#testAnnotatedElementTypes, spoon.test.annotation.AnnotationTest#testAbstractAllAnnotationProcessorWithGlobalAnnotation, spoon.test.annotation.AnnotationTest#annotationOverrideFQNIsOK], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [547, 567] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Number of annotation for return type of method getPort should be 1 expected:<1> but was:<0>', isError=false}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.StringIndexOutOfBoundsException', failureDetail='String index out of range: -1', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=1, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 01:03:03 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@28e18015', projectTests=[spoon.test.annotation.AnnotationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #6
location: FailureLocation{className='spoon.test.annotation.AnnotationTest', failingMethods=[spoon.test.annotation.AnnotationTest#testSpoonSpoonResult], erroringMethods=[spoon.test.annotation.AnnotationTest#testRepeatSameAnnotationOnPackage, spoon.test.annotation.AnnotationTest#testAnnotatedElementTypes, spoon.test.annotation.AnnotationTest#testAbstractAllAnnotationProcessorWithGlobalAnnotation, spoon.test.annotation.AnnotationTest#annotationOverrideFQNIsOK], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [547, 567] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.AssertionError', failureDetail='Number of annotation for return type of method getPort should be 1 expected:<1> but was:<0>', isError=false}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.StringIndexOutOfBoundsException', failureDetail='String index out of range: -1', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=1, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 01:03:18 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@1aed6d96', projectTests=[spoon.test.annotation.AnnotationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #7
location: FailureLocation{className='spoon.test.prettyprinter.PrintChangesTest', failingMethods=[spoon.test.prettyprinter.PrintChangesTest#testPrintUnchaged], erroringMethods=[spoon.test.prettyprinter.PrintChangesTest#testPrintChanged], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...inter.testclasses;

[import java.util.ArrayList;
import java.util.List;

/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T /* let's confuse > it */ > implements List<T>,
 Cloneable
{
 
 
 /**/
 final
 //
 private String string = "a"
   + "b" + "c"+"d";
 
 //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2         , List<?>[][] ... twoDArrayOfLists)
 {/**/
  System.out.println("aaa"
    + "xyz");
 /*x*/}
 List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

//and what about this comment? ]> but was:<...inter.testclasses;

[
/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T /* let's confuse > it */ > implements List<T>,
 Cloneable
{
 
 
 /**/
 final
 //
 private String string = "a"
   + "b" + "c"+"d";
 
 //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2         , List<?>[][] ... twoDArrayOfLists)
 {/**/
  System.out.println("aaa"
    + "xyz");
 /*x*/}
 List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

]>', isError=false}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [375, 387] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=1, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:03:32 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@11e801b1', projectTests=[spoon.test.prettyprinter.PrintChangesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_ERRORING
----------



nopolinfo #8
location: FailureLocation{className='spoon.test.prettyprinter.PrintChangesTest', failingMethods=[spoon.test.prettyprinter.PrintChangesTest#testPrintUnchaged], erroringMethods=[spoon.test.prettyprinter.PrintChangesTest#testPrintChanged], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...inter.testclasses;

[import java.util.ArrayList;
import java.util.List;

/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T /* let's confuse > it */ > implements List<T>,
 Cloneable
{
 
 
 /**/
 final
 //
 private String string = "a"
   + "b" + "c"+"d";
 
 //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2         , List<?>[][] ... twoDArrayOfLists)
 {/**/
  System.out.println("aaa"
    + "xyz");
 /*x*/}
 List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

//and what about this comment? ]> but was:<...inter.testclasses;

[
/**
 * The content of this file 
 * 

 *   should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
 extends ArrayList<T /* let's confuse > it */ > implements List<T>,
 Cloneable
{
 
 
 /**/
 final
 //
 private String string = "a"
   + "b" + "c"+"d";
 
 //and spaces here are wanted too
 
 
 public <T, K> void andSomeOtherMethod(
   int param1,
   String param2         , List<?>[][] ... twoDArrayOfLists)
 {/**/
  System.out.println("aaa"
    + "xyz");
 /*x*/}
 List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

]>', isError=false}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [375, 387] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=1, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:03:48 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@665600ef', projectTests=[spoon.test.prettyprinter.PrintChangesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: IGNORE_FAILING
----------



nopolinfo #9
location: FailureLocation{className='spoon.test.filters.FilterTest', failingMethods=[], erroringMethods=[spoon.test.filters.FilterTest#testOverriddenMethodFromInterface, spoon.test.filters.FilterTest#testInvalidQueryStep, spoon.test.filters.FilterTest#testClassCastExceptionOnForEach, spoon.test.filters.FilterTest#testQueryWithOptionalNumberOfInputs, spoon.test.filters.FilterTest#testSubInheritanceHierarchyResolver, spoon.test.filters.FilterTest#testQueryStepScannWithConsumer, spoon.test.filters.FilterTest#testEarlyTerminatingQuery, spoon.test.filters.FilterTest#testgetTopDefinitions, spoon.test.filters.FilterTest#testQueryBuilderWithFilterChain, spoon.test.filters.FilterTest#testLineFilter, spoon.test.filters.FilterTest#testReflectionBasedTypeFilter, spoon.test.filters.FilterTest#testOverriddenMethodsFromSubClassOfAbstractClass, spoon.test.filters.FilterTest#testElementMapConsumableFunction, spoon.test.filters.FilterTest#testReuseOfBaseQuery, spoon.test.filters.FilterTest#testOverridingMethodFromInterface, spoon.test.filters.FilterTest#testOverridingMethodFromAbstractClass, spoon.test.filters.FilterTest#testQueryInQuery, spoon.test.filters.FilterTest#testFilterQueryStep, spoon.test.filters.FilterTest#testElementMapFunction, spoon.test.filters.FilterTest#testOverriddenMethodFromSubClassOfInterface, spoon.test.filters.FilterTest#testReuseOfQuery, spoon.test.filters.FilterTest#testFilterChildrenWithoutFilterQueryStep, spoon.test.filters.FilterTest#testOverridingMethodFromSubClassOfAbstractClass, spoon.test.filters.FilterTest#testCtScannerListener, spoon.test.filters.FilterTest#testParentFunction, spoon.test.filters.FilterTest#testInvalidQueryStepFailurePolicyIgnore, spoon.test.filters.FilterTest#testOverriddenMethodFromAbstractClass, spoon.test.filters.FilterTest#testFunctionQueryStep, spoon.test.filters.FilterTest#testOverridingMethodFromSubClassOfInterface, spoon.test.filters.FilterTest#testInvocationFilterWithExecutableInLibrary], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=30}
status: NOPATCH
dateEnd: Sat Mar 31 01:04:03 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@75784b92', projectTests=[spoon.test.filters.FilterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #10
location: FailureLocation{className='spoon.test.generics.GenericsTest', failingMethods=[], erroringMethods=[spoon.test.generics.GenericsTest#testInvocationGenerics, spoon.test.generics.GenericsTest#testClassTypingContextMethodSignature, spoon.test.generics.GenericsTest#testClassTypingContext, spoon.test.generics.GenericsTest#testGenericTypeReference, spoon.test.generics.GenericsTest#testConstructorCallGenerics, spoon.test.generics.GenericsTest#testWildcard, spoon.test.generics.GenericsTest#testCannotAdaptTypeOfNonTypeScope, spoon.test.generics.GenericsTest#testCtTypeReference_getSuperclass, spoon.test.generics.GenericsTest#testDiamondComplexGenericsRxJava, spoon.test.generics.GenericsTest#testModelBuildingTree, spoon.test.generics.GenericsTest#testBugComparableComparator, spoon.test.generics.GenericsTest#testisGeneric, spoon.test.generics.GenericsTest#testName, spoon.test.generics.GenericsTest#testGenericsInQualifiedNameInConstructorCall, spoon.test.generics.GenericsTest#testGenericMethodCallWithExtend, spoon.test.generics.GenericsTest#testMethodTypingContext, spoon.test.generics.GenericsTest#testIsGenericTypeEqual, spoon.test.generics.GenericsTest#testIsGenericsMethod, spoon.test.generics.GenericsTest#testMethodsWithGenericsWhoExtendsObject, spoon.test.generics.GenericsTest#testRecursiveTypeAdapting, spoon.test.generics.GenericsTest#testDeclarationOfTypeParameterReference, spoon.test.generics.GenericsTest#testGetDeclarationOfTypeParameterReference, spoon.test.generics.GenericsTest#testTypeAdapted, spoon.test.generics.GenericsTest#testMethodTypingContextAdaptMethod, spoon.test.generics.GenericsTest#testBugCommonCollection, spoon.test.generics.GenericsTest#testNewClassGenerics, spoon.test.generics.GenericsTest#testInstanceOfMapEntryGeneric], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [140, 149] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [615, 633] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [162, 175] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [92, 111] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [141, 162] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [193, 206] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [891, 901] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [122, 156] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [140, 163] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1806, 1825] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [286, 303] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=27}
status: NOPATCH
dateEnd: Sat Mar 31 01:04:20 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@255c265d', projectTests=[spoon.test.generics.GenericsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #11
location: FailureLocation{className='spoon.test.lambda.LambdaTest', failingMethods=[], erroringMethods=[spoon.test.lambda.LambdaTest#testLambdaMethod, spoon.test.lambda.LambdaTest#testFieldAccessInLambdaNoClassPathExternal1Example, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithParameterTyped, spoon.test.lambda.LambdaTest#testLambdaExpressionWithStatementBodyAndWithoutParameters, spoon.test.lambda.LambdaTest#testEqualsLambdaParameterRef, spoon.test.lambda.LambdaTest#testGetOverriddenMethodWithFunction, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithMultiParametersTyped, spoon.test.lambda.LambdaTest#testLambdaFilter, spoon.test.lambda.LambdaTest#testTypeParameterWithImplicitArrayType, spoon.test.lambda.LambdaTest#testTypeParameterOfLambdaWithoutType2, spoon.test.lambda.LambdaTest#testGetDeclarationOnTypeParameterFromLambda, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithoutTypeForParameter, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithoutParameter, spoon.test.lambda.LambdaTest#testFieldAccessInLambdaNoClassPath, spoon.test.lambda.LambdaTest#testLambdaExpressionInIfConditional, spoon.test.lambda.LambdaTest#testBuildExecutableReferenceFromLambda, spoon.test.lambda.LambdaTest#testCompileLambdaGeneratedBySpoon, spoon.test.lambda.LambdaTest#testTypeAccessInLambdaNoClassPath, spoon.test.lambda.LambdaTest#testLambdaWithPrimitiveParameter, spoon.test.lambda.LambdaTest#testTypeParameterOfLambdaWithoutType, spoon.test.lambda.LambdaTest#testLambdaExpressionWithStatementBodyAndWithParameter, spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithMultiParameters], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [492, 517] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=22}
status: NOPATCH
dateEnd: Sat Mar 31 01:04:37 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@3d474113', projectTests=[spoon.test.lambda.LambdaTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #12
location: FailureLocation{className='spoon.test.targeted.TargetedExpressionTest', failingMethods=[], erroringMethods=[spoon.test.targeted.TargetedExpressionTest#testStaticTargetsOfInv, spoon.test.targeted.TargetedExpressionTest#testStaticTargetsOfFieldAccessNoClasspath, spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccessInInnerClass, spoon.test.targeted.TargetedExpressionTest#testClassDeclaredInALambda, spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccess, spoon.test.targeted.TargetedExpressionTest#testNotTargetedExpression, spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldInAnonymousClass, spoon.test.targeted.TargetedExpressionTest#testTargetOfFieldAccess, spoon.test.targeted.TargetedExpressionTest#testInitializeFieldAccessInNoclasspathMode, spoon.test.targeted.TargetedExpressionTest#testTargetsOfInv, spoon.test.targeted.TargetedExpressionTest#testStaticTargetsOfInvNoClasspath, spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInInnerClass, spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInAnonymousClass, spoon.test.targeted.TargetedExpressionTest#testTargetsOfStaticFieldAccess], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [925, 950] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=14}
status: NOPATCH
dateEnd: Sat Mar 31 01:04:51 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@497abf91', projectTests=[spoon.test.targeted.TargetedExpressionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #13
location: FailureLocation{className='spoon.test.delete.DeleteTest', failingMethods=[], erroringMethods=[spoon.test.delete.DeleteTest#testDeleteMethod, spoon.test.delete.DeleteTest#testDeleteConditionInACondition, spoon.test.delete.DeleteTest#testDeleteParameterOfMethod, spoon.test.delete.DeleteTest#testDeleteAStatementInConstructor, spoon.test.delete.DeleteTest#testDeleteChainOfAssignment, spoon.test.delete.DeleteTest#testDeleteAStatementInMethod, spoon.test.delete.DeleteTest#testDeleteAStatementInAnonymousExecutable, spoon.test.delete.DeleteTest#testDeleteAnnotationOnAClass, spoon.test.delete.DeleteTest#testDeleteACaseOfASwitch, spoon.test.delete.DeleteTest#testDeleteStatementInCase, spoon.test.delete.DeleteTest#testDeleteAStatementInStaticAnonymousExecutable, spoon.test.delete.DeleteTest#testDeleteAClassTopLevel, spoon.test.delete.DeleteTest#testDeleteBodyOfAMethod, spoon.test.delete.DeleteTest#testDeleteReturn], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=14}
status: NOPATCH
dateEnd: Sat Mar 31 01:05:05 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@4bd8adc8', projectTests=[spoon.test.delete.DeleteTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #14
location: FailureLocation{className='spoon.test.methodreference.MethodReferenceTest', failingMethods=[], erroringMethods=[spoon.test.methodreference.MethodReferenceTest#testReferenceToAClassParametrizedConstructor, spoon.test.methodreference.MethodReferenceTest#testNoClasspathSuperExecutable, spoon.test.methodreference.MethodReferenceTest#testNoClasspathExecutableReferenceExpression, spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfMultiParticularObject, spoon.test.methodreference.MethodReferenceTest#testGetGenericMethodFromReference, spoon.test.methodreference.MethodReferenceTest#testReferenceBuilderWithComplexGenerics, spoon.test.methodreference.MethodReferenceTest#testCompileMethodReferenceGeneratedBySpoon, spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfAParticularObject, spoon.test.methodreference.MethodReferenceTest#testReferenceToAJavaUtilClassConstructor, spoon.test.methodreference.MethodReferenceTest#testReferenceToAStaticMethod, spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfAnArbitraryObjectOfAParticularType, spoon.test.methodreference.MethodReferenceTest#testReferenceToAConstructor, spoon.test.methodreference.MethodReferenceTest#testGetGenericExecutableReference], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [260, 284] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=13}
status: NOPATCH
dateEnd: Sat Mar 31 01:05:19 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@6b3863f3', projectTests=[spoon.test.methodreference.MethodReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #15
location: FailureLocation{className='spoon.test.comment.CommentTest', failingMethods=[], erroringMethods=[spoon.test.comment.CommentTest#testCommentsInComment1And2, spoon.test.comment.CommentTest#testCombinedPackageInfoComment, spoon.test.comment.CommentTest#testCodeFactory, spoon.test.comment.CommentTest#testWildComments, spoon.test.comment.CommentTest#testJavaDocEmptyCommentAndTag, spoon.test.comment.CommentTest#testDocumentationContract, spoon.test.comment.CommentTest#testInsertNewComment, spoon.test.comment.CommentTest#testJavadocShortAndLongComment, spoon.test.comment.CommentTest#testBlockComment, spoon.test.comment.CommentTest#testInLineComment, spoon.test.comment.CommentTest#testJavaDocCommentOnUnix, spoon.test.comment.CommentTest#testCoreFactory, spoon.test.comment.CommentTest#testRemoveComment], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [968, 968] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=13}
status: NOPATCH
dateEnd: Sat Mar 31 01:05:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@4a45a672', projectTests=[spoon.test.comment.CommentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #16
location: FailureLocation{className='spoon.test.fieldaccesses.FieldAccessTest', failingMethods=[], erroringMethods=[spoon.test.fieldaccesses.FieldAccessTest#testTargetedAccessPosition, spoon.test.fieldaccesses.FieldAccessTest#testTypeDeclaredInAnonymousClass, spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessNoClasspath, spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessInAnonymousClass, spoon.test.fieldaccesses.FieldAccessTest#testFieldWriteWithPlusEqualsOperation, spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessAutoExplicit, spoon.test.fieldaccesses.FieldAccessTest#testGetReference, spoon.test.fieldaccesses.FieldAccessTest#testModelBuildingFieldAccesses, spoon.test.fieldaccesses.FieldAccessTest#testBUG20160112, spoon.test.fieldaccesses.FieldAccessTest#testIncrementationOnAVarIsAUnaryOperator, spoon.test.fieldaccesses.FieldAccessTest#testTypeOfFieldAccess], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=11}
status: NOPATCH
dateEnd: Sat Mar 31 01:05:49 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@63dab968', projectTests=[spoon.test.fieldaccesses.FieldAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #17
location: FailureLocation{className='spoon.test.parent.ParentTest', failingMethods=[], erroringMethods=[spoon.test.parent.ParentTest#testParentSet, spoon.test.parent.ParentTest#testParentPackage, spoon.test.parent.ParentTest#testParent, spoon.test.parent.ParentTest#testParentOfGenericInTypeReference, spoon.test.parent.ParentTest#testParentOfCtPackageReference, spoon.test.parent.ParentTest#testParentOfPrimitiveReference, spoon.test.parent.ParentTest#testHasParent, spoon.test.parent.ParentTest#testGetParentWithFilter, spoon.test.parent.ParentTest#testParentOfCtVariableReference, spoon.test.parent.ParentTest#testParentOfCtExecutableReference], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=10}
status: NOPATCH
dateEnd: Sat Mar 31 01:06:07 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@25fcaf8f', projectTests=[spoon.test.parent.ParentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #18
location: FailureLocation{className='spoon.test.intercession.insertBefore.InsertMethodsTest', failingMethods=[], erroringMethods=[spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBeforeWithBrace, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfterWithoutBrace, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBefore, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfterWithBrace, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfterSwitchCase, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBeforeWithoutBrace, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfter, spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBeforeSwitchCase, spoon.test.intercession.insertBefore.InsertMethodsTest#insertBeforeAndUpdateParent], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=9}
status: NOPATCH
dateEnd: Sat Mar 31 01:06:23 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@34dbd42', projectTests=[spoon.test.intercession.insertBefore.InsertMethodsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #19
location: FailureLocation{className='spoon.test.parent.NullParentTest', failingMethods=[], erroringMethods=[spoon.test.parent.NullParentTest#testAssertNullExpression, spoon.test.parent.NullParentTest#testIfNullBranches, spoon.test.parent.NullParentTest#testFieldNullDefaultExpression, spoon.test.parent.NullParentTest#testReturnNullExpression, spoon.test.parent.NullParentTest#testTargetedAccessNullTarget, spoon.test.parent.NullParentTest#testForLoopNullChildren, spoon.test.parent.NullParentTest#testLocalVariableNullDefaultExpression, spoon.test.parent.NullParentTest#testTargetedExpressionNullTarget], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Sat Mar 31 01:06:37 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@155c4252', projectTests=[spoon.test.parent.NullParentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #20
location: FailureLocation{className='spoon.test.query_function.VariableReferencesTest', failingMethods=[], erroringMethods=[spoon.test.query_function.VariableReferencesTest#testPotentialVariableAccessFromStaticMethod, spoon.test.query_function.VariableReferencesTest#testVariableReferenceFunction, spoon.test.query_function.VariableReferencesTest#testCheckModelConsistency, spoon.test.query_function.VariableReferencesTest#testLocalVariableReferenceDeclarationFunction, spoon.test.query_function.VariableReferencesTest#testCatchVariableReferenceFunction, spoon.test.query_function.VariableReferencesTest#testParameterReferenceFunction, spoon.test.query_function.VariableReferencesTest#testVariableScopeFunction, spoon.test.query_function.VariableReferencesTest#testLocalVariableReferenceFunction], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [725, 725] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Sat Mar 31 01:06:51 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@2393740b', projectTests=[spoon.test.query_function.VariableReferencesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #21
location: FailureLocation{className='spoon.test.architecture.SpoonArchitectureEnforcerTest', failingMethods=[], erroringMethods=[spoon.test.architecture.SpoonArchitectureEnforcerTest#metamodelPackageRule, spoon.test.architecture.SpoonArchitectureEnforcerTest#testSpecPackage, spoon.test.architecture.SpoonArchitectureEnforcerTest#testSrcMainJava, spoon.test.architecture.SpoonArchitectureEnforcerTest#testStaticClasses, spoon.test.architecture.SpoonArchitectureEnforcerTest#statelessFactory, spoon.test.architecture.SpoonArchitectureEnforcerTest#testInterfacesAreCtScannable, spoon.test.architecture.SpoonArchitectureEnforcerTest#testFactorySubFactory, spoon.test.architecture.SpoonArchitectureEnforcerTest#testGoodTestClassNames], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1081, 1102] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [837, 861] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [837, 861] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [6140, 6159] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [6140, 6159] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [837, 861] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Sat Mar 31 01:07:05 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@4f8f6202', projectTests=[spoon.test.architecture.SpoonArchitectureEnforcerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #22
location: FailureLocation{className='spoon.test.imports.ImportTest', failingMethods=[], erroringMethods=[spoon.test.imports.ImportTest#testCanAccess, spoon.test.imports.ImportTest#testImportStaticAndFieldAccess, spoon.test.imports.ImportTest#testSpoonWithImports, spoon.test.imports.ImportTest#testSortingOfImports, spoon.test.imports.ImportTest#testAccessType, spoon.test.imports.ImportTest#testImportStaticAndFieldAccessWithImport, spoon.test.imports.ImportTest#testAccessToNestedClass], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=7}
status: NOPATCH
dateEnd: Sat Mar 31 01:07:19 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@40eec7cc', projectTests=[spoon.test.imports.ImportTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #23
location: FailureLocation{className='spoon.test.constructorcallnewclass.NewClassTest', failingMethods=[], erroringMethods=[spoon.test.constructorcallnewclass.NewClassTest#testMoreThan9NewClass, spoon.test.constructorcallnewclass.NewClassTest#testNewClassWithObjectClass, spoon.test.constructorcallnewclass.NewClassTest#testNewClassInterfaceWithParameters, spoon.test.constructorcallnewclass.NewClassTest#testNewClassInEnumeration, spoon.test.constructorcallnewclass.NewClassTest#testCtNewClassInNoClasspath, spoon.test.constructorcallnewclass.NewClassTest#testNewClassWithInterface, spoon.test.constructorcallnewclass.NewClassTest#testNewClassWithInterfaceGeneric], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=7}
status: NOPATCH
dateEnd: Sat Mar 31 01:07:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@719e93c9', projectTests=[spoon.test.constructorcallnewclass.NewClassTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #24
location: FailureLocation{className='spoon.test.type.TypeTest', failingMethods=[], erroringMethods=[spoon.test.type.TypeTest#testIntersectionTypeOnTopLevelType, spoon.test.type.TypeTest#testTypeAccessForTypeAccessInInstanceOf, spoon.test.type.TypeTest#testTypeReferenceInGenericsAndCasts, spoon.test.type.TypeTest#test, spoon.test.type.TypeTest#testTypeAccessForDotClass, spoon.test.type.TypeTest#testTypeAccessOfArrayObjectInFullyQualifiedName, spoon.test.type.TypeTest#testIntersectionTypeReferenceInGenericsAndCasts], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [56, 89] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [56, 89] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [56, 89] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [56, 89] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [56, 89] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [56, 89] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=7}
status: NOPATCH
dateEnd: Sat Mar 31 01:07:47 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@62981e96', projectTests=[spoon.test.type.TypeTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #25
location: FailureLocation{className='spoon.test.api.APITest', failingMethods=[], erroringMethods=[spoon.test.api.APITest#testPrintNotAllSourcesWithFilter, spoon.test.api.APITest#testSetterInNodes, spoon.test.api.APITest#testOneLinerIntro, spoon.test.api.APITest#testPrintNotAllSourcesInCommandLine, spoon.test.api.APITest#testPrintNotAllSourcesWithNames, spoon.test.api.APITest#testOutputDestinationHandlerWithCUFactory], failures=[FailureType{failureName='java.lang.RuntimeException', failureDetail='java.io.FileNotFoundException: virtual_file (No such file or directory)', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1328, 1352] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [837, 861] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Invalid source position', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1328, 1352] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sat Mar 31 01:08:03 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@60a05e41', projectTests=[spoon.test.api.APITest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #26
location: FailureLocation{className='spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest', failingMethods=[], erroringMethods=[spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousStaticFieldAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousStaticField, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousMemberFieldAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testChildOfGenericsWithAmbiguousStaticFieldAutoImport, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testChildOfGenericsWithAmbiguousStaticField, spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousMemberField], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [167, 190] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [157, 180] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [167, 190] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [160, 183] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [157, 180] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [160, 183] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sat Mar 31 01:08:19 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@77c800e9', projectTests=[spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #27
location: FailureLocation{className='spoon.test.constructorcallnewclass.ConstructorCallTest', failingMethods=[], erroringMethods=[spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallWithGenericArray, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallObjectWithoutParameters, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallStringWithParameters, spoon.test.constructorcallnewclass.ConstructorCallTest#testCoreConstructorCall, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallStringWithoutParameters, spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallObjectWithParameters], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [333, 333] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sat Mar 31 01:08:33 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@4947c00c', projectTests=[spoon.test.constructorcallnewclass.ConstructorCallTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #28
location: FailureLocation{className='spoon.test.position.PositionTest', failingMethods=[], erroringMethods=[spoon.test.position.PositionTest#testPositionInterface, spoon.test.position.PositionTest#testPositionClass, spoon.test.position.PositionTest#testPositionClassWithComments, spoon.test.position.PositionTest#testPositionField, spoon.test.position.PositionTest#getPositionOfImplicitBlock, spoon.test.position.PositionTest#testPositionAnnotation], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sat Mar 31 01:08:47 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@6e099e42', projectTests=[spoon.test.position.PositionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #29
location: FailureLocation{className='spoon.test.constructor.ConstructorTest', failingMethods=[], erroringMethods=[spoon.test.constructor.ConstructorTest#testTransformationOnConstructorWithInsertBegin, spoon.test.constructor.ConstructorTest#testTypeAnnotationWithConstructorsOnFormalType, spoon.test.constructor.ConstructorTest#testConstructorCallFactory, spoon.test.constructor.ConstructorTest#testTransformationOnConstructorWithInsertBefore, spoon.test.constructor.ConstructorTest#callParamConstructor, spoon.test.constructor.ConstructorTest#testTypeAnnotationOnExceptionDeclaredInConstructors], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sat Mar 31 01:09:01 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@371f6503', projectTests=[spoon.test.constructor.ConstructorTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #30
location: FailureLocation{className='spoon.test.prettyprinter.PrinterTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.PrinterTest#testPrinterTokenListener, spoon.test.prettyprinter.PrinterTest#testFQNModeWriteFQNConstructorInCtVisitor, spoon.test.prettyprinter.PrinterTest#testJDTBatchCompilerCanBeBuild, spoon.test.prettyprinter.PrinterTest#testRuleCanBeBuild, spoon.test.prettyprinter.PrinterTest#testPrettyPrinter], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [0, 0] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Sat Mar 31 01:09:19 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@6889ffe5', projectTests=[spoon.test.prettyprinter.PrinterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #31
location: FailureLocation{className='spoon.test.refactoring.MethodsRefactoringTest', failingMethods=[], erroringMethods=[spoon.test.refactoring.MethodsRefactoringTest#testExecutableReferenceFilter, spoon.test.refactoring.MethodsRefactoringTest#testSubInheritanceHierarchyFunction, spoon.test.refactoring.MethodsRefactoringTest#testAllMethodsSameSignatureFunction, spoon.test.refactoring.MethodsRefactoringTest#testCtParameterRemoveRefactoringValidationCheck, spoon.test.refactoring.MethodsRefactoringTest#testCtParameterRemoveRefactoring], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Sat Mar 31 01:09:33 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@3a1e186b', projectTests=[spoon.test.refactoring.MethodsRefactoringTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #32
location: FailureLocation{className='spoon.test.prettyprinter.DefaultPrettyPrinterTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAClassWithImports, spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAMethodWithGeneric, spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAMethodWithImports, spoon.test.prettyprinter.DefaultPrettyPrinterTest#testIssue1501, spoon.test.prettyprinter.DefaultPrettyPrinterTest#printClassCreatedWithSpoon], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Invalid source position', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Sat Mar 31 01:09:47 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@2d6b3f25', projectTests=[spoon.test.prettyprinter.DefaultPrettyPrinterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #33
location: FailureLocation{className='spoon.test.ctType.CtTypeTest', failingMethods=[], erroringMethods=[spoon.test.ctType.CtTypeTest#testIsSubTypeOfonTypeParameters, spoon.test.ctType.CtTypeTest#testHasMethodInSuperClass, spoon.test.ctType.CtTypeTest#testIsSubTypeOf, spoon.test.ctType.CtTypeTest#testIsSubTypeOfonTypeReferences, spoon.test.ctType.CtTypeTest#testHasMethodInDefaultMethod], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [788, 805] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [347, 360] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [347, 360] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [347, 360] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [347, 360] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=5}
status: NOPATCH
dateEnd: Sat Mar 31 01:10:01 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@6a8be0c6', projectTests=[spoon.test.ctType.CtTypeTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #34
location: FailureLocation{className='spoon.test.template.TemplateTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateTest#testTemplateMatcher, spoon.test.template.TemplateTest#substituteTypeAccessReference, spoon.test.template.TemplateTest#testSubstitutionInsertAllNtoN, spoon.test.template.TemplateTest#testCheckBoundTemplate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='spoon.SpoonException: Invalid source position', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [437, 461] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [372, 400] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 01:10:16 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@7bab8bd1', projectTests=[spoon.test.template.TemplateTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #35
location: FailureLocation{className='spoon.test.condition.ConditionalTest', failingMethods=[], erroringMethods=[spoon.test.condition.ConditionalTest#testNoBlockInConditionAndLoop, spoon.test.condition.ConditionalTest#testConditional, spoon.test.condition.ConditionalTest#testBlockInConditionAndLoop, spoon.test.condition.ConditionalTest#testConditionalWithAssignment], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 01:10:31 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@61a9e4fe', projectTests=[spoon.test.condition.ConditionalTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #36
location: FailureLocation{className='spoon.test.reference.VariableAccessTest', failingMethods=[], erroringMethods=[spoon.test.reference.VariableAccessTest#testParameterReferenceInConstructorNoClasspath, spoon.test.reference.VariableAccessTest#testVariableAccessDeclarationInAnonymousClass, spoon.test.reference.VariableAccessTest#testReferenceToLocalVariableDeclaredInLoop, spoon.test.reference.VariableAccessTest#testDeclarationOfVariableReference], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 01:10:44 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@3e480680', projectTests=[spoon.test.reference.VariableAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #37
location: FailureLocation{className='spoon.processing.CtGenerationTest', failingMethods=[], erroringMethods=[spoon.processing.CtGenerationTest#testGenerateReplacementVisitor, spoon.processing.CtGenerationTest#testGenerateCloneVisitor, spoon.processing.CtGenerationTest#testGenerateRoleHandler, spoon.processing.CtGenerationTest#testGenerateCtBiScanner], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 01:10:57 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@1ed8a05c', projectTests=[spoon.processing.CtGenerationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #38
location: FailureLocation{className='spoon.testing.CtElementAssertTest', failingMethods=[], erroringMethods=[spoon.testing.CtElementAssertTest#testEqualityBetweenACtElementAndAString, spoon.testing.CtElementAssertTest#testEqualityBetweenTwoCtElementWithTheSameSignatureButNotTheSameContent, spoon.testing.CtElementAssertTest#testEqualityBetweenTwoDifferentCtElement, spoon.testing.CtElementAssertTest#testEqualityBetweenTwoCtElement], failures=[FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.AssertionError> but was<spoon.SpoonException>', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [2038, 2057] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.Exception', failureDetail='Unexpected exception, expected<java.lang.AssertionError> but was<spoon.SpoonException>', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [2038, 2057] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 01:11:13 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@1fb89e2a', projectTests=[spoon.testing.CtElementAssertTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #39
location: FailureLocation{className='spoon.test.reference.ExecutableReferenceTest', failingMethods=[], erroringMethods=[spoon.test.reference.ExecutableReferenceTest#testSuperClassInGetAllExecutables, spoon.test.reference.ExecutableReferenceTest#testLambdaNoClasspath, spoon.test.reference.ExecutableReferenceTest#testHashcodeWorksWithReference, spoon.test.reference.ExecutableReferenceTest#testSpecifyGetAllExecutablesMethod], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [5229, 5246] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [104, 117] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [104, 117] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [104, 117] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Sat Mar 31 01:11:28 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@23cc68f0', projectTests=[spoon.test.reference.ExecutableReferenceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #40
location: FailureLocation{className='spoon.test.trycatch.TryCatchTest', failingMethods=[], erroringMethods=[spoon.test.trycatch.TryCatchTest#testCatchWithExplicitFinalVariable, spoon.test.trycatch.TryCatchTest#testMultiTryCatchWithCustomExceptions, spoon.test.trycatch.TryCatchTest#testCompileMultiTryCatchWithCustomExceptions], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Sat Mar 31 01:11:42 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@6e18daa4', projectTests=[spoon.test.trycatch.TryCatchTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #41
location: FailureLocation{className='spoon.test.ctClass.CtClassTest', failingMethods=[], erroringMethods=[spoon.test.ctClass.CtClassTest#testSpoonShouldInferImplicitPackageInNoClasspath, spoon.test.ctClass.CtClassTest#testNoClasspathWithSuperClassOfAClassInAnInterface, spoon.test.ctClass.CtClassTest#testParentOfTheEnclosingClassOfStaticClass], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Sat Mar 31 01:11:57 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@3458d92a', projectTests=[spoon.test.ctClass.CtClassTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #42
location: FailureLocation{className='spoon.test.prettyprinter.LinesTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.LinesTest#testIdenticalPrettyPrinter, spoon.test.prettyprinter.LinesTest#testCompileWhenUsingLinesArgument, spoon.test.prettyprinter.LinesTest#testPrettyPrinterWithLines], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Sat Mar 31 01:12:11 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@1e3b3196', projectTests=[spoon.test.prettyprinter.LinesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #43
location: FailureLocation{className='spoon.test.api.MetamodelTest', failingMethods=[], erroringMethods=[spoon.test.api.MetamodelTest#testGetterSetterFroRole, spoon.test.api.MetamodelTest#testRoleOnField, spoon.test.api.MetamodelTest#testGetAllMetamodelInterfacess], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1081, 1102] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Sat Mar 31 01:12:24 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@367da0a1', projectTests=[spoon.test.api.MetamodelTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #44
location: FailureLocation{className='spoon.reflect.visitor.CtScannerTest', failingMethods=[], erroringMethods=[spoon.reflect.visitor.CtScannerTest#testScannerCallsAllProperties, spoon.reflect.visitor.CtScannerTest#testScan, spoon.reflect.visitor.CtScannerTest#testScannerContract], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Sat Mar 31 01:12:39 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@21180461', projectTests=[spoon.reflect.visitor.CtScannerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #45
location: FailureLocation{className='spoon.test.visibility.VisibilityTest', failingMethods=[], erroringMethods=[spoon.test.visibility.VisibilityTest#testVisibilityOfClassesNamedByClassesInJavaLangPackage, spoon.test.visibility.VisibilityTest#testInvocationVisibilityInFieldDeclaration, spoon.test.visibility.VisibilityTest#testName], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Sat Mar 31 01:12:53 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@4a259e1a', projectTests=[spoon.test.visibility.VisibilityTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #46
location: FailureLocation{className='spoon.reflect.ast.CloneTest', failingMethods=[], erroringMethods=[spoon.reflect.ast.CloneTest#testCloneListener, spoon.reflect.ast.CloneTest#testCloneMethodsDeclaredInAST, spoon.reflect.ast.CloneTest#testCopyType], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=3}
status: NOPATCH
dateEnd: Sat Mar 31 01:13:06 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@5a37cb8a', projectTests=[spoon.reflect.ast.CloneTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #47
location: FailureLocation{className='spoon.test.annotation.AnnotationValuesTest', failingMethods=[], erroringMethods=[spoon.test.annotation.AnnotationValuesTest#testValuesOnJava7Annotation, spoon.test.annotation.AnnotationValuesTest#testValuesOnJava8Annotation], failures=[FailureType{failureName='java.lang.StringIndexOutOfBoundsException', failureDetail='String index out of range: -1', isError=true}, FailureType{failureName='java.lang.StringIndexOutOfBoundsException', failureDetail='String index out of range: -1', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 01:13:20 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@7d15e3b7', projectTests=[spoon.test.annotation.AnnotationValuesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #48
location: FailureLocation{className='spoon.test.template.TemplateReplaceReturnTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateReplaceReturnTest#testNoReturnReplaceTemplate, spoon.test.template.TemplateReplaceReturnTest#testReturnReplaceTemplate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Invalid source position', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Invalid source position', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 01:13:34 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@62921e32', projectTests=[spoon.test.template.TemplateReplaceReturnTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #49
location: FailureLocation{className='spoon.test.ctType.CtTypeParameterTest', failingMethods=[], erroringMethods=[spoon.test.ctType.CtTypeParameterTest#testTypeSame, spoon.test.ctType.CtTypeParameterTest#testTypeErasure], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [162, 175] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [162, 175] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 01:13:47 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@4ef06f87', projectTests=[spoon.test.ctType.CtTypeParameterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #50
location: FailureLocation{className='spoon.reflect.ast.AstCheckerTest', failingMethods=[], erroringMethods=[spoon.reflect.ast.AstCheckerTest#testAvoidSetCollectionSavedOnAST, spoon.reflect.ast.AstCheckerTest#testPushToStackChanges], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [837, 861] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1282, 1302] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 01:14:02 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@46a6bde9', projectTests=[spoon.reflect.ast.AstCheckerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #51
location: FailureLocation{className='spoon.test.processing.ProcessingTest', failingMethods=[], erroringMethods=[spoon.test.processing.ProcessingTest#testCallProcessorWithMultipleTypes, spoon.test.processing.ProcessingTest#testProcessorWithGenericType], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 01:14:17 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@21759d38', projectTests=[spoon.test.processing.ProcessingTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #52
location: FailureLocation{className='spoon.test.method_overriding.MethodOverriddingTest', failingMethods=[], erroringMethods=[spoon.test.method_overriding.MethodOverriddingTest#testMethodOverride, spoon.test.method_overriding.MethodOverriddingTest#testMethodOverrideByReference], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [164, 174] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [164, 174] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 01:14:32 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@685fe490', projectTests=[spoon.test.method_overriding.MethodOverriddingTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #53
location: FailureLocation{className='spoon.test.secondaryclasses.ClassesTest', failingMethods=[], erroringMethods=[spoon.test.secondaryclasses.ClassesTest#testInnerClassContruction, spoon.test.secondaryclasses.ClassesTest#testAnonymousClassInStaticField], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [162, 178] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 01:14:46 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@57b269d6', projectTests=[spoon.test.secondaryclasses.ClassesTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #54
location: FailureLocation{className='spoon.processing.ProcessingTest', failingMethods=[], erroringMethods=[spoon.processing.ProcessingTest#testSpoonTagger, spoon.processing.ProcessingTest#testInterruptAProcessor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [10519, 10532] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='spoon.SpoonException: Invalid source position', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 01:15:00 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@2f445e64', projectTests=[spoon.processing.ProcessingTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #55
location: FailureLocation{className='spoon.test.compilation.CompilationTest', failingMethods=[], erroringMethods=[spoon.test.compilation.CompilationTest#testFilterResourcesDir, spoon.test.compilation.CompilationTest#testPrecompile], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [266, 290] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}, FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [104, 117] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sat Mar 31 01:15:14 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@3e243315', projectTests=[spoon.test.compilation.CompilationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #56
location: FailureLocation{className='spoon.test.initializers.InitializerTest', failingMethods=[], erroringMethods=[spoon.test.initializers.InitializerTest#testModelBuildingInitializer], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:15:28 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@17926fc6', projectTests=[spoon.test.initializers.InitializerTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #57
location: FailureLocation{className='spoon.test.parent.ParentContractTest', failingMethods=[], erroringMethods=[spoon.test.parent.ParentContractTest#initializationError], failures=[FailureType{failureName='java.lang.ExceptionInInitializerError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:15:43 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@22809fa9', projectTests=[spoon.test.parent.ParentContractTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #58
location: FailureLocation{className='spoon.test.loop.LoopTest', failingMethods=[], erroringMethods=[spoon.test.loop.LoopTest#testForeachShouldHaveAlwaysABlockInItsBody], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [981, 1001] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:15:58 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@349062ba', projectTests=[spoon.test.loop.LoopTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #59
location: FailureLocation{className='spoon.test.annotation.AnnotationLoopTest', failingMethods=[], erroringMethods=[spoon.test.annotation.AnnotationLoopTest#testAnnotationDeclaredInForInit], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [95, 145] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:16:13 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@40d9bbe', projectTests=[spoon.test.annotation.AnnotationLoopTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #60
location: FailureLocation{className='spoon.test.invocations.InvocationTest', failingMethods=[], erroringMethods=[spoon.test.invocations.InvocationTest#testIssue1753], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [5226, 5238] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:16:27 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@3c41a11f', projectTests=[spoon.test.invocations.InvocationTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #61
location: FailureLocation{className='spoon.test.support.ResourceTest', failingMethods=[], erroringMethods=[spoon.test.support.ResourceTest#testFilteringFolder], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:16:44 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@cafdfa4', projectTests=[spoon.test.support.ResourceTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #62
location: FailureLocation{className='spoon.test.jar.JarTest', failingMethods=[], erroringMethods=[spoon.test.jar.JarTest#testJar], failures=[FailureType{failureName='java.lang.RuntimeException', failureDetail='java.io.FileNotFoundException: spoon/test/strings/Main.java (No such file or directory)', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:16:59 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@147f8b36', projectTests=[spoon.test.jar.JarTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #63
location: FailureLocation{className='spoon.reflect.visitor.CtVisitorTest', failingMethods=[], erroringMethods=[spoon.reflect.visitor.CtVisitorTest#testMethodsInVisitor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:17:12 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@3ff6d01a', projectTests=[spoon.reflect.visitor.CtVisitorTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #64
location: FailureLocation{className='spoon.test.intercession.IntercessionContractTest', failingMethods=[], erroringMethods=[spoon.test.intercession.IntercessionContractTest#initializationError], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:17:25 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@40a9c039', projectTests=[spoon.test.intercession.IntercessionContractTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #65
location: FailureLocation{className='spoon.test.template.TemplateEnumAccessTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateEnumAccessTest#testEnumAccessTest], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Invalid source position', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:17:39 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@4554f9db', projectTests=[spoon.test.template.TemplateEnumAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #66
location: FailureLocation{className='spoon.test.jdtimportbuilder.ImportBuilderTest', failingMethods=[], erroringMethods=[spoon.test.jdtimportbuilder.ImportBuilderTest#testInternalImportWhenNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:17:53 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@7199ff39', projectTests=[spoon.test.jdtimportbuilder.ImportBuilderTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #67
location: FailureLocation{className='spoon.test.executable.ExecutableRefTest', failingMethods=[], erroringMethods=[spoon.test.executable.ExecutableRefTest#testSameTypeInConstructorCallBetweenItsObjectAndItsExecutable], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:18:07 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@667b405a', projectTests=[spoon.test.executable.ExecutableRefTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #68
location: FailureLocation{className='spoon.test.variable.AccessFullyQualifiedFieldTest', failingMethods=[], erroringMethods=[spoon.test.variable.AccessFullyQualifiedFieldTest#testCheckAssignmentContracts], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:18:21 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@3348555a', projectTests=[spoon.test.variable.AccessFullyQualifiedFieldTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #69
location: FailureLocation{className='spoon.test.factory.FactoryTest', failingMethods=[], erroringMethods=[spoon.test.factory.FactoryTest#specificationCoreFactoryCreate], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:18:36 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@4798236e', projectTests=[spoon.test.factory.FactoryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #70
location: FailureLocation{className='spoon.test.template.TemplateArrayAccessTest', failingMethods=[], erroringMethods=[spoon.test.template.TemplateArrayAccessTest#testArrayLengthAccess], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:18:51 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@1e8031a5', projectTests=[spoon.test.template.TemplateArrayAccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #71
location: FailureLocation{className='spoon.test.literal.LiteralTest', failingMethods=[], erroringMethods=[spoon.test.literal.LiteralTest#testCharLiteralInNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:19:06 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@2addd0e0', projectTests=[spoon.test.literal.LiteralTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #72
location: FailureLocation{className='spoon.test.compilationunit.TestCompilationUnit', failingMethods=[], erroringMethods=[spoon.test.compilationunit.TestCompilationUnit#testNewlyCreatedCUWouldGetAPartialPosition], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Invalid source position', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:19:20 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@72785b4f', projectTests=[spoon.test.compilationunit.TestCompilationUnit], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #73
location: FailureLocation{className='spoon.test.labels.TestLabels', failingMethods=[], erroringMethods=[spoon.test.labels.TestLabels#testLabelsAreDetected], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:19:36 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@7b0a2ff3', projectTests=[spoon.test.labels.TestLabels], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #74
location: FailureLocation{className='spoon.test.parent.TopLevelTypeTest', failingMethods=[], erroringMethods=[spoon.test.parent.TopLevelTypeTest#testTopLevelType], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:19:50 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@2817d683', projectTests=[spoon.test.parent.TopLevelTypeTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #75
location: FailureLocation{className='spoon.test.replace.ReplaceParametrizedTest', failingMethods=[], erroringMethods=[spoon.test.replace.ReplaceParametrizedTest#initializationError], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:20:04 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@2988659d', projectTests=[spoon.test.replace.ReplaceParametrizedTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #76
location: FailureLocation{className='spoon.test.signature.SignatureTest', failingMethods=[], erroringMethods=[spoon.test.signature.SignatureTest#testBugSignature], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [4432, 4452] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:20:19 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@6c085aeb', projectTests=[spoon.test.signature.SignatureTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #77
location: FailureLocation{className='spoon.test.arrays.ArraysTest', failingMethods=[], erroringMethods=[spoon.test.arrays.ArraysTest#testInitializeWithNewArray], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:20:33 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@2d9879fd', projectTests=[spoon.test.arrays.ArraysTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #78
location: FailureLocation{className='spoon.test.factory.FieldFactoryTest', failingMethods=[], erroringMethods=[spoon.test.factory.FieldFactoryTest#testCreateFromSource], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:20:48 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@39511d97', projectTests=[spoon.test.factory.FieldFactoryTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #79
location: FailureLocation{className='spoon.test.reference.ElasticsearchStackoverflowTest', failingMethods=[], erroringMethods=[spoon.test.reference.ElasticsearchStackoverflowTest#testStackOverflow], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [2313, 2344] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:21:02 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@2ddf0347', projectTests=[spoon.test.reference.ElasticsearchStackoverflowTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #80
location: FailureLocation{className='spoon.test.prettyprinter.QualifiedThisRefTest', failingMethods=[], erroringMethods=[spoon.test.prettyprinter.QualifiedThisRefTest#testCloneThisAccess], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:21:17 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@beb0e0', projectTests=[spoon.test.prettyprinter.QualifiedThisRefTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #81
location: FailureLocation{className='spoon.test.method.MethodTest', failingMethods=[], erroringMethods=[spoon.test.method.MethodTest#testClone], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:21:31 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@45c09459', projectTests=[spoon.test.method.MethodTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #82
location: FailureLocation{className='spoon.test.variable.AccessTest', failingMethods=[], erroringMethods=[spoon.test.variable.AccessTest#testFieldWriteDeclaredInTheSuperclass], failures=[FailureType{failureName='java.lang.StackOverflowError', failureDetail='null', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:21:45 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@52f5039f', projectTests=[spoon.test.variable.AccessTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #83
location: FailureLocation{className='spoon.test.parent.SetParentTest', failingMethods=[], erroringMethods=[spoon.test.parent.SetParentTest#initializationError], failures=[FailureType{failureName='java.lang.NoClassDefFoundError', failureDetail='Could not initialize class spoon.test.parent.ParentContractTest', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:22:00 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@3040e1ac', projectTests=[spoon.test.parent.SetParentTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #84
location: FailureLocation{className='spoon.test.model.AnonymousExecutableTest', failingMethods=[], erroringMethods=[spoon.test.model.AnonymousExecutableTest#testStatements], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:22:14 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@7cabd4b0', projectTests=[spoon.test.model.AnonymousExecutableTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #85
location: FailureLocation{className='spoon.reflect.visitor.CtInheritanceScannerMethodsTest', failingMethods=[], erroringMethods=[spoon.reflect.visitor.CtInheritanceScannerMethodsTest#testMethodsInInheritanceScanner], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:22:29 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@6d5fabd2', projectTests=[spoon.reflect.visitor.CtInheritanceScannerMethodsTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #86
location: FailureLocation{className='spoon.test.intercession.IntercessionTest', failingMethods=[], erroringMethods=[spoon.test.intercession.IntercessionTest#testSettersAreAllGood], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:22:44 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@56f44dc8', projectTests=[spoon.test.intercession.IntercessionTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #87
location: FailureLocation{className='spoon.test.parameters.ParameterTest', failingMethods=[], erroringMethods=[spoon.test.parameters.ParameterTest#testParameterInNoClasspath], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:22:59 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@47091df5', projectTests=[spoon.test.parameters.ParameterTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #88
location: FailureLocation{className='spoon.test.main.MainTest', failingMethods=[], erroringMethods=[spoon.test.main.MainTest#spoon.test.main.MainTest], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [837, 861] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:23:15 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@5fe61cb8', projectTests=[spoon.test.main.MainTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #89
location: FailureLocation{className='spoon.test.reflect.meta.MetaModelTest', failingMethods=[], erroringMethods=[spoon.test.reflect.meta.MetaModelTest#spoonMetaModelTest], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [1516, 1533] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:23:29 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@7a94ebb7', projectTests=[spoon.test.reflect.meta.MetaModelTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #90
location: FailureLocation{className='spoon.test.visitor.VisitorTest', failingMethods=[], erroringMethods=[spoon.test.visitor.VisitorTest#testRecursiveDescent], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:23:44 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@6965467c', projectTests=[spoon.test.visitor.VisitorTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #91
location: FailureLocation{className='spoon.testing.AbstractAssertTest', failingMethods=[], erroringMethods=[spoon.testing.AbstractAssertTest#testTransformationFromCtElementWithProcessor], failures=[FailureType{failureName='spoon.SpoonException', failureDetail='Cannot compare this: [2038, 2057] with other: [" + other.getSourceStart() + ", " + other.getSourceEnd() + "]', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sat Mar 31 01:23:57 CEST 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/INRIA/spoon/360468411/src/main/java], projectClasspath='[Ljava.net.URL;@374b1021', projectTests=[spoon.testing.AbstractAssertTest], complianceLevel=8, outputFolder=./workspace/INRIA/spoon/360468411, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



