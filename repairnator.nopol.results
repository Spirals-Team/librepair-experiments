nopolinfo #0
location: FailureLocation{className='io.swagger.jaxrs2.annotations.callbacks.CallbackTest', failingMethods=[io.swagger.jaxrs2.annotations.callbacks.CallbackTest#testSimpleCallback], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='expected [/test:     post:       description: "subscribes a client to updates relevant to the requestor's account,\         \ as identified by the input token.  The supplied url will be used as the\         \ delivery address for response payloads"       operationId: "subscribe"       parameters:       - name: "x-auth-token"         in: "header"         schema:           type: "string"           description: "the authentication token provided after initially authenticating\             \ to the application"           readOnly: true       - name: "url"         in: "query"         schema:           type: "string"           description: "the URL to call with response data"       responses:         default:           description: "no description"           content:             '*/*':               schema:                 $ref: "#/components/schemas/SubscriptionResponse"       callbacks:         subscription:           http://$request.query.url:             post:               description: "payload data will be sent "               parameters:               - name: "subscriptionId"                 in: "path"                 required: true                 schema:                   type: "string"                   description: "the generated UUID"                   format: "uuid"                   readOnly: true               responses:                 200:                   description: "Return this code if the callback was received and\                     \ processed successfully"                 205:                   description: "Return this code to unsubscribe from future data updates"                 default:                   description: "All other response codes will disable this callback\                     \ subscription" components:   schemas:     string:       type: "string"       description: "the generated UUID"       format: "uuid"       readOnly: true     SubscriptionResponse:       type: "object"       properties:         subscriptionId:           type: "string"] but found [/test:     post:       description: subscribes a client to updates relevant to the requestor's account, as identified by the input token.  The supplied url will be used as the delivery address for response payloads       operationId: subscribe       parameters:       - name: x-auth-token         in: header         schema:           type: string           description: the authentication token provided after initially authenticating to the application           readOnly: true       - name: url         in: query         schema:           type: string           description: the URL to call with response data       responses:         default:           description: no description           content:             '*/*':               schema:                 $ref: '#/components/schemas/SubscriptionResponse'       callbacks:         subscription:           http://$request.query.url:             post:               description: 'payload data will be sent '               parameters:               - name: subscriptionId                 in: path                 required: true                 schema:                   type: string                   description: the generated UUID                   format: uuid                   readOnly: true               responses:                 200:                   description: Return this code if the callback was received and processed successfully                 205:                   description: Return this code to unsubscribe from future data updates                 default:                   description: All other response codes will disable this callback subscription components:   schemas:     string:       type: string       description: the generated UUID       format: uuid       readOnly: true     SubscriptionResponse:       type: object       properties:         subscriptionId:           type: string]', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Sat Jul 08 01:11:48 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/swagger-api/swagger-core/251291494/modules/swagger-jaxrs2/src/main/java], projectClasspath='[Ljava.net.URL;@60f2e0bd', projectTests=[io.swagger.jaxrs2.annotations.callbacks.CallbackTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='io.swagger.jaxrs2.annotations.info.InfoTest', failingMethods=[io.swagger.jaxrs2.annotations.info.InfoTest#testSimpleInfoGet], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='expected [info:   title: "the title"   description: "My API"   contact:     name: "Fred"     url: "http://gigantic-server.com"     email: "Fred@gigagantic-server.com"   license:     name: "Apache 2.0"     url: "http://foo.bar"   version: "0.0"] but found [info:   title: the title   description: My API   contact:     name: Fred     url: http://gigantic-server.com     email: Fred@gigagantic-server.com   license:     name: Apache 2.0     url: http://foo.bar   version: "0.0"]', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Sat Jul 08 01:11:51 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/swagger-api/swagger-core/251291494/modules/swagger-jaxrs2/src/main/java], projectClasspath='[Ljava.net.URL;@72f9f27c', projectTests=[io.swagger.jaxrs2.annotations.info.InfoTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



