nopolinfo #0
location: FailureLocation{className='tests.persistence.HibernateTestCase', failingMethods=[], erroringMethods=[tests.persistence.HibernateTestCase#testDelete, tests.persistence.HibernateTestCase#testFilterUser, tests.persistence.HibernateTestCase#testSave], failures=[FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open Hibernate Session for transaction; nested exception is org.hibernate.exception.GenericJDBCException: Could not open connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open Hibernate Session for transaction; nested exception is org.hibernate.exception.GenericJDBCException: Could not open connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open Hibernate Session for transaction; nested exception is org.hibernate.exception.GenericJDBCException: Could not open connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open Hibernate Session for transaction; nested exception is org.hibernate.exception.GenericJDBCException: Could not open connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open Hibernate Session for transaction; nested exception is org.hibernate.exception.GenericJDBCException: Could not open connection', isError=true}, FailureType{failureName='org.springframework.transaction.CannotCreateTransactionException', failureDetail='Could not open Hibernate Session for transaction; nested exception is org.hibernate.exception.GenericJDBCException: Could not open connection', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sun Apr 22 00:31:56 EDT 2018
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/RedondaAnalia/Grupo-H-012018-desapp/369661189/src/main/java], projectClasspath='[Ljava.net.URL;@59a67c3a', projectTests=[tests.persistence.HibernateTestCase], complianceLevel=8, outputFolder=./workspace/RedondaAnalia/Grupo-H-012018-desapp/369661189, json=false}
exception: null
nbStatements: 20
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



