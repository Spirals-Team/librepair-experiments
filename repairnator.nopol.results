nopolinfo #0
location: FailureLocation{className='io.swagger.jaxrs2.annotations.responses.RequestBodyTest', failingMethods=[io.swagger.jaxrs2.annotations.responses.RequestBodyTest#oneRequestBodyMultipleParameters], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='expected [openapi: 3.0.0 paths:   /user:     put:       summary: Modify user       description: Modifying user.       operationId: methodWithRequestBodyWithoutAnnotation       requestBody:         content:           '*/*':             schema:               $ref: '#/components/schemas/User'       responses:         default:           description: no description     post:       summary: Create user       description: This can only be done by the logged in user.       operationId: methodWithRequestBodyAndTwoParameters       parameters:       - name: name         in: query         schema:           type: string       - name: code         in: query         schema:           type: string       requestBody:         description: Created user object         content:           '*/*':             schema:               $ref: '#/components/schemas/User'         required: true       responses:         default:           description: no description     delete:       summary: Delete user       description: This can only be done by the logged in user.       operationId: methodWithoutRequestBodyAndTwoParameters       parameters:       - name: name         in: query         schema:           type: string       - name: code         in: query         schema:           type: string       responses:         default:           description: no description   /pet:     put:       summary: Modify pet       description: Modifying pet.       operationId: methodWithRequestBodyWithoutAnnotationAndTwoProduces       requestBody:         content:           application/json:             schema:               $ref: '#/components/schemas/User'           application/xml:             schema:               $ref: '#/components/schemas/User'       responses:         default:           description: no description     post:       summary: Create pet       description: Creating pet.       operationId: methodWithTwoRequestBodyWithoutAnnotationAndTwoProduces       requestBody:         content:           application/json:             schema:               $ref: '#/components/schemas/Pet'           application/xml:             schema:               $ref: '#/components/schemas/Pet'       responses:         default:           description: no description     delete:       summary: Delete pet       description: Deleting pet.       operationId: methodWithOneSimpleRequestBody       requestBody:         content:           application/json:             schema:               type: int           application/xml:             schema:               type: int       responses:         default:           description: no description components:   schemas:     User:       type: object       properties:         id:           type: integer           format: int64         username:           type: string         firstName:           type: string         lastName:           type: string         email:           type: string         password:           type: string         phone:           type: string         userStatus:           type: integer           description: User Status           format: int32           enum:           - null       xml:         name: User     Pet:       type: object       properties:         id:           type: integer           format: int64         category:           $ref: '#/components/schemas/Category'         name:           type: string         photoUrls:           type: array           xml:             wrapped: true           items:             type: string             xml:               name: photoUrl         tags:           type: array           xml:             wrapped: true           items:             $ref: '#/components/schemas/Tag'         status:           type: string           description: pet status in the store           enum:           - available,pending,sold       xml:         name: Pet ] but found [openapi: 3.0.0 paths:   /user:     put:       summary: Modify user       description: Modifying user.       operationId: methodWithRequestBodyWithoutAnnotation       requestBody:         content:           '*/*':             schema:               $ref: '#/components/schemas/User'       responses:         default:           description: no description     post:       summary: Create user       description: This can only be done by the logged in user.       operationId: methodWithRequestBodyAndTwoParameters       parameters:       - name: name         in: query         schema:           type: string       - name: code         in: query         schema:           type: string       requestBody:         description: Created user object         content:           '*/*':             schema:               $ref: '#/components/schemas/User'         required: true       responses:         default:           description: no description     delete:       summary: Delete user       description: This can only be done by the logged in user.       operationId: methodWithoutRequestBodyAndTwoParameters       parameters:       - name: name         in: query         schema:           type: string       - name: code         in: query         schema:           type: string       responses:         default:           description: no description   /pet:     put:       summary: Modify pet       description: Modifying pet.       operationId: methodWithRequestBodyWithoutAnnotationAndTwoProduces       requestBody:         content:           '*/*':             schema:               $ref: '#/components/schemas/User'       responses:         default:           description: no description     post:       summary: Create pet       description: Creating pet.       operationId: methodWithTwoRequestBodyWithoutAnnotationAndTwoProduces       requestBody:         content:           '*/*':             schema:               $ref: '#/components/schemas/Pet'       responses:         default:           description: no description     delete:       summary: Delete pet       description: Deleting pet.       operationId: methodWithOneSimpleRequestBody       requestBody:         content:           '*/*':             schema:               type: int       responses:         default:           description: no description components:   schemas:     User:       type: object       properties:         id:           type: integer           format: int64         username:           type: string         firstName:           type: string         lastName:           type: string         email:           type: string         password:           type: string         phone:           type: string         userStatus:           type: integer           description: User Status           format: int32           enum:           - null       xml:         name: User     Pet:       type: object       properties:         id:           type: integer           format: int64         category:           $ref: '#/components/schemas/Category'         name:           type: string         photoUrls:           type: array           xml:             wrapped: true           items:             type: string             xml:               name: photoUrl         tags:           type: array           xml:             wrapped: true           items:             $ref: '#/components/schemas/Tag'         status:           type: string           description: pet status in the store           enum:           - available,pending,sold       xml:         name: Pet ]', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Sun Aug 27 20:36:18 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/swagger-api/swagger-core/268912908/modules/swagger-jaxrs2/src/main/java], projectClasspath='[Ljava.net.URL;@5003041b', projectTests=[io.swagger.jaxrs2.annotations.responses.RequestBodyTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



