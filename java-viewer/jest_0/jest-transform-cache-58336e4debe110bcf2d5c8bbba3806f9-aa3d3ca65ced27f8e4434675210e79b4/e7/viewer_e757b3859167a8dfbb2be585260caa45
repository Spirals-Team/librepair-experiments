/* istanbul ignore next */var cov_pe70b9nz6 = function () {var path = '/root/workspace/SonarSource/sonar-java/269574781/java-viewer/src/main/resources/public/lib/viewer/js/viewer.js',hash = '1cbd52b8314d38e34c15b7bf45fe1636b2c4a9ae',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/root/workspace/SonarSource/sonar-java/269574781/java-viewer/src/main/resources/public/lib/viewer/js/viewer.js', statementMap: { '0': { start: { line: 2, column: 21 }, end: { line: 2, column: 54 } }, '1': { start: { line: 4, column: 15 }, end: { line: 7, column: 3 } }, '2': { start: { line: 9, column: 2 }, end: { line: 9, column: 28 } }, '3': { start: { line: 10, column: 2 }, end: { line: 10, column: 28 } }, '4': { start: { line: 12, column: 2 }, end: { line: 12, column: 28 } }, '5': { start: { line: 13, column: 2 }, end: { line: 13, column: 28 } }, '6': { start: { line: 15, column: 16 }, end: { line: 15, column: 54 } }, '7': { start: { line: 16, column: 2 }, end: { line: 16, column: 38 } }, '8': { start: { line: 18, column: 2 }, end: { line: 34, column: 3 } }, '9': { start: { line: 20, column: 4 }, end: { line: 20, column: 33 } }, '10': { start: { line: 21, column: 4 }, end: { line: 21, column: 33 } }, '11': { start: { line: 22, column: 4 }, end: { line: 22, column: 33 } }, '12': { start: { line: 24, column: 18 }, end: { line: 24, column: 38 } }, '13': { start: { line: 26, column: 4 }, end: { line: 29, column: 6 } }, '14': { start: { line: 31, column: 4 }, end: { line: 33, column: 7 } }, '15': { start: { line: 32, column: 6 }, end: { line: 32, column: 56 } }, '16': { start: { line: 36, column: 2 }, end: { line: 36, column: 17 } }, '17': { start: { line: 41, column: 2 }, end: { line: 41, column: 28 } }, '18': { start: { line: 43, column: 2 }, end: { line: 70, column: 3 } }, '19': { start: { line: 44, column: 17 }, end: { line: 44, column: 48 } }, '20': { start: { line: 46, column: 4 }, end: { line: 55, column: 5 } }, '21': { start: { line: 47, column: 30 }, end: { line: 47, column: 61 } }, '22': { start: { line: 49, column: 6 }, end: { line: 49, column: 35 } }, '23': { start: { line: 50, column: 6 }, end: { line: 50, column: 79 } }, '24': { start: { line: 51, column: 6 }, end: { line: 51, column: 35 } }, '25': { start: { line: 52, column: 6 }, end: { line: 52, column: 63 } }, '26': { start: { line: 53, column: 6 }, end: { line: 53, column: 35 } }, '27': { start: { line: 54, column: 6 }, end: { line: 54, column: 13 } }, '28': { start: { line: 57, column: 9 }, end: { line: 70, column: 3 } }, '29': { start: { line: 58, column: 17 }, end: { line: 58, column: 48 } }, '30': { start: { line: 60, column: 4 }, end: { line: 69, column: 5 } }, '31': { start: { line: 61, column: 30 }, end: { line: 61, column: 61 } }, '32': { start: { line: 63, column: 6 }, end: { line: 63, column: 35 } }, '33': { start: { line: 64, column: 6 }, end: { line: 64, column: 35 } }, '34': { start: { line: 65, column: 6 }, end: { line: 65, column: 79 } }, '35': { start: { line: 66, column: 6 }, end: { line: 66, column: 35 } }, '36': { start: { line: 67, column: 6 }, end: { line: 67, column: 63 } }, '37': { start: { line: 68, column: 6 }, end: { line: 68, column: 13 } }, '38': { start: { line: 72, column: 2 }, end: { line: 72, column: 31 } }, '39': { start: { line: 73, column: 2 }, end: { line: 73, column: 31 } }, '40': { start: { line: 74, column: 2 }, end: { line: 74, column: 31 } }, '41': { start: { line: 78, column: 2 }, end: { line: 93, column: 5 } }, '42': { start: { line: 79, column: 18 }, end: { line: 79, column: 23 } }, '43': { start: { line: 80, column: 18 }, end: { line: 80, column: 31 } }, '44': { start: { line: 81, column: 4 }, end: { line: 84, column: 5 } }, '45': { start: { line: 82, column: 6 }, end: { line: 82, column: 58 } }, '46': { start: { line: 83, column: 6 }, end: { line: 83, column: 21 } }, '47': { start: { line: 85, column: 20 }, end: { line: 85, column: 35 } }, '48': { start: { line: 86, column: 4 }, end: { line: 89, column: 5 } }, '49': { start: { line: 87, column: 6 }, end: { line: 87, column: 64 } }, '50': { start: { line: 88, column: 6 }, end: { line: 88, column: 21 } }, '51': { start: { line: 90, column: 4 }, end: { line: 92, column: 5 } }, '52': { start: { line: 91, column: 6 }, end: { line: 91, column: 30 } }, '53': { start: { line: 97, column: 15 }, end: { line: 97, column: 19 } }, '54': { start: { line: 98, column: 2 }, end: { line: 98, column: 43 } }, '55': { start: { line: 99, column: 2 }, end: { line: 99, column: 42 } }, '56': { start: { line: 100, column: 2 }, end: { line: 100, column: 16 } }, '57': { start: { line: 104, column: 2 }, end: { line: 106, column: 3 } }, '58': { start: { line: 105, column: 4 }, end: { line: 105, column: 33 } }, '59': { start: { line: 107, column: 15 }, end: { line: 107, column: 39 } }, '60': { start: { line: 108, column: 2 }, end: { line: 108, column: 37 } }, '61': { start: { line: 110, column: 2 }, end: { line: 114, column: 3 } }, '62': { start: { line: 111, column: 4 }, end: { line: 111, column: 21 } }, '63': { start: { line: 112, column: 4 }, end: { line: 112, column: 67 } }, '64': { start: { line: 113, column: 4 }, end: { line: 113, column: 52 } }, '65': { start: { line: 116, column: 2 }, end: { line: 116, column: 16 } }, '66': { start: { line: 120, column: 15 }, end: { line: 120, column: 17 } }, '67': { start: { line: 121, column: 2 }, end: { line: 123, column: 3 } }, '68': { start: { line: 122, column: 4 }, end: { line: 122, column: 63 } }, '69': { start: { line: 124, column: 2 }, end: { line: 126, column: 3 } }, '70': { start: { line: 125, column: 4 }, end: { line: 125, column: 78 } }, '71': { start: { line: 127, column: 2 }, end: { line: 129, column: 3 } }, '72': { start: { line: 128, column: 4 }, end: { line: 128, column: 60 } }, '73': { start: { line: 130, column: 2 }, end: { line: 130, column: 45 } }, '74': { start: { line: 134, column: 15 }, end: { line: 134, column: 21 } }, '75': { start: { line: 135, column: 2 }, end: { line: 135, column: 24 } }, '76': { start: { line: 136, column: 2 }, end: { line: 136, column: 46 } }, '77': { start: { line: 137, column: 2 }, end: { line: 137, column: 60 } }, '78': { start: { line: 138, column: 2 }, end: { line: 138, column: 20 } }, '79': { start: { line: 139, column: 26 }, end: { line: 139, column: 27 } }, '80': { start: { line: 140, column: 2 }, end: { line: 143, column: 5 } }, '81': { start: { line: 141, column: 4 }, end: { line: 141, column: 61 } }, '82': { start: { line: 142, column: 4 }, end: { line: 142, column: 24 } }, '83': { start: { line: 144, column: 2 }, end: { line: 144, column: 44 } }, '84': { start: { line: 148, column: 15 }, end: { line: 148, column: 17 } }, '85': { start: { line: 149, column: 2 }, end: { line: 149, column: 32 } }, '86': { start: { line: 150, column: 2 }, end: { line: 150, column: 60 } }, '87': { start: { line: 151, column: 2 }, end: { line: 151, column: 104 } }, '88': { start: { line: 152, column: 2 }, end: { line: 152, column: 26 } }, '89': { start: { line: 156, column: 15 }, end: { line: 156, column: 17 } }, '90': { start: { line: 157, column: 2 }, end: { line: 159, column: 3 } }, '91': { start: { line: 158, column: 4 }, end: { line: 158, column: 46 } }, '92': { start: { line: 160, column: 2 }, end: { line: 160, column: 37 } }, '93': { start: { line: 164, column: 2 }, end: { line: 166, column: 3 } }, '94': { start: { line: 165, column: 4 }, end: { line: 165, column: 39 } }, '95': { start: { line: 167, column: 15 }, end: { line: 167, column: 32 } }, '96': { start: { line: 168, column: 2 }, end: { line: 170, column: 3 } }, '97': { start: { line: 169, column: 4 }, end: { line: 169, column: 37 } }, '98': { start: { line: 171, column: 2 }, end: { line: 171, column: 16 } }, '99': { start: { line: 175, column: 19 }, end: { line: 175, column: 21 } }, '100': { start: { line: 176, column: 2 }, end: { line: 178, column: 3 } }, '101': { start: { line: 177, column: 4 }, end: { line: 177, column: 37 } }, '102': { start: { line: 179, column: 2 }, end: { line: 179, column: 50 } }, '103': { start: { line: 183, column: 2 }, end: { line: 183, column: 29 } }, '104': { start: { line: 187, column: 2 }, end: { line: 187, column: 29 } }, '105': { start: { line: 191, column: 2 }, end: { line: 195, column: 3 } }, '106': { start: { line: 192, column: 15 }, end: { line: 192, column: 31 } }, '107': { start: { line: 193, column: 15 }, end: { line: 193, column: 31 } }, '108': { start: { line: 194, column: 4 }, end: { line: 194, column: 29 } }, '109': { start: { line: 196, column: 2 }, end: { line: 196, column: 12 } }, '110': { start: { line: 200, column: 15 }, end: { line: 200, column: 17 } }, '111': { start: { line: 201, column: 2 }, end: { line: 203, column: 5 } }, '112': { start: { line: 202, column: 4 }, end: { line: 202, column: 54 } }, '113': { start: { line: 204, column: 2 }, end: { line: 204, column: 37 } }, '114': { start: { line: 208, column: 15 }, end: { line: 208, column: 17 } }, '115': { start: { line: 209, column: 2 }, end: { line: 211, column: 5 } }, '116': { start: { line: 210, column: 4 }, end: { line: 210, column: 69 } }, '117': { start: { line: 212, column: 2 }, end: { line: 212, column: 37 } }, '118': { start: { line: 216, column: 15 }, end: { line: 216, column: 40 } }, '119': { start: { line: 217, column: 2 }, end: { line: 227, column: 3 } }, '120': { start: { line: 218, column: 4 }, end: { line: 218, column: 64 } }, '121': { start: { line: 220, column: 4 }, end: { line: 226, column: 7 } }, '122': { start: { line: 221, column: 19 }, end: { line: 221, column: 33 } }, '123': { start: { line: 222, column: 6 }, end: { line: 224, column: 7 } }, '124': { start: { line: 223, column: 8 }, end: { line: 223, column: 20 } }, '125': { start: { line: 225, column: 6 }, end: { line: 225, column: 85 } }, '126': { start: { line: 228, column: 2 }, end: { line: 228, column: 20 } }, '127': { start: { line: 230, column: 2 }, end: { line: 230, column: 16 } }, '128': { start: { line: 234, column: 2 }, end: { line: 236, column: 3 } }, '129': { start: { line: 235, column: 4 }, end: { line: 235, column: 33 } }, '130': { start: { line: 237, column: 15 }, end: { line: 237, column: 17 } }, '131': { start: { line: 238, column: 2 }, end: { line: 240, column: 3 } }, '132': { start: { line: 239, column: 4 }, end: { line: 239, column: 64 } }, '133': { start: { line: 241, column: 2 }, end: { line: 246, column: 3 } }, '134': { start: { line: 242, column: 4 }, end: { line: 244, column: 5 } }, '135': { start: { line: 243, column: 6 }, end: { line: 243, column: 23 } }, '136': { start: { line: 245, column: 4 }, end: { line: 245, column: 66 } }, '137': { start: { line: 247, column: 2 }, end: { line: 253, column: 3 } }, '138': { start: { line: 248, column: 4 }, end: { line: 250, column: 5 } }, '139': { start: { line: 249, column: 6 }, end: { line: 249, column: 23 } }, '140': { start: { line: 251, column: 4 }, end: { line: 251, column: 48 } }, '141': { start: { line: 252, column: 4 }, end: { line: 252, column: 60 } }, '142': { start: { line: 254, column: 2 }, end: { line: 254, column: 16 } }, '143': { start: { line: 258, column: 15 }, end: { line: 258, column: 45 } }, '144': { start: { line: 259, column: 2 }, end: { line: 259, column: 22 } }, '145': { start: { line: 260, column: 2 }, end: { line: 262, column: 5 } }, '146': { start: { line: 261, column: 4 }, end: { line: 261, column: 52 } }, '147': { start: { line: 263, column: 2 }, end: { line: 263, column: 23 } }, '148': { start: { line: 264, column: 2 }, end: { line: 264, column: 16 } }, '149': { start: { line: 268, column: 15 }, end: { line: 268, column: 46 } }, '150': { start: { line: 269, column: 2 }, end: { line: 269, column: 22 } }, '151': { start: { line: 270, column: 2 }, end: { line: 272, column: 5 } }, '152': { start: { line: 271, column: 4 }, end: { line: 271, column: 48 } }, '153': { start: { line: 273, column: 2 }, end: { line: 273, column: 23 } }, '154': { start: { line: 274, column: 2 }, end: { line: 274, column: 16 } }, '155': { start: { line: 278, column: 2 }, end: { line: 280, column: 3 } }, '156': { start: { line: 279, column: 4 }, end: { line: 279, column: 17 } }, '157': { start: { line: 281, column: 15 }, end: { line: 281, column: 20 } }, '158': { start: { line: 282, column: 2 }, end: { line: 286, column: 5 } }, '159': { start: { line: 283, column: 4 }, end: { line: 285, column: 5 } }, '160': { start: { line: 284, column: 6 }, end: { line: 284, column: 20 } }, '161': { start: { line: 287, column: 2 }, end: { line: 287, column: 16 } }, '162': { start: { line: 291, column: 2 }, end: { line: 356, column: 5 } }, '163': { start: { line: 293, column: 4 }, end: { line: 300, column: 6 } }, '164': { start: { line: 301, column: 4 }, end: { line: 306, column: 6 } }, '165': { start: { line: 308, column: 25 }, end: { line: 308, column: 100 } }, '166': { start: { line: 311, column: 4 }, end: { line: 345, column: 5 } }, '167': { start: { line: 313, column: 8 }, end: { line: 313, column: 41 } }, '168': { start: { line: 314, column: 8 }, end: { line: 314, column: 37 } }, '169': { start: { line: 315, column: 8 }, end: { line: 315, column: 14 } }, '170': { start: { line: 317, column: 8 }, end: { line: 317, column: 37 } }, '171': { start: { line: 318, column: 8 }, end: { line: 318, column: 35 } }, '172': { start: { line: 319, column: 8 }, end: { line: 319, column: 31 } }, '173': { start: { line: 320, column: 8 }, end: { line: 320, column: 14 } }, '174': { start: { line: 322, column: 8 }, end: { line: 322, column: 35 } }, '175': { start: { line: 323, column: 8 }, end: { line: 323, column: 37 } }, '176': { start: { line: 324, column: 8 }, end: { line: 324, column: 31 } }, '177': { start: { line: 325, column: 8 }, end: { line: 325, column: 14 } }, '178': { start: { line: 327, column: 8 }, end: { line: 327, column: 37 } }, '179': { start: { line: 328, column: 8 }, end: { line: 328, column: 35 } }, '180': { start: { line: 329, column: 8 }, end: { line: 329, column: 31 } }, '181': { start: { line: 330, column: 8 }, end: { line: 330, column: 30 } }, '182': { start: { line: 331, column: 8 }, end: { line: 331, column: 14 } }, '183': { start: { line: 333, column: 8 }, end: { line: 333, column: 36 } }, '184': { start: { line: 334, column: 8 }, end: { line: 334, column: 31 } }, '185': { start: { line: 335, column: 8 }, end: { line: 335, column: 14 } }, '186': { start: { line: 337, column: 8 }, end: { line: 337, column: 39 } }, '187': { start: { line: 338, column: 8 }, end: { line: 338, column: 32 } }, '188': { start: { line: 339, column: 8 }, end: { line: 339, column: 14 } }, '189': { start: { line: 341, column: 8 }, end: { line: 341, column: 36 } }, '190': { start: { line: 342, column: 8 }, end: { line: 342, column: 43 } }, '191': { start: { line: 343, column: 8 }, end: { line: 343, column: 31 } }, '192': { start: { line: 344, column: 8 }, end: { line: 344, column: 14 } }, '193': { start: { line: 346, column: 4 }, end: { line: 348, column: 5 } }, '194': { start: { line: 347, column: 6 }, end: { line: 347, column: 55 } }, '195': { start: { line: 349, column: 4 }, end: { line: 351, column: 5 } }, '196': { start: { line: 350, column: 6 }, end: { line: 350, column: 47 } }, '197': { start: { line: 352, column: 4 }, end: { line: 354, column: 5 } }, '198': { start: { line: 353, column: 6 }, end: { line: 353, column: 43 } }, '199': { start: { line: 355, column: 4 }, end: { line: 355, column: 23 } }, '200': { start: { line: 360, column: 2 }, end: { line: 385, column: 5 } }, '201': { start: { line: 362, column: 4 }, end: { line: 365, column: 6 } }, '202': { start: { line: 366, column: 4 }, end: { line: 369, column: 6 } }, '203': { start: { line: 371, column: 4 }, end: { line: 382, column: 5 } }, '204': { start: { line: 373, column: 8 }, end: { line: 373, column: 39 } }, '205': { start: { line: 374, column: 8 }, end: { line: 374, column: 38 } }, '206': { start: { line: 375, column: 8 }, end: { line: 375, column: 14 } }, '207': { start: { line: 377, column: 8 }, end: { line: 377, column: 42 } }, '208': { start: { line: 378, column: 8 }, end: { line: 378, column: 41 } }, '209': { start: { line: 379, column: 8 }, end: { line: 379, column: 14 } }, '210': { start: { line: 384, column: 4 }, end: { line: 384, column: 23 } }, '211': { start: { line: 389, column: 15 }, end: { line: 389, column: 17 } }, '212': { start: { line: 390, column: 2 }, end: { line: 398, column: 5 } }, '213': { start: { line: 391, column: 20 }, end: { line: 391, column: 35 } }, '214': { start: { line: 392, column: 4 }, end: { line: 397, column: 5 } }, '215': { start: { line: 393, column: 6 }, end: { line: 395, column: 7 } }, '216': { start: { line: 394, column: 8 }, end: { line: 394, column: 35 } }, '217': { start: { line: 396, column: 6 }, end: { line: 396, column: 42 } }, '218': { start: { line: 399, column: 2 }, end: { line: 399, column: 16 } }, '219': { start: { line: 403, column: 15 }, end: { line: 403, column: 17 } }, '220': { start: { line: 405, column: 14 }, end: { line: 405, column: 33 } }, '221': { start: { line: 406, column: 2 }, end: { line: 416, column: 3 } }, '222': { start: { line: 407, column: 17 }, end: { line: 407, column: 25 } }, '223': { start: { line: 408, column: 4 }, end: { line: 415, column: 5 } }, '224': { start: { line: 409, column: 6 }, end: { line: 409, column: 26 } }, '225': { start: { line: 410, column: 11 }, end: { line: 415, column: 5 } }, '226': { start: { line: 411, column: 6 }, end: { line: 411, column: 25 } }, '227': { start: { line: 412, column: 11 }, end: { line: 415, column: 5 } }, '228': { start: { line: 413, column: 25 }, end: { line: 413, column: 64 } }, '229': { start: { line: 414, column: 6 }, end: { line: 414, column: 31 } }, '230': { start: { line: 417, column: 2 }, end: { line: 417, column: 16 } }, '231': { start: { line: 421, column: 20 }, end: { line: 421, column: 22 } }, '232': { start: { line: 422, column: 2 }, end: { line: 426, column: 5 } }, '233': { start: { line: 423, column: 4 }, end: { line: 425, column: 5 } }, '234': { start: { line: 424, column: 6 }, end: { line: 424, column: 32 } }, '235': { start: { line: 429, column: 24 }, end: { line: 429, column: 56 } }, '236': { start: { line: 430, column: 2 }, end: { line: 433, column: 3 } }, '237': { start: { line: 431, column: 4 }, end: { line: 431, column: 59 } }, '238': { start: { line: 432, column: 4 }, end: { line: 432, column: 56 } }, '239': { start: { line: 436, column: 2 }, end: { line: 436, column: 46 } }, '240': { start: { line: 437, column: 2 }, end: { line: 437, column: 19 } }, '241': { start: { line: 441, column: 18 }, end: { line: 441, column: 44 } }, '242': { start: { line: 443, column: 2 }, end: { line: 446, column: 3 } }, '243': { start: { line: 445, column: 4 }, end: { line: 445, column: 11 } }, '244': { start: { line: 448, column: 2 }, end: { line: 448, column: 51 } }, '245': { start: { line: 450, column: 19 }, end: { line: 450, column: 44 } }, '246': { start: { line: 451, column: 14 }, end: { line: 451, column: 18 } }, '247': { start: { line: 452, column: 2 }, end: { line: 458, column: 3 } }, '248': { start: { line: 453, column: 22 }, end: { line: 453, column: 35 } }, '249': { start: { line: 454, column: 4 }, end: { line: 457, column: 5 } }, '250': { start: { line: 455, column: 6 }, end: { line: 455, column: 18 } }, '251': { start: { line: 456, column: 6 }, end: { line: 456, column: 12 } }, '252': { start: { line: 460, column: 26 }, end: { line: 460, column: 28 } }, '253': { start: { line: 461, column: 2 }, end: { line: 463, column: 3 } }, '254': { start: { line: 462, column: 4 }, end: { line: 462, column: 54 } }, '255': { start: { line: 464, column: 2 }, end: { line: 464, column: 87 } }, '256': { start: { line: 468, column: 16 }, end: { line: 468, column: 57 } }, '257': { start: { line: 469, column: 2 }, end: { line: 476, column: 3 } }, '258': { start: { line: 470, column: 4 }, end: { line: 475, column: 8 } }, '259': { start: { line: 477, column: 2 }, end: { line: 477, column: 30 } }, '260': { start: { line: 481, column: 0 }, end: { line: 503, column: 1 } }, '261': { start: { line: 482, column: 2 }, end: { line: 500, column: 4 } } }, fnMap: { '0': { name: 'loadDot', decl: { start: { line: 1, column: 9 }, end: { line: 1, column: 16 } }, loc: { start: { line: 1, column: 74 }, end: { line: 37, column: 1 } }, line: 1 }, '1': { name: '(anonymous_1)', decl: { start: { line: 31, column: 24 }, end: { line: 31, column: 25 } }, loc: { start: { line: 31, column: 41 }, end: { line: 33, column: 5 } }, line: 31 }, '2': { name: 'clickAction', decl: { start: { line: 39, column: 9 }, end: { line: 39, column: 20 } }, loc: { start: { line: 39, column: 59 }, end: { line: 75, column: 1 } }, line: 39 }, '3': { name: 'updateDetails', decl: { start: { line: 77, column: 9 }, end: { line: 77, column: 22 } }, loc: { start: { line: 77, column: 35 }, end: { line: 94, column: 1 } }, line: 77 }, '4': { name: '(anonymous_4)', decl: { start: { line: 78, column: 21 }, end: { line: 78, column: 22 } }, loc: { start: { line: 78, column: 37 }, end: { line: 93, column: 3 } }, line: 78 }, '5': { name: 'unescapeSpecialChars', decl: { start: { line: 96, column: 9 }, end: { line: 96, column: 29 } }, loc: { start: { line: 96, column: 36 }, end: { line: 101, column: 1 } }, line: 96 }, '6': { name: 'getNodeDetails', decl: { start: { line: 103, column: 9 }, end: { line: 103, column: 23 } }, loc: { start: { line: 103, column: 33 }, end: { line: 117, column: 1 } }, line: 103 }, '7': { name: 'getProgramState', decl: { start: { line: 119, column: 9 }, end: { line: 119, column: 24 } }, loc: { start: { line: 119, column: 34 }, end: { line: 131, column: 1 } }, line: 119 }, '8': { name: 'getMethodYields', decl: { start: { line: 133, column: 9 }, end: { line: 133, column: 24 } }, loc: { start: { line: 133, column: 39 }, end: { line: 145, column: 1 } }, line: 133 }, '9': { name: '(anonymous_9)', decl: { start: { line: 140, column: 23 }, end: { line: 140, column: 24 } }, loc: { start: { line: 140, column: 46 }, end: { line: 143, column: 3 } }, line: 140 }, '10': { name: 'getMethodYield', decl: { start: { line: 147, column: 9 }, end: { line: 147, column: 23 } }, loc: { start: { line: 147, column: 41 }, end: { line: 153, column: 1 } }, line: 147 }, '11': { name: 'methodParameters', decl: { start: { line: 155, column: 9 }, end: { line: 155, column: 25 } }, loc: { start: { line: 155, column: 34 }, end: { line: 161, column: 1 } }, line: 155 }, '12': { name: 'methodResult', decl: { start: { line: 163, column: 9 }, end: { line: 163, column: 21 } }, loc: { start: { line: 163, column: 65 }, end: { line: 172, column: 1 } }, line: 163 }, '13': { name: 'table', decl: { start: { line: 174, column: 9 }, end: { line: 174, column: 14 } }, loc: { start: { line: 174, column: 31 }, end: { line: 180, column: 1 } }, line: 174 }, '14': { name: 'tableCell', decl: { start: { line: 182, column: 9 }, end: { line: 182, column: 18 } }, loc: { start: { line: 182, column: 26 }, end: { line: 184, column: 1 } }, line: 182 }, '15': { name: 'tableRow', decl: { start: { line: 186, column: 9 }, end: { line: 186, column: 17 } }, loc: { start: { line: 186, column: 25 }, end: { line: 188, column: 1 } }, line: 186 }, '16': { name: 'tableLine', decl: { start: { line: 190, column: 9 }, end: { line: 190, column: 18 } }, loc: { start: { line: 190, column: 33 }, end: { line: 197, column: 1 } }, line: 190 }, '17': { name: 'getValues', decl: { start: { line: 199, column: 9 }, end: { line: 199, column: 18 } }, loc: { start: { line: 199, column: 27 }, end: { line: 205, column: 1 } }, line: 199 }, '18': { name: '(anonymous_18)', decl: { start: { line: 201, column: 17 }, end: { line: 201, column: 18 } }, loc: { start: { line: 201, column: 34 }, end: { line: 203, column: 3 } }, line: 201 }, '19': { name: 'getConstraints', decl: { start: { line: 207, column: 9 }, end: { line: 207, column: 23 } }, loc: { start: { line: 207, column: 37 }, end: { line: 213, column: 1 } }, line: 207 }, '20': { name: '(anonymous_20)', decl: { start: { line: 209, column: 22 }, end: { line: 209, column: 23 } }, loc: { start: { line: 209, column: 44 }, end: { line: 211, column: 3 } }, line: 209 }, '21': { name: 'getStack', decl: { start: { line: 215, column: 9 }, end: { line: 215, column: 17 } }, loc: { start: { line: 215, column: 25 }, end: { line: 231, column: 1 } }, line: 215 }, '22': { name: '(anonymous_22)', decl: { start: { line: 220, column: 18 }, end: { line: 220, column: 19 } }, loc: { start: { line: 220, column: 34 }, end: { line: 226, column: 5 } }, line: 220 }, '23': { name: 'getEdgeDetails', decl: { start: { line: 233, column: 9 }, end: { line: 233, column: 23 } }, loc: { start: { line: 233, column: 33 }, end: { line: 255, column: 1 } }, line: 233 }, '24': { name: 'getLearnedConstraints', decl: { start: { line: 257, column: 9 }, end: { line: 257, column: 30 } }, loc: { start: { line: 257, column: 36 }, end: { line: 265, column: 1 } }, line: 257 }, '25': { name: '(anonymous_25)', decl: { start: { line: 260, column: 14 }, end: { line: 260, column: 15 } }, loc: { start: { line: 260, column: 28 }, end: { line: 262, column: 3 } }, line: 260 }, '26': { name: 'getLearnedAssociations', decl: { start: { line: 267, column: 9 }, end: { line: 267, column: 31 } }, loc: { start: { line: 267, column: 37 }, end: { line: 275, column: 1 } }, line: 267 }, '27': { name: '(anonymous_27)', decl: { start: { line: 270, column: 14 }, end: { line: 270, column: 15 } }, loc: { start: { line: 270, column: 28 }, end: { line: 272, column: 3 } }, line: 270 }, '28': { name: 'inArray', decl: { start: { line: 277, column: 9 }, end: { line: 277, column: 16 } }, loc: { start: { line: 277, column: 31 }, end: { line: 288, column: 1 } }, line: 277 }, '29': { name: '(anonymous_29)', decl: { start: { line: 282, column: 16 }, end: { line: 282, column: 17 } }, loc: { start: { line: 282, column: 32 }, end: { line: 286, column: 3 } }, line: 282 }, '30': { name: 'setNodesColor', decl: { start: { line: 290, column: 9 }, end: { line: 290, column: 22 } }, loc: { start: { line: 290, column: 68 }, end: { line: 357, column: 1 } }, line: 290 }, '31': { name: '(anonymous_31)', decl: { start: { line: 291, column: 16 }, end: { line: 291, column: 17 } }, loc: { start: { line: 291, column: 32 }, end: { line: 356, column: 3 } }, line: 291 }, '32': { name: 'setEdgesColor', decl: { start: { line: 359, column: 9 }, end: { line: 359, column: 22 } }, loc: { start: { line: 359, column: 30 }, end: { line: 386, column: 1 } }, line: 359 }, '33': { name: '(anonymous_33)', decl: { start: { line: 360, column: 16 }, end: { line: 360, column: 17 } }, loc: { start: { line: 360, column: 32 }, end: { line: 385, column: 3 } }, line: 360 }, '34': { name: 'getPPMap', decl: { start: { line: 388, column: 9 }, end: { line: 388, column: 17 } }, loc: { start: { line: 388, column: 25 }, end: { line: 400, column: 1 } }, line: 388 }, '35': { name: '(anonymous_35)', decl: { start: { line: 390, column: 16 }, end: { line: 390, column: 17 } }, loc: { start: { line: 390, column: 32 }, end: { line: 398, column: 3 } }, line: 390 }, '36': { name: 'mapPPByLine', decl: { start: { line: 402, column: 9 }, end: { line: 402, column: 20 } }, loc: { start: { line: 402, column: 30 }, end: { line: 418, column: 1 } }, line: 402 }, '37': { name: 'highlightAllNodesAtSamePP', decl: { start: { line: 420, column: 9 }, end: { line: 420, column: 34 } }, loc: { start: { line: 420, column: 77 }, end: { line: 438, column: 1 } }, line: 420 }, '38': { name: '(anonymous_38)', decl: { start: { line: 422, column: 16 }, end: { line: 422, column: 17 } }, loc: { start: { line: 422, column: 32 }, end: { line: 426, column: 3 } }, line: 422 }, '39': { name: 'handleNewPP', decl: { start: { line: 440, column: 9 }, end: { line: 440, column: 20 } }, loc: { start: { line: 440, column: 38 }, end: { line: 465, column: 1 } }, line: 440 }, '40': { name: 'changeLayout', decl: { start: { line: 467, column: 9 }, end: { line: 467, column: 21 } }, loc: { start: { line: 467, column: 45 }, end: { line: 478, column: 1 } }, line: 467 } }, branchMap: { '0': { loc: { start: { line: 18, column: 2 }, end: { line: 34, column: 3 } }, type: 'if', locations: [{ start: { line: 18, column: 2 }, end: { line: 34, column: 3 } }, { start: { line: 18, column: 2 }, end: { line: 34, column: 3 } }], line: 18 }, '1': { loc: { start: { line: 43, column: 2 }, end: { line: 70, column: 3 } }, type: 'if', locations: [{ start: { line: 43, column: 2 }, end: { line: 70, column: 3 } }, { start: { line: 43, column: 2 }, end: { line: 70, column: 3 } }], line: 43 }, '2': { loc: { start: { line: 46, column: 4 }, end: { line: 55, column: 5 } }, type: 'if', locations: [{ start: { line: 46, column: 4 }, end: { line: 55, column: 5 } }, { start: { line: 46, column: 4 }, end: { line: 55, column: 5 } }], line: 46 }, '3': { loc: { start: { line: 57, column: 9 }, end: { line: 70, column: 3 } }, type: 'if', locations: [{ start: { line: 57, column: 9 }, end: { line: 70, column: 3 } }, { start: { line: 57, column: 9 }, end: { line: 70, column: 3 } }], line: 57 }, '4': { loc: { start: { line: 60, column: 4 }, end: { line: 69, column: 5 } }, type: 'if', locations: [{ start: { line: 60, column: 4 }, end: { line: 69, column: 5 } }, { start: { line: 60, column: 4 }, end: { line: 69, column: 5 } }], line: 60 }, '5': { loc: { start: { line: 81, column: 4 }, end: { line: 84, column: 5 } }, type: 'if', locations: [{ start: { line: 81, column: 4 }, end: { line: 84, column: 5 } }, { start: { line: 81, column: 4 }, end: { line: 84, column: 5 } }], line: 81 }, '6': { loc: { start: { line: 86, column: 4 }, end: { line: 89, column: 5 } }, type: 'if', locations: [{ start: { line: 86, column: 4 }, end: { line: 89, column: 5 } }, { start: { line: 86, column: 4 }, end: { line: 89, column: 5 } }], line: 86 }, '7': { loc: { start: { line: 90, column: 4 }, end: { line: 92, column: 5 } }, type: 'if', locations: [{ start: { line: 90, column: 4 }, end: { line: 92, column: 5 } }, { start: { line: 90, column: 4 }, end: { line: 92, column: 5 } }], line: 90 }, '8': { loc: { start: { line: 104, column: 2 }, end: { line: 106, column: 3 } }, type: 'if', locations: [{ start: { line: 104, column: 2 }, end: { line: 106, column: 3 } }, { start: { line: 104, column: 2 }, end: { line: 106, column: 3 } }], line: 104 }, '9': { loc: { start: { line: 110, column: 2 }, end: { line: 114, column: 3 } }, type: 'if', locations: [{ start: { line: 110, column: 2 }, end: { line: 114, column: 3 } }, { start: { line: 110, column: 2 }, end: { line: 114, column: 3 } }], line: 110 }, '10': { loc: { start: { line: 121, column: 2 }, end: { line: 123, column: 3 } }, type: 'if', locations: [{ start: { line: 121, column: 2 }, end: { line: 123, column: 3 } }, { start: { line: 121, column: 2 }, end: { line: 123, column: 3 } }], line: 121 }, '11': { loc: { start: { line: 124, column: 2 }, end: { line: 126, column: 3 } }, type: 'if', locations: [{ start: { line: 124, column: 2 }, end: { line: 126, column: 3 } }, { start: { line: 124, column: 2 }, end: { line: 126, column: 3 } }], line: 124 }, '12': { loc: { start: { line: 127, column: 2 }, end: { line: 129, column: 3 } }, type: 'if', locations: [{ start: { line: 127, column: 2 }, end: { line: 129, column: 3 } }, { start: { line: 127, column: 2 }, end: { line: 129, column: 3 } }], line: 127 }, '13': { loc: { start: { line: 164, column: 2 }, end: { line: 166, column: 3 } }, type: 'if', locations: [{ start: { line: 164, column: 2 }, end: { line: 166, column: 3 } }, { start: { line: 164, column: 2 }, end: { line: 166, column: 3 } }], line: 164 }, '14': { loc: { start: { line: 168, column: 2 }, end: { line: 170, column: 3 } }, type: 'if', locations: [{ start: { line: 168, column: 2 }, end: { line: 170, column: 3 } }, { start: { line: 168, column: 2 }, end: { line: 170, column: 3 } }], line: 168 }, '15': { loc: { start: { line: 176, column: 2 }, end: { line: 178, column: 3 } }, type: 'if', locations: [{ start: { line: 176, column: 2 }, end: { line: 178, column: 3 } }, { start: { line: 176, column: 2 }, end: { line: 178, column: 3 } }], line: 176 }, '16': { loc: { start: { line: 191, column: 2 }, end: { line: 195, column: 3 } }, type: 'if', locations: [{ start: { line: 191, column: 2 }, end: { line: 195, column: 3 } }, { start: { line: 191, column: 2 }, end: { line: 195, column: 3 } }], line: 191 }, '17': { loc: { start: { line: 217, column: 2 }, end: { line: 227, column: 3 } }, type: 'if', locations: [{ start: { line: 217, column: 2 }, end: { line: 227, column: 3 } }, { start: { line: 217, column: 2 }, end: { line: 227, column: 3 } }], line: 217 }, '18': { loc: { start: { line: 222, column: 6 }, end: { line: 224, column: 7 } }, type: 'if', locations: [{ start: { line: 222, column: 6 }, end: { line: 224, column: 7 } }, { start: { line: 222, column: 6 }, end: { line: 224, column: 7 } }], line: 222 }, '19': { loc: { start: { line: 234, column: 2 }, end: { line: 236, column: 3 } }, type: 'if', locations: [{ start: { line: 234, column: 2 }, end: { line: 236, column: 3 } }, { start: { line: 234, column: 2 }, end: { line: 236, column: 3 } }], line: 234 }, '20': { loc: { start: { line: 234, column: 6 }, end: { line: 234, column: 112 } }, type: 'binary-expr', locations: [{ start: { line: 234, column: 6 }, end: { line: 234, column: 14 } }, { start: { line: 234, column: 19 }, end: { line: 234, column: 46 } }, { start: { line: 234, column: 50 }, end: { line: 234, column: 78 } }, { start: { line: 234, column: 82 }, end: { line: 234, column: 111 } }], line: 234 }, '21': { loc: { start: { line: 238, column: 2 }, end: { line: 240, column: 3 } }, type: 'if', locations: [{ start: { line: 238, column: 2 }, end: { line: 240, column: 3 } }, { start: { line: 238, column: 2 }, end: { line: 240, column: 3 } }], line: 238 }, '22': { loc: { start: { line: 241, column: 2 }, end: { line: 246, column: 3 } }, type: 'if', locations: [{ start: { line: 241, column: 2 }, end: { line: 246, column: 3 } }, { start: { line: 241, column: 2 }, end: { line: 246, column: 3 } }], line: 241 }, '23': { loc: { start: { line: 242, column: 4 }, end: { line: 244, column: 5 } }, type: 'if', locations: [{ start: { line: 242, column: 4 }, end: { line: 244, column: 5 } }, { start: { line: 242, column: 4 }, end: { line: 244, column: 5 } }], line: 242 }, '24': { loc: { start: { line: 247, column: 2 }, end: { line: 253, column: 3 } }, type: 'if', locations: [{ start: { line: 247, column: 2 }, end: { line: 253, column: 3 } }, { start: { line: 247, column: 2 }, end: { line: 253, column: 3 } }], line: 247 }, '25': { loc: { start: { line: 248, column: 4 }, end: { line: 250, column: 5 } }, type: 'if', locations: [{ start: { line: 248, column: 4 }, end: { line: 250, column: 5 } }, { start: { line: 248, column: 4 }, end: { line: 250, column: 5 } }], line: 248 }, '26': { loc: { start: { line: 248, column: 8 }, end: { line: 248, column: 65 } }, type: 'binary-expr', locations: [{ start: { line: 248, column: 8 }, end: { line: 248, column: 35 } }, { start: { line: 248, column: 39 }, end: { line: 248, column: 65 } }], line: 248 }, '27': { loc: { start: { line: 278, column: 2 }, end: { line: 280, column: 3 } }, type: 'if', locations: [{ start: { line: 278, column: 2 }, end: { line: 280, column: 3 } }, { start: { line: 278, column: 2 }, end: { line: 280, column: 3 } }], line: 278 }, '28': { loc: { start: { line: 283, column: 4 }, end: { line: 285, column: 5 } }, type: 'if', locations: [{ start: { line: 283, column: 4 }, end: { line: 285, column: 5 } }, { start: { line: 283, column: 4 }, end: { line: 285, column: 5 } }], line: 283 }, '29': { loc: { start: { line: 308, column: 25 }, end: { line: 308, column: 100 } }, type: 'cond-expr', locations: [{ start: { line: 308, column: 62 }, end: { line: 308, column: 80 } }, { start: { line: 308, column: 83 }, end: { line: 308, column: 100 } }], line: 308 }, '30': { loc: { start: { line: 311, column: 4 }, end: { line: 345, column: 5 } }, type: 'switch', locations: [{ start: { line: 312, column: 6 }, end: { line: 315, column: 14 } }, { start: { line: 316, column: 6 }, end: { line: 320, column: 14 } }, { start: { line: 321, column: 6 }, end: { line: 325, column: 14 } }, { start: { line: 326, column: 6 }, end: { line: 331, column: 14 } }, { start: { line: 332, column: 6 }, end: { line: 335, column: 14 } }, { start: { line: 336, column: 6 }, end: { line: 339, column: 14 } }, { start: { line: 340, column: 6 }, end: { line: 344, column: 14 } }], line: 311 }, '31': { loc: { start: { line: 346, column: 4 }, end: { line: 348, column: 5 } }, type: 'if', locations: [{ start: { line: 346, column: 4 }, end: { line: 348, column: 5 } }, { start: { line: 346, column: 4 }, end: { line: 348, column: 5 } }], line: 346 }, '32': { loc: { start: { line: 349, column: 4 }, end: { line: 351, column: 5 } }, type: 'if', locations: [{ start: { line: 349, column: 4 }, end: { line: 351, column: 5 } }, { start: { line: 349, column: 4 }, end: { line: 351, column: 5 } }], line: 349 }, '33': { loc: { start: { line: 352, column: 4 }, end: { line: 354, column: 5 } }, type: 'if', locations: [{ start: { line: 352, column: 4 }, end: { line: 354, column: 5 } }, { start: { line: 352, column: 4 }, end: { line: 354, column: 5 } }], line: 352 }, '34': { loc: { start: { line: 371, column: 4 }, end: { line: 382, column: 5 } }, type: 'switch', locations: [{ start: { line: 372, column: 6 }, end: { line: 375, column: 14 } }, { start: { line: 376, column: 6 }, end: { line: 379, column: 14 } }, { start: { line: 380, column: 6 }, end: { line: 380, column: 14 } }], line: 371 }, '35': { loc: { start: { line: 392, column: 4 }, end: { line: 397, column: 5 } }, type: 'if', locations: [{ start: { line: 392, column: 4 }, end: { line: 397, column: 5 } }, { start: { line: 392, column: 4 }, end: { line: 397, column: 5 } }], line: 392 }, '36': { loc: { start: { line: 392, column: 8 }, end: { line: 392, column: 32 } }, type: 'binary-expr', locations: [{ start: { line: 392, column: 8 }, end: { line: 392, column: 15 } }, { start: { line: 392, column: 19 }, end: { line: 392, column: 32 } }], line: 392 }, '37': { loc: { start: { line: 393, column: 6 }, end: { line: 395, column: 7 } }, type: 'if', locations: [{ start: { line: 393, column: 6 }, end: { line: 395, column: 7 } }, { start: { line: 393, column: 6 }, end: { line: 395, column: 7 } }], line: 393 }, '38': { loc: { start: { line: 408, column: 4 }, end: { line: 415, column: 5 } }, type: 'if', locations: [{ start: { line: 408, column: 4 }, end: { line: 415, column: 5 } }, { start: { line: 408, column: 4 }, end: { line: 415, column: 5 } }], line: 408 }, '39': { loc: { start: { line: 408, column: 8 }, end: { line: 408, column: 54 } }, type: 'binary-expr', locations: [{ start: { line: 408, column: 8 }, end: { line: 408, column: 28 } }, { start: { line: 408, column: 32 }, end: { line: 408, column: 54 } }], line: 408 }, '40': { loc: { start: { line: 410, column: 11 }, end: { line: 415, column: 5 } }, type: 'if', locations: [{ start: { line: 410, column: 11 }, end: { line: 415, column: 5 } }, { start: { line: 410, column: 11 }, end: { line: 415, column: 5 } }], line: 410 }, '41': { loc: { start: { line: 412, column: 11 }, end: { line: 415, column: 5 } }, type: 'if', locations: [{ start: { line: 412, column: 11 }, end: { line: 415, column: 5 } }, { start: { line: 412, column: 11 }, end: { line: 415, column: 5 } }], line: 412 }, '42': { loc: { start: { line: 423, column: 4 }, end: { line: 425, column: 5 } }, type: 'if', locations: [{ start: { line: 423, column: 4 }, end: { line: 425, column: 5 } }, { start: { line: 423, column: 4 }, end: { line: 425, column: 5 } }], line: 423 }, '43': { loc: { start: { line: 430, column: 2 }, end: { line: 433, column: 3 } }, type: 'if', locations: [{ start: { line: 430, column: 2 }, end: { line: 433, column: 3 } }, { start: { line: 430, column: 2 }, end: { line: 433, column: 3 } }], line: 430 }, '44': { loc: { start: { line: 443, column: 2 }, end: { line: 446, column: 3 } }, type: 'if', locations: [{ start: { line: 443, column: 2 }, end: { line: 446, column: 3 } }, { start: { line: 443, column: 2 }, end: { line: 446, column: 3 } }], line: 443 }, '45': { loc: { start: { line: 454, column: 4 }, end: { line: 457, column: 5 } }, type: 'if', locations: [{ start: { line: 454, column: 4 }, end: { line: 457, column: 5 } }, { start: { line: 454, column: 4 }, end: { line: 457, column: 5 } }], line: 454 }, '46': { loc: { start: { line: 461, column: 2 }, end: { line: 463, column: 3 } }, type: 'if', locations: [{ start: { line: 461, column: 2 }, end: { line: 463, column: 3 } }, { start: { line: 461, column: 2 }, end: { line: 463, column: 3 } }], line: 461 }, '47': { loc: { start: { line: 469, column: 2 }, end: { line: 476, column: 3 } }, type: 'if', locations: [{ start: { line: 469, column: 2 }, end: { line: 476, column: 3 } }, { start: { line: 469, column: 2 }, end: { line: 476, column: 3 } }], line: 469 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0, '23': 0, '24': 0, '25': 0, '26': 0, '27': 0, '28': 0, '29': 0, '30': 0, '31': 0, '32': 0, '33': 0, '34': 0, '35': 0, '36': 0, '37': 0, '38': 0, '39': 0, '40': 0, '41': 0, '42': 0, '43': 0, '44': 0, '45': 0, '46': 0, '47': 0, '48': 0, '49': 0, '50': 0, '51': 0, '52': 0, '53': 0, '54': 0, '55': 0, '56': 0, '57': 0, '58': 0, '59': 0, '60': 0, '61': 0, '62': 0, '63': 0, '64': 0, '65': 0, '66': 0, '67': 0, '68': 0, '69': 0, '70': 0, '71': 0, '72': 0, '73': 0, '74': 0, '75': 0, '76': 0, '77': 0, '78': 0, '79': 0, '80': 0, '81': 0, '82': 0, '83': 0, '84': 0, '85': 0, '86': 0, '87': 0, '88': 0, '89': 0, '90': 0, '91': 0, '92': 0, '93': 0, '94': 0, '95': 0, '96': 0, '97': 0, '98': 0, '99': 0, '100': 0, '101': 0, '102': 0, '103': 0, '104': 0, '105': 0, '106': 0, '107': 0, '108': 0, '109': 0, '110': 0, '111': 0, '112': 0, '113': 0, '114': 0, '115': 0, '116': 0, '117': 0, '118': 0, '119': 0, '120': 0, '121': 0, '122': 0, '123': 0, '124': 0, '125': 0, '126': 0, '127': 0, '128': 0, '129': 0, '130': 0, '131': 0, '132': 0, '133': 0, '134': 0, '135': 0, '136': 0, '137': 0, '138': 0, '139': 0, '140': 0, '141': 0, '142': 0, '143': 0, '144': 0, '145': 0, '146': 0, '147': 0, '148': 0, '149': 0, '150': 0, '151': 0, '152': 0, '153': 0, '154': 0, '155': 0, '156': 0, '157': 0, '158': 0, '159': 0, '160': 0, '161': 0, '162': 0, '163': 0, '164': 0, '165': 0, '166': 0, '167': 0, '168': 0, '169': 0, '170': 0, '171': 0, '172': 0, '173': 0, '174': 0, '175': 0, '176': 0, '177': 0, '178': 0, '179': 0, '180': 0, '181': 0, '182': 0, '183': 0, '184': 0, '185': 0, '186': 0, '187': 0, '188': 0, '189': 0, '190': 0, '191': 0, '192': 0, '193': 0, '194': 0, '195': 0, '196': 0, '197': 0, '198': 0, '199': 0, '200': 0, '201': 0, '202': 0, '203': 0, '204': 0, '205': 0, '206': 0, '207': 0, '208': 0, '209': 0, '210': 0, '211': 0, '212': 0, '213': 0, '214': 0, '215': 0, '216': 0, '217': 0, '218': 0, '219': 0, '220': 0, '221': 0, '222': 0, '223': 0, '224': 0, '225': 0, '226': 0, '227': 0, '228': 0, '229': 0, '230': 0, '231': 0, '232': 0, '233': 0, '234': 0, '235': 0, '236': 0, '237': 0, '238': 0, '239': 0, '240': 0, '241': 0, '242': 0, '243': 0, '244': 0, '245': 0, '246': 0, '247': 0, '248': 0, '249': 0, '250': 0, '251': 0, '252': 0, '253': 0, '254': 0, '255': 0, '256': 0, '257': 0, '258': 0, '259': 0, '260': 0, '261': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0, '23': 0, '24': 0, '25': 0, '26': 0, '27': 0, '28': 0, '29': 0, '30': 0, '31': 0, '32': 0, '33': 0, '34': 0, '35': 0, '36': 0, '37': 0, '38': 0, '39': 0, '40': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0], '5': [0, 0], '6': [0, 0], '7': [0, 0], '8': [0, 0], '9': [0, 0], '10': [0, 0], '11': [0, 0], '12': [0, 0], '13': [0, 0], '14': [0, 0], '15': [0, 0], '16': [0, 0], '17': [0, 0], '18': [0, 0], '19': [0, 0], '20': [0, 0, 0, 0], '21': [0, 0], '22': [0, 0], '23': [0, 0], '24': [0, 0], '25': [0, 0], '26': [0, 0], '27': [0, 0], '28': [0, 0], '29': [0, 0], '30': [0, 0, 0, 0, 0, 0, 0], '31': [0, 0], '32': [0, 0], '33': [0, 0], '34': [0, 0, 0], '35': [0, 0], '36': [0, 0], '37': [0, 0], '38': [0, 0], '39': [0, 0], '40': [0, 0], '41': [0, 0], '42': [0, 0], '43': [0, 0], '44': [0, 0], '45': [0, 0], '46': [0, 0], '47': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();function loadDot(DOTstring, targetContainer, hierarchical, detailsPanels) {/* istanbul ignore next */cov_pe70b9nz6.f[0]++;
  const parsedData = /* istanbul ignore next */(cov_pe70b9nz6.s[0]++, vis.network.convertDot(DOTstring));

  const data = /* istanbul ignore next */(cov_pe70b9nz6.s[1]++, {
    nodes: new vis.DataSet(parsedData.nodes),
    edges: new vis.DataSet(parsedData.edges) }); /* istanbul ignore next */cov_pe70b9nz6.s[2]++;


  updateDetails(data.nodes); /* istanbul ignore next */cov_pe70b9nz6.s[3]++;
  updateDetails(data.edges); /* istanbul ignore next */cov_pe70b9nz6.s[4]++;

  setNodesColor(data.nodes); /* istanbul ignore next */cov_pe70b9nz6.s[5]++;
  setEdgesColor(data.edges);

  let network = /* istanbul ignore next */(cov_pe70b9nz6.s[6]++, new vis.Network(targetContainer, data)); /* istanbul ignore next */cov_pe70b9nz6.s[7]++;
  changeLayout(network, hierarchical); /* istanbul ignore next */cov_pe70b9nz6.s[8]++;

  if (detailsPanels) {/* istanbul ignore next */cov_pe70b9nz6.b[0][0]++;cov_pe70b9nz6.s[9]++;
    // by default only show info panel
    detailsPanels['info'].show(); /* istanbul ignore next */cov_pe70b9nz6.s[10]++;
    detailsPanels['node'].hide(); /* istanbul ignore next */cov_pe70b9nz6.s[11]++;
    detailsPanels['edge'].hide();

    const ppMap = /* istanbul ignore next */(cov_pe70b9nz6.s[12]++, getPPMap(data.nodes));
    // enrich network with mapping between PP and nodes
    /* istanbul ignore next */cov_pe70b9nz6.s[13]++;network['eg'] = {
      'ppMap': ppMap,
      'nodes': data.nodes }; /* istanbul ignore next */cov_pe70b9nz6.s[14]++;


    network.on('click', function (params) {/* istanbul ignore next */cov_pe70b9nz6.f[1]++;cov_pe70b9nz6.s[15]++;
      clickAction(params, data, network, detailsPanels);
    });
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[0][1]++;}cov_pe70b9nz6.s[16]++;

  return network;
}

function clickAction(params, data, network, detailsPanels) {/* istanbul ignore next */cov_pe70b9nz6.f[2]++;cov_pe70b9nz6.s[17]++;
  // reset any custom color from selection
  setNodesColor(data.nodes); /* istanbul ignore next */cov_pe70b9nz6.s[18]++;

  if (params.nodes.length === 1) {/* istanbul ignore next */cov_pe70b9nz6.b[1][0]++;
    const node = /* istanbul ignore next */(cov_pe70b9nz6.s[19]++, data.nodes.get(params.nodes[0])); /* istanbul ignore next */cov_pe70b9nz6.s[20]++;

    if (node) {/* istanbul ignore next */cov_pe70b9nz6.b[2][0]++;
      const nodeHtmlContent = /* istanbul ignore next */(cov_pe70b9nz6.s[21]++, getNodeDetails(node['details'])); /* istanbul ignore next */cov_pe70b9nz6.s[22]++;

      detailsPanels['info'].hide(); /* istanbul ignore next */cov_pe70b9nz6.s[23]++;
      detailsPanels['node'].find('#nodeDetails-content').html(nodeHtmlContent); /* istanbul ignore next */cov_pe70b9nz6.s[24]++;
      detailsPanels['node'].show(); /* istanbul ignore next */cov_pe70b9nz6.s[25]++;
      detailsPanels['node'].find('.collapse').collapse('show'); /* istanbul ignore next */cov_pe70b9nz6.s[26]++;
      detailsPanels['edge'].hide(); /* istanbul ignore next */cov_pe70b9nz6.s[27]++;
      return;
    } else /* istanbul ignore next */{cov_pe70b9nz6.b[2][1]++;}

  } else {/* istanbul ignore next */cov_pe70b9nz6.b[1][1]++;cov_pe70b9nz6.s[28]++;if (params.edges.length === 1) {/* istanbul ignore next */cov_pe70b9nz6.b[3][0]++;
        const edge = /* istanbul ignore next */(cov_pe70b9nz6.s[29]++, data.edges.get(params.edges[0])); /* istanbul ignore next */cov_pe70b9nz6.s[30]++;

        if (edge) {/* istanbul ignore next */cov_pe70b9nz6.b[4][0]++;
          const nodeHtmlContent = /* istanbul ignore next */(cov_pe70b9nz6.s[31]++, getEdgeDetails(edge['details'])); /* istanbul ignore next */cov_pe70b9nz6.s[32]++;

          detailsPanels['info'].hide(); /* istanbul ignore next */cov_pe70b9nz6.s[33]++;
          detailsPanels['node'].hide(); /* istanbul ignore next */cov_pe70b9nz6.s[34]++;
          detailsPanels['edge'].find('#edgeDetails-content').html(nodeHtmlContent); /* istanbul ignore next */cov_pe70b9nz6.s[35]++;
          detailsPanels['edge'].show(); /* istanbul ignore next */cov_pe70b9nz6.s[36]++;
          detailsPanels['edge'].find('.collapse').collapse('show'); /* istanbul ignore next */cov_pe70b9nz6.s[37]++;
          return;
        } else /* istanbul ignore next */{cov_pe70b9nz6.b[4][1]++;}
      } else /* istanbul ignore next */{cov_pe70b9nz6.b[3][1]++;}} /* istanbul ignore next */cov_pe70b9nz6.s[38]++;

  detailsPanels['info'].hide(); /* istanbul ignore next */cov_pe70b9nz6.s[39]++;
  detailsPanels['node'].hide(); /* istanbul ignore next */cov_pe70b9nz6.s[40]++;
  detailsPanels['edge'].hide();
}

function updateDetails(collection) {/* istanbul ignore next */cov_pe70b9nz6.f[3]++;cov_pe70b9nz6.s[41]++;
  collection.forEach(function (item) {/* istanbul ignore next */cov_pe70b9nz6.f[4]++;
    let changed = /* istanbul ignore next */(cov_pe70b9nz6.s[42]++, false);
    const label = /* istanbul ignore next */(cov_pe70b9nz6.s[43]++, item['label']); /* istanbul ignore next */cov_pe70b9nz6.s[44]++;
    if (label) {/* istanbul ignore next */cov_pe70b9nz6.b[5][0]++;cov_pe70b9nz6.s[45]++;
      item['label'] = unescapeSpecialChars(item['label']); /* istanbul ignore next */cov_pe70b9nz6.s[46]++;
      changed = true;
    } else /* istanbul ignore next */{cov_pe70b9nz6.b[5][1]++;}
    const details = /* istanbul ignore next */(cov_pe70b9nz6.s[47]++, item['details']); /* istanbul ignore next */cov_pe70b9nz6.s[48]++;
    if (details) {/* istanbul ignore next */cov_pe70b9nz6.b[6][0]++;cov_pe70b9nz6.s[49]++;
      item['details'] = JSON.parse(details.replace(/\?/g, '"')); /* istanbul ignore next */cov_pe70b9nz6.s[50]++;
      changed = true;
    } else /* istanbul ignore next */{cov_pe70b9nz6.b[6][1]++;}cov_pe70b9nz6.s[51]++;
    if (changed) {/* istanbul ignore next */cov_pe70b9nz6.b[7][0]++;cov_pe70b9nz6.s[52]++;
      collection.update(item);
    } else /* istanbul ignore next */{cov_pe70b9nz6.b[7][1]++;}
  });
}

function unescapeSpecialChars(text) {/* istanbul ignore next */cov_pe70b9nz6.f[5]++;
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[53]++, text); /* istanbul ignore next */cov_pe70b9nz6.s[54]++;
  result = result.replace(/&quest;/g, '?'); /* istanbul ignore next */cov_pe70b9nz6.s[55]++;
  result = result.replace(/&quot;/g, '"'); /* istanbul ignore next */cov_pe70b9nz6.s[56]++;
  return result;
}

function getNodeDetails(details) {/* istanbul ignore next */cov_pe70b9nz6.f[6]++;cov_pe70b9nz6.s[57]++;
  if (!details) {/* istanbul ignore next */cov_pe70b9nz6.b[8][0]++;cov_pe70b9nz6.s[58]++;
    return '<em>No data...</em>';
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[8][1]++;}
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[59]++, '<h3>Program State</h3>'); /* istanbul ignore next */cov_pe70b9nz6.s[60]++;
  result += getProgramState(details); /* istanbul ignore next */cov_pe70b9nz6.s[61]++;

  if (details.methodYields) {/* istanbul ignore next */cov_pe70b9nz6.b[9][0]++;cov_pe70b9nz6.s[62]++;
    result += '<hr>'; /* istanbul ignore next */cov_pe70b9nz6.s[63]++;
    result += `<h3>Method Yields: ${details.methodName}(...)</h3>`; /* istanbul ignore next */cov_pe70b9nz6.s[64]++;
    result += getMethodYields(details.methodYields);
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[9][1]++;}cov_pe70b9nz6.s[65]++;

  return result;
}

function getProgramState(details) {/* istanbul ignore next */cov_pe70b9nz6.f[7]++;
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[66]++, ''); /* istanbul ignore next */cov_pe70b9nz6.s[67]++;
  if (details.psValues) {/* istanbul ignore next */cov_pe70b9nz6.b[10][0]++;cov_pe70b9nz6.s[68]++;
    result += tableLine('Values', getValues(details.psValues));
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[10][1]++;}cov_pe70b9nz6.s[69]++;
  if (details.psConstraints) {/* istanbul ignore next */cov_pe70b9nz6.b[11][0]++;cov_pe70b9nz6.s[70]++;
    result += tableLine('Constraints', getConstraints(details.psConstraints));
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[11][1]++;}cov_pe70b9nz6.s[71]++;
  if (details.psStack) {/* istanbul ignore next */cov_pe70b9nz6.b[12][0]++;cov_pe70b9nz6.s[72]++;
    result += tableLine('Stack', getStack(details.psStack));
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[12][1]++;}cov_pe70b9nz6.s[73]++;
  return table(result, 'programState-table');
}

function getMethodYields(methodYields) {/* istanbul ignore next */cov_pe70b9nz6.f[8]++;
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[74]++, '<tr>'); /* istanbul ignore next */cov_pe70b9nz6.s[75]++;
  result += '<th></th>'; /* istanbul ignore next */cov_pe70b9nz6.s[76]++;
  result += '<th>Parameters constraints</th>'; /* istanbul ignore next */cov_pe70b9nz6.s[77]++;
  result += '<th>Result constraint / Thrown exception</th>'; /* istanbul ignore next */cov_pe70b9nz6.s[78]++;
  result += '</tr>';
  let methodYieldNumber = /* istanbul ignore next */(cov_pe70b9nz6.s[79]++, 1); /* istanbul ignore next */cov_pe70b9nz6.s[80]++;
  methodYields.forEach(function (methodYield) {/* istanbul ignore next */cov_pe70b9nz6.f[9]++;cov_pe70b9nz6.s[81]++;
    result += getMethodYield(methodYield, methodYieldNumber); /* istanbul ignore next */cov_pe70b9nz6.s[82]++;
    methodYieldNumber++;
  }); /* istanbul ignore next */cov_pe70b9nz6.s[83]++;
  return table(result, 'methodYield-table');
}

function getMethodYield(methodYield, id) {/* istanbul ignore next */cov_pe70b9nz6.f[10]++;
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[84]++, ''); /* istanbul ignore next */cov_pe70b9nz6.s[85]++;
  result += tableCell(`#${id}`); /* istanbul ignore next */cov_pe70b9nz6.s[86]++;
  result += tableCell(methodParameters(methodYield.params)); /* istanbul ignore next */cov_pe70b9nz6.s[87]++;
  result += tableCell(methodResult(methodYield.result, methodYield.resultIndex, methodYield.exception)); /* istanbul ignore next */cov_pe70b9nz6.s[88]++;
  return tableRow(result);
}

function methodParameters(params) {/* istanbul ignore next */cov_pe70b9nz6.f[11]++;
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[89]++, ''); /* istanbul ignore next */cov_pe70b9nz6.s[90]++;
  for (let i = 0; i < params.length; i++) {/* istanbul ignore next */cov_pe70b9nz6.s[91]++;
    result += tableLine(`arg${i}`, params[i]);
  } /* istanbul ignore next */cov_pe70b9nz6.s[92]++;
  return table(result, 'innerTable');
}

function methodResult(resultConstraints, resultIndex, exception) {/* istanbul ignore next */cov_pe70b9nz6.f[12]++;cov_pe70b9nz6.s[93]++;
  if (exception) {/* istanbul ignore next */cov_pe70b9nz6.b[13][0]++;cov_pe70b9nz6.s[94]++;
    return `<code>${exception}</code>`;
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[13][1]++;}
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[95]++, resultConstraints); /* istanbul ignore next */cov_pe70b9nz6.s[96]++;
  if (resultIndex !== -1) {/* istanbul ignore next */cov_pe70b9nz6.b[14][0]++;cov_pe70b9nz6.s[97]++;
    result += ` (arg${resultIndex})`;
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[14][1]++;}cov_pe70b9nz6.s[98]++;
  return result;
}

function table(content, style) {/* istanbul ignore next */cov_pe70b9nz6.f[13]++;
  let classStyle = /* istanbul ignore next */(cov_pe70b9nz6.s[99]++, ''); /* istanbul ignore next */cov_pe70b9nz6.s[100]++;
  if (style) {/* istanbul ignore next */cov_pe70b9nz6.b[15][0]++;cov_pe70b9nz6.s[101]++;
    classStyle = ` class="${style}"`;
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[15][1]++;}cov_pe70b9nz6.s[102]++;
  return `<table${classStyle}>${content}</table>`;
}

function tableCell(value) {/* istanbul ignore next */cov_pe70b9nz6.f[14]++;cov_pe70b9nz6.s[103]++;
  return `<td>${value}</td>`;
}

function tableRow(value) {/* istanbul ignore next */cov_pe70b9nz6.f[15]++;cov_pe70b9nz6.s[104]++;
  return `<tr>${value}</tr>`;
}

function tableLine(label, value) {/* istanbul ignore next */cov_pe70b9nz6.f[16]++;cov_pe70b9nz6.s[105]++;
  if (value) {/* istanbul ignore next */cov_pe70b9nz6.b[16][0]++;
    const c1 = /* istanbul ignore next */(cov_pe70b9nz6.s[106]++, tableCell(label));
    const c2 = /* istanbul ignore next */(cov_pe70b9nz6.s[107]++, tableCell(value)); /* istanbul ignore next */cov_pe70b9nz6.s[108]++;
    return tableRow(c1 + c2);
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[16][1]++;}cov_pe70b9nz6.s[109]++;
  return '';
}

function getValues(values) {/* istanbul ignore next */cov_pe70b9nz6.f[17]++;
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[110]++, ''); /* istanbul ignore next */cov_pe70b9nz6.s[111]++;
  values.forEach(function (value) {/* istanbul ignore next */cov_pe70b9nz6.f[18]++;cov_pe70b9nz6.s[112]++;
    result += tableLine(value['symbol'], value['sv']);
  }); /* istanbul ignore next */cov_pe70b9nz6.s[113]++;
  return table(result, 'innerTable');
}

function getConstraints(constraints) {/* istanbul ignore next */cov_pe70b9nz6.f[19]++;
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[114]++, ''); /* istanbul ignore next */cov_pe70b9nz6.s[115]++;
  constraints.forEach(function (constraint) {/* istanbul ignore next */cov_pe70b9nz6.f[20]++;cov_pe70b9nz6.s[116]++;
    result += tableLine(constraint['sv'], constraint['constraints']);
  }); /* istanbul ignore next */cov_pe70b9nz6.s[117]++;
  return table(result, 'innerTable');
}

function getStack(items) {/* istanbul ignore next */cov_pe70b9nz6.f[21]++;
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[118]++, '<ul class="list-group">'); /* istanbul ignore next */cov_pe70b9nz6.s[119]++;
  if (items.length === 0) {/* istanbul ignore next */cov_pe70b9nz6.b[17][0]++;cov_pe70b9nz6.s[120]++;
    result += '<li class="list-group-item"><em>empty</em></li>';
  } else {/* istanbul ignore next */cov_pe70b9nz6.b[17][1]++;cov_pe70b9nz6.s[121]++;
    items.forEach(function (item) {/* istanbul ignore next */cov_pe70b9nz6.f[22]++;
      let symbol = /* istanbul ignore next */(cov_pe70b9nz6.s[122]++, item['symbol']); /* istanbul ignore next */cov_pe70b9nz6.s[123]++;
      if (!symbol) {/* istanbul ignore next */cov_pe70b9nz6.b[18][0]++;cov_pe70b9nz6.s[124]++;
        symbol = '';
      } else /* istanbul ignore next */{cov_pe70b9nz6.b[18][1]++;}cov_pe70b9nz6.s[125]++;
      result += `<li class="list-group-item">${item['sv']}<sub>${symbol}</sub></li>`;
    });
  } /* istanbul ignore next */cov_pe70b9nz6.s[126]++;
  result += '</ul>'; /* istanbul ignore next */cov_pe70b9nz6.s[127]++;

  return result;
}

function getEdgeDetails(details) {/* istanbul ignore next */cov_pe70b9nz6.f[23]++;cov_pe70b9nz6.s[128]++;
  if ( /* istanbul ignore next */(cov_pe70b9nz6.b[20][0]++, !details) || /* istanbul ignore next */(cov_pe70b9nz6.b[20][1]++, !details.learnedConstraints) && /* istanbul ignore next */(cov_pe70b9nz6.b[20][2]++, !details.learnedAssociations) && /* istanbul ignore next */(cov_pe70b9nz6.b[20][3]++, !details.selectedMethodYields)) {/* istanbul ignore next */cov_pe70b9nz6.b[19][0]++;cov_pe70b9nz6.s[129]++;
    return '<em>No data...</em>';
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[19][1]++;}
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[130]++, ''); /* istanbul ignore next */cov_pe70b9nz6.s[131]++;
  if (details.learnedConstraints) {/* istanbul ignore next */cov_pe70b9nz6.b[21][0]++;cov_pe70b9nz6.s[132]++;
    result += getLearnedConstraints(details.learnedConstraints);
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[21][1]++;}cov_pe70b9nz6.s[133]++;
  if (details.learnedAssociations) {/* istanbul ignore next */cov_pe70b9nz6.b[22][0]++;cov_pe70b9nz6.s[134]++;
    if (details.learnedConstraints) {/* istanbul ignore next */cov_pe70b9nz6.b[23][0]++;cov_pe70b9nz6.s[135]++;
      result += '<hr>';
    } else /* istanbul ignore next */{cov_pe70b9nz6.b[23][1]++;}cov_pe70b9nz6.s[136]++;
    result += getLearnedAssociations(details.learnedAssociations);
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[22][1]++;}cov_pe70b9nz6.s[137]++;
  if (details.selectedMethodYields) {/* istanbul ignore next */cov_pe70b9nz6.b[24][0]++;cov_pe70b9nz6.s[138]++;
    if ( /* istanbul ignore next */(cov_pe70b9nz6.b[26][0]++, details.learnedAssociations) || /* istanbul ignore next */(cov_pe70b9nz6.b[26][1]++, details.learnedConstraints)) {/* istanbul ignore next */cov_pe70b9nz6.b[25][0]++;cov_pe70b9nz6.s[139]++;
      result += '<hr>';
    } else /* istanbul ignore next */{cov_pe70b9nz6.b[25][1]++;}cov_pe70b9nz6.s[140]++;
    result += '<h3>Selected method yields</h3>'; /* istanbul ignore next */cov_pe70b9nz6.s[141]++;
    result += getMethodYields(details.selectedMethodYields);
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[24][1]++;}cov_pe70b9nz6.s[142]++;
  return result;
}

function getLearnedConstraints(lcs) {/* istanbul ignore next */cov_pe70b9nz6.f[24]++;
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[143]++, '<h3>Learned constraints</h3>'); /* istanbul ignore next */cov_pe70b9nz6.s[144]++;
  result += '<table>'; /* istanbul ignore next */cov_pe70b9nz6.s[145]++;
  lcs.forEach(function (lc) {/* istanbul ignore next */cov_pe70b9nz6.f[25]++;cov_pe70b9nz6.s[146]++;
    result += tableLine(lc['sv'], lc['constraint']);
  }); /* istanbul ignore next */cov_pe70b9nz6.s[147]++;
  result += '</table>'; /* istanbul ignore next */cov_pe70b9nz6.s[148]++;
  return result;
}

function getLearnedAssociations(las) {/* istanbul ignore next */cov_pe70b9nz6.f[26]++;
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[149]++, '<h3>Learned associations</h3>'); /* istanbul ignore next */cov_pe70b9nz6.s[150]++;
  result += '<table>'; /* istanbul ignore next */cov_pe70b9nz6.s[151]++;
  las.forEach(function (la) {/* istanbul ignore next */cov_pe70b9nz6.f[27]++;cov_pe70b9nz6.s[152]++;
    result += tableLine(la['symbol'], la['sv']);
  }); /* istanbul ignore next */cov_pe70b9nz6.s[153]++;
  result += '</table>'; /* istanbul ignore next */cov_pe70b9nz6.s[154]++;
  return result;
}

function inArray(value, array) {/* istanbul ignore next */cov_pe70b9nz6.f[28]++;cov_pe70b9nz6.s[155]++;
  if (!array) {/* istanbul ignore next */cov_pe70b9nz6.b[27][0]++;cov_pe70b9nz6.s[156]++;
    return false;
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[27][1]++;}
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[157]++, false); /* istanbul ignore next */cov_pe70b9nz6.s[158]++;
  array.forEach(function (item) {/* istanbul ignore next */cov_pe70b9nz6.f[29]++;cov_pe70b9nz6.s[159]++;
    if (item === value) {/* istanbul ignore next */cov_pe70b9nz6.b[28][0]++;cov_pe70b9nz6.s[160]++;
      result = true;
    } else /* istanbul ignore next */{cov_pe70b9nz6.b[28][1]++;}
  }); /* istanbul ignore next */cov_pe70b9nz6.s[161]++;
  return result;
}

function setNodesColor(nodes, selectedNodesIds, forcedHighlighting) {/* istanbul ignore next */cov_pe70b9nz6.f[30]++;cov_pe70b9nz6.s[162]++;
  nodes.forEach(function (node) {/* istanbul ignore next */cov_pe70b9nz6.f[31]++;cov_pe70b9nz6.s[163]++;
    // common properties
    node['color'] = {
      background: '#eee',
      border: 'gray',
      highlight: {
        background: 'yellow',
        border: 'gold' } }; /* istanbul ignore next */cov_pe70b9nz6.s[164]++;


    node['font'] = {
      size: 12,
      face: 'monospace',
      color: '#333',
      align: 'left' };


    const highlighting = /* istanbul ignore next */(cov_pe70b9nz6.s[165]++, inArray(node.id, selectedNodesIds) ? /* istanbul ignore next */(cov_pe70b9nz6.b[29][0]++, forcedHighlighting) : /* istanbul ignore next */(cov_pe70b9nz6.b[29][1]++, node.highlighting));

    let newBackgroundColor, newBorderColor, newFontColor; /* istanbul ignore next */cov_pe70b9nz6.s[166]++;
    switch (highlighting) {
      case 'firstNode': /* istanbul ignore next */cov_pe70b9nz6.b[30][0]++;cov_pe70b9nz6.s[167]++;
        newBackgroundColor = 'palegreen'; /* istanbul ignore next */cov_pe70b9nz6.s[168]++;
        newBorderColor = 'limegreen'; /* istanbul ignore next */cov_pe70b9nz6.s[169]++;
        break;
      case 'exitNode': /* istanbul ignore next */cov_pe70b9nz6.b[30][1]++;cov_pe70b9nz6.s[170]++;
        newBackgroundColor = 'black'; /* istanbul ignore next */cov_pe70b9nz6.s[171]++;
        newBorderColor = 'dimgray'; /* istanbul ignore next */cov_pe70b9nz6.s[172]++;
        newFontColor = 'white'; /* istanbul ignore next */cov_pe70b9nz6.s[173]++;
        break;
      case 'lostNode': /* istanbul ignore next */cov_pe70b9nz6.b[30][2]++;cov_pe70b9nz6.s[174]++;
        newBackgroundColor = 'red'; /* istanbul ignore next */cov_pe70b9nz6.s[175]++;
        newBorderColor = 'firebrick'; /* istanbul ignore next */cov_pe70b9nz6.s[176]++;
        newFontColor = 'white'; /* istanbul ignore next */cov_pe70b9nz6.s[177]++;
        break;
      case 'tokenKind': /* istanbul ignore next */cov_pe70b9nz6.b[30][3]++;cov_pe70b9nz6.s[178]++;
        newBackgroundColor = 'black'; /* istanbul ignore next */cov_pe70b9nz6.s[179]++;
        newBorderColor = 'dimgray'; /* istanbul ignore next */cov_pe70b9nz6.s[180]++;
        newFontColor = 'white'; /* istanbul ignore next */cov_pe70b9nz6.s[181]++;
        node['shape'] = 'box'; /* istanbul ignore next */cov_pe70b9nz6.s[182]++;
        break;
      case 'classKind': /* istanbul ignore next */cov_pe70b9nz6.b[30][4]++;cov_pe70b9nz6.s[183]++;
        newBackgroundColor = 'pink'; /* istanbul ignore next */cov_pe70b9nz6.s[184]++;
        newBorderColor = 'red'; /* istanbul ignore next */cov_pe70b9nz6.s[185]++;
        break;
      case 'methodKind': /* istanbul ignore next */cov_pe70b9nz6.b[30][5]++;cov_pe70b9nz6.s[186]++;
        newBackgroundColor = 'skyblue'; /* istanbul ignore next */cov_pe70b9nz6.s[187]++;
        newBorderColor = 'blue'; /* istanbul ignore next */cov_pe70b9nz6.s[188]++;
        break;
      case 'samePP': /* istanbul ignore next */cov_pe70b9nz6.b[30][6]++;cov_pe70b9nz6.s[189]++;
        newBackgroundColor = 'pink'; /* istanbul ignore next */cov_pe70b9nz6.s[190]++;
        newBorderColor = 'mediumvioletred'; /* istanbul ignore next */cov_pe70b9nz6.s[191]++;
        newFontColor = 'black'; /* istanbul ignore next */cov_pe70b9nz6.s[192]++;
        break;} /* istanbul ignore next */cov_pe70b9nz6.s[193]++;

    if (newBackgroundColor) {/* istanbul ignore next */cov_pe70b9nz6.b[31][0]++;cov_pe70b9nz6.s[194]++;
      node['color']['background'] = newBackgroundColor;
    } else /* istanbul ignore next */{cov_pe70b9nz6.b[31][1]++;}cov_pe70b9nz6.s[195]++;
    if (newBorderColor) {/* istanbul ignore next */cov_pe70b9nz6.b[32][0]++;cov_pe70b9nz6.s[196]++;
      node['color']['border'] = newBorderColor;
    } else /* istanbul ignore next */{cov_pe70b9nz6.b[32][1]++;}cov_pe70b9nz6.s[197]++;
    if (newFontColor) {/* istanbul ignore next */cov_pe70b9nz6.b[33][0]++;cov_pe70b9nz6.s[198]++;
      node['font']['color'] = newFontColor;
    } else /* istanbul ignore next */{cov_pe70b9nz6.b[33][1]++;}cov_pe70b9nz6.s[199]++;
    nodes.update(node);
  });
}

function setEdgesColor(edges) {/* istanbul ignore next */cov_pe70b9nz6.f[32]++;cov_pe70b9nz6.s[200]++;
  edges.forEach(function (edge) {/* istanbul ignore next */cov_pe70b9nz6.f[33]++;cov_pe70b9nz6.s[201]++;
    // common properties
    edge['color'] = {
      color: 'gray',
      highlight: 'yellow' }; /* istanbul ignore next */cov_pe70b9nz6.s[202]++;

    edge['font'] = {
      size: 10,
      color: 'gray' }; /* istanbul ignore next */cov_pe70b9nz6.s[203]++;


    switch (edge.highlighting) {
      case 'exceptionEdge': /* istanbul ignore next */cov_pe70b9nz6.b[34][0]++;cov_pe70b9nz6.s[204]++;
        edge['color']['color'] = 'red'; /* istanbul ignore next */cov_pe70b9nz6.s[205]++;
        edge['font']['color'] = 'red'; /* istanbul ignore next */cov_pe70b9nz6.s[206]++;
        break;
      case 'yieldEdge': /* istanbul ignore next */cov_pe70b9nz6.b[34][1]++;cov_pe70b9nz6.s[207]++;
        edge['color']['color'] = 'purple'; /* istanbul ignore next */cov_pe70b9nz6.s[208]++;
        edge['font']['color'] = 'purple'; /* istanbul ignore next */cov_pe70b9nz6.s[209]++;
        break;
      default: /* istanbul ignore next */cov_pe70b9nz6.b[34][2]++;
      // do nothing
    } /* istanbul ignore next */cov_pe70b9nz6.s[210]++;

    edges.update(edge);
  });
}

function getPPMap(nodes) {/* istanbul ignore next */cov_pe70b9nz6.f[34]++;
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[211]++, {}); /* istanbul ignore next */cov_pe70b9nz6.s[212]++;
  nodes.forEach(function (node) {/* istanbul ignore next */cov_pe70b9nz6.f[35]++;
    const details = /* istanbul ignore next */(cov_pe70b9nz6.s[213]++, node['details']); /* istanbul ignore next */cov_pe70b9nz6.s[214]++;
    if ( /* istanbul ignore next */(cov_pe70b9nz6.b[36][0]++, details) && /* istanbul ignore next */(cov_pe70b9nz6.b[36][1]++, details.ppKey)) {/* istanbul ignore next */cov_pe70b9nz6.b[35][0]++;cov_pe70b9nz6.s[215]++;
      if (!result[details.ppKey]) {/* istanbul ignore next */cov_pe70b9nz6.b[37][0]++;cov_pe70b9nz6.s[216]++;
        result[details.ppKey] = [];
      } else /* istanbul ignore next */{cov_pe70b9nz6.b[37][1]++;}cov_pe70b9nz6.s[217]++;
      result[details.ppKey].push(node.id);
    } else /* istanbul ignore next */{cov_pe70b9nz6.b[35][1]++;}
  }); /* istanbul ignore next */cov_pe70b9nz6.s[218]++;
  return result;
}

function mapPPByLine(cfgCode) {/* istanbul ignore next */cov_pe70b9nz6.f[36]++;
  let result = /* istanbul ignore next */(cov_pe70b9nz6.s[219]++, {});
  let currentBlock;
  let lines = /* istanbul ignore next */(cov_pe70b9nz6.s[220]++, cfgCode.split('\n')); /* istanbul ignore next */cov_pe70b9nz6.s[221]++;
  for (let i = 0; i < lines.length; i++) {
    const line = /* istanbul ignore next */(cov_pe70b9nz6.s[222]++, lines[i]); /* istanbul ignore next */cov_pe70b9nz6.s[223]++;
    if ( /* istanbul ignore next */(cov_pe70b9nz6.b[39][0]++, line.startsWith('B')) && /* istanbul ignore next */(cov_pe70b9nz6.b[39][1]++, !line.startsWith('B0'))) {/* istanbul ignore next */cov_pe70b9nz6.b[38][0]++;cov_pe70b9nz6.s[224]++;
      currentBlock = line;
    } else {/* istanbul ignore next */cov_pe70b9nz6.b[38][1]++;cov_pe70b9nz6.s[225]++;if (line.startsWith('B0')) {/* istanbul ignore next */cov_pe70b9nz6.b[40][0]++;cov_pe70b9nz6.s[226]++;
          result['B0.0'] = i;
        } else {/* istanbul ignore next */cov_pe70b9nz6.b[40][1]++;cov_pe70b9nz6.s[227]++;if (line.match(/^\d/)) {/* istanbul ignore next */cov_pe70b9nz6.b[41][0]++;
              let blockElement = /* istanbul ignore next */(cov_pe70b9nz6.s[228]++, currentBlock + '.' + line.split(':')[0]); /* istanbul ignore next */cov_pe70b9nz6.s[229]++;
              result[blockElement] = i;
            } else /* istanbul ignore next */{cov_pe70b9nz6.b[41][1]++;}}}
  } /* istanbul ignore next */cov_pe70b9nz6.s[230]++;
  return result;
}

function highlightAllNodesAtSamePP(ppKey, nodeIdsWithSamePP, nodes, network) {/* istanbul ignore next */cov_pe70b9nz6.f[37]++;
  let samePPNodes = /* istanbul ignore next */(cov_pe70b9nz6.s[231]++, []); /* istanbul ignore next */cov_pe70b9nz6.s[232]++;
  nodes.forEach(function (node) {/* istanbul ignore next */cov_pe70b9nz6.f[38]++;cov_pe70b9nz6.s[233]++;
    if (inArray(node.id, nodeIdsWithSamePP)) {/* istanbul ignore next */cov_pe70b9nz6.b[42][0]++;cov_pe70b9nz6.s[234]++;
      samePPNodes.push(node.id);
    } else /* istanbul ignore next */{cov_pe70b9nz6.b[42][1]++;}
  });

  // update CFG editor line
  const cfgEditorLine = /* istanbul ignore next */(cov_pe70b9nz6.s[235]++, network['eg']['ppMapCFG'][ppKey]); /* istanbul ignore next */cov_pe70b9nz6.s[236]++;
  if (cfgEditorLine) {/* istanbul ignore next */cov_pe70b9nz6.b[43][0]++;cov_pe70b9nz6.s[237]++;
    network['eg']['cfgEditorSelectedLine'] = cfgEditorLine; /* istanbul ignore next */cov_pe70b9nz6.s[238]++;
    network['eg']['cfgEditor'].setCursor(cfgEditorLine);
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[43][1]++;}

  // update graph
  cov_pe70b9nz6.s[239]++;setNodesColor(nodes, samePPNodes, 'samePP'); /* istanbul ignore next */cov_pe70b9nz6.s[240]++;
  network.redraw();
}

function handleNewPP(editor, network) {/* istanbul ignore next */cov_pe70b9nz6.f[39]++;
  const newLine = /* istanbul ignore next */(cov_pe70b9nz6.s[241]++, editor.getCursor()['line']); /* istanbul ignore next */cov_pe70b9nz6.s[242]++;

  if (network['eg']['cfgEditorSelectedLine'] === newLine) {/* istanbul ignore next */cov_pe70b9nz6.b[44][0]++;cov_pe70b9nz6.s[243]++;
    // already on that line, nothing to do
    return;
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[44][1]++;}cov_pe70b9nz6.s[244]++;

  network['eg']['cfgEditorSelectedLine'] = newLine;

  const ppMapCFG = /* istanbul ignore next */(cov_pe70b9nz6.s[245]++, network['eg']['ppMapCFG']);
  let ppKey = /* istanbul ignore next */(cov_pe70b9nz6.s[246]++, null); /* istanbul ignore next */cov_pe70b9nz6.s[247]++;
  for (let key in ppMapCFG) {
    const ppMapLine = /* istanbul ignore next */(cov_pe70b9nz6.s[248]++, ppMapCFG[key]); /* istanbul ignore next */cov_pe70b9nz6.s[249]++;
    if (newLine === ppMapLine) {/* istanbul ignore next */cov_pe70b9nz6.b[45][0]++;cov_pe70b9nz6.s[250]++;
      ppKey = key; /* istanbul ignore next */cov_pe70b9nz6.s[251]++;
      break;
    } else /* istanbul ignore next */{cov_pe70b9nz6.b[45][1]++;}
  }

  let nodeIdsWithSamePP = /* istanbul ignore next */(cov_pe70b9nz6.s[252]++, []); /* istanbul ignore next */cov_pe70b9nz6.s[253]++;
  if (ppKey) {/* istanbul ignore next */cov_pe70b9nz6.b[46][0]++;cov_pe70b9nz6.s[254]++;
    nodeIdsWithSamePP = network['eg']['ppMap'][ppKey];
  } else /* istanbul ignore next */{cov_pe70b9nz6.b[46][1]++;}cov_pe70b9nz6.s[255]++;
  highlightAllNodesAtSamePP(ppKey, nodeIdsWithSamePP, network['eg']['nodes'], network);
}

function changeLayout(network, hierarchical) {/* istanbul ignore next */cov_pe70b9nz6.f[40]++;
  let options = /* istanbul ignore next */(cov_pe70b9nz6.s[256]++, { 'layout': { 'hierarchical': false } }); /* istanbul ignore next */cov_pe70b9nz6.s[257]++;
  if (hierarchical) {/* istanbul ignore next */cov_pe70b9nz6.b[47][0]++;cov_pe70b9nz6.s[258]++;
    options['layout']['hierarchical'] = {
      enabled: true,
      sortMethod: 'directed',
      levelSeparation: 100,
      nodeSpacing: 1 };

  } else /* istanbul ignore next */{cov_pe70b9nz6.b[47][1]++;}cov_pe70b9nz6.s[259]++;
  network.setOptions(options);
}

// Exposes method to be tested
/* istanbul ignore next */cov_pe70b9nz6.s[260]++;try {/* istanbul ignore next */cov_pe70b9nz6.s[261]++;
  module.exports = {
    clickAction,
    table,
    tableLine,
    getEdgeDetails,
    getNodeDetails,
    updateDetails,
    getProgramState,
    getLearnedAssociations,
    getLearnedConstraints,
    getMethodYield,
    setNodesColor,
    setEdgesColor,
    changeLayout,
    mapPPByLine,
    getPPMap,
    highlightAllNodesAtSamePP,
    handleNewPP };

} catch (moduleNotDefined) {
  // NOP
}