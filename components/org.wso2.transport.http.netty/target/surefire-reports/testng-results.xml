<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="128" passed="125">
  <reporter-output>
  </reporter-output>
  <suite name="Transport test Suite" duration-ms="566628" started-at="2018-05-31T13:52:13Z" finished-at="2018-05-31T14:01:40Z">
    <groups>
    </groups>
    <test name="Transport test" duration-ms="409276" started-at="2018-05-31T13:52:13Z" finished-at="2018-05-31T13:59:02Z">
      <class name="org.wso2.transport.http.netty.urilengthvalidation.Status414And413ResponseTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.urilengthvalidation.Status414And413ResponseTest@5f193335]" name="setUp" is-config="true" duration-ms="25" started-at="2018-05-31T15:53:06Z" finished-at="2018-05-31T15:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="largeEntityBodyTest()[pri:0, instance:org.wso2.transport.http.netty.urilengthvalidation.Status414And413ResponseTest@5f193335]" name="largeEntityBodyTest" duration-ms="66" started-at="2018-05-31T15:53:06Z" finished-at="2018-05-31T15:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeEntityBodyTest -->
        <test-method status="PASS" signature="largeHeaderTest()[pri:0, instance:org.wso2.transport.http.netty.urilengthvalidation.Status414And413ResponseTest@5f193335]" name="largeHeaderTest" duration-ms="35" started-at="2018-05-31T15:53:06Z" finished-at="2018-05-31T15:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeHeaderTest -->
        <test-method status="PASS" signature="largeUriTest()[pri:0, instance:org.wso2.transport.http.netty.urilengthvalidation.Status414And413ResponseTest@5f193335]" name="largeUriTest" duration-ms="58" started-at="2018-05-31T15:53:06Z" finished-at="2018-05-31T15:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeUriTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.urilengthvalidation.Status414And413ResponseTest@5f193335]" name="cleanUp" is-config="true" duration-ms="6635" started-at="2018-05-31T15:53:06Z" finished-at="2018-05-31T15:53:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.urilengthvalidation.Status414And413ResponseTest -->
      <class name="org.wso2.transport.http.netty.forwardedextension.ForwardedDisableTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.forwardedextension.ForwardedDisableTestCase@68aec50]" name="setUp" is-config="true" duration-ms="36" started-at="2018-05-31T15:58:08Z" finished-at="2018-05-31T15:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMultipleHeader()[pri:0, instance:org.wso2.transport.http.netty.forwardedextension.ForwardedDisableTestCase@68aec50]" name="testMultipleHeader" duration-ms="9" started-at="2018-05-31T15:58:08Z" finished-at="2018-05-31T15:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleHeader -->
        <test-method status="PASS" signature="testSingleHeader()[pri:0, instance:org.wso2.transport.http.netty.forwardedextension.ForwardedDisableTestCase@68aec50]" name="testSingleHeader" duration-ms="7" started-at="2018-05-31T15:58:08Z" finished-at="2018-05-31T15:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleHeader -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.forwardedextension.ForwardedDisableTestCase@68aec50]" name="cleanUp" is-config="true" duration-ms="4419" started-at="2018-05-31T15:58:08Z" finished-at="2018-05-31T15:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.forwardedextension.ForwardedDisableTestCase -->
      <class name="org.wso2.transport.http.netty.http1point0test.ChunkAutoHttpOnePointZeroClientTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.http1point0test.ChunkAutoHttpOnePointZeroClientTestCase@3e6748ae]" name="setUp" is-config="true" duration-ms="25" started-at="2018-05-31T15:53:57Z" finished-at="2018-05-31T15:53:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="postTest()[pri:0, instance:org.wso2.transport.http.netty.http1point0test.ChunkAutoHttpOnePointZeroClientTestCase@3e6748ae]" name="postTest" duration-ms="20" started-at="2018-05-31T15:53:57Z" finished-at="2018-05-31T15:53:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.http1point0test.ChunkAutoHttpOnePointZeroClientTestCase@3e6748ae]" name="cleanUp" is-config="true" duration-ms="4421" started-at="2018-05-31T15:53:57Z" finished-at="2018-05-31T15:54:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.http1point0test.ChunkAutoHttpOnePointZeroClientTestCase -->
      <class name="org.wso2.transport.http.netty.http1point0test.KeepAliveHttpOnePointZeroClientTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.http1point0test.KeepAliveHttpOnePointZeroClientTestCase@1ec88aa1]" name="setUp" is-config="true" duration-ms="25" started-at="2018-05-31T15:53:42Z" finished-at="2018-05-31T15:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="postTest()[pri:0, instance:org.wso2.transport.http.netty.http1point0test.KeepAliveHttpOnePointZeroClientTestCase@1ec88aa1]" name="postTest" duration-ms="19" started-at="2018-05-31T15:53:42Z" finished-at="2018-05-31T15:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.http1point0test.KeepAliveHttpOnePointZeroClientTestCase@1ec88aa1]" name="cleanUp" is-config="true" duration-ms="4420" started-at="2018-05-31T15:53:42Z" finished-at="2018-05-31T15:53:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.http1point0test.KeepAliveHttpOnePointZeroClientTestCase -->
      <class name="org.wso2.transport.http.netty.connectionpool.ConnectionPoolMaxConnTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolMaxConnTestCase@6ed18d80]" name="setup" is-config="true" duration-ms="37" started-at="2018-05-31T15:56:04Z" finished-at="2018-05-31T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testMaxActiveConnectionsPerPool()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolMaxConnTestCase@6ed18d80]" name="testMaxActiveConnectionsPerPool" duration-ms="1076" started-at="2018-05-31T15:56:04Z" finished-at="2018-05-31T15:56:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxActiveConnectionsPerPool -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolMaxConnTestCase@6ed18d80]" name="cleanUp" is-config="true" duration-ms="11055" started-at="2018-05-31T15:56:05Z" finished-at="2018-05-31T15:56:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.connectionpool.ConnectionPoolMaxConnTestCase -->
      <class name="org.wso2.transport.http.netty.unitfunction.CommonUtilTestCase">
        <test-method status="PASS" signature="testCreateHttpRequest()[pri:0, instance:org.wso2.transport.http.netty.unitfunction.CommonUtilTestCase@133aacbe]" name="testCreateHttpRequest" duration-ms="1" started-at="2018-05-31T15:59:02Z" description="Test setting headers to Http request with duplicate header keys" finished-at="2018-05-31T15:59:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateHttpRequest -->
        <test-method status="PASS" signature="testCreateHttpResponse()[pri:0, instance:org.wso2.transport.http.netty.unitfunction.CommonUtilTestCase@133aacbe]" name="testCreateHttpResponse" duration-ms="1" started-at="2018-05-31T15:59:02Z" description="Test setting headers to Http response with duplicate header keys" finished-at="2018-05-31T15:59:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateHttpResponse -->
      </class> <!-- org.wso2.transport.http.netty.unitfunction.CommonUtilTestCase -->
      <class name="org.wso2.transport.http.netty.contentaware.RequestResponseCreationTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.contentaware.RequestResponseCreationTestCase@26275b46]" name="setUp" is-config="true" duration-ms="16" started-at="2018-05-31T15:53:13Z" finished-at="2018-05-31T15:53:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRequestResponseCreation()[pri:0, instance:org.wso2.transport.http.netty.contentaware.RequestResponseCreationTestCase@26275b46]" name="testRequestResponseCreation" duration-ms="44" started-at="2018-05-31T15:53:13Z" finished-at="2018-05-31T15:53:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRequestResponseCreation -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.contentaware.RequestResponseCreationTestCase@26275b46]" name="cleanUp" is-config="true" duration-ms="11060" started-at="2018-05-31T15:53:13Z" finished-at="2018-05-31T15:53:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.contentaware.RequestResponseCreationTestCase -->
      <class name="org.wso2.transport.http.netty.connectionpool.ConnectionPoolProxyTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolProxyTestCase@3030836d]" name="setup" is-config="true" duration-ms="66" started-at="2018-05-31T15:54:26Z" finished-at="2018-05-31T15:54:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="testConnectionReuseForProxy()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolProxyTestCase@3030836d]" name="testConnectionReuseForProxy" duration-ms="5040" started-at="2018-05-31T15:54:27Z" finished-at="2018-05-31T15:54:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0242acfffe110004-00000305-0000005e-7f105579c926221a-c6b74918] but found [0242acfffe110004-00000305-00000058-910899d70926ce81-fe111a7f]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0242acfffe110004-00000305-0000005e-7f105579c926221a-c6b74918] but found [0242acfffe110004-00000305-00000058-910899d70926ce81-fe111a7f]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at org.wso2.transport.http.netty.connectionpool.ConnectionPoolProxyTestCase.testConnectionReuseForProxy(ConnectionPoolProxyTestCase.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConnectionReuseForProxy -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolProxyTestCase@3030836d]" name="cleanUp" is-config="true" duration-ms="13522" started-at="2018-05-31T15:54:32Z" finished-at="2018-05-31T15:54:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.connectionpool.ConnectionPoolProxyTestCase -->
      <class name="org.wso2.transport.http.netty.ClientConnectorTimeoutTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.ClientConnectorTimeoutTestCase@74123110]" name="setup" is-config="true" duration-ms="35" started-at="2018-05-31T15:56:16Z" finished-at="2018-05-31T15:56:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHttpsGet()[pri:0, instance:org.wso2.transport.http.netty.ClientConnectorTimeoutTestCase@74123110]" name="testHttpsGet" duration-ms="3013" started-at="2018-05-31T15:56:16Z" finished-at="2018-05-31T15:56:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttpsGet -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.ClientConnectorTimeoutTestCase@74123110]" name="cleanUp" is-config="true" duration-ms="11044" started-at="2018-05-31T15:56:19Z" finished-at="2018-05-31T15:56:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.ClientConnectorTimeoutTestCase -->
      <class name="org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="setup" is-config="true" duration-ms="18" started-at="2018-05-31T15:55:08Z" finished-at="2018-05-31T15:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="absolutePathWithQueryParams()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="absolutePathWithQueryParams" duration-ms="7" started-at="2018-05-31T15:55:08Z" finished-at="2018-05-31T15:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- absolutePathWithQueryParams -->
        <test-method status="PASS" signature="integrationTestForRedirectLoop()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="integrationTestForRedirectLoop" duration-ms="8886" started-at="2018-05-31T15:55:08Z" finished-at="2018-05-31T15:55:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integrationTestForRedirectLoop -->
        <test-method status="PASS" signature="integrationTestForRedirectWithHttps()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="integrationTestForRedirectWithHttps" duration-ms="8932" started-at="2018-05-31T15:55:17Z" finished-at="2018-05-31T15:55:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integrationTestForRedirectWithHttps -->
        <test-method status="PASS" signature="integrationTestForResolvedRequestedURI()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="integrationTestForResolvedRequestedURI" duration-ms="13295" started-at="2018-05-31T15:55:26Z" finished-at="2018-05-31T15:55:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integrationTestForResolvedRequestedURI -->
        <test-method status="PASS" signature="integrationTestForSingleRedirect()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="integrationTestForSingleRedirect" duration-ms="8885" started-at="2018-05-31T15:55:39Z" finished-at="2018-05-31T15:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integrationTestForSingleRedirect -->
        <test-method status="PASS" signature="integrationTestForTimeout()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="integrationTestForTimeout" duration-ms="10868" started-at="2018-05-31T15:55:48Z" finished-at="2018-05-31T15:55:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integrationTestForTimeout -->
        <test-method status="PASS" signature="justRelativePathName()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="justRelativePathName" duration-ms="1" started-at="2018-05-31T15:55:59Z" finished-at="2018-05-31T15:55:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- justRelativePathName -->
        <test-method status="PASS" signature="originalRequestWithQueryParams()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="originalRequestWithQueryParams" duration-ms="0" started-at="2018-05-31T15:55:59Z" finished-at="2018-05-31T15:55:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- originalRequestWithQueryParams -->
        <test-method status="PASS" signature="redirectOnButNotARedirect()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="redirectOnButNotARedirect" duration-ms="4440" started-at="2018-05-31T15:55:59Z" finished-at="2018-05-31T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectOnButNotARedirect -->
        <test-method status="PASS" signature="relativePathEndsWithSlash()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="relativePathEndsWithSlash" duration-ms="1" started-at="2018-05-31T15:56:04Z" finished-at="2018-05-31T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- relativePathEndsWithSlash -->
        <test-method status="PASS" signature="relativePathStartsWithSlash()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="relativePathStartsWithSlash" duration-ms="0" started-at="2018-05-31T15:56:04Z" finished-at="2018-05-31T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- relativePathStartsWithSlash -->
        <test-method status="PASS" signature="relativePathWithQueryParams()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="relativePathWithQueryParams" duration-ms="0" started-at="2018-05-31T15:56:04Z" finished-at="2018-05-31T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- relativePathWithQueryParams -->
        <test-method status="PASS" signature="unitTestFor303()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="unitTestFor303" duration-ms="1" started-at="2018-05-31T15:56:04Z" finished-at="2018-05-31T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitTestFor303 -->
        <test-method status="PASS" signature="requestPathEndsWithSlash()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="requestPathEndsWithSlash" duration-ms="0" started-at="2018-05-31T15:56:04Z" finished-at="2018-05-31T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestPathEndsWithSlash -->
        <test-method status="PASS" signature="unitTestForAlwaysGet()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="unitTestForAlwaysGet" duration-ms="0" started-at="2018-05-31T15:56:04Z" finished-at="2018-05-31T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitTestForAlwaysGet -->
        <test-method status="PASS" signature="unitTestForRedirectHandler()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="unitTestForRedirectHandler" duration-ms="9" started-at="2018-05-31T15:56:04Z" finished-at="2018-05-31T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitTestForRedirectHandler -->
        <test-method status="PASS" signature="unitTestForOriginalMethod()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="unitTestForOriginalMethod" duration-ms="0" started-at="2018-05-31T15:56:04Z" finished-at="2018-05-31T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitTestForOriginalMethod -->
        <test-method status="PASS" signature="unitTestForRedirectLoop()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="unitTestForRedirectLoop" duration-ms="2" started-at="2018-05-31T15:56:04Z" finished-at="2018-05-31T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitTestForRedirectLoop -->
        <test-method status="PASS" signature="unitTestForSameDomain()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="unitTestForSameDomain" duration-ms="0" started-at="2018-05-31T15:56:04Z" finished-at="2018-05-31T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitTestForSameDomain -->
        <test-method status="PASS" signature="unitTestToDetermineCrossDomainURLs()[pri:0, instance:org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase@4ea1aa52]" name="unitTestToDetermineCrossDomainURLs" duration-ms="1" started-at="2018-05-31T15:56:04Z" finished-at="2018-05-31T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitTestToDetermineCrossDomainURLs -->
      </class> <!-- org.wso2.transport.http.netty.redirect.HttpClientRedirectTestCase -->
      <class name="org.wso2.transport.http.netty.proxyserver.HttpProxyServerTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.proxyserver.HttpProxyServerTestCase@4c7d7430]" name="setup" is-config="true" duration-ms="27" started-at="2018-05-31T15:54:45Z" finished-at="2018-05-31T15:54:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHttpProxyRequestUrl()[pri:0, instance:org.wso2.transport.http.netty.proxyserver.HttpProxyServerTestCase@4c7d7430]" name="testHttpProxyRequestUrl" duration-ms="1" started-at="2018-05-31T15:54:45Z" description="Tests the request going to the proxy. This should contain the entire URL as the path as it is not a CONNECT request." finished-at="2018-05-31T15:54:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttpProxyRequestUrl -->
        <test-method status="PASS" signature="testHttpProxyServer()[pri:0, instance:org.wso2.transport.http.netty.proxyserver.HttpProxyServerTestCase@4c7d7430]" name="testHttpProxyServer" duration-ms="53" started-at="2018-05-31T15:54:45Z" description="An integration test for connecting to a proxy over http. This will not go through netty proxy handler." finished-at="2018-05-31T15:54:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttpProxyServer -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.proxyserver.HttpProxyServerTestCase@4c7d7430]" name="cleanUp" is-config="true" duration-ms="6978" started-at="2018-05-31T15:54:45Z" finished-at="2018-05-31T15:54:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.proxyserver.HttpProxyServerTestCase -->
      <class name="org.wso2.transport.http.netty.proxyserver.HttpsProxyServerTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.proxyserver.HttpsProxyServerTestCase@2d70f312]" name="setup" is-config="true" duration-ms="964" started-at="2018-05-31T15:54:17Z" finished-at="2018-05-31T15:54:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHttpsProxyServer()[pri:0, instance:org.wso2.transport.http.netty.proxyserver.HttpsProxyServerTestCase@2d70f312]" name="testHttpsProxyServer" duration-ms="1281" started-at="2018-05-31T15:54:18Z" description="Tests the scenario of a client connecting to a https server through proxy." finished-at="2018-05-31T15:54:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttpsProxyServer -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.proxyserver.HttpsProxyServerTestCase@2d70f312]" name="cleanUp" is-config="true" duration-ms="6966" started-at="2018-05-31T15:54:20Z" finished-at="2018-05-31T15:54:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.proxyserver.HttpsProxyServerTestCase -->
      <class name="org.wso2.transport.http.netty.ClientConnectorClosureAfterRequestReadTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.ClientConnectorClosureAfterRequestReadTestCase@79ab97fd]" name="setup" is-config="true" duration-ms="12" started-at="2018-05-31T15:57:11Z" finished-at="2018-05-31T15:57:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHttpsGet()[pri:0, instance:org.wso2.transport.http.netty.ClientConnectorClosureAfterRequestReadTestCase@79ab97fd]" name="testHttpsGet" duration-ms="8" started-at="2018-05-31T15:57:11Z" finished-at="2018-05-31T15:57:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttpsGet -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.ClientConnectorClosureAfterRequestReadTestCase@79ab97fd]" name="cleanUp" is-config="true" duration-ms="11062" started-at="2018-05-31T15:57:11Z" finished-at="2018-05-31T15:57:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.ClientConnectorClosureAfterRequestReadTestCase -->
      <class name="org.wso2.transport.http.netty.chunkdisable.ChunkAutoClientTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkAutoClientTestCase@21f9c6ea]" name="setUp" is-config="true" duration-ms="48" started-at="2018-05-31T15:58:12Z" finished-at="2018-05-31T15:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="postTest()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkAutoClientTestCase@21f9c6ea]" name="postTest" duration-ms="14" started-at="2018-05-31T15:58:12Z" finished-at="2018-05-31T15:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkAutoClientTestCase@21f9c6ea]" name="cleanUp" is-config="true" duration-ms="4420" started-at="2018-05-31T15:58:12Z" finished-at="2018-05-31T15:58:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.chunkdisable.ChunkAutoClientTestCase -->
      <class name="org.wso2.transport.http.netty.encoding.ContentEncodingTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.encoding.ContentEncodingTestCase@7cfb8e98]" name="setup" is-config="true" duration-ms="56" started-at="2018-05-31T15:52:37Z" finished-at="2018-05-31T15:52:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="messageEchoingFromProcessorTestCase()[pri:0, instance:org.wso2.transport.http.netty.encoding.ContentEncodingTestCase@7cfb8e98]" name="messageEchoingFromProcessorTestCase" duration-ms="28" started-at="2018-05-31T15:52:37Z" finished-at="2018-05-31T15:52:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- messageEchoingFromProcessorTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.encoding.ContentEncodingTestCase@7cfb8e98]" name="cleanUp" is-config="true" duration-ms="11088" started-at="2018-05-31T15:52:37Z" finished-at="2018-05-31T15:52:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.encoding.ContentEncodingTestCase -->
      <class name="org.wso2.transport.http.netty.connectionpool.ConnectionPoolWaitingTimeoutTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolWaitingTimeoutTestCase@2ec85a25]" name="setup" is-config="true" duration-ms="87" started-at="2018-05-31T15:57:23Z" finished-at="2018-05-31T15:57:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testWaitingForConnectionTimeout()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolWaitingTimeoutTestCase@2ec85a25]" name="testWaitingForConnectionTimeout" duration-ms="5007" started-at="2018-05-31T15:57:23Z" finished-at="2018-05-31T15:57:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWaitingForConnectionTimeout -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolWaitingTimeoutTestCase@2ec85a25]" name="cleanUp" is-config="true" duration-ms="11056" started-at="2018-05-31T15:57:28Z" finished-at="2018-05-31T15:57:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.connectionpool.ConnectionPoolWaitingTimeoutTestCase -->
      <class name="org.wso2.transport.http.netty.passthrough.PassThroughHttpTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.passthrough.PassThroughHttpTestCase@414b2df5]" name="setUp" is-config="true" duration-ms="262" started-at="2018-05-31T15:52:13Z" finished-at="2018-05-31T15:52:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="passthroughGetTest()[pri:0, instance:org.wso2.transport.http.netty.passthrough.PassThroughHttpTestCase@414b2df5]" name="passthroughGetTest" duration-ms="880" started-at="2018-05-31T15:52:13Z" finished-at="2018-05-31T15:52:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passthroughGetTest -->
        <test-method status="PASS" signature="passthroughPostTest()[pri:0, instance:org.wso2.transport.http.netty.passthrough.PassThroughHttpTestCase@414b2df5]" name="passthroughPostTest" duration-ms="28" started-at="2018-05-31T15:52:14Z" finished-at="2018-05-31T15:52:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passthroughPostTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.passthrough.PassThroughHttpTestCase@414b2df5]" name="cleanUp" is-config="true" duration-ms="11095" started-at="2018-05-31T15:52:14Z" finished-at="2018-05-31T15:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.passthrough.PassThroughHttpTestCase -->
      <class name="org.wso2.transport.http.netty.connectionpool.ConnectionPoolTimeoutProxyTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolTimeoutProxyTestCase@4c24f3a2]" name="setup" is-config="true" duration-ms="45" started-at="2018-05-31T15:56:30Z" finished-at="2018-05-31T15:56:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="connectionPoolTimeoutProxyTestCase()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolTimeoutProxyTestCase@4c24f3a2]" name="connectionPoolTimeoutProxyTestCase" duration-ms="5043" started-at="2018-05-31T15:56:30Z" description="when connection times out for TargetHandler, we need to invalidate the connection. This test case validates that." finished-at="2018-05-31T15:56:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- connectionPoolTimeoutProxyTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolTimeoutProxyTestCase@4c24f3a2]" name="cleanUp" is-config="true" duration-ms="11224" started-at="2018-05-31T15:56:35Z" finished-at="2018-05-31T15:56:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.connectionpool.ConnectionPoolTimeoutProxyTestCase -->
      <class name="org.wso2.transport.http.netty.connectionpool.ConnectionPoolMainTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolMainTestCase@783b3aa0]" name="setup" is-config="true" duration-ms="29" started-at="2018-05-31T15:56:53Z" finished-at="2018-05-31T15:56:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testConnectionReuseForMain()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolMainTestCase@783b3aa0]" name="testConnectionReuseForMain" duration-ms="7510" started-at="2018-05-31T15:56:53Z" finished-at="2018-05-31T15:57:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConnectionReuseForMain -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolMainTestCase@783b3aa0]" name="cleanUp" is-config="true" duration-ms="11064" started-at="2018-05-31T15:57:00Z" finished-at="2018-05-31T15:57:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.connectionpool.ConnectionPoolMainTestCase -->
      <class name="org.wso2.transport.http.netty.passthrough.PassThroughHttpsTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.passthrough.PassThroughHttpsTestCase@9e30f9a]" name="setUp" is-config="true" duration-ms="94" started-at="2018-05-31T15:52:25Z" finished-at="2018-05-31T15:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="passthroughTest()[pri:0, instance:org.wso2.transport.http.netty.passthrough.PassThroughHttpsTestCase@9e30f9a]" name="passthroughTest" duration-ms="235" started-at="2018-05-31T15:52:26Z" finished-at="2018-05-31T15:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passthroughTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.passthrough.PassThroughHttpsTestCase@9e30f9a]" name="cleanUp" is-config="true" duration-ms="11056" started-at="2018-05-31T15:52:26Z" finished-at="2018-05-31T15:52:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.passthrough.PassThroughHttpsTestCase -->
      <class name="org.wso2.transport.http.netty.http1point0test.HttpOnePointZeroServerConnectorTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.http1point0test.HttpOnePointZeroServerConnectorTestCase@19002b34]" name="setUp" is-config="true" duration-ms="17" started-at="2018-05-31T15:53:24Z" finished-at="2018-05-31T15:53:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="http1point0DefaultRequest()[pri:0, instance:org.wso2.transport.http.netty.http1point0test.HttpOnePointZeroServerConnectorTestCase@19002b34]" name="http1point0DefaultRequest" duration-ms="33" started-at="2018-05-31T15:53:24Z" finished-at="2018-05-31T15:53:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- http1point0DefaultRequest -->
        <test-method status="FAIL" signature="http1point0KeepAliveRequest()[pri:0, instance:org.wso2.transport.http.netty.http1point0test.HttpOnePointZeroServerConnectorTestCase@19002b34]" name="http1point0KeepAliveRequest" duration-ms="21" started-at="2018-05-31T15:53:24Z" finished-at="2018-05-31T15:53:24Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
	at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
	at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:24)
	at org.testng.AssertJUnit.assertFalse(AssertJUnit.java:41)
	at org.testng.AssertJUnit.assertFalse(AssertJUnit.java:49)
	at org.wso2.transport.http.netty.http1point0test.HttpOnePointZeroServerConnectorTestCase.http1point0KeepAliveRequest(HttpOnePointZeroServerConnectorTestCase.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- http1point0KeepAliveRequest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.http1point0test.HttpOnePointZeroServerConnectorTestCase@19002b34]" name="cleanUp" is-config="true" duration-ms="6630" started-at="2018-05-31T15:53:24Z" finished-at="2018-05-31T15:53:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.http1point0test.HttpOnePointZeroServerConnectorTestCase -->
      <class name="org.wso2.transport.http.netty.contentaware.EchoServerConnectorListenerTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.contentaware.EchoServerConnectorListenerTestCase@1b30a54e]" name="setUp" is-config="true" duration-ms="26" started-at="2018-05-31T15:52:48Z" finished-at="2018-05-31T15:52:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMessageEchoing()[pri:0, instance:org.wso2.transport.http.netty.contentaware.EchoServerConnectorListenerTestCase@1b30a54e]" name="testMessageEchoing" duration-ms="23" started-at="2018-05-31T15:52:48Z" finished-at="2018-05-31T15:52:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessageEchoing -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.contentaware.EchoServerConnectorListenerTestCase@1b30a54e]" name="cleanUp" is-config="true" duration-ms="17699" started-at="2018-05-31T15:52:48Z" finished-at="2018-05-31T15:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.contentaware.EchoServerConnectorListenerTestCase -->
      <class name="org.wso2.transport.http.netty.headers.Continue100TestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.headers.Continue100TestCase@7c9beb51]" name="setup" is-config="true" duration-ms="24" started-at="2018-05-31T15:58:26Z" finished-at="2018-05-31T15:58:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="test100Continue()[pri:0, instance:org.wso2.transport.http.netty.headers.Continue100TestCase@7c9beb51]" name="test100Continue" duration-ms="30019" started-at="2018-05-31T15:58:26Z" finished-at="2018-05-31T15:58:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at org.wso2.transport.http.netty.headers.Continue100TestCase.test100Continue(Continue100TestCase.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test100Continue -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.headers.Continue100TestCase@7c9beb51]" name="cleanUp" is-config="true" duration-ms="6634" started-at="2018-05-31T15:58:56Z" finished-at="2018-05-31T15:59:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.headers.Continue100TestCase -->
      <class name="org.wso2.transport.http.netty.forwardedextension.ForwardedTransitionTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.forwardedextension.ForwardedTransitionTestCase@27c53c32]" name="setUp" is-config="true" duration-ms="49" started-at="2018-05-31T15:57:57Z" finished-at="2018-05-31T15:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMultipleHeader()[pri:0, instance:org.wso2.transport.http.netty.forwardedextension.ForwardedTransitionTestCase@27c53c32]" name="testMultipleHeader" duration-ms="13" started-at="2018-05-31T15:57:57Z" finished-at="2018-05-31T15:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleHeader -->
        <test-method status="PASS" signature="testSingleHeader()[pri:0, instance:org.wso2.transport.http.netty.forwardedextension.ForwardedTransitionTestCase@27c53c32]" name="testSingleHeader" duration-ms="8" started-at="2018-05-31T15:57:57Z" finished-at="2018-05-31T15:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleHeader -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.forwardedextension.ForwardedTransitionTestCase@27c53c32]" name="cleanUp" is-config="true" duration-ms="4421" started-at="2018-05-31T15:57:57Z" finished-at="2018-05-31T15:58:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.forwardedextension.ForwardedTransitionTestCase -->
      <class name="org.wso2.transport.http.netty.http1point0test.ChunkAlwaysHttpOnePointZeroClientTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.http1point0test.ChunkAlwaysHttpOnePointZeroClientTestCase@28f154cc]" name="setUp" is-config="true" duration-ms="38" started-at="2018-05-31T15:54:13Z" finished-at="2018-05-31T15:54:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="postTest()[pri:0, instance:org.wso2.transport.http.netty.http1point0test.ChunkAlwaysHttpOnePointZeroClientTestCase@28f154cc]" name="postTest" duration-ms="26" started-at="2018-05-31T15:54:13Z" finished-at="2018-05-31T15:54:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.http1point0test.ChunkAlwaysHttpOnePointZeroClientTestCase@28f154cc]" name="cleanUp" is-config="true" duration-ms="4422" started-at="2018-05-31T15:54:13Z" finished-at="2018-05-31T15:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.http1point0test.ChunkAlwaysHttpOnePointZeroClientTestCase -->
      <class name="org.wso2.transport.http.netty.contentaware.RequestResponseTransformStreamingTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.contentaware.RequestResponseTransformStreamingTestCase@3111631d]" name="setUp" is-config="true" duration-ms="24" started-at="2018-05-31T15:54:02Z" finished-at="2018-05-31T15:54:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRequestResponseTransformStreaming()[pri:0, instance:org.wso2.transport.http.netty.contentaware.RequestResponseTransformStreamingTestCase@3111631d]" name="testRequestResponseTransformStreaming" duration-ms="82" started-at="2018-05-31T15:54:02Z" finished-at="2018-05-31T15:54:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRequestResponseTransformStreaming -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.contentaware.RequestResponseTransformStreamingTestCase@3111631d]" name="cleanUp" is-config="true" duration-ms="11067" started-at="2018-05-31T15:54:02Z" finished-at="2018-05-31T15:54:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.contentaware.RequestResponseTransformStreamingTestCase -->
      <class name="org.wso2.transport.http.netty.unitfunction.ForwardedTestCase">
        <test-method status="PASS" signature="testSetDefactoForwardedHeadersWithIPv6()[pri:0, instance:org.wso2.transport.http.netty.unitfunction.ForwardedTestCase@2aa5bd48]" name="testSetDefactoForwardedHeadersWithIPv6" duration-ms="7" started-at="2018-05-31T15:52:25Z" description="Test setting de-facto Forwarded headers with IPv6" finished-at="2018-05-31T15:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDefactoForwardedHeadersWithIPv6 -->
        <test-method status="PASS" signature="testSetDefactoForwardedHeadersWithPreviousXForwardHeader()[pri:0, instance:org.wso2.transport.http.netty.unitfunction.ForwardedTestCase@2aa5bd48]" name="testSetDefactoForwardedHeadersWithPreviousXForwardHeader" duration-ms="0" started-at="2018-05-31T15:52:25Z" description="Test setting de-facto Forwarded headers with existing XF headers" finished-at="2018-05-31T15:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDefactoForwardedHeadersWithPreviousXForwardHeader -->
        <test-method status="PASS" signature="testSetForwardedHeaderAsFirstInterface()[pri:0, instance:org.wso2.transport.http.netty.unitfunction.ForwardedTestCase@2aa5bd48]" name="testSetForwardedHeaderAsFirstInterface" duration-ms="0" started-at="2018-05-31T15:52:25Z" description="Test setting Forwarded header as first intermediate interface" finished-at="2018-05-31T15:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetForwardedHeaderAsFirstInterface -->
        <test-method status="PASS" signature="testSetForwardedHeaderAsFirstInterfaceIPv6()[pri:0, instance:org.wso2.transport.http.netty.unitfunction.ForwardedTestCase@2aa5bd48]" name="testSetForwardedHeaderAsFirstInterfaceIPv6" duration-ms="0" started-at="2018-05-31T15:52:25Z" description="Test setting Forwarded header with IPv6 local address" finished-at="2018-05-31T15:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetForwardedHeaderAsFirstInterfaceIPv6 -->
        <test-method status="PASS" signature="testSetForwardedHeaderAsFirstInterfaceIPv6WithPort()[pri:0, instance:org.wso2.transport.http.netty.unitfunction.ForwardedTestCase@2aa5bd48]" name="testSetForwardedHeaderAsFirstInterfaceIPv6WithPort" duration-ms="0" started-at="2018-05-31T15:52:25Z" description="Test setting Forwarded header with IPv6 host and port" finished-at="2018-05-31T15:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetForwardedHeaderAsFirstInterfaceIPv6WithPort -->
        <test-method status="PASS" signature="testSetForwardedHeaderAsFirstInterfaceWithObfuscatedIdentifier()[pri:0, instance:org.wso2.transport.http.netty.unitfunction.ForwardedTestCase@2aa5bd48]" name="testSetForwardedHeaderAsFirstInterfaceWithObfuscatedIdentifier" duration-ms="0" started-at="2018-05-31T15:52:25Z" description="Test setting Forwarded header with Obfuscated Identifier" finished-at="2018-05-31T15:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetForwardedHeaderAsFirstInterfaceWithObfuscatedIdentifier -->
        <test-method status="PASS" signature="testSetForwardedHeaderWithPreviousForwardHeader()[pri:0, instance:org.wso2.transport.http.netty.unitfunction.ForwardedTestCase@2aa5bd48]" name="testSetForwardedHeaderWithPreviousForwardHeader" duration-ms="1" started-at="2018-05-31T15:52:25Z" description="Test updating Forwarded header with existing forwarder values" finished-at="2018-05-31T15:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetForwardedHeaderWithPreviousForwardHeader -->
        <test-method status="PASS" signature="testSetForwardedHeadersWhenForwardAndXHeadersAvailable()[pri:0, instance:org.wso2.transport.http.netty.unitfunction.ForwardedTestCase@2aa5bd48]" name="testSetForwardedHeadersWhenForwardAndXHeadersAvailable" duration-ms="2" started-at="2018-05-31T15:52:25Z" description="Test setting Forwarded headers with forward and XF headers available" finished-at="2018-05-31T15:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetForwardedHeadersWhenForwardAndXHeadersAvailable -->
        <test-method status="PASS" signature="testTransformAndSetForwardedHeaderWithPreviousXForwardForAndForwardedHeader()[pri:0, instance:org.wso2.transport.http.netty.unitfunction.ForwardedTestCase@2aa5bd48]" name="testTransformAndSetForwardedHeaderWithPreviousXForwardForAndForwardedHeader" duration-ms="1" started-at="2018-05-31T15:52:25Z" description="Test transforming headers to forwarded header when XFF and forwarded available" finished-at="2018-05-31T15:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransformAndSetForwardedHeaderWithPreviousXForwardForAndForwardedHeader -->
        <test-method status="PASS" signature="testTransformAndSetForwardedHeaderWithXFFAndXFBHeaders()[pri:0, instance:org.wso2.transport.http.netty.unitfunction.ForwardedTestCase@2aa5bd48]" name="testTransformAndSetForwardedHeaderWithXFFAndXFBHeaders" duration-ms="1" started-at="2018-05-31T15:52:25Z" description="Test transforming headers to forwarded header when XFF and XFB available" finished-at="2018-05-31T15:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransformAndSetForwardedHeaderWithXFFAndXFBHeaders -->
        <test-method status="PASS" signature="testTransformAndSetForwardedHeaderWithXHeader()[pri:0, instance:org.wso2.transport.http.netty.unitfunction.ForwardedTestCase@2aa5bd48]" name="testTransformAndSetForwardedHeaderWithXHeader" duration-ms="1" started-at="2018-05-31T15:52:25Z" description="Test transforming headers to forwarded header" finished-at="2018-05-31T15:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransformAndSetForwardedHeaderWithXHeader -->
      </class> <!-- org.wso2.transport.http.netty.unitfunction.ForwardedTestCase -->
      <class name="org.wso2.transport.http.netty.forwardedextension.ForwardedEnableTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.forwardedextension.ForwardedEnableTestCase@4c176ff1]" name="setUp" is-config="true" duration-ms="26" started-at="2018-05-31T15:57:45Z" finished-at="2018-05-31T15:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMultipleHeader()[pri:0, instance:org.wso2.transport.http.netty.forwardedextension.ForwardedEnableTestCase@4c176ff1]" name="testMultipleHeader" duration-ms="8" started-at="2018-05-31T15:57:45Z" finished-at="2018-05-31T15:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleHeader -->
        <test-method status="PASS" signature="testSingleHeader()[pri:0, instance:org.wso2.transport.http.netty.forwardedextension.ForwardedEnableTestCase@4c176ff1]" name="testSingleHeader" duration-ms="7" started-at="2018-05-31T15:57:45Z" finished-at="2018-05-31T15:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleHeader -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.forwardedextension.ForwardedEnableTestCase@4c176ff1]" name="cleanUp" is-config="true" duration-ms="4418" started-at="2018-05-31T15:57:45Z" finished-at="2018-05-31T15:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.forwardedextension.ForwardedEnableTestCase -->
      <class name="org.wso2.transport.http.netty.chunkdisable.ChunkEnableClientTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkEnableClientTestCase@418f0534]" name="setUp" is-config="true" duration-ms="35" started-at="2018-05-31T15:58:17Z" finished-at="2018-05-31T15:58:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="postTest()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkEnableClientTestCase@418f0534]" name="postTest" duration-ms="12" started-at="2018-05-31T15:58:17Z" finished-at="2018-05-31T15:58:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkEnableClientTestCase@418f0534]" name="cleanUp" is-config="true" duration-ms="4504" started-at="2018-05-31T15:58:17Z" finished-at="2018-05-31T15:58:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.chunkdisable.ChunkEnableClientTestCase -->
      <class name="org.wso2.transport.http.netty.chunkdisable.ChunkEnableServerTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkEnableServerTestCase@5fe46d52]" name="setUp" is-config="true" duration-ms="29" started-at="2018-05-31T15:57:50Z" finished-at="2018-05-31T15:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="postTest()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkEnableServerTestCase@5fe46d52]" name="postTest" duration-ms="43" started-at="2018-05-31T15:57:50Z" finished-at="2018-05-31T15:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkEnableServerTestCase@5fe46d52]" name="cleanUp" is-config="true" duration-ms="6642" started-at="2018-05-31T15:57:50Z" finished-at="2018-05-31T15:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.chunkdisable.ChunkEnableServerTestCase -->
      <class name="org.wso2.transport.http.netty.chunkdisable.ChunkAutoServerTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkAutoServerTestCase@3a9b41a0]" name="setUp" is-config="true" duration-ms="28" started-at="2018-05-31T15:57:39Z" finished-at="2018-05-31T15:57:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="postTest()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkAutoServerTestCase@3a9b41a0]" name="postTest" duration-ms="19" started-at="2018-05-31T15:57:39Z" finished-at="2018-05-31T15:57:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkAutoServerTestCase@3a9b41a0]" name="cleanUp" is-config="true" duration-ms="6635" started-at="2018-05-31T15:57:39Z" finished-at="2018-05-31T15:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.chunkdisable.ChunkAutoServerTestCase -->
      <class name="org.wso2.transport.http.netty.connectionpool.ConnectionPoolEvictionTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolEvictionTestCase@6af78a48]" name="setup" is-config="true" duration-ms="21" started-at="2018-05-31T15:54:52Z" finished-at="2018-05-31T15:54:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testConnectionEviction()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolEvictionTestCase@6af78a48]" name="testConnectionEviction" duration-ms="5015" started-at="2018-05-31T15:54:52Z" finished-at="2018-05-31T15:54:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConnectionEviction -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.connectionpool.ConnectionPoolEvictionTestCase@6af78a48]" name="cleanUp" is-config="true" duration-ms="11047" started-at="2018-05-31T15:54:57Z" finished-at="2018-05-31T15:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.connectionpool.ConnectionPoolEvictionTestCase -->
      <class name="org.wso2.transport.http.netty.chunkdisable.ChunkDisableServerTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkDisableServerTestCase@448ade1]" name="setUp" is-config="true" duration-ms="21" started-at="2018-05-31T15:58:01Z" finished-at="2018-05-31T15:58:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="postTest()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkDisableServerTestCase@448ade1]" name="postTest" duration-ms="30" started-at="2018-05-31T15:58:01Z" finished-at="2018-05-31T15:58:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkDisableServerTestCase@448ade1]" name="cleanUp" is-config="true" duration-ms="6639" started-at="2018-05-31T15:58:01Z" finished-at="2018-05-31T15:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.chunkdisable.ChunkDisableServerTestCase -->
      <class name="org.wso2.transport.http.netty.chunkdisable.ChunkDisableClientTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkDisableClientTestCase@3dfd7eaa]" name="setUp" is-config="true" duration-ms="33" started-at="2018-05-31T15:58:21Z" finished-at="2018-05-31T15:58:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="postTest()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkDisableClientTestCase@3dfd7eaa]" name="postTest" duration-ms="13" started-at="2018-05-31T15:58:21Z" finished-at="2018-05-31T15:58:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.chunkdisable.ChunkDisableClientTestCase@3dfd7eaa]" name="cleanUp" is-config="true" duration-ms="4419" started-at="2018-05-31T15:58:21Z" finished-at="2018-05-31T15:58:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.chunkdisable.ChunkDisableClientTestCase -->
      <class name="org.wso2.transport.http.netty.ClientConnectorConnectionRefusedTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.ClientConnectorConnectionRefusedTestCase@5ed0b4e3]" name="setup" is-config="true" duration-ms="24" started-at="2018-05-31T15:56:46Z" finished-at="2018-05-31T15:56:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHttpsGet()[pri:0, instance:org.wso2.transport.http.netty.ClientConnectorConnectionRefusedTestCase@5ed0b4e3]" name="testHttpsGet" duration-ms="4" started-at="2018-05-31T15:56:46Z" finished-at="2018-05-31T15:56:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttpsGet -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.ClientConnectorConnectionRefusedTestCase@5ed0b4e3]" name="cleanUp" is-config="true" duration-ms="6627" started-at="2018-05-31T15:56:46Z" finished-at="2018-05-31T15:56:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.ClientConnectorConnectionRefusedTestCase -->
      <class name="org.wso2.transport.http.netty.contentaware.RequestResponseTransformTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.contentaware.RequestResponseTransformTestCase@2f15a964]" name="setUp" is-config="true" duration-ms="16" started-at="2018-05-31T15:53:46Z" finished-at="2018-05-31T15:53:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRequestResponseTranformation()[pri:0, instance:org.wso2.transport.http.netty.contentaware.RequestResponseTransformTestCase@2f15a964]" name="testRequestResponseTranformation" duration-ms="47" started-at="2018-05-31T15:53:46Z" finished-at="2018-05-31T15:53:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRequestResponseTranformation -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.contentaware.RequestResponseTransformTestCase@2f15a964]" name="cleanUp" is-config="true" duration-ms="11061" started-at="2018-05-31T15:53:46Z" finished-at="2018-05-31T15:53:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.contentaware.RequestResponseTransformTestCase -->
      <class name="org.wso2.transport.http.netty.contentaware.RequestResponseStreamingTestCase">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.contentaware.RequestResponseStreamingTestCase@3e9beef2]" name="setUp" is-config="true" duration-ms="22" started-at="2018-05-31T15:53:30Z" finished-at="2018-05-31T15:53:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRequestResponseStreaming()[pri:0, instance:org.wso2.transport.http.netty.contentaware.RequestResponseStreamingTestCase@3e9beef2]" name="testRequestResponseStreaming" duration-ms="51" started-at="2018-05-31T15:53:30Z" finished-at="2018-05-31T15:53:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRequestResponseStreaming -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.contentaware.RequestResponseStreamingTestCase@3e9beef2]" name="cleanUp" is-config="true" duration-ms="11093" started-at="2018-05-31T15:53:30Z" finished-at="2018-05-31T15:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.contentaware.RequestResponseStreamingTestCase -->
    </test> <!-- Transport test -->
    <test name="Websocket Tests" duration-ms="41802" started-at="2018-05-31T13:59:02Z" finished-at="2018-05-31T13:59:44Z">
      <class name="org.wso2.transport.http.netty.websocket.passthrough.WebSocketPassThroughTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.websocket.passthrough.WebSocketPassThroughTestCase@6b3d9c38]" name="setup" is-config="true" duration-ms="54" started-at="2018-05-31T15:59:37Z" finished-at="2018-05-31T15:59:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testBinaryPassThrough()[pri:0, instance:org.wso2.transport.http.netty.websocket.passthrough.WebSocketPassThroughTestCase@6b3d9c38]" name="testBinaryPassThrough" duration-ms="35" started-at="2018-05-31T15:59:37Z" finished-at="2018-05-31T15:59:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBinaryPassThrough -->
        <test-method status="PASS" signature="testTextPassThrough()[pri:0, instance:org.wso2.transport.http.netty.websocket.passthrough.WebSocketPassThroughTestCase@6b3d9c38]" name="testTextPassThrough" duration-ms="27" started-at="2018-05-31T15:59:37Z" finished-at="2018-05-31T15:59:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextPassThrough -->
        <test-method status="PASS" signature="cleaUp()[pri:0, instance:org.wso2.transport.http.netty.websocket.passthrough.WebSocketPassThroughTestCase@6b3d9c38]" name="cleaUp" is-config="true" duration-ms="7336" started-at="2018-05-31T15:59:37Z" finished-at="2018-05-31T15:59:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleaUp -->
      </class> <!-- org.wso2.transport.http.netty.websocket.passthrough.WebSocketPassThroughTestCase -->
      <class name="org.wso2.transport.http.netty.websocket.server.WebSocketServerFunctionalityTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerFunctionalityTestCase@25218a4d]" name="setup" is-config="true" duration-ms="29" started-at="2018-05-31T15:59:13Z" finished-at="2018-05-31T15:59:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testBinaryReceiveAndEchoBack()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerFunctionalityTestCase@25218a4d]" name="testBinaryReceiveAndEchoBack" duration-ms="17" started-at="2018-05-31T15:59:13Z" finished-at="2018-05-31T15:59:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBinaryReceiveAndEchoBack -->
        <test-method status="PASS" signature="testForceFulConnectionClosure()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerFunctionalityTestCase@25218a4d]" name="testForceFulConnectionClosure" duration-ms="17" started-at="2018-05-31T15:59:13Z" finished-at="2018-05-31T15:59:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForceFulConnectionClosure -->
        <test-method status="PASS" signature="testPingToTestClient()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerFunctionalityTestCase@25218a4d]" name="testPingToTestClient" duration-ms="17" started-at="2018-05-31T15:59:13Z" finished-at="2018-05-31T15:59:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPingToTestClient -->
        <test-method status="PASS" signature="testPong()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerFunctionalityTestCase@25218a4d]" name="testPong" duration-ms="23" started-at="2018-05-31T15:59:13Z" finished-at="2018-05-31T15:59:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPong -->
        <test-method status="PASS" signature="testSendAndReceiveDifferentStatusCode()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerFunctionalityTestCase@25218a4d]" name="testSendAndReceiveDifferentStatusCode" duration-ms="23" started-at="2018-05-31T15:59:13Z" description="As per spec typically the remote endpoint should echo back the same status code sent by this endpoint. This tests the error for not receiving the same status code." finished-at="2018-05-31T15:59:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendAndReceiveDifferentStatusCode -->
        <test-method status="PASS" signature="testServerInitiatedClosure()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerFunctionalityTestCase@25218a4d]" name="testServerInitiatedClosure" duration-ms="27" started-at="2018-05-31T15:59:13Z" finished-at="2018-05-31T15:59:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testServerInitiatedClosure -->
        <test-method status="PASS" signature="testTextReceiveAndEchoBack()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerFunctionalityTestCase@25218a4d]" name="testTextReceiveAndEchoBack" duration-ms="19" started-at="2018-05-31T15:59:13Z" finished-at="2018-05-31T15:59:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextReceiveAndEchoBack -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerFunctionalityTestCase@25218a4d]" name="cleanUp" is-config="true" duration-ms="6636" started-at="2018-05-31T15:59:13Z" finished-at="2018-05-31T15:59:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.websocket.server.WebSocketServerFunctionalityTestCase -->
      <class name="org.wso2.transport.http.netty.websocket.server.WebSocketServerHandshakeFunctionalityTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerHandshakeFunctionalityTestCase@4d0e1a9a]" name="setup" is-config="true" duration-ms="21" started-at="2018-05-31T15:59:02Z" finished-at="2018-05-31T15:59:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testCancelHandshake()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerHandshakeFunctionalityTestCase@4d0e1a9a]" name="testCancelHandshake" duration-ms="52" started-at="2018-05-31T15:59:02Z" description="Check whether no any sub protocol is negotiated when unsupported sub protocols are requested." finished-at="2018-05-31T15:59:03Z">
          <exception class="io.netty.handler.codec.http.websocketx.WebSocketHandshakeException">
            <message>
              <![CDATA[Invalid handshake response getStatus: 404 Not Found]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.netty.handler.codec.http.websocketx.WebSocketHandshakeException: Invalid handshake response getStatus: 404 Not Found
	at io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13.verify(WebSocketClientHandshaker13.java:191)
	at io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker.finishHandshake(WebSocketClientHandshaker.java:216)
	at org.wso2.transport.http.netty.util.client.websocket.WebSocketTestClientFrameHandler.channelRead0(WebSocketTestClientFrameHandler.java:103)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler.channelRead(WebSocketClientExtensionHandler.java:128)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:371)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:342)
	at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:282)
	at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:223)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1354)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:917)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:822)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- io.netty.handler.codec.http.websocketx.WebSocketHandshakeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCancelHandshake -->
        <test-method status="PASS" signature="testFailSubProtocolNegotiation()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerHandshakeFunctionalityTestCase@4d0e1a9a]" name="testFailSubProtocolNegotiation" duration-ms="30" started-at="2018-05-31T15:59:03Z" description="Check whether no any sub protocol is negotiated when unsupported sub protocols are requested." finished-at="2018-05-31T15:59:03Z">
          <exception class="io.netty.handler.codec.http.websocketx.WebSocketHandshakeException">
            <message>
              <![CDATA[Invalid subprotocol. Actual: null. Expected one of: dummy1, dummy2]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.netty.handler.codec.http.websocketx.WebSocketHandshakeException: Invalid subprotocol. Actual: null. Expected one of: dummy1, dummy2
	at io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker.finishHandshake(WebSocketClientHandshaker.java:241)
	at org.wso2.transport.http.netty.util.client.websocket.WebSocketTestClientFrameHandler.channelRead0(WebSocketTestClientFrameHandler.java:103)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler.channelRead(WebSocketClientExtensionHandler.java:128)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:141)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- io.netty.handler.codec.http.websocketx.WebSocketHandshakeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailSubProtocolNegotiation -->
        <test-method status="PASS" signature="testHandshakeWithCustomHeader()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerHandshakeFunctionalityTestCase@4d0e1a9a]" name="testHandshakeWithCustomHeader" duration-ms="16" started-at="2018-05-31T15:59:03Z" description="Check the capability of sending custom headers in handshake response." finished-at="2018-05-31T15:59:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHandshakeWithCustomHeader -->
        <test-method status="PASS" signature="testHandshakeWithPostMethod()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerHandshakeFunctionalityTestCase@4d0e1a9a]" name="testHandshakeWithPostMethod" duration-ms="8" started-at="2018-05-31T15:59:03Z" description="WebSocket server sends 400 Bad Request if a createClientAndHandshake request is received with other than GET method" finished-at="2018-05-31T15:59:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHandshakeWithPostMethod -->
        <test-method status="PASS" signature="testIdleTimeout()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerHandshakeFunctionalityTestCase@4d0e1a9a]" name="testIdleTimeout" duration-ms="4027" started-at="2018-05-31T15:59:03Z" description="Test connection closure due to idle timeout in server." finished-at="2018-05-31T15:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdleTimeout -->
        <test-method status="PASS" signature="testReadNextFrame()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerHandshakeFunctionalityTestCase@4d0e1a9a]" name="testReadNextFrame" duration-ms="37" started-at="2018-05-31T15:59:07Z" finished-at="2018-05-31T15:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadNextFrame -->
        <test-method status="PASS" signature="testSuccessfulSubProtocolNegotiation()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerHandshakeFunctionalityTestCase@4d0e1a9a]" name="testSuccessfulSubProtocolNegotiation" duration-ms="14" started-at="2018-05-31T15:59:07Z" description="Check whether the correct sub protocol is chosen by the server with the given sequence." finished-at="2018-05-31T15:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulSubProtocolNegotiation -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:org.wso2.transport.http.netty.websocket.server.WebSocketServerHandshakeFunctionalityTestCase@4d0e1a9a]" name="cleanup" is-config="true" duration-ms="6636" started-at="2018-05-31T15:59:07Z" finished-at="2018-05-31T15:59:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- org.wso2.transport.http.netty.websocket.server.WebSocketServerHandshakeFunctionalityTestCase -->
      <class name="org.wso2.transport.http.netty.websocket.client.WebSocketClientHandshakeFunctionalityTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientHandshakeFunctionalityTestCase@bf2aa32]" name="setup" is-config="true" duration-ms="30" started-at="2018-05-31T15:59:20Z" finished-at="2018-05-31T15:59:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testIdleTimeout()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientHandshakeFunctionalityTestCase@bf2aa32]" name="testIdleTimeout" duration-ms="3037" started-at="2018-05-31T15:59:20Z" description="Test the idle timeout for WebSocket" finished-at="2018-05-31T15:59:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdleTimeout -->
        <test-method status="PASS" signature="testReadNextFrame()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientHandshakeFunctionalityTestCase@bf2aa32]" name="testReadNextFrame" duration-ms="49" started-at="2018-05-31T15:59:23Z" description="Test the behavior of client connector when auto read is false." finished-at="2018-05-31T15:59:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadNextFrame -->
        <test-method status="PASS" signature="testSendAndReceiveCustomHeaders()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientHandshakeFunctionalityTestCase@bf2aa32]" name="testSendAndReceiveCustomHeaders" duration-ms="8" started-at="2018-05-31T15:59:23Z" description="Test whether client can send custom headers and receive." finished-at="2018-05-31T15:59:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendAndReceiveCustomHeaders -->
        <test-method status="PASS" signature="testSubProtocolNegotiationFail()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientHandshakeFunctionalityTestCase@bf2aa32]" name="testSubProtocolNegotiationFail" duration-ms="10" started-at="2018-05-31T15:59:23Z" description="Test the sub protocol negotiation with the remote server" finished-at="2018-05-31T15:59:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubProtocolNegotiationFail -->
        <test-method status="PASS" signature="testSubProtocolNegotiationSuccessful()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientHandshakeFunctionalityTestCase@bf2aa32]" name="testSubProtocolNegotiationSuccessful" duration-ms="6" started-at="2018-05-31T15:59:23Z" description="Test the sub protocol negotiation with the remote server" finished-at="2018-05-31T15:59:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubProtocolNegotiationSuccessful -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientHandshakeFunctionalityTestCase@bf2aa32]" name="cleanUp" is-config="true" duration-ms="6654" started-at="2018-05-31T15:59:23Z" finished-at="2018-05-31T15:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.websocket.client.WebSocketClientHandshakeFunctionalityTestCase -->
      <class name="org.wso2.transport.http.netty.websocket.client.WebSocketClientFunctionalityTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientFunctionalityTestCase@56da96b3]" name="setup" is-config="true" duration-ms="17" started-at="2018-05-31T15:59:30Z" finished-at="2018-05-31T15:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testBinarySendAndReceive()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientFunctionalityTestCase@56da96b3]" name="testBinarySendAndReceive" duration-ms="51" started-at="2018-05-31T15:59:30Z" description="Test binary message sending and receiving." finished-at="2018-05-31T15:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBinarySendAndReceive -->
        <test-method status="PASS" signature="testClientInitiatedClosure()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientFunctionalityTestCase@56da96b3]" name="testClientInitiatedClosure" duration-ms="9" started-at="2018-05-31T15:59:30Z" finished-at="2018-05-31T15:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClientInitiatedClosure -->
        <test-method status="PASS" signature="testConnectionClosureFromServerSide()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientFunctionalityTestCase@56da96b3]" name="testConnectionClosureFromServerSide" duration-ms="52" started-at="2018-05-31T15:59:30Z" finished-at="2018-05-31T15:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConnectionClosureFromServerSide -->
        <test-method status="PASS" signature="testConnectionClosureFromServerSideWithoutCloseFrame()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientFunctionalityTestCase@56da96b3]" name="testConnectionClosureFromServerSideWithoutCloseFrame" duration-ms="48" started-at="2018-05-31T15:59:30Z" finished-at="2018-05-31T15:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConnectionClosureFromServerSideWithoutCloseFrame -->
        <test-method status="PASS" signature="testConnectionTermination()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientFunctionalityTestCase@56da96b3]" name="testConnectionTermination" duration-ms="8" started-at="2018-05-31T15:59:30Z" description="Test connection termination using WebSocketConnection without sending a close frame." finished-at="2018-05-31T15:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConnectionTermination -->
        <test-method status="PASS" signature="testPing()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientFunctionalityTestCase@56da96b3]" name="testPing" duration-ms="35" started-at="2018-05-31T15:59:30Z" description="Test ping received from the server." finished-at="2018-05-31T15:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPing -->
        <test-method status="PASS" signature="testPong()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientFunctionalityTestCase@56da96b3]" name="testPong" duration-ms="6" started-at="2018-05-31T15:59:30Z" description="Test pong received from the server after pinging the server." finished-at="2018-05-31T15:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPong -->
        <test-method status="PASS" signature="testTextSendAndReceive()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientFunctionalityTestCase@56da96b3]" name="testTextSendAndReceive" duration-ms="16" started-at="2018-05-31T15:59:30Z" description="Test the WebSocket handshake and sending and receiving text messages." finished-at="2018-05-31T15:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextSendAndReceive -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.websocket.client.WebSocketClientFunctionalityTestCase@56da96b3]" name="cleanUp" is-config="true" duration-ms="6652" started-at="2018-05-31T15:59:30Z" finished-at="2018-05-31T15:59:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.websocket.client.WebSocketClientFunctionalityTestCase -->
    </test> <!-- Websocket Tests -->
    <test name="HTTP2 Tests" duration-ms="47704" started-at="2018-05-31T13:59:44Z" finished-at="2018-05-31T14:00:32Z">
      <class name="org.wso2.transport.http.netty.http2.Http2ServerPushTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2ServerPushTestCase@83b0d0f]" name="setup" is-config="true" duration-ms="20" started-at="2018-05-31T16:00:02Z" finished-at="2018-05-31T16:00:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHttp2ServerPush()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2ServerPushTestCase@83b0d0f]" name="testHttp2ServerPush" duration-ms="24" started-at="2018-05-31T16:00:02Z" finished-at="2018-05-31T16:00:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttp2ServerPush -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2ServerPushTestCase@83b0d0f]" name="cleanUp" is-config="true" duration-ms="6631" started-at="2018-05-31T16:00:02Z" finished-at="2018-05-31T16:00:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.http2.Http2ServerPushTestCase -->
      <class name="org.wso2.transport.http.netty.http2.Http2ServerConnectorBasicTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2ServerConnectorBasicTestCase@19105a87]" name="setup" is-config="true" duration-ms="15" started-at="2018-05-31T15:59:55Z" finished-at="2018-05-31T15:59:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHttp2Post()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2ServerConnectorBasicTestCase@19105a87]" name="testHttp2Post" duration-ms="24" started-at="2018-05-31T15:59:55Z" finished-at="2018-05-31T15:59:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttp2Post -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2ServerConnectorBasicTestCase@19105a87]" name="cleanUp" is-config="true" duration-ms="6632" started-at="2018-05-31T15:59:56Z" finished-at="2018-05-31T16:00:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.http2.Http2ServerConnectorBasicTestCase -->
      <class name="org.wso2.transport.http.netty.http2.Http2WithPriorKnowledgeTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2WithPriorKnowledgeTestCase@7afe0e67]" name="setup" is-config="true" duration-ms="33" started-at="2018-05-31T16:00:19Z" finished-at="2018-05-31T16:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHttp2WithPriorKnowledge()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2WithPriorKnowledgeTestCase@7afe0e67]" name="testHttp2WithPriorKnowledge" duration-ms="18" started-at="2018-05-31T16:00:19Z" finished-at="2018-05-31T16:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttp2WithPriorKnowledge -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2WithPriorKnowledgeTestCase@7afe0e67]" name="cleanUp" is-config="true" duration-ms="6634" started-at="2018-05-31T16:00:19Z" finished-at="2018-05-31T16:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.http2.Http2WithPriorKnowledgeTestCase -->
      <class name="org.wso2.transport.http.netty.http2.TestHttp2WithALPN">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.http2.TestHttp2WithALPN@6121a7dd]" name="setup" is-config="true" duration-ms="58" started-at="2018-05-31T16:00:25Z" finished-at="2018-05-31T16:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHttp2Post()[pri:0, instance:org.wso2.transport.http.netty.http2.TestHttp2WithALPN@6121a7dd]" name="testHttp2Post" duration-ms="80" started-at="2018-05-31T16:00:25Z" finished-at="2018-05-31T16:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttp2Post -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.http2.TestHttp2WithALPN@6121a7dd]" name="cleanUp" is-config="true" duration-ms="6633" started-at="2018-05-31T16:00:25Z" finished-at="2018-05-31T16:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.http2.TestHttp2WithALPN -->
      <class name="org.wso2.transport.http.netty.http2.Http2ClientTimeoutTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2ClientTimeoutTestCase@2bb717d7]" name="setup" is-config="true" duration-ms="30" started-at="2018-05-31T16:00:09Z" finished-at="2018-05-31T16:00:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHttp2ClientTimeout()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2ClientTimeoutTestCase@2bb717d7]" name="testHttp2ClientTimeout" duration-ms="3014" started-at="2018-05-31T16:00:09Z" finished-at="2018-05-31T16:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttp2ClientTimeout -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2ClientTimeoutTestCase@2bb717d7]" name="cleanUp" is-config="true" duration-ms="6632" started-at="2018-05-31T16:00:12Z" finished-at="2018-05-31T16:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.http2.Http2ClientTimeoutTestCase -->
      <class name="org.wso2.transport.http.netty.http2.Http2ClientConnectorBasicTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2ClientConnectorBasicTestCase@21be14c2]" name="setup" is-config="true" duration-ms="51" started-at="2018-05-31T15:59:44Z" finished-at="2018-05-31T15:59:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHttp2Get()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2ClientConnectorBasicTestCase@21be14c2]" name="testHttp2Get" duration-ms="102" started-at="2018-05-31T15:59:44Z" finished-at="2018-05-31T15:59:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttp2Get -->
        <test-method status="PASS" signature="testHttp2Post()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2ClientConnectorBasicTestCase@21be14c2]" name="testHttp2Post" duration-ms="17" started-at="2018-05-31T15:59:44Z" finished-at="2018-05-31T15:59:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttp2Post -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.http2.Http2ClientConnectorBasicTestCase@21be14c2]" name="cleanUp" is-config="true" duration-ms="11053" started-at="2018-05-31T15:59:44Z" finished-at="2018-05-31T15:59:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.http2.Http2ClientConnectorBasicTestCase -->
    </test> <!-- HTTP2 Tests -->
    <test name="Transport Security Tests" duration-ms="67777" started-at="2018-05-31T14:00:32Z" finished-at="2018-05-31T14:01:40Z">
      <class name="org.wso2.transport.http.netty.certificatevalidation.RevocationVerificationTest">
        <test-method status="PASS" signature="testCRLPathValidation()[pri:0, instance:org.wso2.transport.http.netty.certificatevalidation.RevocationVerificationTest@1c00d406]" name="testCRLPathValidation" duration-ms="223" started-at="2018-05-31T16:00:32Z" finished-at="2018-05-31T16:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCRLPathValidation -->
        <test-method status="PASS" signature="testCRLPathValidationWithFakeCerts()[pri:0, instance:org.wso2.transport.http.netty.certificatevalidation.RevocationVerificationTest@1c00d406]" name="testCRLPathValidationWithFakeCerts" duration-ms="214" started-at="2018-05-31T16:00:32Z" finished-at="2018-05-31T16:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCRLPathValidationWithFakeCerts -->
        <test-method status="PASS" signature="testOCSPPathValidation()[pri:0, instance:org.wso2.transport.http.netty.certificatevalidation.RevocationVerificationTest@1c00d406]" name="testOCSPPathValidation" duration-ms="148" started-at="2018-05-31T16:00:32Z" finished-at="2018-05-31T16:00:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOCSPPathValidation -->
        <test-method status="PASS" signature="testOCSPPathValidationWithFakeCerts()[pri:0, instance:org.wso2.transport.http.netty.certificatevalidation.RevocationVerificationTest@1c00d406]" name="testOCSPPathValidationWithFakeCerts" duration-ms="126" started-at="2018-05-31T16:00:33Z" finished-at="2018-05-31T16:00:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOCSPPathValidationWithFakeCerts -->
      </class> <!-- org.wso2.transport.http.netty.certificatevalidation.RevocationVerificationTest -->
      <class name="org.wso2.transport.http.netty.certificatevalidation.OCSPVerifierTest">
        <test-method status="PASS" signature="testOCSPVerifier()[pri:0, instance:org.wso2.transport.http.netty.certificatevalidation.OCSPVerifierTest@559d19c]" name="testOCSPVerifier" duration-ms="143" started-at="2018-05-31T16:00:33Z" finished-at="2018-05-31T16:00:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOCSPVerifier -->
      </class> <!-- org.wso2.transport.http.netty.certificatevalidation.OCSPVerifierTest -->
      <class name="org.wso2.transport.http.netty.ocspstapling.OCSPStaplingTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.transport.http.netty.ocspstapling.OCSPStaplingTest@3a588b5f]" name="setUp" is-config="true" duration-ms="112" started-at="2018-05-31T16:01:33Z" finished-at="2018-05-31T16:01:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testOcspStapling()[pri:0, instance:org.wso2.transport.http.netty.ocspstapling.OCSPStaplingTest@3a588b5f]" name="testOcspStapling" duration-ms="92" started-at="2018-05-31T16:01:33Z" description="Tests with ocsp stapling enabled client and a server." finished-at="2018-05-31T16:01:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOcspStapling -->
        <test-method status="PASS" signature="testRetrievingAIALocations()[pri:0, instance:org.wso2.transport.http.netty.ocspstapling.OCSPStaplingTest@3a588b5f]" name="testRetrievingAIALocations" duration-ms="6" started-at="2018-05-31T16:01:33Z" description="Tests retrieving AIA locations from the certificate inside the keystore." finished-at="2018-05-31T16:01:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrievingAIALocations -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.ocspstapling.OCSPStaplingTest@3a588b5f]" name="cleanUp" is-config="true" duration-ms="6771" started-at="2018-05-31T16:01:33Z" finished-at="2018-05-31T16:01:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.ocspstapling.OCSPStaplingTest -->
      <class name="org.wso2.transport.http.netty.https.HTTPSClientTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.https.HTTPSClientTestCase@719c1faf]" name="setup" is-config="true" duration-ms="29" started-at="2018-05-31T16:00:33Z" finished-at="2018-05-31T16:00:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHttpsGet()[pri:0, instance:org.wso2.transport.http.netty.https.HTTPSClientTestCase@719c1faf]" name="testHttpsGet" duration-ms="34" started-at="2018-05-31T16:00:33Z" finished-at="2018-05-31T16:00:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttpsGet -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.https.HTTPSClientTestCase@719c1faf]" name="cleanUp" is-config="true" duration-ms="11047" started-at="2018-05-31T16:00:33Z" finished-at="2018-05-31T16:00:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.https.HTTPSClientTestCase -->
      <class name="org.wso2.transport.http.netty.https.SSLProtocolsTest">
        <test-method status="PASS" signature="setup(java.lang.String, java.lang.String, boolean, int)[pri:0, instance:org.wso2.transport.http.netty.https.SSLProtocolsTest@6ba6557e]" name="setup" duration-ms="107" started-at="2018-05-31T16:00:44Z" data-provider="protocols" finished-at="2018-05-31T16:00:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TLSv1.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TLSv1.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.String, java.lang.String, boolean, int)[pri:0, instance:org.wso2.transport.http.netty.https.SSLProtocolsTest@6ba6557e]" name="setup" duration-ms="5024" started-at="2018-05-31T16:00:44Z" data-provider="protocols" finished-at="2018-05-31T16:00:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TLSv1.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TLSv1.2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9002]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.https.SSLProtocolsTest@6ba6557e]" name="cleanUp" is-config="true" duration-ms="6632" started-at="2018-05-31T16:00:49Z" finished-at="2018-05-31T16:00:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.https.SSLProtocolsTest -->
      <class name="org.wso2.transport.http.netty.certificatevalidation.CRLVerifierTest">
        <test-method status="PASS" signature="testRevokedCertificate()[pri:0, instance:org.wso2.transport.http.netty.certificatevalidation.CRLVerifierTest@16ac4d3d]" name="testRevokedCertificate" duration-ms="177" started-at="2018-05-31T16:00:33Z" finished-at="2018-05-31T16:00:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRevokedCertificate -->
      </class> <!-- org.wso2.transport.http.netty.certificatevalidation.CRLVerifierTest -->
      <class name="org.wso2.transport.http.netty.hostnameverfication.HostnameVerificationTest">
        <test-method status="PASS" signature="testHostNameVerification(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, int)[pri:0, instance:org.wso2.transport.http.netty.hostnameverfication.HostnameVerificationTest@45f9d394]" name="testHostNameVerification" duration-ms="5026" started-at="2018-05-31T16:01:14Z" data-provider="configurations" finished-at="2018-05-31T16:01:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/simple-test-config/localcrt.p12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[localpwd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/simple-test-config/cacerts.p12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cacertspassword]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[9004]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHostNameVerification -->
        <test-method status="PASS" signature="testHostNameVerification(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, int)[pri:0, instance:org.wso2.transport.http.netty.hostnameverfication.HostnameVerificationTest@45f9d394]" name="testHostNameVerification" duration-ms="91" started-at="2018-05-31T16:01:19Z" data-provider="configurations" finished-at="2018-05-31T16:01:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/simple-test-config/wso2carbon.p12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ballerina]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/simple-test-config/client-truststore.p12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ballerina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[9002]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHostNameVerification -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.hostnameverfication.HostnameVerificationTest@45f9d394]" name="cleanUp" is-config="true" duration-ms="6633" started-at="2018-05-31T16:01:19Z" finished-at="2018-05-31T16:01:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.hostnameverfication.HostnameVerificationTest -->
      <class name="org.wso2.transport.http.netty.pkcs.PKCSTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.pkcs.PKCSTest@1c2d63f0]" name="setup" is-config="true" duration-ms="21" started-at="2018-05-31T16:01:26Z" finished-at="2018-05-31T16:01:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testPKCS12()[pri:0, instance:org.wso2.transport.http.netty.pkcs.PKCSTest@1c2d63f0]" name="testPKCS12" duration-ms="55" started-at="2018-05-31T16:01:26Z" finished-at="2018-05-31T16:01:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPKCS12 -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.pkcs.PKCSTest@1c2d63f0]" name="cleanUp" is-config="true" duration-ms="6632" started-at="2018-05-31T16:01:26Z" finished-at="2018-05-31T16:01:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.pkcs.PKCSTest -->
      <class name="org.wso2.transport.http.netty.https.CipherSuitesTest">
        <test-method status="PASS" signature="setup(java.lang.String, java.lang.String, boolean, int)[pri:0, instance:org.wso2.transport.http.netty.https.CipherSuitesTest@5409dfdd]" name="setup" duration-ms="69" started-at="2018-05-31T16:01:03Z" data-provider="ciphers" finished-at="2018-05-31T16:01:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[8490]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.String, java.lang.String, boolean, int)[pri:0, instance:org.wso2.transport.http.netty.https.CipherSuitesTest@5409dfdd]" name="setup" duration-ms="5021" started-at="2018-05-31T16:01:03Z" data-provider="ciphers" finished-at="2018-05-31T16:01:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9004]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.https.CipherSuitesTest@5409dfdd]" name="cleanUp" is-config="true" duration-ms="6632" started-at="2018-05-31T16:01:08Z" finished-at="2018-05-31T16:01:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.https.CipherSuitesTest -->
      <class name="org.wso2.transport.http.netty.https.MutualSSLTestCase">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.transport.http.netty.https.MutualSSLTestCase@1f172892]" name="setup" is-config="true" duration-ms="19" started-at="2018-05-31T16:00:56Z" finished-at="2018-05-31T16:00:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHttpsPost()[pri:0, instance:org.wso2.transport.http.netty.https.MutualSSLTestCase@1f172892]" name="testHttpsPost" duration-ms="41" started-at="2018-05-31T16:00:56Z" finished-at="2018-05-31T16:00:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttpsPost -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.wso2.transport.http.netty.https.MutualSSLTestCase@1f172892]" name="cleanUp" is-config="true" duration-ms="6630" started-at="2018-05-31T16:00:56Z" finished-at="2018-05-31T16:01:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- org.wso2.transport.http.netty.https.MutualSSLTestCase -->
    </test> <!-- Transport Security Tests -->
  </suite> <!-- Transport test Suite -->
</testng-results>
