[INFO ] fr.inria.main.evolution.AstorMain.setupLogging(AstorMain.java:317) - Log file at: ./workspace/apache/struts/326709312/repairnator.astor.log
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:803) - Source folders: [/root/workspace/apache/struts/326709312/core/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:822) - Source Test folders: [/root/workspace/apache/struts/326709312/core/src/test/java]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:74) - -Executing Gzoltar classpath: /root/./output_astor/AstorMain-core//bin//default from 274 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:148) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:168) - -gz-Adding classpath: [/root/./workspace/apache/struts/326709312/.m2/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-web/4.1.9.RELEASE/spring-web-4.1.9.RELEASE.jar, /root/./output_astor/AstorMain-core//bin//default, /root/./workspace/apache/struts/326709312/.m2/commons-validator/commons-validator/1.5.1/commons-validator-1.5.1.jar, /root/./workspace/apache/struts/326709312/.m2/commons-chain/commons-chain/1.1/commons-chain-1.1.jar, /root/./workspace/apache/struts/326709312/.m2/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/struts/struts-tiles/1.3.8/struts-tiles-1.3.8.jar, /root/./workspace/apache/struts/326709312/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar, /root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-jdk1.3/0.09/mockobjects-jdk1.3-0.09.jar, /root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-alt-jdk1.3-j2ee1.3/0.09/mockobjects-alt-jdk1.3-j2ee1.3-0.09.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/struts/struts-annotations/1.0.6/struts-annotations-1.0.6.jar, /root/./workspace/apache/struts/326709312/.m2/dom4j/dom4j/1.1/dom4j-1.1.jar, /root/./workspace/apache/struts/326709312/.m2/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar, /root/./workspace/apache/struts/326709312/.m2/ognl/ognl/3.1.15/ognl-3.1.15.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-beans/4.1.9.RELEASE/spring-beans-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/org/slf4j/slf4j-simple/1.7.12/slf4j-simple-1.7.12.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/logging/log4j/log4j-api/2.9.1/log4j-api-2.9.1.jar, /root/./workspace/apache/struts/326709312/.m2/cglib/cglib-nodep/2.1_3/cglib-nodep-2.1_3.jar, /root/./workspace/apache/struts/326709312/.m2/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-aspects/4.1.9.RELEASE/spring-aspects-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-core/0.09/mockobjects-core-0.09.jar, /root/./workspace/apache/struts/326709312/.m2/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/commons/commons-lang3/3.6/commons-lang3-3.6.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-aop/4.1.9.RELEASE/spring-aop-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/commons/commons-collections4/4.1/commons-collections4-4.1.jar, /root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-alt-jdk1.3/0.09/mockobjects-alt-jdk1.3-0.09.jar, /root/./workspace/apache/struts/326709312/.m2/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/logging/log4j/log4j-core/2.9.1/log4j-core-2.9.1.jar, /root/./workspace/apache/struts/326709312/.m2/junit/junit/4.12/junit-4.12.jar, /root/./workspace/apache/struts/326709312/.m2/jmock/jmock/1.2.0/jmock-1.2.0.jar, /root/./workspace/apache/struts/326709312/.m2/org/objenesis/objenesis/2.2/objenesis-2.2.jar, /root/./workspace/apache/struts/326709312/.m2/com/beust/jcommander/1.12/jcommander-1.12.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/struts/struts-taglib/1.3.8/struts-taglib-1.3.8.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-expression/4.1.9.RELEASE/spring-expression-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-jdk1.3-j2ee1.3/0.09/mockobjects-jdk1.3-j2ee1.3-0.09.jar, /root/./workspace/apache/struts/326709312/.m2/org/easymock/easymock/3.4/easymock-3.4.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-core/4.1.9.RELEASE/spring-core-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/velocity/velocity-tools/2.0/velocity-tools-2.0.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/velocity/velocity/1.7/velocity-1.7.jar, /root/./workspace/apache/struts/326709312/.m2/commons-beanutils/commons-beanutils/1.9.2/commons-beanutils-1.9.2.jar, /root/./workspace/apache/struts/326709312/.m2/commons-digester/commons-digester/2.1/commons-digester-2.1.jar, /root/./workspace/apache/struts/326709312/.m2/javax/servlet/jsp-api/2.0/jsp-api-2.0.jar, /root/./workspace/apache/struts/326709312/.m2/sslext/sslext/1.2-0/sslext-1.2-0.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/struts/struts-core/1.3.8/struts-core-1.3.8.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-test/4.1.9.RELEASE/spring-test-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/commons-lang/commons-lang/2.4/commons-lang-2.4.jar, /root/./workspace/apache/struts/326709312/.m2/org/testng/testng/5.14.10/testng-5.14.10.jar, /root/./workspace/apache/struts/326709312/.m2/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-context-support/4.1.9.RELEASE/spring-context-support-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/org/freemarker/freemarker/2.3.26-incubating/freemarker-2.3.26-incubating.jar, /root/./workspace/apache/struts/326709312/.m2/antlr/antlr/2.7.2/antlr-2.7.2.jar, /root/./workspace/apache/struts/326709312/.m2/commons-fileupload/commons-fileupload/1.3.3/commons-fileupload-1.3.3.jar, /root/./workspace/apache/struts/326709312/.m2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /root/./workspace/apache/struts/326709312/.m2/oro/oro/2.0.8/oro-2.0.8.jar, /root/./workspace/apache/struts/326709312/.m2/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar, /root/./workspace/apache/struts/326709312/.m2/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar, /root/./workspace/apache/struts/326709312/.m2/org/slf4j/slf4j-api/1.7.12/slf4j-api-1.7.12.jar, /root/./workspace/apache/struts/326709312/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /root/./workspace/apache/struts/326709312/.m2/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar, /root/./workspace/apache/struts/326709312/.m2/org/aspectj/aspectjweaver/1.8.7/aspectjweaver-1.8.7.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-context/4.1.9.RELEASE/spring-context-4.1.9.RELEASE.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:187) - Test failt: com.opensymphony.xwork2.config.providers.EnvsValueSubstitutorTest#testSimpleValue
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:187) - Test failt: com.opensymphony.xwork2.util.ClassLoaderUtilTest#testGetResources_Multiple
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:187) - Test failt: com.opensymphony.xwork2.util.ClassLoaderUtilTest#testGetResources_Aggregate
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:187) - Test failt: com.opensymphony.xwork2.util.DefaultFileManagerTest#testWSJarFile
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:187) - Test failt: com.opensymphony.xwork2.util.DefaultFileManagerTest#testReloadingConfigs
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:187) - Test failt: com.opensymphony.xwork2.util.DefaultFileManagerTest#testZipFile
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:187) - Test failt: com.opensymphony.xwork2.config.providers.XmlConfigurationProviderEnvsSubstitutionTest#testSubstitution
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:187) - Test failt: com.opensymphony.xwork2.inject.ContainerImplTest#testInitializable
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:187) - Test failt: com.opensymphony.xwork2.inject.ContainerImplTest#testEarlyInitializable
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:187) - Test failt: com.opensymphony.xwork2.config.providers.XmlConfigurationProviderWildCardIncludeTest#testWildCardInclude
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:187) - Test failt: com.opensymphony.xwork2.config.providers.XmlConfigurationProviderTest#testConfigsInJarFiles
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:195) - Gzoltar Test Result Total:1793, fails: 11, GZoltar suspicious 44919, with positive susp 3585
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:243) - Gzoltar found: 1000 with susp > 0.1, we consider: 1000
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.initPopulation(AstorCoreEngine.java:1071) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:76) - building model: /root/./output_astor/AstorMain-core//src//default, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:88) - Classpath for building SpoonModel [/root/./workspace/apache/struts/326709312/.m2/org/freemarker/freemarker/2.3.26-incubating/freemarker-2.3.26-incubating.jar, /root/./workspace/apache/struts/326709312/.m2/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar, /root/./workspace/apache/struts/326709312/.m2/javax/servlet/jsp-api/2.0/jsp-api-2.0.jar, /root/./workspace/apache/struts/326709312/.m2/ognl/ognl/3.1.15/ognl-3.1.15.jar, /root/./workspace/apache/struts/326709312/.m2/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/velocity/velocity/1.7/velocity-1.7.jar, /root/./workspace/apache/struts/326709312/.m2/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar, /root/./workspace/apache/struts/326709312/.m2/commons-lang/commons-lang/2.4/commons-lang-2.4.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/velocity/velocity-tools/2.0/velocity-tools-2.0.jar, /root/./workspace/apache/struts/326709312/.m2/commons-beanutils/commons-beanutils/1.9.2/commons-beanutils-1.9.2.jar, /root/./workspace/apache/struts/326709312/.m2/commons-digester/commons-digester/2.1/commons-digester-2.1.jar, /root/./workspace/apache/struts/326709312/.m2/commons-chain/commons-chain/1.1/commons-chain-1.1.jar, /root/./workspace/apache/struts/326709312/.m2/dom4j/dom4j/1.1/dom4j-1.1.jar, /root/./workspace/apache/struts/326709312/.m2/oro/oro/2.0.8/oro-2.0.8.jar, /root/./workspace/apache/struts/326709312/.m2/sslext/sslext/1.2-0/sslext-1.2-0.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/struts/struts-core/1.3.8/struts-core-1.3.8.jar, /root/./workspace/apache/struts/326709312/.m2/antlr/antlr/2.7.2/antlr-2.7.2.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/struts/struts-taglib/1.3.8/struts-taglib-1.3.8.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/struts/struts-tiles/1.3.8/struts-tiles-1.3.8.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/logging/log4j/log4j-api/2.9.1/log4j-api-2.9.1.jar, /root/./workspace/apache/struts/326709312/.m2/commons-fileupload/commons-fileupload/1.3.3/commons-fileupload-1.3.3.jar, /root/./workspace/apache/struts/326709312/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar, /root/./workspace/apache/struts/326709312/.m2/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/commons/commons-lang3/3.6/commons-lang3-3.6.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-core/4.1.9.RELEASE/spring-core-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-aop/4.1.9.RELEASE/spring-aop-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-aspects/4.1.9.RELEASE/spring-aspects-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/org/aspectj/aspectjweaver/1.8.7/aspectjweaver-1.8.7.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-beans/4.1.9.RELEASE/spring-beans-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-context/4.1.9.RELEASE/spring-context-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-expression/4.1.9.RELEASE/spring-expression-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-context-support/4.1.9.RELEASE/spring-context-support-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-web/4.1.9.RELEASE/spring-web-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-test/4.1.9.RELEASE/spring-test-4.1.9.RELEASE.jar, /root/./workspace/apache/struts/326709312/.m2/cglib/cglib-nodep/2.1_3/cglib-nodep-2.1_3.jar, /root/./workspace/apache/struts/326709312/.m2/junit/junit/4.12/junit-4.12.jar, /root/./workspace/apache/struts/326709312/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/logging/log4j/log4j-core/2.9.1/log4j-core-2.9.1.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/commons/commons-collections4/4.1/commons-collections4-4.1.jar, /root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-jdk1.3/0.09/mockobjects-jdk1.3-0.09.jar, /root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-alt-jdk1.3/0.09/mockobjects-alt-jdk1.3-0.09.jar, /root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-alt-jdk1.3-j2ee1.3/0.09/mockobjects-alt-jdk1.3-j2ee1.3-0.09.jar, /root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-jdk1.3-j2ee1.3/0.09/mockobjects-jdk1.3-j2ee1.3-0.09.jar, /root/./workspace/apache/struts/326709312/.m2/jmock/jmock/1.2.0/jmock-1.2.0.jar, /root/./workspace/apache/struts/326709312/.m2/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar, /root/./workspace/apache/struts/326709312/.m2/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar, /root/./workspace/apache/struts/326709312/.m2/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar, /root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-core/0.09/mockobjects-core-0.09.jar, /root/./workspace/apache/struts/326709312/.m2/org/easymock/easymock/3.4/easymock-3.4.jar, /root/./workspace/apache/struts/326709312/.m2/org/objenesis/objenesis/2.2/objenesis-2.2.jar, /root/./workspace/apache/struts/326709312/.m2/org/apache/struts/struts-annotations/1.0.6/struts-annotations-1.0.6.jar, /root/./workspace/apache/struts/326709312/.m2/org/testng/testng/5.14.10/testng-5.14.10.jar, /root/./workspace/apache/struts/326709312/.m2/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar, /root/./workspace/apache/struts/326709312/.m2/com/beust/jcommander/1.12/jcommander-1.12.jar, /root/./workspace/apache/struts/326709312/.m2/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar, /root/./workspace/apache/struts/326709312/.m2/org/slf4j/slf4j-api/1.7.12/slf4j-api-1.7.12.jar, /root/./workspace/apache/struts/326709312/.m2/org/slf4j/slf4j-simple/1.7.12/slf4j-simple-1.7.12.jar, /root/./workspace/apache/struts/326709312/.m2/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar, /root/./workspace/apache/struts/326709312/.m2/commons-validator/commons-validator/1.5.1/commons-validator-1.5.1.jar]
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.initPopulation(AstorCoreEngine.java:1075) - 
---- Initial suspicious size: 995
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrMatcher$StringMatcher, methodName=org.apache.commons.lang3.text.StrMatcher$StringMatcher{isMatch([CIII)I 0.0, lineNumber=379, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrMatcher$CharMatcher, methodName=org.apache.commons.lang3.text.StrMatcher$CharMatcher{isMatch([CIII)I 0.0, lineNumber=337, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrLookup$SystemPropertiesStrLookup, methodName=org.apache.commons.lang3.text.StrLookup$SystemPropertiesStrLookup{lookup(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=174, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrLookup$SystemPropertiesStrLookup, methodName=org.apache.commons.lang3.text.StrLookup$SystemPropertiesStrLookup{lookup(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=176, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrLookup$MapStrLookup, methodName=org.apache.commons.lang3.text.StrLookup$MapStrLookup{lookup(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=153, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrLookup$MapStrLookup, methodName=org.apache.commons.lang3.text.StrLookup$MapStrLookup{lookup(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=156, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrLookup$MapStrLookup, methodName=org.apache.commons.lang3.text.StrLookup$MapStrLookup{lookup(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=157, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrLookup$MapStrLookup, methodName=org.apache.commons.lang3.text.StrLookup$MapStrLookup{lookup(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=158, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrMatcher, methodName=org.apache.commons.lang3.text.StrMatcher{isMatch([CI)I 0.0, lineNumber=271, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=778, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=791, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=792, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=793, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=794, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=795, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=796, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=805, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=807, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=808, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=811, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=812, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=815, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=820, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=821, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=823, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=824, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=826, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=827, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=828, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=829, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=831, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=832, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=835, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=844, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=845, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=846, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=851, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=852, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=855, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=857, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=858, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=860, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=877, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=878, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=879, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{checkCyclicSubstitution(Ljava/lang/String;Ljava/util/List;)V 0.0, lineNumber=901, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{checkCyclicSubstitution(Ljava/lang/String;Ljava/util/List;)V 0.0, lineNumber=902, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{resolveVariable(Ljava/lang/String;Lorg/apache/commons/lang3/text/StrBuilder;II)Ljava/lang/String; 0.0, lineNumber=930, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{resolveVariable(Ljava/lang/String;Lorg/apache/commons/lang3/text/StrBuilder;II)Ljava/lang/String; 0.0, lineNumber=931, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{resolveVariable(Ljava/lang/String;Lorg/apache/commons/lang3/text/StrBuilder;II)Ljava/lang/String; 0.0, lineNumber=934, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{getVariableResolver()Lorg/apache/commons/lang3/text/StrLookup; 0.0, lineNumber=1171, susp=0.42640143271122083]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{replace(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=406, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=836, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=837, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=838, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=862, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=863, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=864, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=865, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=867, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=869, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=870, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=871, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=872, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrSubstitutor, methodName=org.apache.commons.lang3.text.StrSubstitutor{substitute(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List;)I 0.0, lineNumber=891, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{replaceImpl(IIILjava/lang/String;I)V 0.0, lineNumber=1934, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{replaceImpl(IIILjava/lang/String;I)V 0.0, lineNumber=1935, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{replaceImpl(IIILjava/lang/String;I)V 0.0, lineNumber=1936, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{replaceImpl(IIILjava/lang/String;I)V 0.0, lineNumber=1937, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{replaceImpl(IIILjava/lang/String;I)V 0.0, lineNumber=1938, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{replaceImpl(IIILjava/lang/String;I)V 0.0, lineNumber=1940, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{replaceImpl(IIILjava/lang/String;I)V 0.0, lineNumber=1941, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{replaceImpl(IIILjava/lang/String;I)V 0.0, lineNumber=1943, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{replace(IILjava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder; 0.0, lineNumber=1957, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{replace(IILjava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder; 0.0, lineNumber=1958, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{replace(IILjava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder; 0.0, lineNumber=1959, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{replace(IILjava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder; 0.0, lineNumber=1960, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{validateRange(II)I 0.0, lineNumber=2899, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{validateRange(II)I 0.0, lineNumber=2902, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{validateRange(II)I 0.0, lineNumber=2905, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrBuilder, methodName=org.apache.commons.lang3.text.StrBuilder{validateRange(II)I 0.0, lineNumber=2908, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrLookup$MapStrLookup, methodName=org.apache.commons.lang3.text.StrLookup$MapStrLookup{lookup(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=160, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.inject.EarlyInitializableBean, methodName=com.opensymphony.xwork2.inject.EarlyInitializableBean{init()V 0.0, lineNumber=31, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.inject.EarlyInitializableBean, methodName=com.opensymphony.xwork2.inject.EarlyInitializableBean{init()V 0.0, lineNumber=32, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.inject.EarlyInitializableBean, methodName=com.opensymphony.xwork2.inject.EarlyInitializableBean{init()V 0.0, lineNumber=33, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.inject.InitializableBean, methodName=com.opensymphony.xwork2.inject.InitializableBean{getMessage()Ljava/lang/String; 0.0, lineNumber=26, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.inject.InitializableBean, methodName=com.opensymphony.xwork2.inject.InitializableBean{init()V 0.0, lineNumber=31, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.inject.InitializableBean, methodName=com.opensymphony.xwork2.inject.InitializableBean{init()V 0.0, lineNumber=32, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.inject.InitializableBean, methodName=com.opensymphony.xwork2.inject.InitializableBean{init()V 0.0, lineNumber=33, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.inject.EarlyInitializableBean, methodName=com.opensymphony.xwork2.inject.EarlyInitializableBean{getMessage()Ljava/lang/String; 0.0, lineNumber=26, susp=0.30151134457776363]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.config.providers.ConfigurationTestBase, methodName=com.opensymphony.xwork2.config.providers.ConfigurationTestBase{buildConfigurationProvider(Ljava/lang/String;)Lcom/opensymphony/xwork2/config/ConfigurationProvider; 0.0, lineNumber=34, susp=0.15075567228888181]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.config.providers.ConfigurationTestBase, methodName=com.opensymphony.xwork2.config.providers.ConfigurationTestBase{buildConfigurationProvider(Ljava/lang/String;)Lcom/opensymphony/xwork2/config/ConfigurationProvider; 0.0, lineNumber=35, susp=0.15075567228888181]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.config.providers.ConfigurationTestBase, methodName=com.opensymphony.xwork2.config.providers.ConfigurationTestBase{buildConfigurationProvider(Ljava/lang/String;)Lcom/opensymphony/xwork2/config/ConfigurationProvider; 0.0, lineNumber=36, susp=0.15075567228888181]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.config.providers.ConfigurationTestBase, methodName=com.opensymphony.xwork2.config.providers.ConfigurationTestBase{buildConfigurationProvider(Ljava/lang/String;)Lcom/opensymphony/xwork2/config/ConfigurationProvider; 0.0, lineNumber=38, susp=0.15075567228888181]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.config.providers.ConfigurationTestBase, methodName=com.opensymphony.xwork2.config.providers.ConfigurationTestBase{buildConfigurationProvider(Ljava/lang/String;)Lcom/opensymphony/xwork2/config/ConfigurationProvider; 0.0, lineNumber=39, susp=0.15075567228888181]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.config.providers.ConfigurationTestBase, methodName=com.opensymphony.xwork2.config.providers.ConfigurationTestBase{buildConfigurationProvider(Ljava/lang/String;)Lcom/opensymphony/xwork2/config/ConfigurationProvider; 0.0, lineNumber=40, susp=0.15075567228888181]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.opensymphony.xwork2.config.providers.ConfigurationTestBase, methodName=com.opensymphony.xwork2.config.providers.ConfigurationTestBase{buildConfigurationProvider(Ljava/lang/String;)Lcom/opensymphony/xwork2/config/ConfigurationProvider; 0.0, lineNumber=42, susp=0.05415303610738823]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.Ognl, methodName=ognl.Ognl{createDefaultContext(Ljava/lang/Object;Lognl/ClassResolver;Lognl/TypeConverter;Lognl/MemberAccess;)Ljava/util/Map; 0.0, lineNumber=211, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.Ognl, methodName=ognl.Ognl{addDefaultContext(Ljava/lang/Object;Lognl/ClassResolver;Lognl/TypeConverter;Lognl/MemberAccess;Ljava/util/Map;)Ljava/util/Map; 0.0, lineNumber=294, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.Ognl, methodName=ognl.Ognl{addDefaultContext(Ljava/lang/Object;Lognl/ClassResolver;Lognl/TypeConverter;Lognl/MemberAccess;Ljava/util/Map;)Ljava/util/Map; 0.0, lineNumber=298, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.Ognl, methodName=ognl.Ognl{addDefaultContext(Ljava/lang/Object;Lognl/ClassResolver;Lognl/TypeConverter;Lognl/MemberAccess;Ljava/util/Map;)Ljava/util/Map; 0.0, lineNumber=300, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.Ognl, methodName=ognl.Ognl{addDefaultContext(Ljava/lang/Object;Lognl/ClassResolver;Lognl/TypeConverter;Lognl/MemberAccess;Ljava/util/Map;)Ljava/util/Map; 0.0, lineNumber=301, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.Ognl, methodName=ognl.Ognl{addDefaultContext(Ljava/lang/Object;Lognl/ClassResolver;Lognl/TypeConverter;Lognl/MemberAccess;Ljava/util/Map;)Ljava/util/Map; 0.0, lineNumber=303, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.Ognl, methodName=ognl.Ognl{addDefaultContext(Ljava/lang/Object;Lognl/ClassResolver;Lognl/TypeConverter;Lognl/MemberAccess;Ljava/util/Map;)Ljava/util/Map; 0.0, lineNumber=304, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.Ognl, methodName=ognl.Ognl{addDefaultContext(Ljava/lang/Object;Lognl/ClassResolver;Lognl/TypeConverter;Lognl/MemberAccess;Ljava/util/Map;)Ljava/util/Map; 0.0, lineNumber=306, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.Ognl, methodName=ognl.Ognl{addDefaultContext(Ljava/lang/Object;Lognl/ClassResolver;Lognl/TypeConverter;Lognl/MemberAccess;Ljava/util/Map;)Ljava/util/Map; 0.0, lineNumber=307, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.Ognl, methodName=ognl.Ognl{addDefaultContext(Ljava/lang/Object;Lognl/ClassResolver;Lognl/TypeConverter;Lognl/MemberAccess;Ljava/util/Map;)Ljava/util/Map; 0.0, lineNumber=310, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.Ognl, methodName=ognl.Ognl{addDefaultContext(Ljava/lang/Object;Lognl/ClassResolver;Lognl/TypeConverter;Lognl/MemberAccess;Ljava/util/Map;)Ljava/util/Map; 0.0, lineNumber=311, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.Ognl, methodName=ognl.Ognl{setClassResolver(Ljava/util/Map;Lognl/ClassResolver;)V 0.0, lineNumber=328, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.BooleanUtils, methodName=org.apache.commons.lang3.BooleanUtils{toBooleanObject(Ljava/lang/String;)Ljava/lang/Boolean; 0.0, lineNumber=556, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.BooleanUtils, methodName=org.apache.commons.lang3.BooleanUtils{toBooleanObject(Ljava/lang/String;)Ljava/lang/Boolean; 0.0, lineNumber=559, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.BooleanUtils, methodName=org.apache.commons.lang3.BooleanUtils{toBooleanObject(Ljava/lang/String;)Ljava/lang/Boolean; 0.0, lineNumber=615, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.BooleanUtils, methodName=org.apache.commons.lang3.BooleanUtils{toBooleanObject(Ljava/lang/String;)Ljava/lang/Boolean; 0.0, lineNumber=616, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.BooleanUtils, methodName=org.apache.commons.lang3.BooleanUtils{toBooleanObject(Ljava/lang/String;)Ljava/lang/Boolean; 0.0, lineNumber=617, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.BooleanUtils, methodName=org.apache.commons.lang3.BooleanUtils{toBooleanObject(Ljava/lang/String;)Ljava/lang/Boolean; 0.0, lineNumber=618, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.BooleanUtils, methodName=org.apache.commons.lang3.BooleanUtils{toBooleanObject(Ljava/lang/String;)Ljava/lang/Boolean; 0.0, lineNumber=619, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.BooleanUtils, methodName=org.apache.commons.lang3.BooleanUtils{toBooleanObject(Ljava/lang/String;)Ljava/lang/Boolean; 0.0, lineNumber=620, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.BooleanUtils, methodName=org.apache.commons.lang3.BooleanUtils{toBooleanObject(Ljava/lang/String;)Ljava/lang/Boolean; 0.0, lineNumber=625, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrMatcher, methodName=org.apache.commons.lang3.text.StrMatcher{charMatcher(C)Lorg/apache/commons/lang3/text/StrMatcher; 0.0, lineNumber=167, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrMatcher, methodName=org.apache.commons.lang3.text.StrMatcher{stringMatcher(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrMatcher; 0.0, lineNumber=209, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrMatcher, methodName=org.apache.commons.lang3.text.StrMatcher{stringMatcher(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrMatcher; 0.0, lineNumber=212, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.OgnlRuntime, methodName=ognl.OgnlRuntime{setMethodAccessor(Ljava/lang/Class;Lognl/MethodAccessor;)V 0.0, lineNumber=2545, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.OgnlRuntime, methodName=ognl.OgnlRuntime{setMethodAccessor(Ljava/lang/Class;Lognl/MethodAccessor;)V 0.0, lineNumber=2546, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.OgnlRuntime, methodName=ognl.OgnlRuntime{setMethodAccessor(Ljava/lang/Class;Lognl/MethodAccessor;)V 0.0, lineNumber=2547, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.OgnlRuntime, methodName=ognl.OgnlRuntime{setMethodAccessor(Ljava/lang/Class;Lognl/MethodAccessor;)V 0.0, lineNumber=2548, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.OgnlRuntime, methodName=ognl.OgnlRuntime{setPropertyAccessor(Ljava/lang/Class;Lognl/PropertyAccessor;)V 0.0, lineNumber=2561, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.OgnlRuntime, methodName=ognl.OgnlRuntime{setPropertyAccessor(Ljava/lang/Class;Lognl/PropertyAccessor;)V 0.0, lineNumber=2562, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.OgnlRuntime, methodName=ognl.OgnlRuntime{setPropertyAccessor(Ljava/lang/Class;Lognl/PropertyAccessor;)V 0.0, lineNumber=2563, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.OgnlRuntime, methodName=ognl.OgnlRuntime{setPropertyAccessor(Ljava/lang/Class;Lognl/PropertyAccessor;)V 0.0, lineNumber=2564, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.OgnlRuntime, methodName=ognl.OgnlRuntime{setNullHandler(Ljava/lang/Class;Lognl/NullHandler;)V 0.0, lineNumber=2603, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.OgnlRuntime, methodName=ognl.OgnlRuntime{setNullHandler(Ljava/lang/Class;Lognl/NullHandler;)V 0.0, lineNumber=2604, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.OgnlRuntime, methodName=ognl.OgnlRuntime{setNullHandler(Ljava/lang/Class;Lognl/NullHandler;)V 0.0, lineNumber=2605, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ognl.OgnlRuntime, methodName=ognl.OgnlRuntime{setNullHandler(Ljava/lang/Class;Lognl/NullHandler;)V 0.0, lineNumber=2606, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.lang3.text.StrLookup, methodName=org.apache.commons.lang3.text.StrLookup{mapLookup(Ljava/util/Map;)Lorg/apache/commons/lang3/text/StrLookup; 0.0, lineNumber=88, susp=0.05321540063681486]
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:129) - Total suspicious from FL: 995,  659
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:138) - Total ModPoint created: 659
[INFO ] fr.inria.astor.core.loop.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 659, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:63) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:64) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:workingDirectory= /root/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jvm4testexecution= /usr/lib/jvm/java-8-openjdk-amd64/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:binjavafolder= /target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:preservelinenumbers= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:tmax2= 960000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:tmax1= 120000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:srctestfolder= src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxnumbersolutions= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:javacompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:projectIdentifier= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:bintestfolder= /target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxGeneration= 200
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxtime= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:mode= jgenprog
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-8-openjdk-amd64/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:timezone= Europe/Paris
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:limitbysuspicious= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:dependenciespath= /root/./workspace/apache/struts/326709312/.m2/org/freemarker/freemarker/2.3.26-incubating/freemarker-2.3.26-incubating.jar:/root/./workspace/apache/struts/326709312/.m2/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/root/./workspace/apache/struts/326709312/.m2/javax/servlet/jsp-api/2.0/jsp-api-2.0.jar:/root/./workspace/apache/struts/326709312/.m2/ognl/ognl/3.1.15/ognl-3.1.15.jar:/root/./workspace/apache/struts/326709312/.m2/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/root/./workspace/apache/struts/326709312/.m2/org/apache/velocity/velocity/1.7/velocity-1.7.jar:/root/./workspace/apache/struts/326709312/.m2/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/root/./workspace/apache/struts/326709312/.m2/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/root/./workspace/apache/struts/326709312/.m2/org/apache/velocity/velocity-tools/2.0/velocity-tools-2.0.jar:/root/./workspace/apache/struts/326709312/.m2/commons-beanutils/commons-beanutils/1.9.2/commons-beanutils-1.9.2.jar:/root/./workspace/apache/struts/326709312/.m2/commons-digester/commons-digester/2.1/commons-digester-2.1.jar:/root/./workspace/apache/struts/326709312/.m2/commons-chain/commons-chain/1.1/commons-chain-1.1.jar:/root/./workspace/apache/struts/326709312/.m2/dom4j/dom4j/1.1/dom4j-1.1.jar:/root/./workspace/apache/struts/326709312/.m2/oro/oro/2.0.8/oro-2.0.8.jar:/root/./workspace/apache/struts/326709312/.m2/sslext/sslext/1.2-0/sslext-1.2-0.jar:/root/./workspace/apache/struts/326709312/.m2/org/apache/struts/struts-core/1.3.8/struts-core-1.3.8.jar:/root/./workspace/apache/struts/326709312/.m2/antlr/antlr/2.7.2/antlr-2.7.2.jar:/root/./workspace/apache/struts/326709312/.m2/org/apache/struts/struts-taglib/1.3.8/struts-taglib-1.3.8.jar:/root/./workspace/apache/struts/326709312/.m2/org/apache/struts/struts-tiles/1.3.8/struts-tiles-1.3.8.jar:/root/./workspace/apache/struts/326709312/.m2/org/apache/logging/log4j/log4j-api/2.9.1/log4j-api-2.9.1.jar:/root/./workspace/apache/struts/326709312/.m2/commons-fileupload/commons-fileupload/1.3.3/commons-fileupload-1.3.3.jar:/root/./workspace/apache/struts/326709312/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar:/root/./workspace/apache/struts/326709312/.m2/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar:/root/./workspace/apache/struts/326709312/.m2/org/apache/commons/commons-lang3/3.6/commons-lang3-3.6.jar:/root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-core/4.1.9.RELEASE/spring-core-4.1.9.RELEASE.jar:/root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-aop/4.1.9.RELEASE/spring-aop-4.1.9.RELEASE.jar:/root/./workspace/apache/struts/326709312/.m2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-aspects/4.1.9.RELEASE/spring-aspects-4.1.9.RELEASE.jar:/root/./workspace/apache/struts/326709312/.m2/org/aspectj/aspectjweaver/1.8.7/aspectjweaver-1.8.7.jar:/root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-beans/4.1.9.RELEASE/spring-beans-4.1.9.RELEASE.jar:/root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-context/4.1.9.RELEASE/spring-context-4.1.9.RELEASE.jar:/root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-expression/4.1.9.RELEASE/spring-expression-4.1.9.RELEASE.jar:/root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-context-support/4.1.9.RELEASE/spring-context-support-4.1.9.RELEASE.jar:/root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-web/4.1.9.RELEASE/spring-web-4.1.9.RELEASE.jar:/root/./workspace/apache/struts/326709312/.m2/org/springframework/spring-test/4.1.9.RELEASE/spring-test-4.1.9.RELEASE.jar:/root/./workspace/apache/struts/326709312/.m2/cglib/cglib-nodep/2.1_3/cglib-nodep-2.1_3.jar:/root/./workspace/apache/struts/326709312/.m2/junit/junit/4.12/junit-4.12.jar:/root/./workspace/apache/struts/326709312/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/./workspace/apache/struts/326709312/.m2/org/apache/logging/log4j/log4j-core/2.9.1/log4j-core-2.9.1.jar:/root/./workspace/apache/struts/326709312/.m2/org/apache/commons/commons-collections4/4.1/commons-collections4-4.1.jar:/root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-jdk1.3/0.09/mockobjects-jdk1.3-0.09.jar:/root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-alt-jdk1.3/0.09/mockobjects-alt-jdk1.3-0.09.jar:/root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-alt-jdk1.3-j2ee1.3/0.09/mockobjects-alt-jdk1.3-j2ee1.3-0.09.jar:/root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-jdk1.3-j2ee1.3/0.09/mockobjects-jdk1.3-j2ee1.3-0.09.jar:/root/./workspace/apache/struts/326709312/.m2/jmock/jmock/1.2.0/jmock-1.2.0.jar:/root/./workspace/apache/struts/326709312/.m2/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar:/root/./workspace/apache/struts/326709312/.m2/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar:/root/./workspace/apache/struts/326709312/.m2/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar:/root/./workspace/apache/struts/326709312/.m2/mockobjects/mockobjects-core/0.09/mockobjects-core-0.09.jar:/root/./workspace/apache/struts/326709312/.m2/org/easymock/easymock/3.4/easymock-3.4.jar:/root/./workspace/apache/struts/326709312/.m2/org/objenesis/objenesis/2.2/objenesis-2.2.jar:/root/./workspace/apache/struts/326709312/.m2/org/apache/struts/struts-annotations/1.0.6/struts-annotations-1.0.6.jar:/root/./workspace/apache/struts/326709312/.m2/org/testng/testng/5.14.10/testng-5.14.10.jar:/root/./workspace/apache/struts/326709312/.m2/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/root/./workspace/apache/struts/326709312/.m2/com/beust/jcommander/1.12/jcommander-1.12.jar:/root/./workspace/apache/struts/326709312/.m2/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/root/./workspace/apache/struts/326709312/.m2/org/slf4j/slf4j-api/1.7.12/slf4j-api-1.7.12.jar:/root/./workspace/apache/struts/326709312/.m2/org/slf4j/slf4j-simple/1.7.12/slf4j-simple-1.7.12.jar:/root/./workspace/apache/struts/326709312/.m2/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/root/./workspace/apache/struts/326709312/.m2/commons-validator/commons-validator/1.5.1/commons-validator-1.5.1.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:fitnessfunction= fr.inria.astor.core.loop.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logfilepath= ./workspace/apache/struts/326709312/repairnator.astor.log
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:populationcontroller= fr.inria.astor.core.loop.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:seed= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:location= /root/workspace/apache/struts/326709312/core
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:68) - ----------------------------
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.startEvolution(AstorCoreEngine.java:147) - 
----Starting Solution Search
[ERROR] fr.inria.astor.core.loop.AstorCoreEngine.validateReversedOriginalVariant(AstorCoreEngine.java:460) - Error: the model was not the same from the original after this generation
[ERROR] fr.inria.astor.core.loop.AstorCoreEngine.validateReversedOriginalVariant(AstorCoreEngine.java:461) - Undo Error: original: 
public abstract class XWorkTestCase extends junit.framework.TestCase {

	protected com.opensymphony.xwork2.config.ConfigurationManager configurationManager;
	protected com.opensymphony.xwork2.config.Configuration configuration;
	protected com.opensymphony.xwork2.inject.Container container;
	protected com.opensymphony.xwork2.ActionProxyFactory actionProxyFactory;

	public XWorkTestCase() {
		super();
	}

	@java.lang.Override
	protected void setUp() throws java.lang.Exception {
		configurationManager = com.opensymphony.xwork2.util.XWorkTestCaseHelper.setUp();
		configuration = configurationManager.getConfiguration();
		container = configuration.getContainer();
		actionProxyFactory = container.getInstance(com.opensymphony.xwork2.ActionProxyFactory.class);
	}

	@java.lang.Override
	protected void tearDown() throws java.lang.Exception {
		com.opensymphony.xwork2.util.XWorkTestCaseHelper.tearDown(configurationManager);
		configurationManager = null;
		configuration = null;
		container = null;
		actionProxyFactory = null;
	}

	protected void loadConfigurationProviders(com.opensymphony.xwork2.config.ConfigurationProvider... providers) {
		configurationManager = com.opensymphony.xwork2.util.XWorkTestCaseHelper.loadConfigurationProviders(configurationManager, providers);
		configuration = configurationManager.getConfiguration();
		container = configuration.getContainer();
		actionProxyFactory = container.getInstance(com.opensymphony.xwork2.ActionProxyFactory.class);
	}

	protected void loadButAdd(final java.lang.Class<?> type, final java.lang.Object impl) {
		loadButAdd(type, com.opensymphony.xwork2.inject.Container.DEFAULT_NAME, impl);
	}

	protected void loadButAdd(final java.lang.Class<?> type, final java.lang.String name, final java.lang.Object impl) {
		loadConfigurationProviders(new com.opensymphony.xwork2.test.StubConfigurationProvider() {
			@java.lang.Override
			public void register(com.opensymphony.xwork2.inject.ContainerBuilder builder, 
			com.opensymphony.xwork2.util.location.LocatableProperties props) throws com.opensymphony.xwork2.config.ConfigurationException {
				builder.factory(type, name, new com.opensymphony.xwork2.inject.Factory() {
					public java.lang.Object create(com.opensymphony.xwork2.inject.Context context) throws java.lang.Exception {
						return impl;
					}

					@java.lang.Override
					public java.lang.Class type() {
						return impl.getClass();
					}
				}, com.opensymphony.xwork2.inject.Scope.SINGLETON);
			}
		});
	}

}
[ERROR] fr.inria.astor.core.loop.AstorCoreEngine.validateReversedOriginalVariant(AstorCoreEngine.java:462) - Undo Error: modified: 
public abstract class XWorkTestCase extends junit.framework.TestCase {

	protected com.opensymphony.xwork2.config.ConfigurationManager configurationManager;
	protected com.opensymphony.xwork2.config.Configuration configuration;
	protected com.opensymphony.xwork2.inject.Container container;
	protected com.opensymphony.xwork2.ActionProxyFactory actionProxyFactory;

	public XWorkTestCase() {
		super();
	}

	@java.lang.Override
	protected void setUp() throws java.lang.Exception {
		configurationManager = com.opensymphony.xwork2.util.XWorkTestCaseHelper.setUp();
		configuration = configurationManager.getConfiguration();
		container = configuration.getContainer();
		actionProxyFactory = container.getInstance(com.opensymphony.xwork2.ActionProxyFactory.class);
	}

	@java.lang.Override
	protected void tearDown() throws java.lang.Exception {
		com.opensymphony.xwork2.util.XWorkTestCaseHelper.tearDown(configurationManager);
		configurationManager = null;
		configuration = null;
		this.container = null;
		actionProxyFactory = null;
	}

	protected void loadConfigurationProviders(com.opensymphony.xwork2.config.ConfigurationProvider... providers) {
		configurationManager = com.opensymphony.xwork2.util.XWorkTestCaseHelper.loadConfigurationProviders(configurationManager, providers);
		configuration = configurationManager.getConfiguration();
		container = configuration.getContainer();
		actionProxyFactory = container.getInstance(com.opensymphony.xwork2.ActionProxyFactory.class);
	}

	protected void loadButAdd(final java.lang.Class<?> type, final java.lang.Object impl) {
		loadButAdd(type, com.opensymphony.xwork2.inject.Container.DEFAULT_NAME, impl);
	}

	protected void loadButAdd(final java.lang.Class<?> type, final java.lang.String name, final java.lang.Object impl) {
		loadConfigurationProviders(new com.opensymphony.xwork2.test.StubConfigurationProvider() {
			@java.lang.Override
			public void register(com.opensymphony.xwork2.inject.ContainerBuilder builder, 
			com.opensymphony.xwork2.util.location.LocatableProperties props) throws com.opensymphony.xwork2.config.ConfigurationException {
				builder.factory(type, name, new com.opensymphony.xwork2.inject.Factory() {
					public java.lang.Object create(com.opensymphony.xwork2.inject.Context context) throws java.lang.Exception {
						return impl;
					}

					@java.lang.Override
					public java.lang.Class type() {
						return impl.getClass();
					}
				}, com.opensymphony.xwork2.inject.Scope.SINGLETON);
			}
		});
	}

}
[ERROR] fr.inria.astor.core.loop.AstorCoreEngine.validateReversedOriginalVariant(AstorCoreEngine.java:460) - Error: the model was not the same from the original after this generation
[ERROR] fr.inria.astor.core.loop.AstorCoreEngine.validateReversedOriginalVariant(AstorCoreEngine.java:461) - Undo Error: original: 
class ContainerImpl implements com.opensymphony.xwork2.inject.Container {


















































































































	interface InjectorFactory<M extends java.lang.reflect.Member & java.lang.reflect.AnnotatedElement> {

		public abstract com.opensymphony.xwork2.inject.ContainerImpl.Injector create(com.opensymphony.xwork2.inject.ContainerImpl container, M member, java.lang.String name) throws 
		com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException;}






	static class FieldInjector implements com.opensymphony.xwork2.inject.ContainerImpl.Injector {

		final java.lang.reflect.Field field;
		final com.opensymphony.xwork2.inject.InternalFactory<?> factory;
		final com.opensymphony.xwork2.inject.ExternalContext<?> externalContext;

		public FieldInjector(com.opensymphony.xwork2.inject.ContainerImpl container, java.lang.reflect.Field field, java.lang.String name) throws 
		com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException {
			this.field = field;
			if (!(field.isAccessible())) {
				java.lang.SecurityManager sm = java.lang.System.getSecurityManager();
				try {
					if (sm != null) {
						sm.checkPermission(new java.lang.reflect.ReflectPermission("suppressAccessChecks"));
					}
					field.setAccessible(true);
				} catch (java.security.AccessControlException e) {
					throw new com.opensymphony.xwork2.inject.DependencyException((((("Security manager in use, could not access field: " + 
					(field.getDeclaringClass().getName())) + "(") + (field.getName())) + ")"), e);
				}
			}

			com.opensymphony.xwork2.inject.Key<?> key = com.opensymphony.xwork2.inject.Key.newInstance(field.getType(), name);
			factory = container.getFactory(key);
			if ((factory) == null) {
				throw new com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException((((("No mapping found for dependency " + key) + " in ") + field) + "."));
			}

			this.externalContext = com.opensymphony.xwork2.inject.ExternalContext.newInstance(field, key, container);
		}

		public void inject(com.opensymphony.xwork2.inject.InternalContext context, java.lang.Object o) {
			com.opensymphony.xwork2.inject.ExternalContext<?> previous = context.getExternalContext();
			context.setExternalContext(externalContext);
			try {
				field.set(o, factory.create(context));
			} catch (java.lang.IllegalAccessException e) {
				throw new java.lang.AssertionError(e);
			} finally {
				context.setExternalContext(previous);
			}
		}
	}



















































	static class MethodInjector implements com.opensymphony.xwork2.inject.ContainerImpl.Injector {

		final java.lang.reflect.Method method;
		final com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>[] parameterInjectors;

		public MethodInjector(com.opensymphony.xwork2.inject.ContainerImpl container, java.lang.reflect.Method method, java.lang.String name) throws com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException {
			this.method = method;
			if (!(method.isAccessible())) {
				java.lang.SecurityManager sm = java.lang.System.getSecurityManager();
				try {
					if (sm != null) {
						sm.checkPermission(new java.lang.reflect.ReflectPermission("suppressAccessChecks"));
					}
					method.setAccessible(true);
				} catch (java.security.AccessControlException e) {
					throw new com.opensymphony.xwork2.inject.DependencyException((((("Security manager in use, could not access method: " + 
					name) + "(") + (method.getName())) + ")"), e);
				}
			}

			java.lang.Class<?>[] parameterTypes = method.getParameterTypes();
			if ((parameterTypes.length) == 0) {
				throw new com.opensymphony.xwork2.inject.DependencyException((method + " has no parameters to inject."));
			}
			parameterInjectors = container.getParametersInjectors(
			method, method.getParameterAnnotations(), parameterTypes, name);
		}

		public void inject(com.opensymphony.xwork2.inject.InternalContext context, java.lang.Object o) {
			try {
				method.invoke(o, com.opensymphony.xwork2.inject.ContainerImpl.getParameters(method, context, parameterInjectors));
			} catch (java.lang.Exception e) {
				throw new java.lang.RuntimeException(e);
			}
		}
	}










	static class ConstructorInjector<T> {

		final java.lang.Class<T> implementation;
		final java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors;
		final java.lang.reflect.Constructor<T> constructor;
		final com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>[] parameterInjectors;

		ConstructorInjector(com.opensymphony.xwork2.inject.ContainerImpl container, java.lang.Class<T> implementation) {
			this.implementation = implementation;

			constructor = findConstructorIn(implementation);
			if (!(constructor.isAccessible())) {
				java.lang.SecurityManager sm = java.lang.System.getSecurityManager();
				try {
					if (sm != null) {
						sm.checkPermission(new java.lang.reflect.ReflectPermission("suppressAccessChecks"));
					}
					constructor.setAccessible(true);
				} catch (java.security.AccessControlException e) {
					throw new com.opensymphony.xwork2.inject.DependencyException((((("Security manager in use, could not access constructor: " + 
					(implementation.getName())) + "(") + (constructor.getName())) + ")"), e);
				}
			}

			com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException exception = null;
			com.opensymphony.xwork2.inject.Inject inject = null;
			com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>[] parameters = null;

			try {
				inject = constructor.getAnnotation(com.opensymphony.xwork2.inject.Inject.class);
				parameters = constructParameterInjector(inject, container, constructor);
			} catch (com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException e) {
				exception = e;
			}
			parameterInjectors = parameters;

			if (exception != null) {
				if ((inject != null) && (inject.required())) {
					throw new com.opensymphony.xwork2.inject.DependencyException(exception);
				}
			}
			injectors = container.injectors.get(implementation);
		}

		com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>[] constructParameterInjector(
		com.opensymphony.xwork2.inject.Inject inject, com.opensymphony.xwork2.inject.ContainerImpl container, java.lang.reflect.Constructor<T> constructor) throws com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException {
			return (constructor.getParameterTypes().length) == 0 ? 
			null : 
			container.getParametersInjectors(
			constructor, 
			constructor.getParameterAnnotations(), 
			constructor.getParameterTypes(), 
			inject.value());

		}

		@java.lang.SuppressWarnings("unchecked")
		private java.lang.reflect.Constructor<T> findConstructorIn(java.lang.Class<T> implementation) {
			java.lang.reflect.Constructor<T> found = null;
			java.lang.reflect.Constructor<T>[] declaredConstructors = ((java.lang.reflect.Constructor<T>[]) (implementation.getDeclaredConstructors()));
			for (java.lang.reflect.Constructor<T> constructor : declaredConstructors) {
				if ((constructor.getAnnotation(com.opensymphony.xwork2.inject.Inject.class)) != null) {
					if (found != null) {
						throw new com.opensymphony.xwork2.inject.DependencyException(((("More than one constructor annotated" + 
						" with @Inject found in ") + implementation) + "."));
					}
					found = constructor;
				}
			}
			if (found != null) {
				return found;
			}



			try {
				return implementation.getDeclaredConstructor();
			} catch (java.lang.NoSuchMethodException e) {
				throw new com.opensymphony.xwork2.inject.DependencyException((("Could not find a suitable constructor in " + (implementation.getName())) + "."));
			}
		}




		java.lang.Object construct(com.opensymphony.xwork2.inject.InternalContext context, java.lang.Class<? super T> expectedType) {
			com.opensymphony.xwork2.inject.ConstructionContext<T> constructionContext = context.getConstructionContext(this);


			if (constructionContext.isConstructing()) {


				return constructionContext.createProxy(expectedType);
			}



			T t = constructionContext.getCurrentReference();
			if (t != null) {
				return t;
			}

			try {

				constructionContext.startConstruction();
				try {
					java.lang.Object[] parameters = com.opensymphony.xwork2.inject.ContainerImpl.getParameters(constructor, context, parameterInjectors);
					t = constructor.newInstance(parameters);
					constructionContext.setProxyDelegates(t);
				} finally {
					constructionContext.finishConstruction();
				}



				constructionContext.setCurrentReference(t);


				for (com.opensymphony.xwork2.inject.ContainerImpl.Injector injector : injectors) {
					injector.inject(context, t);
				}

				return t;
			} catch (java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.reflect.InvocationTargetException e) {
				throw new java.lang.RuntimeException(e);
			} finally {
				constructionContext.removeCurrentReference();
			}
		}
	}

	static class ParameterInjector<T> {

		final com.opensymphony.xwork2.inject.ExternalContext<T> externalContext;
		final com.opensymphony.xwork2.inject.InternalFactory<? extends T> factory;

		public ParameterInjector(com.opensymphony.xwork2.inject.ExternalContext<T> externalContext, com.opensymphony.xwork2.inject.InternalFactory<? extends T> factory) {
			this.externalContext = externalContext;
			this.factory = factory;
		}

		T inject(java.lang.reflect.Member member, com.opensymphony.xwork2.inject.InternalContext context) {
			com.opensymphony.xwork2.inject.ExternalContext<?> previous = context.getExternalContext();
			context.setExternalContext(externalContext);
			try {
				return factory.create(context);
			} finally {
				context.setExternalContext(previous);
			}
		}
	}























































































































	interface ContextualCallable<T> {
		public abstract T call(com.opensymphony.xwork2.inject.InternalContext context);}























	interface Injector extends java.io.Serializable {
		public abstract void inject(com.opensymphony.xwork2.inject.InternalContext context, java.lang.Object o);}


	static class MissingDependencyException extends java.lang.Exception {
		MissingDependencyException(java.lang.String message) {
			super(message);
		}
	} 	final java.util.Map<com.opensymphony.xwork2.inject.Key<?>, com.opensymphony.xwork2.inject.InternalFactory<?>> factories; 	final java.util.Map<java.lang.Class<?>, java.util.Set<java.lang.String>> factoryNamesByType; 	final java.util.Map<java.lang.Class<?>, java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector>> injectors = new com.opensymphony.xwork2.inject.util.ReferenceCache<java.lang.Class<?>, java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector>>() { 		@java.lang.Override 		protected java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> create(java.lang.Class<?> key) { 			java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors = new java.util.ArrayList<>(); 			addInjectors(key, injectors); 			return injectors;}}; 	java.util.Map<java.lang.Class<?>, com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector> constructors = new com.opensymphony.xwork2.inject.util.ReferenceCache<java.lang.Class<?>, com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector>() { 		@java.lang.Override 		@java.lang.SuppressWarnings("unchecked") 		protected com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector<?> create(java.lang.Class<?> implementation) { 			return new com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector(com.opensymphony.xwork2.inject.ContainerImpl.this, implementation);}}; 	java.lang.ThreadLocal<java.lang.Object[]> localContext = new java.lang.ThreadLocal<java.lang.Object[]>() { 		@java.lang.Override 		protected java.lang.Object[] initialValue() { 			return new java.lang.Object[1];}}; 	final java.lang.ThreadLocal<java.lang.Object> localScopeStrategy = new java.lang.ThreadLocal<>(); 	ContainerImpl(java.util.Map<com.opensymphony.xwork2.inject.Key<?>, com.opensymphony.xwork2.inject.InternalFactory<?>> factories) { 		this.factories = factories; 		java.util.Map<java.lang.Class<?>, java.util.Set<java.lang.String>> map = new java.util.HashMap<>(); 		for (com.opensymphony.xwork2.inject.Key<?> key : factories.keySet()) { 			java.util.Set<java.lang.String> names = map.get(key.getType()); 			if (names == null) { 				names = new java.util.HashSet<>(); 				map.put(key.getType(), names);} 			names.add(key.getName());} 		for (java.util.Map.Entry<java.lang.Class<?>, java.util.Set<java.lang.String>> entry : map.entrySet()) { 			entry.setValue(java.util.Collections.unmodifiableSet(entry.getValue()));} 		this.factoryNamesByType = java.util.Collections.unmodifiableMap(map);} 	@java.lang.SuppressWarnings("unchecked") 	<T> com.opensymphony.xwork2.inject.InternalFactory<? extends T> getFactory(com.opensymphony.xwork2.inject.Key<T> key) { 		return ((com.opensymphony.xwork2.inject.InternalFactory<T>) (factories.get(key)));} 	void addInjectors(java.lang.Class clazz, java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors) { 		if (clazz == (java.lang.Object.class)) { 			return ;} 		addInjectors(clazz.getSuperclass(), injectors); 		addInjectorsForFields(clazz.getDeclaredFields(), false, injectors); 		addInjectorsForMethods(clazz.getDeclaredMethods(), false, injectors);} 	void injectStatics(java.util.List<java.lang.Class<?>> staticInjections) { 		final java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors = new java.util.ArrayList<>(); 		for (java.lang.Class<?> clazz : staticInjections) { 			addInjectorsForFields(clazz.getDeclaredFields(), true, injectors); 			addInjectorsForMethods(clazz.getDeclaredMethods(), true, injectors);} 		callInContext(new com.opensymphony.xwork2.inject.ContainerImpl.ContextualCallable<java.lang.Void>() { 			public java.lang.Void call(com.opensymphony.xwork2.inject.InternalContext context) { 				for (com.opensymphony.xwork2.inject.ContainerImpl.Injector injector : injectors) { 					injector.inject(context, null);} 				return null;}});} 	void addInjectorsForMethods(java.lang.reflect.Method[] methods, boolean statics, java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors) { 		addInjectorsForMembers(java.util.Arrays.asList(methods), statics, injectors, new com.opensymphony.xwork2.inject.ContainerImpl.InjectorFactory<java.lang.reflect.Method>() { 			public com.opensymphony.xwork2.inject.ContainerImpl.Injector create(com.opensymphony.xwork2.inject.ContainerImpl container, java.lang.reflect.Method method, java.lang.String name) throws com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException { 				return new com.opensymphony.xwork2.inject.ContainerImpl.MethodInjector(container, method, name);}});} 	void addInjectorsForFields(java.lang.reflect.Field[] fields, boolean statics, java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors) { 		addInjectorsForMembers(java.util.Arrays.asList(fields), statics, injectors, new com.opensymphony.xwork2.inject.ContainerImpl.InjectorFactory<java.lang.reflect.Field>() { 			public com.opensymphony.xwork2.inject.ContainerImpl.Injector create(com.opensymphony.xwork2.inject.ContainerImpl container, java.lang.reflect.Field field, java.lang.String name) throws com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException { 				return new com.opensymphony.xwork2.inject.ContainerImpl.FieldInjector(container, field, name);}});} 	<M extends java.lang.reflect.Member & java.lang.reflect.AnnotatedElement> void addInjectorsForMembers(java.util.List<M> members, boolean statics, java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors, com.opensymphony.xwork2.inject.ContainerImpl.InjectorFactory<M> injectorFactory) { 		for (M member : members) { 			if ((isStatic(member)) == statics) { 				com.opensymphony.xwork2.inject.Inject inject = member.getAnnotation(com.opensymphony.xwork2.inject.Inject.class); 				if (inject != null) { 					try { 						injectors.add(injectorFactory.create(this, member, inject.value()));} catch (com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException e) { 						if (inject.required()) { 							throw new com.opensymphony.xwork2.inject.DependencyException(e);}}}}}} 	private boolean isStatic(java.lang.reflect.Member member) { 		return java.lang.reflect.Modifier.isStatic(member.getModifiers());} 	<M extends java.lang.reflect.AccessibleObject & java.lang.reflect.Member> com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>[] getParametersInjectors(M member, java.lang.annotation.Annotation[][] annotations, java.lang.Class[] parameterTypes, java.lang.String defaultName) throws com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException { 		java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>> parameterInjectors = new java.util.ArrayList<>(); 		java.util.Iterator<java.lang.annotation.Annotation[]> annotationsIterator = java.util.Arrays.asList(annotations).iterator(); 		for (java.lang.Class<?> parameterType : parameterTypes) { 			com.opensymphony.xwork2.inject.Inject annotation = findInject(annotationsIterator.next()); 			java.lang.String name = (annotation == null) ? defaultName : annotation.value(); 			com.opensymphony.xwork2.inject.Key<?> key = com.opensymphony.xwork2.inject.Key.newInstance(parameterType, name); 			parameterInjectors.add(createParameterInjector(key, member));} 		return toArray(parameterInjectors);} 	<T> com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<T> createParameterInjector(com.opensymphony.xwork2.inject.Key<T> key, java.lang.reflect.Member member) throws com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException { 		com.opensymphony.xwork2.inject.InternalFactory<? extends T> factory = getFactory(key); 		if (factory == null) { 			throw new com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException((((("No mapping found for dependency " + key) + " in ") + member) + "."));} 		com.opensymphony.xwork2.inject.ExternalContext<T> externalContext = com.opensymphony.xwork2.inject.ExternalContext.newInstance(member, key, this); 		return new com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<T>(externalContext, factory);} 	@java.lang.SuppressWarnings("unchecked") 	private com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>[] toArray(java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>> parameterInjections) { 		return parameterInjections.toArray(new com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector[parameterInjections.size()]);} 	com.opensymphony.xwork2.inject.Inject findInject(java.lang.annotation.Annotation[] annotations) { 		for (java.lang.annotation.Annotation annotation : annotations) { 			if ((annotation.annotationType()) == (com.opensymphony.xwork2.inject.Inject.class)) { 				return com.opensymphony.xwork2.inject.Inject.class.cast(annotation);}} 		return null;} 	private static java.lang.Object[] getParameters(java.lang.reflect.Member member, com.opensymphony.xwork2.inject.InternalContext context, com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector[] parameterInjectors) { 		if (parameterInjectors == null) { 			return null;} 		java.lang.Object[] parameters = new java.lang.Object[parameterInjectors.length]; 		for (int i = 0; i < (parameters.length); i++) { 			parameters[i] = parameterInjectors[i].inject(member, context);} 		return parameters;} 	void inject(java.lang.Object o, com.opensymphony.xwork2.inject.InternalContext context) { 		java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors = this.injectors.get(o.getClass()); 		for (com.opensymphony.xwork2.inject.ContainerImpl.Injector injector : injectors) { 			injector.inject(context, o);}} 	<T> T inject(java.lang.Class<T> implementation, com.opensymphony.xwork2.inject.InternalContext context) { 		try { 			com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector<T> constructor = getConstructor(implementation); 			return implementation.cast(constructor.construct(context, implementation));} catch (java.lang.Exception e) { 			throw new java.lang.RuntimeException(e);}} 	@java.lang.SuppressWarnings("unchecked") 	<T> T getInstance(java.lang.Class<T> type, java.lang.String name, com.opensymphony.xwork2.inject.InternalContext context) { 		com.opensymphony.xwork2.inject.ExternalContext<?> previous = context.getExternalContext(); 		com.opensymphony.xwork2.inject.Key<T> key = com.opensymphony.xwork2.inject.Key.newInstance(type, name); 		context.setExternalContext(com.opensymphony.xwork2.inject.ExternalContext.newInstance(null, key, this)); 		try { 			com.opensymphony.xwork2.inject.InternalFactory o = getFactory(key); 			if (o != null) { 				return getFactory(key).create(context);}else { 				return null;}} finally { 			context.setExternalContext(previous);}} 	<T> T getInstance(java.lang.Class<T> type, com.opensymphony.xwork2.inject.InternalContext context) { 		return getInstance(type, com.opensymphony.xwork2.inject.Container.DEFAULT_NAME, context);} 	public void inject(final java.lang.Object o) { 		callInContext(new com.opensymphony.xwork2.inject.ContainerImpl.ContextualCallable<java.lang.Void>() { 			public java.lang.Void call(com.opensymphony.xwork2.inject.InternalContext context) { 				inject(o, context); 				return null;}});} 	public <T> T inject(final java.lang.Class<T> implementation) { 		return callInContext(new com.opensymphony.xwork2.inject.ContainerImpl.ContextualCallable<T>() { 			public T call(com.opensymphony.xwork2.inject.InternalContext context) { 				return inject(implementation, context);}});} 	public <T> T getInstance(final java.lang.Class<T> type, final java.lang.String name) { 		return callInContext(new com.opensymphony.xwork2.inject.ContainerImpl.ContextualCallable<T>() { 			public T call(com.opensymphony.xwork2.inject.InternalContext context) { 				return getInstance(type, name, context);}});} 	public <T> T getInstance(final java.lang.Class<T> type) { 		return callInContext(new com.opensymphony.xwork2.inject.ContainerImpl.ContextualCallable<T>() { 			public T call(com.opensymphony.xwork2.inject.InternalContext context) { 				return getInstance(type, context);}});} 	public java.util.Set<java.lang.String> getInstanceNames(final java.lang.Class<?> type) { 		java.util.Set<java.lang.String> names = factoryNamesByType.get(type); 		if (names == null) { 			names = java.util.Collections.emptySet();} 		return names;} 	<T> T callInContext(com.opensymphony.xwork2.inject.ContainerImpl.ContextualCallable<T> callable) { 		java.lang.Object[] reference = localContext.get(); 		if ((reference[0]) == null) { 			reference[0] = new com.opensymphony.xwork2.inject.InternalContext(this); 			try { 				return callable.call(((com.opensymphony.xwork2.inject.InternalContext) (reference[0])));} finally { 				reference[0] = null; 				localContext.remove();}}else { 			return callable.call(((com.opensymphony.xwork2.inject.InternalContext) (reference[0])));}} 	@java.lang.SuppressWarnings("unchecked") 	<T> com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector<T> getConstructor(java.lang.Class<T> implementation) { 		return constructors.get(implementation);} 	public void setScopeStrategy(com.opensymphony.xwork2.inject.Scope.Strategy scopeStrategy) { 		this.localScopeStrategy.set(scopeStrategy);} 	public void removeScopeStrategy() { 		this.localScopeStrategy.remove();}
}
[ERROR] fr.inria.astor.core.loop.AstorCoreEngine.validateReversedOriginalVariant(AstorCoreEngine.java:462) - Undo Error: modified: 
class ContainerImpl implements com.opensymphony.xwork2.inject.Container {


















































































































	interface InjectorFactory<M extends java.lang.reflect.Member & java.lang.reflect.AnnotatedElement> {

		public abstract com.opensymphony.xwork2.inject.ContainerImpl.Injector create(com.opensymphony.xwork2.inject.ContainerImpl container, M member, java.lang.String name) throws 
		com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException;}






	static class FieldInjector implements com.opensymphony.xwork2.inject.ContainerImpl.Injector {

		final java.lang.reflect.Field field;
		final com.opensymphony.xwork2.inject.InternalFactory<?> factory;
		final com.opensymphony.xwork2.inject.ExternalContext<?> externalContext;

		public FieldInjector(com.opensymphony.xwork2.inject.ContainerImpl container, java.lang.reflect.Field field, java.lang.String name) throws 
		com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException {
			this.field = field;
			if (!(field.isAccessible())) {
				java.lang.SecurityManager sm = java.lang.System.getSecurityManager();
				try {
					if (sm != null) {
						sm.checkPermission(new java.lang.reflect.ReflectPermission("suppressAccessChecks"));
					}
					field.setAccessible(true);
				} catch (java.security.AccessControlException e) {
					throw new com.opensymphony.xwork2.inject.DependencyException((((("Security manager in use, could not access field: " + 
					(field.getDeclaringClass().getName())) + "(") + (field.getName())) + ")"), e);
				}
			}

			com.opensymphony.xwork2.inject.Key<?> key = com.opensymphony.xwork2.inject.Key.newInstance(field.getType(), name);
			factory = container.getFactory(key);
			if ((factory) == null) {
				throw new com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException((((("No mapping found for dependency " + key) + " in ") + field) + "."));
			}

			this.externalContext = com.opensymphony.xwork2.inject.ExternalContext.newInstance(field, key, container);
		}

		public void inject(com.opensymphony.xwork2.inject.InternalContext context, java.lang.Object o) {
			com.opensymphony.xwork2.inject.ExternalContext<?> previous = context.getExternalContext();
			context.setExternalContext(externalContext);
			try {
				field.set(o, factory.create(context));
			} catch (java.lang.IllegalAccessException e) {
				throw new java.lang.AssertionError(e);
			} finally {
				context.setExternalContext(previous);
			}
		}
	}



















































	static class MethodInjector implements com.opensymphony.xwork2.inject.ContainerImpl.Injector {

		final java.lang.reflect.Method method;
		final com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>[] parameterInjectors;

		public MethodInjector(com.opensymphony.xwork2.inject.ContainerImpl container, java.lang.reflect.Method method, java.lang.String name) throws com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException {
			this.method = method;
			if (!(method.isAccessible())) {
				java.lang.SecurityManager sm = java.lang.System.getSecurityManager();
				try {
					if (sm != null) {
						sm.checkPermission(new java.lang.reflect.ReflectPermission("suppressAccessChecks"));
					}
					method.setAccessible(true);
				} catch (java.security.AccessControlException e) {
					throw new com.opensymphony.xwork2.inject.DependencyException((((("Security manager in use, could not access method: " + 
					name) + "(") + (method.getName())) + ")"), e);
				}
			}

			java.lang.Class<?>[] parameterTypes = method.getParameterTypes();
			if ((parameterTypes.length) == 0) {
				throw new com.opensymphony.xwork2.inject.DependencyException((method + " has no parameters to inject."));
			}
			parameterInjectors = container.getParametersInjectors(
			method, method.getParameterAnnotations(), parameterTypes, name);
		}

		public void inject(com.opensymphony.xwork2.inject.InternalContext context, java.lang.Object o) {
			try {
				method.invoke(o, com.opensymphony.xwork2.inject.ContainerImpl.getParameters(method, context, parameterInjectors));
			} catch (java.lang.Exception e) {
				throw new java.lang.RuntimeException(e);
			}
		}
	}










	static class ConstructorInjector<T> {

		final java.lang.Class<T> implementation;
		final java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors;
		final java.lang.reflect.Constructor<T> constructor;
		final com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>[] parameterInjectors;

		ConstructorInjector(com.opensymphony.xwork2.inject.ContainerImpl container, java.lang.Class<T> implementation) {
			this.implementation = implementation;

			constructor = findConstructorIn(implementation);
			if (!(constructor.isAccessible())) {
				java.lang.SecurityManager sm = java.lang.System.getSecurityManager();
				try {
					if (sm != null) {
						sm.checkPermission(new java.lang.reflect.ReflectPermission("suppressAccessChecks"));
					}
					constructor.setAccessible(true);
				} catch (java.security.AccessControlException e) {
					throw new com.opensymphony.xwork2.inject.DependencyException((((("Security manager in use, could not access constructor: " + 
					(implementation.getName())) + "(") + (constructor.getName())) + ")"), e);
				}
			}

			com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException exception = null;
			com.opensymphony.xwork2.inject.Inject inject = null;
			com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>[] parameters = null;

			try {
				inject = constructor.getAnnotation(com.opensymphony.xwork2.inject.Inject.class);
				parameters = constructParameterInjector(inject, container, constructor);
			} catch (com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException e) {
				exception = e;
			}
			parameterInjectors = parameters;

			if (exception != null) {
				if ((inject != null) && (inject.required())) {
					throw new com.opensymphony.xwork2.inject.DependencyException(exception);
				}
			}
			injectors = container.injectors.get(implementation);
		}

		com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>[] constructParameterInjector(
		com.opensymphony.xwork2.inject.Inject inject, com.opensymphony.xwork2.inject.ContainerImpl container, java.lang.reflect.Constructor<T> constructor) throws com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException {
			return (constructor.getParameterTypes().length) == 0 ? 
			null : 
			container.getParametersInjectors(
			constructor, 
			constructor.getParameterAnnotations(), 
			constructor.getParameterTypes(), 
			inject.value());

		}

		@java.lang.SuppressWarnings("unchecked")
		private java.lang.reflect.Constructor<T> findConstructorIn(java.lang.Class<T> implementation) {
			java.lang.reflect.Constructor<T> found = null;
			java.lang.reflect.Constructor<T>[] declaredConstructors = ((java.lang.reflect.Constructor<T>[]) (implementation.getDeclaredConstructors()));
			for (java.lang.reflect.Constructor<T> constructor : declaredConstructors) {
				if ((constructor.getAnnotation(com.opensymphony.xwork2.inject.Inject.class)) != null) {
					if (found != null) {
						throw new com.opensymphony.xwork2.inject.DependencyException(((("More than one constructor annotated" + 
						" with @Inject found in ") + implementation) + "."));
					}
					found = constructor;
				}
			}
			if (found != null) {
				return found;
			}



			try {
				return implementation.getDeclaredConstructor();
			} catch (java.lang.NoSuchMethodException e) {
				throw new com.opensymphony.xwork2.inject.DependencyException((("Could not find a suitable constructor in " + (implementation.getName())) + "."));
			}
		}




		java.lang.Object construct(com.opensymphony.xwork2.inject.InternalContext context, java.lang.Class<? super T> expectedType) {
			com.opensymphony.xwork2.inject.ConstructionContext<T> constructionContext = context.getConstructionContext(this);


			if (constructionContext.isConstructing()) {


				return constructionContext.createProxy(expectedType);
			}



			T t = constructionContext.getCurrentReference();
			if (t != null) {
				return t;
			}

			try {

				constructionContext.startConstruction();
				try {
					java.lang.Object[] parameters = com.opensymphony.xwork2.inject.ContainerImpl.getParameters(this.constructor, context, parameterInjectors);
					t = this.constructor.newInstance(parameters);
					constructionContext.setProxyDelegates(t);
				} finally {
					constructionContext.finishConstruction();
				}



				constructionContext.setCurrentReference(t);


				for (com.opensymphony.xwork2.inject.ContainerImpl.Injector injector : injectors) {
					injector.inject(context, t);
				}

				return t;
			} catch (java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.reflect.InvocationTargetException e) {
				throw new java.lang.RuntimeException(e);
			} finally {
				constructionContext.removeCurrentReference();
			}
		}
	}

	static class ParameterInjector<T> {

		final com.opensymphony.xwork2.inject.ExternalContext<T> externalContext;
		final com.opensymphony.xwork2.inject.InternalFactory<? extends T> factory;

		public ParameterInjector(com.opensymphony.xwork2.inject.ExternalContext<T> externalContext, com.opensymphony.xwork2.inject.InternalFactory<? extends T> factory) {
			this.externalContext = externalContext;
			this.factory = factory;
		}

		T inject(java.lang.reflect.Member member, com.opensymphony.xwork2.inject.InternalContext context) {
			com.opensymphony.xwork2.inject.ExternalContext<?> previous = context.getExternalContext();
			context.setExternalContext(externalContext);
			try {
				return factory.create(context);
			} finally {
				context.setExternalContext(previous);
			}
		}
	}























































































































	interface ContextualCallable<T> {
		public abstract T call(com.opensymphony.xwork2.inject.InternalContext context);}























	interface Injector extends java.io.Serializable {
		public abstract void inject(com.opensymphony.xwork2.inject.InternalContext context, java.lang.Object o);}


	static class MissingDependencyException extends java.lang.Exception {
		MissingDependencyException(java.lang.String message) {
			super(message);
		}
	} 	final java.util.Map<com.opensymphony.xwork2.inject.Key<?>, com.opensymphony.xwork2.inject.InternalFactory<?>> factories; 	final java.util.Map<java.lang.Class<?>, java.util.Set<java.lang.String>> factoryNamesByType; 	final java.util.Map<java.lang.Class<?>, java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector>> injectors = new com.opensymphony.xwork2.inject.util.ReferenceCache<java.lang.Class<?>, java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector>>() { 		@java.lang.Override 		protected java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> create(java.lang.Class<?> key) { 			java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors = new java.util.ArrayList<>(); 			addInjectors(key, injectors); 			return injectors;}}; 	java.util.Map<java.lang.Class<?>, com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector> constructors = new com.opensymphony.xwork2.inject.util.ReferenceCache<java.lang.Class<?>, com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector>() { 		@java.lang.Override 		@java.lang.SuppressWarnings("unchecked") 		protected com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector<?> create(java.lang.Class<?> implementation) { 			return new com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector(com.opensymphony.xwork2.inject.ContainerImpl.this, implementation);}}; 	java.lang.ThreadLocal<java.lang.Object[]> localContext = new java.lang.ThreadLocal<java.lang.Object[]>() { 		@java.lang.Override 		protected java.lang.Object[] initialValue() { 			return new java.lang.Object[1];}}; 	final java.lang.ThreadLocal<java.lang.Object> localScopeStrategy = new java.lang.ThreadLocal<>(); 	ContainerImpl(java.util.Map<com.opensymphony.xwork2.inject.Key<?>, com.opensymphony.xwork2.inject.InternalFactory<?>> factories) { 		this.factories = factories; 		java.util.Map<java.lang.Class<?>, java.util.Set<java.lang.String>> map = new java.util.HashMap<>(); 		for (com.opensymphony.xwork2.inject.Key<?> key : factories.keySet()) { 			java.util.Set<java.lang.String> names = map.get(key.getType()); 			if (names == null) { 				names = new java.util.HashSet<>(); 				map.put(key.getType(), names);} 			names.add(key.getName());} 		for (java.util.Map.Entry<java.lang.Class<?>, java.util.Set<java.lang.String>> entry : map.entrySet()) { 			entry.setValue(java.util.Collections.unmodifiableSet(entry.getValue()));} 		this.factoryNamesByType = java.util.Collections.unmodifiableMap(map);} 	@java.lang.SuppressWarnings("unchecked") 	<T> com.opensymphony.xwork2.inject.InternalFactory<? extends T> getFactory(com.opensymphony.xwork2.inject.Key<T> key) { 		return ((com.opensymphony.xwork2.inject.InternalFactory<T>) (factories.get(key)));} 	void addInjectors(java.lang.Class clazz, java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors) { 		if (clazz == (java.lang.Object.class)) { 			return ;} 		addInjectors(clazz.getSuperclass(), injectors); 		addInjectorsForFields(clazz.getDeclaredFields(), false, injectors); 		addInjectorsForMethods(clazz.getDeclaredMethods(), false, injectors);} 	void injectStatics(java.util.List<java.lang.Class<?>> staticInjections) { 		final java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors = new java.util.ArrayList<>(); 		for (java.lang.Class<?> clazz : staticInjections) { 			addInjectorsForFields(clazz.getDeclaredFields(), true, injectors); 			addInjectorsForMethods(clazz.getDeclaredMethods(), true, injectors);} 		callInContext(new com.opensymphony.xwork2.inject.ContainerImpl.ContextualCallable<java.lang.Void>() { 			public java.lang.Void call(com.opensymphony.xwork2.inject.InternalContext context) { 				for (com.opensymphony.xwork2.inject.ContainerImpl.Injector injector : injectors) { 					injector.inject(context, null);} 				return null;}});} 	void addInjectorsForMethods(java.lang.reflect.Method[] methods, boolean statics, java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors) { 		addInjectorsForMembers(java.util.Arrays.asList(methods), statics, injectors, new com.opensymphony.xwork2.inject.ContainerImpl.InjectorFactory<java.lang.reflect.Method>() { 			public com.opensymphony.xwork2.inject.ContainerImpl.Injector create(com.opensymphony.xwork2.inject.ContainerImpl container, java.lang.reflect.Method method, java.lang.String name) throws com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException { 				return new com.opensymphony.xwork2.inject.ContainerImpl.MethodInjector(container, method, name);}});} 	void addInjectorsForFields(java.lang.reflect.Field[] fields, boolean statics, java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors) { 		addInjectorsForMembers(java.util.Arrays.asList(fields), statics, injectors, new com.opensymphony.xwork2.inject.ContainerImpl.InjectorFactory<java.lang.reflect.Field>() { 			public com.opensymphony.xwork2.inject.ContainerImpl.Injector create(com.opensymphony.xwork2.inject.ContainerImpl container, java.lang.reflect.Field field, java.lang.String name) throws com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException { 				return new com.opensymphony.xwork2.inject.ContainerImpl.FieldInjector(container, field, name);}});} 	<M extends java.lang.reflect.Member & java.lang.reflect.AnnotatedElement> void addInjectorsForMembers(java.util.List<M> members, boolean statics, java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors, com.opensymphony.xwork2.inject.ContainerImpl.InjectorFactory<M> injectorFactory) { 		for (M member : members) { 			if ((isStatic(member)) == statics) { 				com.opensymphony.xwork2.inject.Inject inject = member.getAnnotation(com.opensymphony.xwork2.inject.Inject.class); 				if (inject != null) { 					try { 						injectors.add(injectorFactory.create(this, member, inject.value()));} catch (com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException e) { 						if (inject.required()) { 							throw new com.opensymphony.xwork2.inject.DependencyException(e);}}}}}} 	private boolean isStatic(java.lang.reflect.Member member) { 		return java.lang.reflect.Modifier.isStatic(member.getModifiers());} 	<M extends java.lang.reflect.AccessibleObject & java.lang.reflect.Member> com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>[] getParametersInjectors(M member, java.lang.annotation.Annotation[][] annotations, java.lang.Class[] parameterTypes, java.lang.String defaultName) throws com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException { 		java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>> parameterInjectors = new java.util.ArrayList<>(); 		java.util.Iterator<java.lang.annotation.Annotation[]> annotationsIterator = java.util.Arrays.asList(annotations).iterator(); 		for (java.lang.Class<?> parameterType : parameterTypes) { 			com.opensymphony.xwork2.inject.Inject annotation = findInject(annotationsIterator.next()); 			java.lang.String name = (annotation == null) ? defaultName : annotation.value(); 			com.opensymphony.xwork2.inject.Key<?> key = com.opensymphony.xwork2.inject.Key.newInstance(parameterType, name); 			parameterInjectors.add(createParameterInjector(key, member));} 		return toArray(parameterInjectors);} 	<T> com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<T> createParameterInjector(com.opensymphony.xwork2.inject.Key<T> key, java.lang.reflect.Member member) throws com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException { 		com.opensymphony.xwork2.inject.InternalFactory<? extends T> factory = getFactory(key); 		if (factory == null) { 			throw new com.opensymphony.xwork2.inject.ContainerImpl.MissingDependencyException((((("No mapping found for dependency " + key) + " in ") + member) + "."));} 		com.opensymphony.xwork2.inject.ExternalContext<T> externalContext = com.opensymphony.xwork2.inject.ExternalContext.newInstance(member, key, this); 		return new com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<T>(externalContext, factory);} 	@java.lang.SuppressWarnings("unchecked") 	private com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>[] toArray(java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector<?>> parameterInjections) { 		return parameterInjections.toArray(new com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector[parameterInjections.size()]);} 	com.opensymphony.xwork2.inject.Inject findInject(java.lang.annotation.Annotation[] annotations) { 		for (java.lang.annotation.Annotation annotation : annotations) { 			if ((annotation.annotationType()) == (com.opensymphony.xwork2.inject.Inject.class)) { 				return com.opensymphony.xwork2.inject.Inject.class.cast(annotation);}} 		return null;} 	private static java.lang.Object[] getParameters(java.lang.reflect.Member member, com.opensymphony.xwork2.inject.InternalContext context, com.opensymphony.xwork2.inject.ContainerImpl.ParameterInjector[] parameterInjectors) { 		if (parameterInjectors == null) { 			return null;} 		java.lang.Object[] parameters = new java.lang.Object[parameterInjectors.length]; 		for (int i = 0; i < (parameters.length); i++) { 			parameters[i] = parameterInjectors[i].inject(member, context);} 		return parameters;} 	void inject(java.lang.Object o, com.opensymphony.xwork2.inject.InternalContext context) { 		java.util.List<com.opensymphony.xwork2.inject.ContainerImpl.Injector> injectors = this.injectors.get(o.getClass()); 		for (com.opensymphony.xwork2.inject.ContainerImpl.Injector injector : injectors) { 			injector.inject(context, o);}} 	<T> T inject(java.lang.Class<T> implementation, com.opensymphony.xwork2.inject.InternalContext context) { 		try { 			com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector<T> constructor = getConstructor(implementation); 			return implementation.cast(constructor.construct(context, implementation));} catch (java.lang.Exception e) { 			throw new java.lang.RuntimeException(e);}} 	@java.lang.SuppressWarnings("unchecked") 	<T> T getInstance(java.lang.Class<T> type, java.lang.String name, com.opensymphony.xwork2.inject.InternalContext context) { 		com.opensymphony.xwork2.inject.ExternalContext<?> previous = context.getExternalContext(); 		com.opensymphony.xwork2.inject.Key<T> key = com.opensymphony.xwork2.inject.Key.newInstance(type, name); 		context.setExternalContext(com.opensymphony.xwork2.inject.ExternalContext.newInstance(null, key, this)); 		try { 			com.opensymphony.xwork2.inject.InternalFactory o = getFactory(key); 			if (o != null) { 				return getFactory(key).create(context);}else { 				return null;}} finally { 			context.setExternalContext(previous);}} 	<T> T getInstance(java.lang.Class<T> type, com.opensymphony.xwork2.inject.InternalContext context) { 		return getInstance(type, com.opensymphony.xwork2.inject.Container.DEFAULT_NAME, context);} 	public void inject(final java.lang.Object o) { 		callInContext(new com.opensymphony.xwork2.inject.ContainerImpl.ContextualCallable<java.lang.Void>() { 			public java.lang.Void call(com.opensymphony.xwork2.inject.InternalContext context) { 				inject(o, context); 				return null;}});} 	public <T> T inject(final java.lang.Class<T> implementation) { 		return callInContext(new com.opensymphony.xwork2.inject.ContainerImpl.ContextualCallable<T>() { 			public T call(com.opensymphony.xwork2.inject.InternalContext context) { 				return inject(implementation, context);}});} 	public <T> T getInstance(final java.lang.Class<T> type, final java.lang.String name) { 		return callInContext(new com.opensymphony.xwork2.inject.ContainerImpl.ContextualCallable<T>() { 			public T call(com.opensymphony.xwork2.inject.InternalContext context) { 				return getInstance(type, name, context);}});} 	public <T> T getInstance(final java.lang.Class<T> type) { 		return callInContext(new com.opensymphony.xwork2.inject.ContainerImpl.ContextualCallable<T>() { 			public T call(com.opensymphony.xwork2.inject.InternalContext context) { 				return getInstance(type, context);}});} 	public java.util.Set<java.lang.String> getInstanceNames(final java.lang.Class<?> type) { 		java.util.Set<java.lang.String> names = factoryNamesByType.get(type); 		if (names == null) { 			names = java.util.Collections.emptySet();} 		return names;} 	<T> T callInContext(com.opensymphony.xwork2.inject.ContainerImpl.ContextualCallable<T> callable) { 		java.lang.Object[] reference = localContext.get(); 		if ((reference[0]) == null) { 			reference[0] = new com.opensymphony.xwork2.inject.InternalContext(this); 			try { 				return callable.call(((com.opensymphony.xwork2.inject.InternalContext) (reference[0])));} finally { 				reference[0] = null; 				localContext.remove();}}else { 			return callable.call(((com.opensymphony.xwork2.inject.InternalContext) (reference[0])));}} 	@java.lang.SuppressWarnings("unchecked") 	<T> com.opensymphony.xwork2.inject.ContainerImpl.ConstructorInjector<T> getConstructor(java.lang.Class<T> implementation) { 		return constructors.get(implementation);} 	public void setScopeStrategy(com.opensymphony.xwork2.inject.Scope.Strategy scopeStrategy) { 		this.localScopeStrategy.set(scopeStrategy);} 	public void removeScopeStrategy() { 		this.localScopeStrategy.remove();}
}
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.execute(LaucherJUnitProcess.java:132) - The Process that runs JUnit test cases had problems: process hasn't exited
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.startEvolution(AstorCoreEngine.java:210) - Time Repair Loop (s): 1300.36
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.startEvolution(AstorCoreEngine.java:212) - generationsexecuted: 200
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:266) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.atEnd(AstorCoreEngine.java:220) - 
 --SOLUTIONS DESCRIPTION--


[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.showResults(AstorCoreEngine.java:288) - 
TOTAL_TIME=1300360
NR_GENERATIONS=200
NR_RIGHT_COMPILATIONS=106
NR_FAILLING_COMPILATIONS=94
NR_FAILING_VALIDATION_PROCESS=null

[INFO ] fr.inria.astor.core.loop.AstorCoreEngine.atEnd(AstorCoreEngine.java:227) - 
TOTAL_TIME=1300360
NR_GENERATIONS=200
NR_RIGHT_COMPILATIONS=106
NR_FAILLING_COMPILATIONS=94
NR_FAILING_VALIDATION_PROCESS=null

[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:79) - Storing ing JSON at /root/./output_astor/AstorMain-core//astor_output.json
[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:80) - astor_output:{"patches":[]}
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:201) - Time Total(s): 1668.811
