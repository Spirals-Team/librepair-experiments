<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="spirals-vortex.lille.inria.fr" name="Surefire test" tests="57" failures="0" timestamp="1 Jun 2018 11:24:27 GMT" time="4.04" errors="0">
  <testcase name="testToString" time="0.087" classname="org.molgenis.gavin.job.input.model.CaddVariantTest"/>
  <testcase name="testToString" time="0.002" classname="org.molgenis.gavin.job.input.model.VcfVariantTest"/>
  <testcase name="testToStringDotId" time="0.0" classname="org.molgenis.gavin.job.input.model.VcfVariantTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.001" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.001" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.001" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.001" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseChrom" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseVariant" time="0.001" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseVariant" time="0.013" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseVariant" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseVariant" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseVariant" time="0.001" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseVariant" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseVariant" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseVariant" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseVariant" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testParseVariant" time="0.0" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testTransform" time="0.069" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testTransformSkipsLinesWhenMaxLinesProcessed" time="0.001" classname="org.molgenis.gavin.job.input.ParserTest"/>
  <testcase name="testMixedInputsThrowsException" time="0.005" classname="org.molgenis.gavin.job.GavinJobTest"/>
  <testcase name="testNoValidLinesThrowsException" time="0.001" classname="org.molgenis.gavin.job.GavinJobTest"/>
  <testcase name="testRunHappyPathCadd" time="0.005" classname="org.molgenis.gavin.job.GavinJobTest"/>
  <testcase name="testRunHappyPathVcf" time="0.003" classname="org.molgenis.gavin.job.GavinJobTest"/>
  <testcase name="testSkippedThrowsException" time="0.001" classname="org.molgenis.gavin.job.GavinJobTest"/>
  <testcase name="testAnnotateFile" time="0.216" classname="org.molgenis.gavin.controller.GavinControllerTest"/>
  <testcase name="testCleanUp" time="0.027" classname="org.molgenis.gavin.controller.GavinControllerTest"/>
  <testcase name="testInitMissingResources" time="0.004" classname="org.molgenis.gavin.controller.GavinControllerTest"/>
  <testcase name="testInitResourcesPresent" time="0.0" classname="org.molgenis.gavin.controller.GavinControllerTest"/>
  <testcase name="testResult" time="0.039" classname="org.molgenis.gavin.controller.GavinControllerTest"/>
  <testcase name="testResultNotFound" time="0.001" classname="org.molgenis.gavin.controller.GavinControllerTest"/>
</testsuite> <!-- Surefire test -->
