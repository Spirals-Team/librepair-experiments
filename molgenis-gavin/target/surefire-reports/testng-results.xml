<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="57" passed="57">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="4040" started-at="2018-06-01T11:24:23Z" finished-at="2018-06-01T11:24:27Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="4040" started-at="2018-06-01T11:24:23Z" finished-at="2018-06-01T11:24:27Z">
      <class name="org.molgenis.gavin.job.input.model.CaddVariantTest">
        <test-method status="PASS" signature="testToString()[pri:0, instance:org.molgenis.gavin.job.input.model.CaddVariantTest@4d4df0f4]" name="testToString" duration-ms="87" started-at="2018-06-01T13:24:23Z" finished-at="2018-06-01T13:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- org.molgenis.gavin.job.input.model.CaddVariantTest -->
      <class name="org.molgenis.gavin.job.input.ParserTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="876" started-at="2018-06-01T13:24:23Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="8" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chr1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="1" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="1" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="1" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chr22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CHR-X]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrx]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MT]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="1" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[01]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseChrom(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseChrom" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="chrom" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseChrom -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseVariant(java.lang.String, org.molgenis.gavin.job.input.model.Variant)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseVariant" duration-ms="1" started-at="2018-06-01T13:24:24Z" data-provider="line" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[X	123	A	C]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseVariant -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseVariant(java.lang.String, org.molgenis.gavin.job.input.model.Variant)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseVariant" duration-ms="13" started-at="2018-06-01T13:24:24Z" data-provider="line" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[X	123	.	A	C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[X	123	.	A	C	.	.	.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseVariant -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseVariant(java.lang.String, org.molgenis.gavin.job.input.model.Variant)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseVariant" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="line" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20	14370	rs6054257	G	A	29	PASS	NS=3;DP=14;AF=0.5;DB;H2	GT:GQ:DP:HQ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20	14370	rs6054257	G	A	.	.	.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseVariant -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseVariant(java.lang.String, org.molgenis.gavin.job.input.model.Variant)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseVariant" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="line" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20	14370	.	G	A	29	PASS	NS=3;DP=14;AF=0.5;DB;H2	GT:GQ:DP:HQ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20	14370	.	G	A	.	.	.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseVariant -->
        <test-method status="PASS" signature="testParseVariant(java.lang.String, org.molgenis.gavin.job.input.model.Variant)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseVariant" duration-ms="1" started-at="2018-06-01T13:24:24Z" data-provider="line" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseVariant -->
        <test-method status="PASS" signature="testParseVariant(java.lang.String, org.molgenis.gavin.job.input.model.Variant)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseVariant" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="line" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[X	123	A	C	213.23	blah]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseVariant -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseVariant(java.lang.String, org.molgenis.gavin.job.input.model.Variant)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseVariant" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="line" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[X	123	A	C	213.23]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseVariant -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testParseVariant(java.lang.String, org.molgenis.gavin.job.input.model.Variant)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseVariant" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="line" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ X 	 123 	 rsblah 	 A 	 C 	 213.23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[X	123	rsblah	A	C	.	.	.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseVariant -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testParseVariant(java.lang.String, org.molgenis.gavin.job.input.model.Variant)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseVariant" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="line" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20	14370	G	.	2.2	3.234]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20	14370	.	G	.	.	.	CADD=2.2;CADD_SCALED=3.234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseVariant -->
        <test-method status="PASS" signature="testParseVariant(java.lang.String, org.molgenis.gavin.job.input.model.Variant)[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testParseVariant" duration-ms="0" started-at="2018-06-01T13:24:24Z" data-provider="line" finished-at="2018-06-01T13:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[X	123		A	C	213.23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[X	123	.	A	C	.	.	.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseVariant -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testTransform()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testTransform" duration-ms="69" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransform -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testTransformSkipsLinesWhenMaxLinesProcessed()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="testTransformSkipsLinesWhenMaxLinesProcessed" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransformSkipsLinesWhenMaxLinesProcessed -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.gavin.job.input.ParserTest@d969452]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- org.molgenis.gavin.job.input.ParserTest -->
      <class name="org.molgenis.gavin.controller.GavinControllerTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="710" started-at="2018-06-01T13:24:26Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeClass()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="abstractMolgenisSpringTestBeforeClass" is-config="true" duration-ms="12" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.controller.GavinControllerTest.testAnnotateFile() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="testAnnotateFile()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="testAnnotateFile" duration-ms="216" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnnotateFile -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.controller.GavinControllerTest.testCleanUp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.controller.GavinControllerTest.testAnnotateFile() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testCleanUp()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="testCleanUp" duration-ms="27" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.controller.GavinControllerTest.testCleanUp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.controller.GavinControllerTest.testInitMissingResources() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testInitMissingResources()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="testInitMissingResources" duration-ms="4" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitMissingResources -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.controller.GavinControllerTest.testInitResourcesPresent() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.controller.GavinControllerTest.testInitMissingResources() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="testInitResourcesPresent()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="testInitResourcesPresent" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitResourcesPresent -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.controller.GavinControllerTest.testResult() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.controller.GavinControllerTest.testInitResourcesPresent() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="testResult()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="testResult" duration-ms="39" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResult -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.controller.GavinControllerTest.testResultNotFound() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.controller.GavinControllerTest.testResult() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="testResultNotFound()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="testResultNotFound" duration-ms="1" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[No result file found for this job. Results are removed every night.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: No result file found for this job. Results are removed every night.
	at org.molgenis.gavin.controller.GavinController.download(GavinController.java:205)
	at org.molgenis.gavin.controller.GavinControllerTest.testResultNotFound(GavinControllerTest.java:170)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResultNotFound -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.controller.GavinControllerTest.testResultNotFound() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.molgenis.gavin.controller.GavinControllerTest@6684f7f2]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:27Z" finished-at="2018-06-01T13:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.molgenis.gavin.controller.GavinControllerTest -->
      <class name="org.molgenis.gavin.job.GavinJobTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="2" started-at="2018-06-01T13:24:24Z" finished-at="2018-06-01T13:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="1181" started-at="2018-06-01T13:24:24Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeClass()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="abstractMolgenisSpringTestBeforeClass" is-config="true" duration-ms="75" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="5" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.job.GavinJobTest.testMixedInputsThrowsException() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="554" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="beforeMethod" is-config="true" duration-ms="17" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testMixedInputsThrowsException()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="testMixedInputsThrowsException" duration-ms="5" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Input file contains mixed line types. Please use one type only, either VCF or CADD.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Input file contains mixed line types. Please use one type only, either VCF or CADD.
	at org.molgenis.gavin.job.GavinJob.call(GavinJob.java:102)
	at org.molgenis.gavin.job.GavinJobTest.testMixedInputsThrowsException(GavinJobTest.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedInputsThrowsException -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="4" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="4" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.job.GavinJobTest.testMixedInputsThrowsException() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.job.GavinJobTest.testNoValidLinesThrowsException() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testNoValidLinesThrowsException()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="testNoValidLinesThrowsException" duration-ms="1" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Not a single valid variant line found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Not a single valid variant line found.
	at org.molgenis.gavin.job.GavinJob.call(GavinJob.java:108)
	at org.molgenis.gavin.job.GavinJobTest.testNoValidLinesThrowsException(GavinJobTest.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoValidLinesThrowsException -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.job.GavinJobTest.testNoValidLinesThrowsException() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.job.GavinJobTest.testRunHappyPathCadd() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testRunHappyPathCadd()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="testRunHappyPathCadd" duration-ms="5" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRunHappyPathCadd -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.job.GavinJobTest.testRunHappyPathVcf() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.job.GavinJobTest.testRunHappyPathCadd() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testRunHappyPathVcf()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="testRunHappyPathVcf" duration-ms="3" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRunHappyPathVcf -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.job.GavinJobTest.testSkippedThrowsException() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.job.GavinJobTest.testRunHappyPathVcf() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSkippedThrowsException()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="testSkippedThrowsException" duration-ms="1" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Input file contains too many lines. Maximum is 100,000.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Input file contains too many lines. Maximum is 100,000.
	at org.molgenis.gavin.job.GavinJob.call(GavinJob.java:98)
	at org.molgenis.gavin.job.GavinJobTest.testSkippedThrowsException(GavinJobTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSkippedThrowsException -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.gavin.job.GavinJobTest.testSkippedThrowsException() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.molgenis.gavin.job.GavinJobTest@641ed324]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-06-01T13:24:26Z" finished-at="2018-06-01T13:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.molgenis.gavin.job.GavinJobTest -->
      <class name="org.molgenis.gavin.job.input.model.VcfVariantTest">
        <test-method status="PASS" signature="testToString()[pri:0, instance:org.molgenis.gavin.job.input.model.VcfVariantTest@49e7e8f1]" name="testToString" duration-ms="2" started-at="2018-06-01T13:24:23Z" finished-at="2018-06-01T13:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method status="PASS" signature="testToStringDotId()[pri:0, instance:org.molgenis.gavin.job.input.model.VcfVariantTest@49e7e8f1]" name="testToStringDotId" duration-ms="0" started-at="2018-06-01T13:24:23Z" finished-at="2018-06-01T13:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToStringDotId -->
      </class> <!-- org.molgenis.gavin.job.input.model.VcfVariantTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
