{"general":{"NR_RIGHT_COMPILATIONS":272,"NR_ERRONEOUS_VARIANCES":null,"OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":117,"NR_GENERATIONS":389,"TOTAL_TIME":141.975,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"778","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.LIS","PATH":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/421595763\\\/output_astor\\\/AstorMain-lis\\\/src\\\/default\\\/java_programs\\\/LIS.java","INGREDIENT_SCOPE":"-","ORIGINAL_CODE":"if ((length == longest) || (val < (arr[ends.get((length + 1))]))) {\\n\\tends.put((length + 1), i);\\n\\tlongest = length + 1;\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertBeforeOp","MODIFIED_FILE_PATH":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/421595763\\\/.\\\/output_astor\\\/AstorMain-lis\\\/\\\/src\\\/\\\/variant-778_f\\\/java_programs\\\/LIS.java","LINE":"29","SUSPICIOUNESS":"1","MP_RANKING":"9","PATCH_HUNK_CODE":"ends.put((length + 1), i)","PATCH_HUNK_TYPE":"CtInvocationImpl|CtBlockImpl"}],"TIME":"141","GENERATION":"389","FOLDER_SOLUTION_CODE":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/421595763\\\/.\\\/output_astor\\\/AstorMain-lis\\\/\\\/bin\\\/\\\/variant-778","PATCH_DIFF_FORMATTED":"--- java_programs\\\/LIS.java\\n+++ java_programs\\\/LIS.java\\n@@ -14,6 +14,7 @@\\n \\t\\t\\t\\t}\\n \\t\\t\\t}\\n \\t\\t\\tint length = (!(prefix_lengths.isEmpty())) ? java.util.Collections.max(prefix_lengths) : 0;\\n+\\t\\t\\tends.put((length + 1), i);\\n \\t\\t\\tif ((length == longest) || (val < (arr[ends.get((length + 1))]))) {\\n \\t\\t\\t\\tends.put((length + 1), i);\\n \\t\\t\\t\\tlongest = length + 1;\\n\\n","PATCH_DIFF_ORIG":"--- java_programs\\\/LIS.java\\n+++ java_programs\\\/LIS.java\\n@@ -26,8 +26,8 @@\\n \\n \\t\\t\\tint length = (!(prefix_lengths.isEmpty())) ? java.util.Collections.max(prefix_lengths) : 0;\\n \\n-\\t\\t\\tif ((length == longest) || (val < (arr[ends.get((length + 1))]))) {\\n-\\t\\t\\t\\tends.put((length + 1), i);\\n+\\n+\\t\\t\\tends.put((length + 1), i); \\t\\t\\tif ((length == longest) || (val < (arr[ends.get((length + 1))]))) { \\t\\t\\t\\tends.put((length + 1), i);\\n \\t\\t\\t\\tlongest = length + 1;\\n \\t\\t\\t}\\n \\n\\n"}]}