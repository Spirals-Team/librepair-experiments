{"nrall":42,"space":[{"ingredients":["new java.util.ArrayList<java.lang.Integer>()","new java.util.ArrayList<java.lang.Integer>(0)","java_programs.GET_FACTORS.get_factors((_int_0 \/ _int_1))"],"nringredients":3,"key":"[java_programs, ArrayList]"},{"ingredients":["super()"],"nringredients":1,"key":"[java_programs_test, Object]"},{"ingredients":["(java.lang.Math.sqrt(_int_0))","((int) ((java.lang.Math.sqrt(_int_0)) + 1.0))"],"nringredients":2,"key":"[java_programs, double]"},{"ingredients":["super()"],"nringredients":1,"key":"[java_programs, Object]"},{"ingredients":["_Object_0 instanceof java.lang.Iterable","(_String_0.length()) >= 2","(_Object_0 instanceof java.lang.String)","(java_programs_test.QuixFixOracleHelper.isInteger(_Object_0.toString()))","(!(java_programs_test.QuixFixOracleHelper.isInteger(_Object_0.toString())))","(_Object_0 instanceof java.lang.String) && (!(java_programs_test.QuixFixOracleHelper.isInteger(_Object_0.toString())))","(_Object_0.toString().endsWith(\".0\"))","_boolean_0 && (_Object_1.toString().endsWith(\".0\"))"],"nringredients":8,"key":"[java_programs_test, boolean]"},{"ingredients":["_int_0++","(_int_0 % _int_1)","(_int_0 \/ _int_1)"],"nringredients":3,"key":"[java_programs, int]"},{"ingredients":["java_programs_test.QuixFixOracleHelper.transformToString(_Object_0, _boolean_1)","_Object_0.toString()","java_programs_test.QuixFixOracleHelper.removeSymbols(_Object_0.toString())","_String_0.replaceAll(\"\\\\(\", \"[\")","_String_0.replaceAll(\"\\\\(\", \"[\").replaceAll(\"\\\\)\", \"]\")","_String_0.replaceAll(\"\\\\(\", \"[\").replaceAll(\"\\\\)\", \"]\").replace(\" \", \"\")","_String_0.replaceAll(\"\\\\(\", \"[\").replaceAll(\"\\\\)\", \"]\").replace(\" \", \"\").replaceAll(\"\\\"\", \"\")","(java_programs_test.QuixFixOracleHelper.transformToString(_Object_0, _boolean_1))","(java_programs_test.QuixFixOracleHelper.transformToString(_Object_0, _boolean_1)) + \",\"","_String_0.trim()","_String_0.trim().substring(0, ((_String_0.length()) - 1))","_String_0 + \"]\"","_Object_0.toString().substring(0, ((_Object_0.toString().length()) - 2))","(_boolean_0 && (_Object_1.toString().endsWith(\".0\"))) ? \n_Object_1.toString().substring(0, ((_Object_1.toString().length()) - 2)) : _Object_1.toString()"],"nringredients":14,"key":"[java_programs_test, String]"},{"ingredients":["_int_0 == 1","_int_0 < _int_1","(_int_0 % _int_1) == 0","_ArrayList_0.add(_int_1)","_ArrayList_0.addAll(java_programs.GET_FACTORS.get_factors((_int_1 \/ _int_2)))"],"nringredients":5,"key":"[java_programs, boolean]"},{"ingredients":["(_String_0.length())","((_String_0.length()) - 1)","(_Object_0.toString().length())","((_Object_0.toString().length()) - 2)","java.lang.Integer.parseInt(_String_0)"],"nringredients":5,"key":"[java_programs_test, int]"}]}