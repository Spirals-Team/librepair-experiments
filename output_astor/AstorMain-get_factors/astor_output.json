{"general":{"NR_RIGHT_COMPILATIONS":17,"OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":null,"NR_GENERATIONS":17,"TOTAL_TIME":9.905,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"34","VALIDATION":"|true|0|11|[]|","patchhunks":[{"LOCATION":"java_programs.GET_FACTORS","PATH":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/410725054\\\/output_astor\\\/AstorMain-get_factors\\\/src\\\/default\\\/java_programs\\\/GET_FACTORS.java","INGREDIENT_SCOPE":"-","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"(_int_0 % _int_1) == 0","PATCH_HUNK_TYPE":"CtBinaryOperatorImpl|CtForImpl","ORIGINAL_CODE":"i < max","BUGGY_CODE_TYPE":"CtBinaryOperatorImpl|CtForImpl","OPERATOR":"ExpressionReplaceOperator","MODIFIED_FILE_PATH":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/410725054\\\/.\\\/output_astor\\\/AstorMain-get_factors\\\/\\\/src\\\/\\\/variant-34_f\\\/java_programs\\\/GET_FACTORS.java","LINE":"19","MP_RANKING":"2","PATCH_HUNK_CODE":"(n % n) == 0"}],"TIME":"9","GENERATION":"17","FOLDER_SOLUTION_CODE":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/410725054\\\/.\\\/output_astor\\\/AstorMain-get_factors\\\/\\\/bin\\\/\\\/variant-34","PATCH_DIFF_FORMATTED":"--- java_programs\\\/GET_FACTORS.java\\n+++ java_programs\\\/GET_FACTORS.java\\n@@ -7,7 +7,7 @@\\n \\t\\t\\treturn new java.util.ArrayList<java.lang.Integer>();\\n \\t\\t}\\n \\t\\tint max = ((int) ((java.lang.Math.sqrt(n)) + 1.0));\\n-\\t\\tfor (int i = 2; i < max; i++) {\\n+\\t\\tfor (int i = 2; (n % n) == 0; i++) {\\n \\t\\t\\tif ((n % i) == 0) {\\n \\t\\t\\t\\tjava.util.ArrayList<java.lang.Integer> prepend = new java.util.ArrayList<java.lang.Integer>(0);\\n \\t\\t\\t\\tprepend.add(i);\\n\\n","PATCH_DIFF_ORIG":"--- java_programs\\\/GET_FACTORS.java\\n+++ java_programs\\\/GET_FACTORS.java\\n@@ -16,8 +16,8 @@\\n \\t\\t\\treturn new java.util.ArrayList<java.lang.Integer>();\\n \\t\\t}\\n \\t\\tint max = ((int) ((java.lang.Math.sqrt(n)) + 1.0));\\n-\\t\\tfor (int i = 2; i < max; i++) {\\n-\\t\\t\\tif ((n % i) == 0) {\\n+\\t\\tfor (int i = 2; \\n+\\t\\t(n % n) == 0; i++) { \\t\\t\\tif ((n % i) == 0) {\\n \\t\\t\\t\\tjava.util.ArrayList<java.lang.Integer> prepend = new java.util.ArrayList<java.lang.Integer>(0);\\n \\t\\t\\t\\tprepend.add(i);\\n \\t\\t\\t\\tprepend.addAll(java_programs.GET_FACTORS.get_factors((n \\\/ i)));\\n\\n"}]}