{"general":{"NR_RIGHT_COMPILATIONS":16,"NR_ERRONEOUS_VARIANCES":null,"OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":null,"NR_GENERATIONS":null,"TOTAL_TIME":8.635,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"17","VALIDATION":"|true|0|8|[]|","patchhunks":[{"LOCATION":"java_programs.NEXT_PERMUTATION","PATH":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/419312117\\\/output_astor\\\/AstorMain-next_permutation\\\/src\\\/default\\\/java_programs\\\/NEXT_PERMUTATION.java","INGREDIENT_SCOPE":"-","ORIGINAL_CODE":"(perm.get(j)) < (perm.get(i))","BUGGY_CODE_TYPE":"CtBinaryOperatorImpl|CtIfImpl","OPERATOR":"IfExpresionMutOp","MODIFIED_FILE_PATH":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/419312117\\\/.\\\/output_astor\\\/AstorMain-next_permutation\\\/\\\/src\\\/\\\/variant-17_f\\\/java_programs\\\/NEXT_PERMUTATION.java","LINE":"19","SUSPICIOUNESS":"1","MP_RANKING":"3","PATCH_HUNK_CODE":"(perm.get(j)) >= (perm.get(i))","PATCH_HUNK_TYPE":"CtBinaryOperatorImpl|CtIfImpl"}],"TIME":"7","GENERATION":"1","FOLDER_SOLUTION_CODE":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/419312117\\\/.\\\/output_astor\\\/AstorMain-next_permutation\\\/\\\/bin\\\/\\\/variant-17","PATCH_DIFF_FORMATTED":"--- java_programs\\\/NEXT_PERMUTATION.java\\n+++ java_programs\\\/NEXT_PERMUTATION.java\\n@@ -6,7 +6,7 @@\\n \\t\\tfor (int i = (perm.size()) - 2; i != (-1); i--) {\\n \\t\\t\\tif ((perm.get(i)) < (perm.get((i + 1)))) {\\n \\t\\t\\t\\tfor (int j = (perm.size()) - 1; j != i; j--) {\\n-\\t\\t\\t\\t\\tif ((perm.get(j)) < (perm.get(i))) {\\n+\\t\\t\\t\\t\\tif ((perm.get(j)) >= (perm.get(i))) {\\n \\t\\t\\t\\t\\t\\tjava.util.ArrayList<java.lang.Integer> next_perm = perm;\\n \\t\\t\\t\\t\\t\\tint temp_j = perm.get(j);\\n \\t\\t\\t\\t\\t\\tint temp_i = perm.get(i);\\n\\n","PATCH_DIFF_ORIG":"--- java_programs\\\/NEXT_PERMUTATION.java\\n+++ java_programs\\\/NEXT_PERMUTATION.java\\n@@ -16,7 +16,7 @@\\n \\t\\tfor (int i = (perm.size()) - 2; i != (-1); i--) {\\n \\t\\t\\tif ((perm.get(i)) < (perm.get((i + 1)))) {\\n \\t\\t\\t\\tfor (int j = (perm.size()) - 1; j != i; j--) {\\n-\\t\\t\\t\\t\\tif ((perm.get(j)) < (perm.get(i))) {\\n+\\t\\t\\t\\t\\tif ((perm.get(j)) >= (perm.get(i))) {\\n \\t\\t\\t\\t\\t\\tjava.util.ArrayList<java.lang.Integer> next_perm = perm;\\n \\t\\t\\t\\t\\t\\tint temp_j = perm.get(j);\\n \\t\\t\\t\\t\\t\\tint temp_i = perm.get(i);\\n\\n"}]}