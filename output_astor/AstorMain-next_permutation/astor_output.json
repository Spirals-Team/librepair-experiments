{"general":{"NR_RIGHT_COMPILATIONS":16,"NR_ERRONEOUS_VARIANCES":null,"OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":null,"NR_GENERATIONS":null,"TOTAL_TIME":9.913,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"17","VALIDATION":"|true|0|8|[]|","patchhunks":[{"LOCATION":"java_programs.NEXT_PERMUTATION","PATH":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/421464781\\\/output_astor\\\/AstorMain-next_permutation\\\/src\\\/default\\\/java_programs\\\/NEXT_PERMUTATION.java","INGREDIENT_SCOPE":"-","ORIGINAL_CODE":"(perm.get(j)) < (perm.get(i))","BUGGY_CODE_TYPE":"CtBinaryOperatorImpl|CtIfImpl","OPERATOR":"IfExpresionMutOp","MODIFIED_FILE_PATH":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/421464781\\\/.\\\/output_astor\\\/AstorMain-next_permutation\\\/\\\/src\\\/\\\/variant-17_f\\\/java_programs\\\/NEXT_PERMUTATION.java","LINE":"19","SUSPICIOUNESS":"1","MP_RANKING":"3","PATCH_HUNK_CODE":"(perm.get(j)) >= (perm.get(i))","PATCH_HUNK_TYPE":"CtBinaryOperatorImpl|CtIfImpl"}],"TIME":"8","GENERATION":"1","FOLDER_SOLUTION_CODE":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/421464781\\\/.\\\/output_astor\\\/AstorMain-next_permutation\\\/\\\/bin\\\/\\\/variant-17","PATCH_DIFF_ORIG":"--- java_programs\\\/NEXT_PERMUTATION.java\\n+++ java_programs\\\/NEXT_PERMUTATION.java\\n@@ -1,35 +1,35 @@\\n package java_programs;\\n-import java.util.*;\\n-\\\/\\\/import com.google.guava.Lists;\\n \\n-\\\/*\\n- * To change this template, choose Tools | Templates\\n- * and open the template in the editor.\\n- *\\\/\\n-\\n-\\\/**\\n- *\\n- * @author derricklin\\n- *\\\/\\n+\\n public class NEXT_PERMUTATION {\\n-    public static ArrayList<Integer> next_permutation(ArrayList<Integer> perm) {\\n-        for (int i=perm.size()-2; i!=-1; i--) {\\n-            if (perm.get(i) < perm.get(i+1)) {\\n-                for (int j=perm.size()-1; j!=i; j--) {\\n-                    if (perm.get(j) < perm.get(i)) {\\n-                        ArrayList<Integer> next_perm = perm;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\tpublic static java.util.ArrayList<java.lang.Integer> next_permutation(java.util.ArrayList<java.lang.Integer> perm) {\\n+\\t\\tfor (int i = (perm.size()) - 2; i != (-1); i--) {\\n+\\t\\t\\tif ((perm.get(i)) < (perm.get((i + 1)))) {\\n+\\t\\t\\t\\tfor (int j = (perm.size()) - 1; j != i; j--) {\\n+\\t\\t\\t\\t\\tif ((perm.get(j)) >= (perm.get(i))) {\\n+\\t\\t\\t\\t\\t\\tjava.util.ArrayList<java.lang.Integer> next_perm = perm;\\n                         int temp_j = perm.get(j);\\n                         int temp_i = perm.get(i);\\n                         next_perm.set(i,temp_j);\\n                         next_perm.set(j,temp_i);\\n \\n-                        ArrayList<Integer> reversed = new ArrayList<Integer>(100);\\n-                        for (int k=next_perm.size()-1; k!=i; k--) {\\n+\\t\\t\\t\\t\\t\\tjava.util.ArrayList<java.lang.Integer> reversed = new java.util.ArrayList<java.lang.Integer>(100);\\n+\\t\\t\\t\\t\\t\\tfor (int k = (next_perm.size()) - 1; k != i; k--) {\\n                             reversed.add(next_perm.get(k));\\n                         }\\n \\n                         int q = i + 1;\\n-                        for (Integer replace : reversed) {\\n+\\t\\t\\t\\t\\t\\tfor (java.lang.Integer replace : reversed) {\\n                             next_perm.set(q, replace);\\n                             q++;\\n                         }\\n@@ -40,6 +40,5 @@\\n             }\\n         }\\n \\n-        return new ArrayList<Integer>();\\n-    }\\n-}\\n+\\t\\treturn new java.util.ArrayList<java.lang.Integer>();\\n+\\t}}\\n\\\\ No newline at end of file\\n\\n"}]}