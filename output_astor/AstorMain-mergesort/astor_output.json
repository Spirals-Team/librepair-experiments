{"general":{"NR_RIGHT_COMPILATIONS":13,"OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":null,"NR_GENERATIONS":13,"TOTAL_TIME":123.756,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"26","VALIDATION":"|true|0|13|[]|","patchhunks":[{"LOCATION":"java_programs.MERGESORT","PATH":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/396804372\\\/output_astor\\\/AstorMain-mergesort\\\/src\\\/default\\\/java_programs\\\/MERGESORT.java","INGREDIENT_SCOPE":"-","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"(_ArrayList_0.size()) \\\/ 2","PATCH_HUNK_TYPE":"CtBinaryOperatorImpl|CtBinaryOperatorImpl","ORIGINAL_CODE":"(arr.size())","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBinaryOperatorImpl","OPERATOR":"ExpressionReplaceOperator","MODIFIED_FILE_PATH":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/396804372\\\/.\\\/output_astor\\\/AstorMain-mergesort\\\/\\\/src\\\/\\\/variant-26_f\\\/java_programs\\\/MERGESORT.java","LINE":"38","MP_RANKING":"13","PATCH_HUNK_CODE":"((arr.size()) \\\/ 2)"}],"TIME":"123","GENERATION":"13","FOLDER_SOLUTION_CODE":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/396804372\\\/.\\\/output_astor\\\/AstorMain-mergesort\\\/\\\/bin\\\/\\\/variant-26","PATCH_DIFF_FORMATTED":"--- java_programs\\\/MERGESORT.java\\n+++ java_programs\\\/MERGESORT.java\\n@@ -20,7 +20,7 @@\\n \\t}\\n \\n \\tpublic static java.util.ArrayList<java.lang.Integer> mergesort(java.util.ArrayList<java.lang.Integer> arr) {\\n-\\t\\tif ((arr.size()) == 0) {\\n+\\t\\tif (((arr.size()) \\\/ 2) == 0) {\\n \\t\\t\\treturn arr;\\n \\t\\t}else {\\n \\t\\t\\tint middle = (arr.size()) \\\/ 2;\\n\\n","PATCH_DIFF_ORIG":"--- java_programs\\\/MERGESORT.java\\n+++ java_programs\\\/MERGESORT.java\\n@@ -35,10 +35,10 @@\\n \\t}\\n \\n \\tpublic static java.util.ArrayList<java.lang.Integer> mergesort(java.util.ArrayList<java.lang.Integer> arr) {\\n-\\t\\tif ((arr.size()) == 0) {\\n-\\t\\t\\treturn arr;\\n-\\t\\t}else {\\n-\\t\\t\\tint middle = (arr.size()) \\\/ 2;\\n+\\t\\tif (\\n+\\n+\\n+\\t\\t((arr.size()) \\\/ 2) == 0) { \\t\\t\\treturn arr;}else { \\t\\t\\tint middle = (arr.size()) \\\/ 2;\\n \\t\\t\\tjava.util.ArrayList<java.lang.Integer> left = new java.util.ArrayList<java.lang.Integer>(100);\\n \\t\\t\\tleft.addAll(arr.subList(0, middle));\\n \\t\\t\\tleft = java_programs.MERGESORT.mergesort(left);\\n\\n"}]}