{"general":{"NR_RIGHT_COMPILATIONS":6,"NR_ERRONEOUS_VARIANCES":null,"OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":null,"NR_GENERATIONS":null,"TOTAL_TIME":4.839,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"7","VALIDATION":"|true|0|13|[]|","patchhunks":[{"LOCATION":"java_programs.QUICKSORT","PATH":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/421464781\\\/output_astor\\\/AstorMain-quicksort\\\/src\\\/default\\\/java_programs\\\/QUICKSORT.java","INGREDIENT_SCOPE":"-","ORIGINAL_CODE":"x < pivot","BUGGY_CODE_TYPE":"CtBinaryOperatorImpl|CtIfImpl","OPERATOR":"IfExpresionMutOp","MODIFIED_FILE_PATH":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/421464781\\\/.\\\/output_astor\\\/AstorMain-quicksort\\\/\\\/src\\\/\\\/variant-7_f\\\/java_programs\\\/QUICKSORT.java","LINE":"24","SUSPICIOUNESS":"0.277","MP_RANKING":"1","PATCH_HUNK_CODE":"x <= pivot","PATCH_HUNK_TYPE":"CtBinaryOperatorImpl|CtIfImpl"}],"TIME":"3","GENERATION":"1","FOLDER_SOLUTION_CODE":"\\\/root\\\/workspace\\\/SpoonLabs\\\/astor\\\/421464781\\\/.\\\/output_astor\\\/AstorMain-quicksort\\\/\\\/bin\\\/\\\/variant-7","PATCH_DIFF_ORIG":"--- java_programs\\\/QUICKSORT.java\\n+++ java_programs\\\/QUICKSORT.java\\n@@ -1,39 +1,38 @@\\n package java_programs;\\n-import java.util.*;\\n \\n-\\\/*\\n- * To change this template, choose Tools | Templates\\n- * and open the template in the editor.\\n- *\\\/\\n-\\n-\\\/**\\n- *\\n- * @author derricklin\\n- *\\\/\\n+\\n public class QUICKSORT {\\n-    public static ArrayList<Integer> quicksort(ArrayList<Integer> arr) {\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\tpublic static java.util.ArrayList<java.lang.Integer> quicksort(java.util.ArrayList<java.lang.Integer> arr) {\\n         if (arr.isEmpty()) {\\n-            return new ArrayList<Integer>();\\n+\\t\\t\\treturn new java.util.ArrayList<java.lang.Integer>();\\n         }\\n \\n-        Integer pivot = arr.get(0);\\n-        ArrayList<Integer> lesser = new ArrayList<Integer>();\\n-        ArrayList<Integer> greater = new ArrayList<Integer>();\\n+\\t\\tjava.lang.Integer pivot = arr.get(0);\\n+\\t\\tjava.util.ArrayList<java.lang.Integer> lesser = new java.util.ArrayList<java.lang.Integer>();\\n+\\t\\tjava.util.ArrayList<java.lang.Integer> greater = new java.util.ArrayList<java.lang.Integer>();\\n \\n-        for (Integer x : arr.subList(1, arr.size())) {\\n-            if (x < pivot) {\\n+\\t\\tfor (java.lang.Integer x : arr.subList(1, arr.size())) {\\n+\\t\\t\\tif (x <= pivot) {\\n                 lesser.add(x);\\n             } else if (x > pivot) {\\n                 greater.add(x);\\n             }\\n         }\\n-        ArrayList<Integer> middle = new ArrayList<Integer>();\\n+\\t\\tjava.util.ArrayList<java.lang.Integer> middle = new java.util.ArrayList<java.lang.Integer>();\\n         middle.add(pivot);\\n-        lesser = quicksort(lesser);\\n-        greater = quicksort(greater);\\n+\\t\\tlesser = java_programs.QUICKSORT.quicksort(lesser);\\n+\\t\\tgreater = java_programs.QUICKSORT.quicksort(greater);\\n         middle.addAll(greater);\\n         lesser.addAll(middle);\\n         return lesser;\\n \\n-    }\\n-}\\n+\\t}}\\n\\\\ No newline at end of file\\n\\n"}]}