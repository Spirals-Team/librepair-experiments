--- java_programs/QUICKSORT.java
+++ java_programs/QUICKSORT.java
@@ -1,39 +1,38 @@
 package java_programs;
-import java.util.*;
 
-/*
- * To change this template, choose Tools | Templates
- * and open the template in the editor.
- */
-
-/**
- *
- * @author derricklin
- */
+
 public class QUICKSORT {
-    public static ArrayList<Integer> quicksort(ArrayList<Integer> arr) {
+
+
+
+
+
+
+
+
+
+	public static java.util.ArrayList<java.lang.Integer> quicksort(java.util.ArrayList<java.lang.Integer> arr) {
         if (arr.isEmpty()) {
-            return new ArrayList<Integer>();
+			return new java.util.ArrayList<java.lang.Integer>();
         }
 
-        Integer pivot = arr.get(0);
-        ArrayList<Integer> lesser = new ArrayList<Integer>();
-        ArrayList<Integer> greater = new ArrayList<Integer>();
+		java.lang.Integer pivot = arr.get(0);
+		java.util.ArrayList<java.lang.Integer> lesser = new java.util.ArrayList<java.lang.Integer>();
+		java.util.ArrayList<java.lang.Integer> greater = new java.util.ArrayList<java.lang.Integer>();
 
-        for (Integer x : arr.subList(1, arr.size())) {
-            if (x < pivot) {
+		for (java.lang.Integer x : arr.subList(1, arr.size())) {
+			if (x <= pivot) {
                 lesser.add(x);
             } else if (x > pivot) {
                 greater.add(x);
             }
         }
-        ArrayList<Integer> middle = new ArrayList<Integer>();
+		java.util.ArrayList<java.lang.Integer> middle = new java.util.ArrayList<java.lang.Integer>();
         middle.add(pivot);
-        lesser = quicksort(lesser);
-        greater = quicksort(greater);
+		lesser = java_programs.QUICKSORT.quicksort(lesser);
+		greater = java_programs.QUICKSORT.quicksort(greater);
         middle.addAll(greater);
         lesser.addAll(middle);
         return lesser;
 
-    }
-}
+	}}
\ No newline at end of file

