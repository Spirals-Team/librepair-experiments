<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="22" passed="22">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="2959" started-at="2018-05-30T12:45:11Z" finished-at="2018-05-30T12:45:14Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="2959" started-at="2018-05-30T12:45:11Z" finished-at="2018-05-30T12:45:14Z">
      <class name="org.molgenis.data.importer.emx.IntermediateParseResultsTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.emx.IntermediateParseResultsTest@3c60c681]" name="initMocks" is-config="true" duration-ms="124" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.emx.IntermediateParseResultsTest@3c60c681]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testAddEntityType()[pri:0, instance:org.molgenis.data.importer.emx.IntermediateParseResultsTest@3c60c681]" name="testAddEntityType" duration-ms="163" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEntityType -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.emx.IntermediateParseResultsTest@3c60c681]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- org.molgenis.data.importer.emx.IntermediateParseResultsTest -->
      <class name="org.molgenis.data.importer.DataPersisterImplTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="initMocks" is-config="true" duration-ms="56" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="setUpBeforeMethod" is-config="true" duration-ms="25" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="tearDownAfterMethod" is-config="true" duration-ms="2" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testGenericDataPersisterImpl()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="testGenericDataPersisterImpl" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at java.util.Objects.requireNonNull(Objects.java:203)
	at org.molgenis.data.importer.DataPersisterImpl.<init>(DataPersisterImpl.java:39)
	at org.molgenis.data.importer.DataPersisterImplTest.testGenericDataPersisterImpl(DataPersisterImplTest.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenericDataPersisterImpl -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testPersistMetaAddDataAdd()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="testPersistMetaAddDataAdd" duration-ms="38" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPersistMetaAddDataAdd -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testPersistMetaAddDataAddMappedByAttributes()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="testPersistMetaAddDataAddMappedByAttributes" duration-ms="7" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPersistMetaAddDataAddMappedByAttributes -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testPersistMetaNoneDataAdd()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="testPersistMetaNoneDataAdd" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPersistMetaNoneDataAdd -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testPersistMetaNoneDataAddAbstractEntityType()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="testPersistMetaNoneDataAddAbstractEntityType" duration-ms="3" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Abstract entity type 'Entity type #0' with id 'entityTypeId0' cannot contain entities]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Abstract entity type 'Entity type #0' with id 'entityTypeId0' cannot contain entities
	at org.molgenis.data.importer.DataPersisterImpl.lambda$persistFirstPass$0(DataPersisterImpl.java:86)
	at java.util.Arrays$ArrayList.forEach(Arrays.java:3880)
	at org.molgenis.data.importer.DataPersisterImpl.persistFirstPass(DataPersisterImpl.java:78)
	at org.molgenis.data.importer.DataPersisterImpl.persist(DataPersisterImpl.java:51)
	at org.molgenis.data.importer.DataPersisterImplTest.testPersistMetaNoneDataAddAbstractEntityType(DataPersisterImplTest.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPersistMetaNoneDataAddAbstractEntityType -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testPersistMetaNoneDataUpdate()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="testPersistMetaNoneDataUpdate" duration-ms="2" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPersistMetaNoneDataUpdate -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testPersistMetaNoneDataUpsert()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="testPersistMetaNoneDataUpsert" duration-ms="12" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPersistMetaNoneDataUpsert -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testPersistMetaUpdateDataAdd()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="testPersistMetaUpdateDataAdd" duration-ms="80" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPersistMetaUpdateDataAdd -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testPersistMetaUpsertDataAdd()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="testPersistMetaUpsertDataAdd" duration-ms="5" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPersistMetaUpsertDataAdd -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@3e151e1f]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- org.molgenis.data.importer.DataPersisterImplTest -->
      <class name="org.molgenis.data.importer.ImportRunTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="58" started-at="2018-05-30T14:45:13Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeClass()[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="abstractMolgenisSpringTestBeforeClass" is-config="true" duration-ms="11" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeClass -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="setUp" is-config="true" duration-ms="11" started-at="2018-05-30T14:45:14Z" finished-at="2018-05-30T14:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:14Z" finished-at="2018-05-30T14:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:14Z" finished-at="2018-05-30T14:45:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.importer.ImportRunTest.testGetNotifyDefaultFalse() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testGetNotifyDefaultFalse()[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="testGetNotifyDefaultFalse" duration-ms="1" started-at="2018-05-30T14:45:14Z" finished-at="2018-05-30T14:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNotifyDefaultFalse -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:14Z" finished-at="2018-05-30T14:45:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.importer.ImportRunTest.testGetNotifyDefaultFalse() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:14Z" finished-at="2018-05-30T14:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:14Z" finished-at="2018-05-30T14:45:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.importer.ImportRunTest.testSetNotify() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:14Z" finished-at="2018-05-30T14:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="testSetNotify()[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="testSetNotify" duration-ms="1" started-at="2018-05-30T14:45:14Z" finished-at="2018-05-30T14:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetNotify -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:14Z" finished-at="2018-05-30T14:45:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.importer.ImportRunTest.testSetNotify() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:14Z" finished-at="2018-05-30T14:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.molgenis.data.importer.ImportRunTest@1b3a9ef4]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:14Z" finished-at="2018-05-30T14:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.molgenis.data.importer.ImportRunTest -->
      <class name="org.molgenis.data.importer.emx.EmxDataProviderTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="initMocks" is-config="true" duration-ms="32" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGetEntities()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="testGetEntities" duration-ms="84" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntities -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGetEntitiesAlternativeEntityTypeId()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="testGetEntitiesAlternativeEntityTypeId" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntitiesAlternativeEntityTypeId -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testGetEntitiesAlternativeEntityTypeIdUnknownRepository()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="testGetEntitiesAlternativeEntityTypeIdUnknownRepository" duration-ms="5" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <exception class="org.molgenis.data.UnknownRepositoryException">
            <message>
              <![CDATA[repository:EntityTypeId]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.UnknownRepositoryException: FAILED TO FORMAT LOCALIZED MESSAGE FOR ERROR CODE D05.%nFallback message: repository:EntityTypeId
	at org.molgenis.data.importer.emx.EmxDataProvider.getEntities(EmxDataProvider.java:65)
	at org.molgenis.data.importer.emx.EmxDataProviderTest.testGetEntitiesAlternativeEntityTypeIdUnknownRepository(EmxDataProviderTest.java:157)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.UnknownRepositoryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntitiesAlternativeEntityTypeIdUnknownRepository -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGetEntitiesUnknownRepository()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="testGetEntitiesUnknownRepository" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <exception class="org.molgenis.data.UnknownRepositoryException">
            <message>
              <![CDATA[repository:EntityTypeId]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.UnknownRepositoryException: FAILED TO FORMAT LOCALIZED MESSAGE FOR ERROR CODE D05.%nFallback message: repository:EntityTypeId
	at org.molgenis.data.importer.emx.EmxDataProvider.getEntities(EmxDataProvider.java:61)
	at org.molgenis.data.importer.emx.EmxDataProviderTest.testGetEntitiesUnknownRepository(EmxDataProviderTest.java:144)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.UnknownRepositoryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntitiesUnknownRepository -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testGetEntityTypes()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="testGetEntityTypes" duration-ms="29" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntityTypes -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testHasEntitiesAlternativeEntityTypeIdFalse()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="testHasEntitiesAlternativeEntityTypeIdFalse" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasEntitiesAlternativeEntityTypeIdFalse -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testHasEntitiesAlternativeEntityTypeIdTrue()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="testHasEntitiesAlternativeEntityTypeIdTrue" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasEntitiesAlternativeEntityTypeIdTrue -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testHasEntitiesFalse()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="testHasEntitiesFalse" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasEntitiesFalse -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testHasEntitiesTrue()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="testHasEntitiesTrue" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasEntitiesTrue -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.importer.emx.EmxDataProviderTest@6def0632]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- org.molgenis.data.importer.emx.EmxDataProviderTest -->
      <class name="org.molgenis.data.importer.ImportRunServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.molgenis.data.importer.ImportRunServiceTest@34aa8b61]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="15" started-at="2018-05-30T14:45:11Z" finished-at="2018-05-30T14:45:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.molgenis.data.importer.ImportRunServiceTest@34aa8b61]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="1817" started-at="2018-05-30T14:45:11Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-05-30T14:45:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeClass()[pri:0, instance:org.molgenis.data.importer.ImportRunServiceTest@34aa8b61]" name="abstractMolgenisSpringTestBeforeClass" is-config="true" duration-ms="85" started-at="2018-05-30T14:45:12Z" finished-at="2018-05-30T14:45:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.importer.ImportRunServiceTest@34aa8b61]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-05-30T14:45:12Z" finished-at="2018-05-30T14:45:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.importer.ImportRunServiceTest.testCreateEnglishMailText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.importer.ImportRunServiceTest@34aa8b61]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="161" started-at="2018-05-30T14:45:12Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.importer.ImportRunServiceTest@34aa8b61]" name="setUp" is-config="true" duration-ms="1" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testCreateEnglishMailText()[pri:0, instance:org.molgenis.data.importer.ImportRunServiceTest@34aa8b61]" name="testCreateEnglishMailText" duration-ms="53" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateEnglishMailText -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.importer.ImportRunServiceTest@34aa8b61]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="5" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.importer.ImportRunServiceTest@34aa8b61]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="3" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.importer.ImportRunServiceTest.testCreateEnglishMailText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.molgenis.data.importer.ImportRunServiceTest@34aa8b61]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-05-30T14:45:13Z" finished-at="2018-05-30T14:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.molgenis.data.importer.ImportRunServiceTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
