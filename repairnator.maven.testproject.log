[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building tagged-text-tokenizer 0.2
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ tagged-text-tokenizer ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ tagged-text-tokenizer ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ tagged-text-tokenizer ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /root/workspace/GrazingScientist/TaggedTextTokenizer/393552781/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ tagged-text-tokenizer ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ tagged-text-tokenizer ---
[INFO] Surefire report directory: /root/workspace/GrazingScientist/TaggedTextTokenizer/393552781/target/surefire-reports
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.pom (3 KB at 5.4 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.12.4/surefire-providers-2.12.4.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.12.4/surefire-providers-2.12.4.pom (3 KB at 127.4 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.jar
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.jar (37 KB at 600.9 KB/sec)

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running de.unifrankfurt.taggedtexttokenizer.TestTaggedTextTokenizerFactory
Creating single node with text : "For"
Open Position: [Text] 0 - [Reader] 35
Open Tag: For
Token: For
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "example"
Open Position: [Text] 4 - [Reader] 35
Open Tag: example
Token: example,
Special Characters BEFORE Token: 
Special Characters AFTER Token: ,
Creating single node with text : "the"
Open Position: [Text] 13 - [Reader] 35
Open Tag: the
Token: the
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "Costa"
Open Position: [Text] 17 - [Reader] 35
Open Tag: Costa
Token: Costa
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "Rican"
Open Position: [Text] 23 - [Reader] 35
Open Tag: Rican
Token: Rican
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Open Position: [Text] 29 - [Reader] 131
Open Tag: tp:taxon-name-part
Added Attribute taxon-name-part-type with the value genus to tp:taxon-name-part
Added Attribute reg with the value Cyclocephala to tp:taxon-name-part
Creating single node with text : "C"
Open Position: [Text] 29 - [Reader] 135
Open Tag: C
Token: C.
Special Characters BEFORE Token: 
Special Characters AFTER Token: .
Close Tag: tp:taxon-name-part
Open Position: [Text] 32 - [Reader] 218
Open Tag: tp:taxon-name-part
Added Attribute taxon-name-part-type with the value species to tp:taxon-name-part
Added Attribute reg with the value unamas to tp:taxon-name-part
Creating single node with text : "unamas"
Open Position: [Text] 32 - [Reader] 226
Open Tag: unamas
Token: unamas
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: tp:taxon-name-part
Close Tag: tp:taxon-name
Close Tag: italic
Creating single node with text : "Ratcliffe"
Open Position: [Text] 39 - [Reader] 375
Open Tag: Ratcliffe
Token: Ratcliffe
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "Spanish"
Open Position: [Text] 50 - [Reader] 375
Open Tag: Spanish
Token: (Spanish
Special Characters BEFORE Token: (
Special Characters AFTER Token: 
Creating single node with text : "una"
Open Position: [Text] 59 - [Reader] 375
Open Tag: una
Token: "una
Special Characters BEFORE Token: "
Special Characters AFTER Token: 
Creating single node with text : "mas"
Open Position: [Text] 63 - [Reader] 375
Open Tag: mas
Token: mas")
Special Characters BEFORE Token: 
Special Characters AFTER Token: ")
Creating single node with text : "was"
Open Position: [Text] 69 - [Reader] 375
Open Tag: was
Token: was
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "named"
Open Position: [Text] 73 - [Reader] 375
Open Tag: named
Token: named
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "after"
Open Position: [Text] 79 - [Reader] 375
Open Tag: after
Token: after
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "the"
Open Position: [Text] 85 - [Reader] 375
Open Tag: the
Token: the
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "overwhelming"
Open Position: [Text] 89 - [Reader] 375
Open Tag: overwhelming
Token: overwhelming
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "feeling"
Open Position: [Text] 102 - [Reader] 375
Open Tag: feeling
Token: feeling
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "one"
Open Position: [Text] 110 - [Reader] 375
Open Tag: one
Token: one
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "gets"
Open Position: [Text] 114 - [Reader] 375
Open Tag: gets
Token: gets
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "after"
Open Position: [Text] 119 - [Reader] 375
Open Tag: after
Token: after
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "the"
Open Position: [Text] 125 - [Reader] 375
Open Tag: the
Token: the
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "discovery"
Open Position: [Text] 129 - [Reader] 375
Open Tag: discovery
Token: discovery
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "of"
Open Position: [Text] 139 - [Reader] 375
Open Tag: of
Token: of
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "yet"
Open Position: [Text] 142 - [Reader] 395
Open Tag: yet
Token: yet
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "another"
Open Position: [Text] 146 - [Reader] 395
Open Tag: another
Token: another
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: italic
Creating single node with text : "new"
Open Position: [Text] 154 - [Reader] 408
Open Tag: new
Token: new
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Open Position: [Text] 158 - [Reader] 498
Open Tag: tp:taxon-name-part
Added Attribute taxon-name-part-type with the value genus to tp:taxon-name-part
Added Attribute reg with the value Cyclocephala to tp:taxon-name-part
Creating single node with text : "Cyclocephala"
Open Position: [Text] 158 - [Reader] 512
Open Tag: Cyclocephala
Token: Cyclocephala
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: tp:taxon-name-part
Close Tag: tp:taxon-name
Close Tag: italic
Creating single node with text : "species"
Open Position: [Text] 171 - [Reader] 598
Open Tag: species
Token: species,
Special Characters BEFORE Token: 
Special Characters AFTER Token: ,
Creating single node with text : "epitomized"
Open Position: [Text] 180 - [Reader] 598
Open Tag: epitomized
Token: epitomized
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "by"
Open Position: [Text] 191 - [Reader] 598
Open Tag: by
Token: by
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "the"
Open Position: [Text] 194 - [Reader] 598
Open Tag: the
Token: the
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "species"
Open Position: [Text] 198 - [Reader] 598
Open Tag: species
Token: species
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "name"
Open Position: [Text] 206 - [Reader] 598
Open Tag: name
Token: name
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Open Position: [Text] 211 - [Reader] 688
Open Tag: tp:taxon-name-part
Added Attribute taxon-name-part-type with the value genus to tp:taxon-name-part
Added Attribute reg with the value Cyclocephala to tp:taxon-name-part
Creating single node with text : "C"
Open Position: [Text] 211 - [Reader] 692
Open Tag: C
Token: C.
Special Characters BEFORE Token: 
Special Characters AFTER Token: .
Close Tag: tp:taxon-name-part
Open Position: [Text] 214 - [Reader] 782
Open Tag: tp:taxon-name-part
Added Attribute taxon-name-part-type with the value species to tp:taxon-name-part
Added Attribute reg with the value nodanotherwon to tp:taxon-name-part
Creating single node with text : "nodanotherwon"
Open Position: [Text] 214 - [Reader] 797
Open Tag: nodanotherwon
Token: nodanotherwon
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: tp:taxon-name-part
Close Tag: tp:taxon-name
Close Tag: italic
Creating single node with text : "Ratcliffe"
Open Position: [Text] 228 - [Reader] 855
Open Tag: Ratcliffe
Token: Ratcliffe.
Special Characters BEFORE Token: 
Special Characters AFTER Token: .
Close Tag: doc
Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.532 sec <<< FAILURE!
de.unifrankfurt.taggedtexttokenizer.TestTaggedTextTokenizerFactory  Time elapsed: 0.158 sec  <<< FAILURE!
java.lang.AssertionError: The test or suite printed 15708 bytes to stdout and stderr, even though the limit was set to 8192 bytes. Increase the limit with @Limit, ignore it completely with @SuppressSysoutChecks or run with -Dtests.verbose=true
	at __randomizedtesting.SeedInfo.seed([C762F0037DD998FB]:0)
	at org.apache.lucene.util.TestRuleLimitSysouts.afterIfSuccessful(TestRuleLimitSysouts.java:211)
	at com.carrotsearch.randomizedtesting.rules.TestRuleAdapter$1.afterIfSuccessful(TestRuleAdapter.java:36)
	at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:37)
	at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)
	at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)
	at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)
	at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)
	at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)
	at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)
	at java.lang.Thread.run(Thread.java:745)

Running de.unifrankfurt.taggedtexttokenizer.TestTaggedTextTokenizer
Creating single node with text : "The"
Open Position: [Text] 0 - [Reader] 22
Open Tag: The
Token: The
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "tree"
Open Position: [Text] 4 - [Reader] 22
Open Tag: tree
Token: tree
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "Fagus"
Open Position: [Text] 9 - [Reader] 71
Open Tag: Fagus
Token: Fagus
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: genus
Creating single node with text : "sylvatica"
Open Position: [Text] 15 - [Reader] 110
Open Tag: sylvatica
Token: sylvatica
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: taxon
Close Tag: species
Creating single node with text : "could"
Open Position: [Text] 25 - [Reader] 153
Open Tag: could
Token: could
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "not"
Open Position: [Text] 31 - [Reader] 153
Open Tag: not
Token: not
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "be"
Open Position: [Text] 35 - [Reader] 153
Open Tag: be
Token: be
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "found"
Open Position: [Text] 38 - [Reader] 153
Open Tag: found
Token: found
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "in"
Open Position: [Text] 44 - [Reader] 153
Open Tag: in
Token: in
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "London"
Open Position: [Text] 47 - [Reader] 185
Open Tag: London
Token: London
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: location
Creating single node with text : "but"
Open Position: [Text] 55 - [Reader] 210
Open Tag: but
Token: but
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "in"
Open Position: [Text] 59 - [Reader] 210
Open Tag: in
Token: in
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "Frankfurt"
Open Position: [Text] 62 - [Reader] 244
Open Tag: Frankfurt
Token: Frankfurt
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: location
Close Tag: doc
Close Tag: doc
Creating single node with text : "The"
Open Position: [Text] 0 - [Reader] 15
Open Tag: The
Token: The
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "tree"
Open Position: [Text] 4 - [Reader] 15
Open Tag: tree
Token: tree
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Open Position: [Text] 9 - [Reader] 36
Open Tag: species
Added Attribute uri with the value 720243 to species
Open Position: [Text] 9 - [Reader] 56
Open Tag: genus
Added Attribute uri with the value fag394 to genus
Creating single node with text : "Fagus"
Open Position: [Text] 9 - [Reader] 63
Open Tag: Fagus
Token: Fagus
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: genus
Open Position: [Text] 15 - [Reader] 156
Open Tag: taxon
Added Attribute uri with the value spec9574 to taxon
Creating single node with text : "sylvatica"
Open Position: [Text] 15 - [Reader] 167
Open Tag: sylvatica
Token: sylvatica
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: taxon
Close Tag: species
Creating single node with text : "could"
Open Position: [Text] 25 - [Reader] 207
Open Tag: could
Token: could
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "not"
Open Position: [Text] 31 - [Reader] 207
Open Tag: not
Token: not
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "be"
Open Position: [Text] 35 - [Reader] 207
Open Tag: be
Token: be
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "found"
Open Position: [Text] 38 - [Reader] 207
Open Tag: found
Token: found
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "in"
Open Position: [Text] 44 - [Reader] 207
Open Tag: in
Token: in
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Open Position: [Text] 47 - [Reader] 231
Open Tag: location
Added Attribute uri with the value loc67567 to location
Creating single node with text : "London"
Open Position: [Text] 47 - [Reader] 239
Open Tag: London
Token: London
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: location
Creating single node with text : "but"
Open Position: [Text] 55 - [Reader] 258
Open Tag: but
Token: but
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "in"
Open Position: [Text] 59 - [Reader] 258
Open Tag: in
Token: in
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Open Position: [Text] 62 - [Reader] 281
Open Tag: location
Added Attribute uri with the value loc7g68 to location
Creating single node with text : "Frankfurt"
Open Position: [Text] 62 - [Reader] 292
Open Tag: Frankfurt
Token: Frankfurt
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: location
Close Tag: doc
Creating single node with text : "Reynolds"
Open Position: [Text] 0 - [Reader] 15
Open Tag: Reynolds
Token: Reynolds
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "Simons"
Open Position: [Text] 10 - [Reader] 28
Open Tag: Simons
Token: Simons
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: doc
Creating single node with text : "The"
Open Position: [Text] 0 - [Reader] 20
Open Tag: The
Token: The
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "tree"
Open Position: [Text] 4 - [Reader] 20
Open Tag: tree
Token: tree
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Open Position: [Text] 9 - [Reader] 41
Open Tag: species
Added Attribute uri with the value 720243 to species
Open Position: [Text] 9 - [Reader] 61
Open Tag: genus
Added Attribute uri with the value fag394 to genus
Creating single node with text : "Fagus"
Open Position: [Text] 9 - [Reader] 66
Open Tag: Fagus
Token: Fagus
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: genus
Open Position: [Text] 15 - [Reader] 97
Open Tag: taxon
Added Attribute uri with the value spec9574 to taxon
Creating single node with text : "sylvatica"
Open Position: [Text] 15 - [Reader] 108
Open Tag: sylvatica
Token: sylvatica
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: taxon
Close Tag: species
Creating single node with text : "could"
Open Position: [Text] 25 - [Reader] 148
Open Tag: could
Token: could
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "not"
Open Position: [Text] 31 - [Reader] 148
Open Tag: not
Token: not
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "be"
Open Position: [Text] 35 - [Reader] 148
Open Tag: be
Token: be
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "found"
Open Position: [Text] 38 - [Reader] 148
Open Tag: found
Token: found
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "in"
Open Position: [Text] 44 - [Reader] 148
Open Tag: in
Token: in
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Open Position: [Text] 47 - [Reader] 172
Open Tag: location
Added Attribute uri with the value loc67567 to location
Creating single node with text : "London"
Open Position: [Text] 47 - [Reader] 180
Open Tag: London
Token: London
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: location
Creating single node with text : "but"
Open Position: [Text] 55 - [Reader] 199
Open Tag: but
Token: but
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "in"
Open Position: [Text] 59 - [Reader] 199
Open Tag: in
Token: in
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Open Position: [Text] 62 - [Reader] 222
Open Tag: location
Added Attribute uri with the value loc7g68 to location
Creating single node with text : "Frankfurt"
Open Position: [Text] 62 - [Reader] 233
Open Tag: Frankfurt
Token: Frankfurt
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: location
Close Tag: doc
Close Tag: doc
Creating single node with text : "The"
Open Position: [Text] 0 - [Reader] 20
Open Tag: The
Token: The
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "tree"
Open Position: [Text] 4 - [Reader] 20
Open Tag: tree
Token: tree
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "Fagus"
Open Position: [Text] 9 - [Reader] 66
Open Tag: Fagus
Token: Fagus
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: genus
Creating single node with text : "sylvatica"
Open Position: [Text] 15 - [Reader] 108
Open Tag: sylvatica
Token: sylvatica
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: taxon
Close Tag: species
Creating single node with text : "could"
Open Position: [Text] 25 - [Reader] 148
Open Tag: could
Token: could
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "not"
Open Position: [Text] 31 - [Reader] 148
Open Tag: not
Token: not
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "be"
Open Position: [Text] 35 - [Reader] 148
Open Tag: be
Token: be
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "found"
Open Position: [Text] 38 - [Reader] 148
Open Tag: found
Token: found
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "in"
Open Position: [Text] 44 - [Reader] 148
Open Tag: in
Token: in
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "London"
Open Position: [Text] 47 - [Reader] 180
Open Tag: London
Token: London
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: location
Creating single node with text : "but"
Open Position: [Text] 55 - [Reader] 199
Open Tag: but
Token: but
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "in"
Open Position: [Text] 59 - [Reader] 199
Open Tag: in
Token: in
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Creating single node with text : "Frankfurt"
Open Position: [Text] 62 - [Reader] 233
Open Tag: Frankfurt
Token: Frankfurt
Special Characters BEFORE Token: 
Special Characters AFTER Token: 
Close Tag: location
Close Tag: doc
Close Tag: doc
Tests run: 6, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.09 sec <<< FAILURE!
de.unifrankfurt.taggedtexttokenizer.TestTaggedTextTokenizer  Time elapsed: 0.015 sec  <<< FAILURE!
java.lang.AssertionError: The test or suite printed 22108 bytes to stdout and stderr, even though the limit was set to 8192 bytes. Increase the limit with @Limit, ignore it completely with @SuppressSysoutChecks or run with -Dtests.verbose=true
	at __randomizedtesting.SeedInfo.seed([F5E5BC2988EF6068]:0)
	at org.apache.lucene.util.TestRuleLimitSysouts.afterIfSuccessful(TestRuleLimitSysouts.java:211)
	at com.carrotsearch.randomizedtesting.rules.TestRuleAdapter$1.afterIfSuccessful(TestRuleAdapter.java:36)
	at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:37)
	at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)
	at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)
	at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)
	at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)
	at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)
	at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)
	at java.lang.Thread.run(Thread.java:745)


Results :

Failed tests:   de.unifrankfurt.taggedtexttokenizer.TestTaggedTextTokenizerFactory: The test or suite printed 15708 bytes to stdout and stderr, even though the limit was set to 8192 bytes. Increase the limit with @Limit, ignore it completely with @SuppressSysoutChecks or run with -Dtests.verbose=true
  de.unifrankfurt.taggedtexttokenizer.TestTaggedTextTokenizer: The test or suite printed 22108 bytes to stdout and stderr, even though the limit was set to 8192 bytes. Increase the limit with @Limit, ignore it completely with @SuppressSysoutChecks or run with -Dtests.verbose=true

Tests run: 8, Failures: 2, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2.663 s
[INFO] Finished at: 2018-06-18T11:39:05+02:00
[INFO] Final Memory: 21M/840M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test (default-test) on project tagged-text-tokenizer: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/GrazingScientist/TaggedTextTokenizer/393552781/target/surefire-reports for the individual test results.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
