[INFO] BuildTimeEventSpy is registered.
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] presto-root
[INFO] presto-spi
[INFO] presto-plugin-toolkit
[INFO] presto-client
[INFO] presto-parser
[INFO] presto-array
[INFO] presto-bytecode
[INFO] presto-matching
[INFO] presto-tpch
[INFO] presto-main
[INFO] presto-resource-group-managers
[INFO] presto-tests
[INFO] presto-atop
[INFO] presto-jmx
[INFO] presto-record-decoder
[INFO] presto-kafka
[INFO] presto-redis
[INFO] presto-accumulo
[INFO] presto-cassandra
[INFO] presto-blackhole
[INFO] presto-memory
[INFO] presto-orc
[INFO] presto-rcfile
[INFO] presto-benchmark
[INFO] presto-hive
[INFO] presto-hive-hadoop2
[INFO] presto-teradata-functions
[INFO] presto-example-http
[INFO] presto-local-file
[INFO] presto-tpcds
[INFO] presto-raptor
[INFO] presto-base-jdbc
[INFO] presto-mysql
[INFO] presto-postgresql
[INFO] presto-sqlserver
[INFO] presto-mongodb
[INFO] presto-ml
[INFO] presto-jdbc
[INFO] presto-cli
[INFO] presto-product-tests
[INFO] presto-benchmark-driver
[INFO] presto-thrift-connector-api
[INFO] presto-thrift-testing-server
[INFO] presto-thrift-connector
[INFO] presto-server
[INFO] presto-server-rpm
[INFO] presto-docs
[INFO] presto-verifier
[INFO] presto-testing-server-launcher
[INFO] presto-benchto-benchmarks
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building presto-root 0.183-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-checkstyle-plugin:2.17:check (default) @ presto-root ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (default) @ presto-root ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ presto-root ---
[INFO] 
[INFO] --- maven-dependency-versions-check-plugin:2.0.4:check (default) @ presto-root ---
[INFO] Adding exclusion 'com.google.inject:guice 4.0-beta5 vs. 4.0'
[INFO] Adding exclusion 'com.google.inject.extensions:guice-multibindings 4.0-beta5 vs. 4.0'
[INFO] Checking dependency versions
[INFO] 
[INFO] --- license-maven-plugin:2.3:check (default) @ presto-root ---
[INFO] Checking licenses...
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ presto-root ---
[INFO] Skipping JaCoCo execution because property jacoco.skip is set.
[INFO] argLine set to empty
[INFO] 
[INFO] --- git-commit-id-plugin:2.1.13:revision (default) @ presto-root ---
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-only (default) @ presto-root ---
[INFO] Skipping pom project
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-duplicate (default) @ presto-root ---
[INFO] No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-dep-mgt (default) @ presto-root ---
[INFO] Found Resolved Dependency / DependencyManagement mismatches:
[INFO] 	Ignoring Direct Dependencies.
[INFO]    None
[INFO] 
[INFO] --- maven-duplicate-finder-plugin:1.0.6:check (default) @ presto-root ---
[INFO] Checking compile classpath
[INFO] Checking runtime classpath
[INFO] Checking test classpath
[INFO] 
[INFO] --- modernizer-maven-plugin:1.5.0:modernizer (modernizer) @ presto-root ---
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building presto-spi 0.183-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-checkstyle-plugin:2.17:check (default) @ presto-spi ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (default) @ presto-spi ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ presto-spi ---
[INFO] 
[INFO] --- maven-dependency-versions-check-plugin:2.0.4:check (default) @ presto-spi ---
[INFO] Adding exclusion 'com.google.inject:guice 4.0-beta5 vs. 4.0'
[INFO] Adding exclusion 'com.google.inject.extensions:guice-multibindings 4.0-beta5 vs. 4.0'
[INFO] Checking dependency versions
[INFO] 
[INFO] --- license-maven-plugin:2.3:check (default) @ presto-spi ---
[INFO] Checking licenses...
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ presto-spi ---
[INFO] Skipping JaCoCo execution because property jacoco.skip is set.
[INFO] argLine set to empty
[INFO] 
[INFO] --- git-commit-id-plugin:2.1.13:revision (default) @ presto-spi ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ presto-spi ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ presto-spi ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 297 source files to /root/workspace/prestodb/presto/262238336/presto-spi/target/classes
[WARNING] /root/workspace/prestodb/presto/262238336/presto-spi/src/main/java/com/facebook/presto/spi/type/UnscaledDecimal128Arithmetic.java:[19,16] sun.misc.Unsafe is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-spi/src/main/java/com/facebook/presto/spi/type/UnscaledDecimal128Arithmetic.java:[88,26] sun.misc.Unsafe is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-spi/src/main/java/com/facebook/presto/spi/type/UnscaledDecimal128Arithmetic.java:[93,27] sun.misc.Unsafe is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-spi/src/main/java/com/facebook/presto/spi/type/UnscaledDecimal128Arithmetic.java:[95,23] sun.misc.Unsafe is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-spi/src/main/java/com/facebook/presto/spi/connector/ConnectorContext.java: Some input files use or override a deprecated API.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-spi/src/main/java/com/facebook/presto/spi/connector/ConnectorContext.java: Recompile with -Xlint:deprecation for details.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-spi/src/main/java/com/facebook/presto/spi/block/LazyBlockEncoding.java: /root/workspace/prestodb/presto/262238336/presto-spi/src/main/java/com/facebook/presto/spi/block/LazyBlockEncoding.java uses unchecked or unsafe operations.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-spi/src/main/java/com/facebook/presto/spi/block/LazyBlockEncoding.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ presto-spi ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-spi/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ presto-spi ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 45 source files to /root/workspace/prestodb/presto/262238336/presto-spi/target/test-classes
[WARNING] /root/workspace/prestodb/presto/262238336/presto-spi/src/test/java/com/facebook/presto/spi/block/TestingBlockEncodingSerde.java: Some input files use unchecked or unsafe operations.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-spi/src/test/java/com/facebook/presto/spi/block/TestingBlockEncodingSerde.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-only (default) @ presto-spi ---
[INFO] No dependency problems found
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-duplicate (default) @ presto-spi ---
[INFO] No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-dep-mgt (default) @ presto-spi ---
[INFO] Found Resolved Dependency / DependencyManagement mismatches:
[INFO] 	Ignoring Direct Dependencies.
[INFO] org.apache.commons:commons-lang3:jar was excluded in DepMgt, but version 3.4 has been found in the dependency tree.
[INFO] com.google.inject:guice:jar was excluded in DepMgt, but version 4.0 has been found in the dependency tree.
[WARNING] Potential problems found in Dependency Management 
[INFO] 
[INFO] --- maven-duplicate-finder-plugin:1.0.6:check (default) @ presto-spi ---
[INFO] Checking compile classpath
[INFO] Checking runtime classpath
[INFO] Checking test classpath
[INFO] 
[INFO] --- modernizer-maven-plugin:1.5.0:modernizer (modernizer) @ presto-spi ---
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ presto-spi ---
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng/2.19.1/surefire-testng-2.19.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng/2.19.1/surefire-testng-2.19.1.pom (3 KB at 7.1 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.19.1/surefire-providers-2.19.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.19.1/surefire-providers-2.19.1.pom (3 KB at 125.1 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/common-java5/2.19.1/common-java5-2.19.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/common-java5/2.19.1/common-java5-2.19.1.pom (3 KB at 118.8 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng-utils/2.19.1/surefire-testng-utils-2.19.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng-utils/2.19.1/surefire-testng-utils-2.19.1.pom (3 KB at 82.8 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-grouper/2.19.1/surefire-grouper-2.19.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-grouper/2.19.1/surefire-grouper-2.19.1.pom (3 KB at 95.1 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng/2.19.1/surefire-testng-2.19.1.jar
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng-utils/2.19.1/surefire-testng-utils-2.19.1.jar
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/common-java5/2.19.1/common-java5-2.19.1.jar
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-grouper/2.19.1/surefire-grouper-2.19.1.jar
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng/2.19.1/surefire-testng-2.19.1.jar (42 KB at 797.3 KB/sec)
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng-utils/2.19.1/surefire-testng-utils-2.19.1.jar (27 KB at 370.5 KB/sec)
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/common-java5/2.19.1/common-java5-2.19.1.jar (44 KB at 582.3 KB/sec)
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-grouper/2.19.1/surefire-grouper-2.19.1.jar (38 KB at 520.4 KB/sec)

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running TestSuite
Tests run: 195, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.702 sec - in TestSuite

Results :

Tests run: 195, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building presto-parser 0.183-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-checkstyle-plugin:2.17:check (default) @ presto-parser ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (default) @ presto-parser ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ presto-parser ---
[INFO] 
[INFO] --- maven-dependency-versions-check-plugin:2.0.4:check (default) @ presto-parser ---
[INFO] Adding exclusion 'com.google.inject:guice 4.0-beta5 vs. 4.0'
[INFO] Adding exclusion 'com.google.inject.extensions:guice-multibindings 4.0-beta5 vs. 4.0'
[INFO] Checking dependency versions
[INFO] 
[INFO] --- license-maven-plugin:2.3:check (default) @ presto-parser ---
[INFO] Checking licenses...
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ presto-parser ---
[INFO] Skipping JaCoCo execution because property jacoco.skip is set.
[INFO] argLine set to empty
[INFO] 
[INFO] --- git-commit-id-plugin:2.1.13:revision (default) @ presto-parser ---
[INFO] 
[INFO] --- antlr4-maven-plugin:4.6:antlr4 (default) @ presto-parser ---
[INFO] No grammars to process
[INFO] ANTLR 4: Processing source directory /root/workspace/prestodb/presto/262238336/presto-parser/src/main/antlr4
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ presto-parser ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-parser/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ presto-parser ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 178 source files to /root/workspace/prestodb/presto/262238336/presto-parser/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ presto-parser ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 22 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ presto-parser ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 5 source files to /root/workspace/prestodb/presto/262238336/presto-parser/target/test-classes
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-only (default) @ presto-parser ---
[INFO] No dependency problems found
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-duplicate (default) @ presto-parser ---
[INFO] No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-dep-mgt (default) @ presto-parser ---
[INFO] Found Resolved Dependency / DependencyManagement mismatches:
[INFO] 	Ignoring Direct Dependencies.
[INFO]    None
[INFO] 
[INFO] --- maven-duplicate-finder-plugin:1.0.6:check (default) @ presto-parser ---
[INFO] Checking compile classpath
[INFO] Checking runtime classpath
[INFO] Checking test classpath
[INFO] 
[INFO] --- modernizer-maven-plugin:1.5.0:modernizer (modernizer) @ presto-parser ---
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ presto-parser ---

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running TestSuite
Tests run: 147, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.206 sec - in TestSuite

Results :

Tests run: 147, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building presto-bytecode 0.183-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-checkstyle-plugin:2.17:check (default) @ presto-bytecode ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (default) @ presto-bytecode ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ presto-bytecode ---
[INFO] 
[INFO] --- maven-dependency-versions-check-plugin:2.0.4:check (default) @ presto-bytecode ---
[INFO] Adding exclusion 'com.google.inject:guice 4.0-beta5 vs. 4.0'
[INFO] Adding exclusion 'com.google.inject.extensions:guice-multibindings 4.0-beta5 vs. 4.0'
[INFO] Checking dependency versions
[INFO] 
[INFO] --- license-maven-plugin:2.3:check (default) @ presto-bytecode ---
[INFO] Checking licenses...
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ presto-bytecode ---
[INFO] Skipping JaCoCo execution because property jacoco.skip is set.
[INFO] argLine set to empty
[INFO] 
[INFO] --- git-commit-id-plugin:2.1.13:revision (default) @ presto-bytecode ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ presto-bytecode ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-bytecode/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ presto-bytecode ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 66 source files to /root/workspace/prestodb/presto/262238336/presto-bytecode/target/classes
[WARNING] /root/workspace/prestodb/presto/262238336/presto-bytecode/src/main/java/com/facebook/presto/bytecode/instruction/InvokeInstruction.java: Some input files use or override a deprecated API.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-bytecode/src/main/java/com/facebook/presto/bytecode/instruction/InvokeInstruction.java: Recompile with -Xlint:deprecation for details.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-bytecode/src/main/java/com/facebook/presto/bytecode/AnnotationDefinition.java: Some input files use unchecked or unsafe operations.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-bytecode/src/main/java/com/facebook/presto/bytecode/AnnotationDefinition.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ presto-bytecode ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-bytecode/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ presto-bytecode ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 15 source files to /root/workspace/prestodb/presto/262238336/presto-bytecode/target/test-classes
[WARNING] /root/workspace/prestodb/presto/262238336/presto-bytecode/src/test/java/com/facebook/presto/bytecode/expression/TestSetFieldBytecodeExpression.java: Some input files use or override a deprecated API.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-bytecode/src/test/java/com/facebook/presto/bytecode/expression/TestSetFieldBytecodeExpression.java: Recompile with -Xlint:deprecation for details.
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-only (default) @ presto-bytecode ---
[INFO] No dependency problems found
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-duplicate (default) @ presto-bytecode ---
[INFO] No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-dep-mgt (default) @ presto-bytecode ---
[INFO] Found Resolved Dependency / DependencyManagement mismatches:
[INFO] 	Ignoring Direct Dependencies.
[INFO]    None
[INFO] 
[INFO] --- maven-duplicate-finder-plugin:1.0.6:check (default) @ presto-bytecode ---
[INFO] Checking compile classpath
[INFO] Checking runtime classpath
[INFO] Checking test classpath
[INFO] 
[INFO] --- modernizer-maven-plugin:1.5.0:modernizer (modernizer) @ presto-bytecode ---
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ presto-bytecode ---

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running TestSuite
Tests run: 41, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.919 sec - in TestSuite

Results :

Tests run: 41, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building presto-matching 0.183-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-checkstyle-plugin:2.17:check (default) @ presto-matching ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (default) @ presto-matching ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ presto-matching ---
[INFO] 
[INFO] --- maven-dependency-versions-check-plugin:2.0.4:check (default) @ presto-matching ---
[INFO] Adding exclusion 'com.google.inject:guice 4.0-beta5 vs. 4.0'
[INFO] Adding exclusion 'com.google.inject.extensions:guice-multibindings 4.0-beta5 vs. 4.0'
[INFO] Checking dependency versions
[INFO] 
[INFO] --- license-maven-plugin:2.3:check (default) @ presto-matching ---
[INFO] Checking licenses...
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ presto-matching ---
[INFO] Skipping JaCoCo execution because property jacoco.skip is set.
[INFO] argLine set to empty
[INFO] 
[INFO] --- git-commit-id-plugin:2.1.13:revision (default) @ presto-matching ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ presto-matching ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-matching/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ presto-matching ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 16 source files to /root/workspace/prestodb/presto/262238336/presto-matching/target/classes
[WARNING] /root/workspace/prestodb/presto/262238336/presto-matching/src/main/java/com/facebook/presto/matching/Captures.java: Some input files use unchecked or unsafe operations.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-matching/src/main/java/com/facebook/presto/matching/Captures.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ presto-matching ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-matching/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ presto-matching ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 10 source files to /root/workspace/prestodb/presto/262238336/presto-matching/target/test-classes
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-only (default) @ presto-matching ---
[INFO] No dependency problems found
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-duplicate (default) @ presto-matching ---
[INFO] No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-dep-mgt (default) @ presto-matching ---
[INFO] Found Resolved Dependency / DependencyManagement mismatches:
[INFO] 	Ignoring Direct Dependencies.
[INFO]    None
[INFO] 
[INFO] --- maven-duplicate-finder-plugin:1.0.6:check (default) @ presto-matching ---
[INFO] Checking compile classpath
[INFO] Checking runtime classpath
[INFO] Checking test classpath
[INFO] 
[INFO] --- modernizer-maven-plugin:1.5.0:modernizer (modernizer) @ presto-matching ---
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ presto-matching ---

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.facebook.presto.matching.TestMatcher
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.494 sec - in com.facebook.presto.matching.TestMatcher

Results :

Tests run: 10, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building presto-plugin-toolkit 0.183-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-checkstyle-plugin:2.17:check (default) @ presto-plugin-toolkit ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (default) @ presto-plugin-toolkit ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ presto-plugin-toolkit ---
[INFO] 
[INFO] --- maven-dependency-versions-check-plugin:2.0.4:check (default) @ presto-plugin-toolkit ---
[INFO] Adding exclusion 'com.google.inject:guice 4.0-beta5 vs. 4.0'
[INFO] Adding exclusion 'com.google.inject.extensions:guice-multibindings 4.0-beta5 vs. 4.0'
[INFO] Checking dependency versions
[INFO] 
[INFO] --- license-maven-plugin:2.3:check (default) @ presto-plugin-toolkit ---
[INFO] Checking licenses...
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ presto-plugin-toolkit ---
[INFO] Skipping JaCoCo execution because property jacoco.skip is set.
[INFO] argLine set to empty
[INFO] 
[INFO] --- git-commit-id-plugin:2.1.13:revision (default) @ presto-plugin-toolkit ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ presto-plugin-toolkit ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-plugin-toolkit/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ presto-plugin-toolkit ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 11 source files to /root/workspace/prestodb/presto/262238336/presto-plugin-toolkit/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ presto-plugin-toolkit ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 3 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ presto-plugin-toolkit ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 2 source files to /root/workspace/prestodb/presto/262238336/presto-plugin-toolkit/target/test-classes
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-only (default) @ presto-plugin-toolkit ---
[INFO] No dependency problems found
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-duplicate (default) @ presto-plugin-toolkit ---
[INFO] No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-dep-mgt (default) @ presto-plugin-toolkit ---
[INFO] Found Resolved Dependency / DependencyManagement mismatches:
[INFO] 	Ignoring Direct Dependencies.
[INFO] org.apache.commons:commons-lang3:jar was excluded in DepMgt, but version 3.4 has been found in the dependency tree.
[WARNING] Potential problems found in Dependency Management 
[INFO] 
[INFO] --- maven-duplicate-finder-plugin:1.0.6:check (default) @ presto-plugin-toolkit ---
[INFO] Checking compile classpath
[INFO] Checking runtime classpath
[INFO] Checking test classpath
[INFO] 
[INFO] --- modernizer-maven-plugin:1.5.0:modernizer (modernizer) @ presto-plugin-toolkit ---
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ presto-plugin-toolkit ---

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running TestSuite
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.219 sec - in TestSuite

Results :

Tests run: 5, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building presto-client 0.183-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-checkstyle-plugin:2.17:check (default) @ presto-client ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (default) @ presto-client ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ presto-client ---
[INFO] 
[INFO] --- maven-dependency-versions-check-plugin:2.0.4:check (default) @ presto-client ---
[INFO] Adding exclusion 'com.google.inject:guice 4.0-beta5 vs. 4.0'
[INFO] Adding exclusion 'com.google.inject.extensions:guice-multibindings 4.0-beta5 vs. 4.0'
[INFO] Checking dependency versions
[INFO] 
[INFO] --- license-maven-plugin:2.3:check (default) @ presto-client ---
[INFO] Checking licenses...
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ presto-client ---
[INFO] Skipping JaCoCo execution because property jacoco.skip is set.
[INFO] argLine set to empty
[INFO] 
[INFO] --- git-commit-id-plugin:2.1.13:revision (default) @ presto-client ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ presto-client ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-client/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ presto-client ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 21 source files to /root/workspace/prestodb/presto/262238336/presto-client/target/classes
[WARNING] /root/workspace/prestodb/presto/262238336/presto-client/src/main/java/com/facebook/presto/client/QueryResults.java: /root/workspace/prestodb/presto/262238336/presto-client/src/main/java/com/facebook/presto/client/QueryResults.java uses unchecked or unsafe operations.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-client/src/main/java/com/facebook/presto/client/QueryResults.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ presto-client ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-client/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ presto-client ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 5 source files to /root/workspace/prestodb/presto/262238336/presto-client/target/test-classes
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-only (default) @ presto-client ---
[INFO] No dependency problems found
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-duplicate (default) @ presto-client ---
[INFO] No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-dep-mgt (default) @ presto-client ---
[INFO] Found Resolved Dependency / DependencyManagement mismatches:
[INFO] 	Ignoring Direct Dependencies.
[INFO] com.google.inject:guice:jar was excluded in DepMgt, but version 4.0 has been found in the dependency tree.
[WARNING] Potential problems found in Dependency Management 
[INFO] 
[INFO] --- maven-duplicate-finder-plugin:1.0.6:check (default) @ presto-client ---
[INFO] Checking compile classpath
[INFO] Checking runtime classpath
[INFO] Checking test classpath
[INFO] 
[INFO] --- modernizer-maven-plugin:1.5.0:modernizer (modernizer) @ presto-client ---
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ presto-client ---

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running TestSuite
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.142 sec - in TestSuite

Results :

Tests run: 11, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building presto-array 0.183-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-checkstyle-plugin:2.17:check (default) @ presto-array ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (default) @ presto-array ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ presto-array ---
[INFO] 
[INFO] --- maven-dependency-versions-check-plugin:2.0.4:check (default) @ presto-array ---
[INFO] Adding exclusion 'com.google.inject:guice 4.0-beta5 vs. 4.0'
[INFO] Adding exclusion 'com.google.inject.extensions:guice-multibindings 4.0-beta5 vs. 4.0'
[INFO] Checking dependency versions
[INFO] 
[INFO] --- license-maven-plugin:2.3:check (default) @ presto-array ---
[INFO] Checking licenses...
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ presto-array ---
[INFO] Skipping JaCoCo execution because property jacoco.skip is set.
[INFO] argLine set to empty
[INFO] 
[INFO] --- git-commit-id-plugin:2.1.13:revision (default) @ presto-array ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ presto-array ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-array/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ presto-array ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 12 source files to /root/workspace/prestodb/presto/262238336/presto-array/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ presto-array ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-array/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ presto-array ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to /root/workspace/prestodb/presto/262238336/presto-array/target/test-classes
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-only (default) @ presto-array ---
[INFO] No dependency problems found
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-duplicate (default) @ presto-array ---
[INFO] No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-dep-mgt (default) @ presto-array ---
[INFO] Found Resolved Dependency / DependencyManagement mismatches:
[INFO] 	Ignoring Direct Dependencies.
[INFO]    None
[INFO] 
[INFO] --- maven-duplicate-finder-plugin:1.0.6:check (default) @ presto-array ---
[INFO] Checking compile classpath
[INFO] Checking runtime classpath
[INFO] Checking test classpath
[INFO] 
[INFO] --- modernizer-maven-plugin:1.5.0:modernizer (modernizer) @ presto-array ---
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ presto-array ---

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.facebook.presto.array.TestBlockBigArray
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.556 sec - in com.facebook.presto.array.TestBlockBigArray

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building presto-tpch 0.183-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- presto-maven-plugin:0.2:check-spi-dependencies (default-check-spi-dependencies) @ presto-tpch ---
[INFO] 
[INFO] --- maven-checkstyle-plugin:2.17:check (default) @ presto-tpch ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (default) @ presto-tpch ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ presto-tpch ---
[INFO] 
[INFO] --- maven-dependency-versions-check-plugin:2.0.4:check (default) @ presto-tpch ---
[INFO] Adding exclusion 'com.google.inject:guice 4.0-beta5 vs. 4.0'
[INFO] Adding exclusion 'com.google.inject.extensions:guice-multibindings 4.0-beta5 vs. 4.0'
[INFO] Checking dependency versions
[INFO] 
[INFO] --- license-maven-plugin:2.3:check (default) @ presto-tpch ---
[INFO] Checking licenses...
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ presto-tpch ---
[INFO] Skipping JaCoCo execution because property jacoco.skip is set.
[INFO] argLine set to empty
[INFO] 
[INFO] --- git-commit-id-plugin:2.1.13:revision (default) @ presto-tpch ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ presto-tpch ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ presto-tpch ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 16 source files to /root/workspace/prestodb/presto/262238336/presto-tpch/target/classes
[WARNING] /root/workspace/prestodb/presto/262238336/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java: /root/workspace/prestodb/presto/262238336/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java uses unchecked or unsafe operations.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- presto-maven-plugin:0.2:generate-service-descriptor (default-generate-service-descriptor) @ presto-tpch ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ presto-tpch ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-tpch/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ presto-tpch ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-only (default) @ presto-tpch ---
[INFO] No dependency problems found
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-duplicate (default) @ presto-tpch ---
[INFO] No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-dep-mgt (default) @ presto-tpch ---
[INFO] Found Resolved Dependency / DependencyManagement mismatches:
[INFO] 	Ignoring Direct Dependencies.
[INFO]    None
[INFO] 
[INFO] --- maven-duplicate-finder-plugin:1.0.6:check (default) @ presto-tpch ---
[INFO] Checking compile classpath
[INFO] Checking runtime classpath
[INFO] Checking test classpath
[INFO] 
[INFO] --- modernizer-maven-plugin:1.5.0:modernizer (modernizer) @ presto-tpch ---
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ presto-tpch ---
[INFO] No tests to run.
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building presto-record-decoder 0.183-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-checkstyle-plugin:2.17:check (default) @ presto-record-decoder ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (default) @ presto-record-decoder ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ presto-record-decoder ---
[INFO] 
[INFO] --- maven-dependency-versions-check-plugin:2.0.4:check (default) @ presto-record-decoder ---
[INFO] Adding exclusion 'com.google.inject:guice 4.0-beta5 vs. 4.0'
[INFO] Adding exclusion 'com.google.inject.extensions:guice-multibindings 4.0-beta5 vs. 4.0'
[INFO] Checking dependency versions
[INFO] 
[INFO] --- license-maven-plugin:2.3:check (default) @ presto-record-decoder ---
[INFO] Checking licenses...
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ presto-record-decoder ---
[INFO] Skipping JaCoCo execution because property jacoco.skip is set.
[INFO] argLine set to empty
[INFO] 
[INFO] --- git-commit-id-plugin:2.1.13:revision (default) @ presto-record-decoder ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ presto-record-decoder ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-record-decoder/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ presto-record-decoder ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 24 source files to /root/workspace/prestodb/presto/262238336/presto-record-decoder/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ presto-record-decoder ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ presto-record-decoder ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 9 source files to /root/workspace/prestodb/presto/262238336/presto-record-decoder/target/test-classes
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-only (default) @ presto-record-decoder ---
[INFO] No dependency problems found
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-duplicate (default) @ presto-record-decoder ---
[INFO] No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-dep-mgt (default) @ presto-record-decoder ---
[INFO] Found Resolved Dependency / DependencyManagement mismatches:
[INFO] 	Ignoring Direct Dependencies.
[INFO] org.apache.commons:commons-lang3:jar was excluded in DepMgt, but version 3.4 has been found in the dependency tree.
[WARNING] Potential problems found in Dependency Management 
[INFO] 
[INFO] --- maven-duplicate-finder-plugin:1.0.6:check (default) @ presto-record-decoder ---
[INFO] Checking compile classpath
[INFO] Checking runtime classpath
[INFO] Checking test classpath
[INFO] 
[INFO] --- modernizer-maven-plugin:1.5.0:modernizer (modernizer) @ presto-record-decoder ---
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ presto-record-decoder ---

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running TestSuite
Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.35 sec - in TestSuite

Results :

Tests run: 19, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building presto-cli 0.183-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-checkstyle-plugin:2.17:check (default) @ presto-cli ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (default) @ presto-cli ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ presto-cli ---
[INFO] 
[INFO] --- maven-dependency-versions-check-plugin:2.0.4:check (default) @ presto-cli ---
[INFO] Adding exclusion 'com.google.inject:guice 4.0-beta5 vs. 4.0'
[INFO] Adding exclusion 'com.google.inject.extensions:guice-multibindings 4.0-beta5 vs. 4.0'
[INFO] Checking dependency versions
[INFO] 
[INFO] --- license-maven-plugin:2.3:check (default) @ presto-cli ---
[INFO] Checking licenses...
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ presto-cli ---
[INFO] Skipping JaCoCo execution because property jacoco.skip is set.
[INFO] argLine set to empty
[INFO] 
[INFO] --- git-commit-id-plugin:2.1.13:revision (default) @ presto-cli ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ presto-cli ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-cli/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ presto-cli ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 25 source files to /root/workspace/prestodb/presto/262238336/presto-cli/target/classes
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/QueryPreprocessor.java:[20,16] sun.misc.Signal is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/QueryPreprocessor.java:[21,16] sun.misc.SignalHandler is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/Query.java:[29,16] sun.misc.Signal is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/Query.java:[30,16] sun.misc.SignalHandler is internal proprietary API and may be removed in a future release
[WARNING] unknown enum constant org.fusesource.hawtjni.runtime.FieldFlag.CONSTANT
  reason: class file for org.fusesource.hawtjni.runtime.FieldFlag not found
[WARNING] unknown enum constant org.fusesource.hawtjni.runtime.FieldFlag.CONSTANT
[WARNING] unknown enum constant org.fusesource.hawtjni.runtime.FieldFlag.CONSTANT
[WARNING] unknown enum constant org.fusesource.hawtjni.runtime.FieldFlag.CONSTANT
[WARNING] unknown enum constant org.fusesource.hawtjni.runtime.MethodFlag.CONSTANT_INITIALIZER
  reason: class file for org.fusesource.hawtjni.runtime.MethodFlag not found
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/QueryPreprocessor.java:[53,26] sun.misc.Signal is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/QueryPreprocessor.java:[53,46] sun.misc.Signal is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/QueryPreprocessor.java:[78,9] sun.misc.SignalHandler is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/QueryPreprocessor.java:[78,36] sun.misc.Signal is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/QueryPreprocessor.java:[78,58] sun.misc.Signal is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/QueryPreprocessor.java:[91,13] sun.misc.Signal is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/Query.java:[54,26] sun.misc.Signal is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/Query.java:[54,46] sun.misc.Signal is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/Query.java:[98,9] sun.misc.SignalHandler is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/Query.java:[98,36] sun.misc.Signal is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/Query.java:[98,58] sun.misc.Signal is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/Query.java:[110,13] sun.misc.Signal is internal proprietary API and may be removed in a future release
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/Query.java: Some input files use or override a deprecated API.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-cli/src/main/java/com/facebook/presto/cli/Query.java: Recompile with -Xlint:deprecation for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ presto-cli ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-cli/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ presto-cli ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 6 source files to /root/workspace/prestodb/presto/262238336/presto-cli/target/test-classes
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-only (default) @ presto-cli ---
[INFO] No dependency problems found
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-duplicate (default) @ presto-cli ---
[INFO] No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-dep-mgt (default) @ presto-cli ---
[INFO] Found Resolved Dependency / DependencyManagement mismatches:
[INFO] 	Ignoring Direct Dependencies.
[INFO] org.apache.commons:commons-lang3:jar was excluded in DepMgt, but version 3.4 has been found in the dependency tree.
[INFO] com.google.inject:guice:jar was excluded in DepMgt, but version 4.0 has been found in the dependency tree.
[WARNING] Potential problems found in Dependency Management 
[INFO] 
[INFO] --- maven-duplicate-finder-plugin:1.0.6:check (default) @ presto-cli ---
[INFO] Checking compile classpath
[INFO] Checking runtime classpath
[INFO] Checking test classpath
[INFO] 
[INFO] --- modernizer-maven-plugin:1.5.0:modernizer (modernizer) @ presto-cli ---
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ presto-cli ---

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running TestSuite
Tests run: 36, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.198 sec - in TestSuite

Results :

Tests run: 36, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building presto-benchmark-driver 0.183-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-checkstyle-plugin:2.17:check (default) @ presto-benchmark-driver ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (default) @ presto-benchmark-driver ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ presto-benchmark-driver ---
[INFO] 
[INFO] --- maven-dependency-versions-check-plugin:2.0.4:check (default) @ presto-benchmark-driver ---
[INFO] Adding exclusion 'com.google.inject:guice 4.0-beta5 vs. 4.0'
[INFO] Adding exclusion 'com.google.inject.extensions:guice-multibindings 4.0-beta5 vs. 4.0'
[INFO] Checking dependency versions
[INFO] 
[INFO] --- license-maven-plugin:2.3:check (default) @ presto-benchmark-driver ---
[INFO] Checking licenses...
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ presto-benchmark-driver ---
[INFO] Skipping JaCoCo execution because property jacoco.skip is set.
[INFO] argLine set to empty
[INFO] 
[INFO] --- git-commit-id-plugin:2.1.13:revision (default) @ presto-benchmark-driver ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ presto-benchmark-driver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/prestodb/presto/262238336/presto-benchmark-driver/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ presto-benchmark-driver ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 13 source files to /root/workspace/prestodb/presto/262238336/presto-benchmark-driver/target/classes
[WARNING] /root/workspace/prestodb/presto/262238336/presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/RegexTemplate.java: Some input files use or override a deprecated API.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/RegexTemplate.java: Recompile with -Xlint:deprecation for details.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/RegexTemplate.java: /root/workspace/prestodb/presto/262238336/presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/RegexTemplate.java uses unchecked or unsafe operations.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-benchmark-driver/src/main/java/com/facebook/presto/benchmark/driver/RegexTemplate.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ presto-benchmark-driver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 4 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ presto-benchmark-driver ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to /root/workspace/prestodb/presto/262238336/presto-benchmark-driver/target/test-classes
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-only (default) @ presto-benchmark-driver ---
[INFO] No dependency problems found
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-duplicate (default) @ presto-benchmark-driver ---
[INFO] No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-dep-mgt (default) @ presto-benchmark-driver ---
[INFO] Found Resolved Dependency / DependencyManagement mismatches:
[INFO] 	Ignoring Direct Dependencies.
[INFO] org.apache.commons:commons-lang3:jar was excluded in DepMgt, but version 3.4 has been found in the dependency tree.
[INFO] com.google.inject:guice:jar was excluded in DepMgt, but version 4.0 has been found in the dependency tree.
[WARNING] Potential problems found in Dependency Management 
[INFO] 
[INFO] --- maven-duplicate-finder-plugin:1.0.6:check (default) @ presto-benchmark-driver ---
[INFO] Checking compile classpath
[INFO] Checking runtime classpath
[INFO] Checking test classpath
[INFO] 
[INFO] --- modernizer-maven-plugin:1.5.0:modernizer (modernizer) @ presto-benchmark-driver ---
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ presto-benchmark-driver ---

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.facebook.presto.benchmark.driver.TestRegexTemplate
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.49 sec - in com.facebook.presto.benchmark.driver.TestRegexTemplate

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building presto-main 0.183-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-checkstyle-plugin:2.17:check (default) @ presto-main ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (default) @ presto-main ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ presto-main ---
[INFO] 
[INFO] --- maven-dependency-versions-check-plugin:2.0.4:check (default) @ presto-main ---
[INFO] Adding exclusion 'com.google.inject:guice 4.0-beta5 vs. 4.0'
[INFO] Adding exclusion 'com.google.inject.extensions:guice-multibindings 4.0-beta5 vs. 4.0'
[INFO] Checking dependency versions
[INFO] 
[INFO] --- license-maven-plugin:2.3:check (default) @ presto-main ---
[INFO] Checking licenses...
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ presto-main ---
[INFO] Skipping JaCoCo execution because property jacoco.skip is set.
[INFO] argLine set to empty
[INFO] 
[INFO] --- git-commit-id-plugin:2.1.13:revision (default) @ presto-main ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ presto-main ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 80 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ presto-main ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1367 source files to /root/workspace/prestodb/presto/262238336/presto-main/target/classes
[WARNING] /root/workspace/prestodb/presto/262238336/presto-main/src/main/java/com/facebook/presto/connector/ConnectorManager.java: Some input files use or override a deprecated API.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-main/src/main/java/com/facebook/presto/connector/ConnectorManager.java: Recompile with -Xlint:deprecation for details.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-main/src/main/java/com/facebook/presto/metadata/SessionPropertyManager.java: Some input files use unchecked or unsafe operations.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-main/src/main/java/com/facebook/presto/metadata/SessionPropertyManager.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ presto-main ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 5 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ presto-main ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 586 source files to /root/workspace/prestodb/presto/262238336/presto-main/target/test-classes
[WARNING] /root/workspace/prestodb/presto/262238336/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java:[265,83] non-varargs call of varargs method with inexact argument type for last parameter;
  cast to java.lang.Class<?> for a varargs call
  cast to java.lang.Class<?>[] for a non-varargs call and to suppress this warning
[WARNING] /root/workspace/prestodb/presto/262238336/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java:[293,107] non-varargs call of varargs method with inexact argument type for last parameter;
  cast to java.lang.Class<?> for a varargs call
  cast to java.lang.Class<?>[] for a non-varargs call and to suppress this warning
[WARNING] /root/workspace/prestodb/presto/262238336/presto-main/src/test/java/com/facebook/presto/BenchmarkPagesIndexPageSorter.java: Some input files use or override a deprecated API.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-main/src/test/java/com/facebook/presto/BenchmarkPagesIndexPageSorter.java: Recompile with -Xlint:deprecation for details.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-main/src/test/java/com/facebook/presto/operator/scalar/AbstractTestFunctions.java: Some input files use unchecked or unsafe operations.
[WARNING] /root/workspace/prestodb/presto/262238336/presto-main/src/test/java/com/facebook/presto/operator/scalar/AbstractTestFunctions.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-only (default) @ presto-main ---
[INFO] No dependency problems found
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-duplicate (default) @ presto-main ---
[INFO] No duplicate dependencies found in <dependencies/> or in <dependencyManagement/>
[INFO] 
[INFO] --- maven-dependency-plugin:2.10:analyze-dep-mgt (default) @ presto-main ---
[INFO] Found Resolved Dependency / DependencyManagement mismatches:
[INFO] 	Ignoring Direct Dependencies.
[INFO] org.apache.commons:commons-lang3:jar was excluded in DepMgt, but version 3.4 has been found in the dependency tree.
[WARNING] Potential problems found in Dependency Management 
[INFO] 
[INFO] --- maven-duplicate-finder-plugin:1.0.6:check (default) @ presto-main ---
[INFO] Checking compile classpath
[INFO] Checking runtime classpath
[INFO] Checking test classpath
[INFO] 
[INFO] --- modernizer-maven-plugin:1.5.0:modernizer (modernizer) @ presto-main ---
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ presto-main ---

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running TestSuite

Tests run: 3325, Failures: 41, Errors: 0, Skipped: 0, Time elapsed: 521.586 sec <<< FAILURE! - in TestSuite
test(com.facebook.presto.sql.planner.iterative.rule.TestInlineProjections)  Time elapsed: 0.033 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.InlineProjections did not fire for:
        - Project[] => [identity:bigint, multi_complex_1:bigint, multi_complex_2:bigint, multi_literal_1:bigint, multi_literal_2:bigint, single_complex:bigint, try:bigint]
                Cost: {rows: 0, bytes: ?}
                identity := "symbol"
                multi_complex_1 := ("complex" + 1)
                multi_complex_2 := ("complex" + 2)
                multi_literal_1 := ("literal" + 1)
                multi_literal_2 := ("literal" + 2)
                single_complex := ("complex_2" + 2)
                try := TRY(("complex" / "literal"))
            - Project[] => [symbol:bigint, complex:bigint, literal:bigint, complex_2:bigint]
                    Cost: {rows: 0, bytes: ?}
                    symbol := "x"
                    complex := ("x" * 2)
                    literal := 1
                    complex_2 := ("x" - 1)
                - Values => [x:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestInlineProjections.test(TestInlineProjections.java:52)

testIdenticalAdjacentWindowSpecifications(com.facebook.presto.sql.planner.iterative.rule.TestMergeAdjacentWindows)  Time elapsed: 0.007 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.MergeAdjacentWindows did not fire for:
        - Window[partition by (a)] => [a:bigint, sum_1:bigint, avg_1:bigint]
                avg_1 := avg("a") 
            - Window[partition by (a)] => [a:bigint, sum_1:bigint]
                    sum_1 := sum("a") 
                - Values => [a:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestMergeAdjacentWindows.testIdenticalAdjacentWindowSpecifications(TestMergeAdjacentWindows.java:168)

test(com.facebook.presto.sql.planner.iterative.rule.TestMergeFilters)  Time elapsed: 0.005 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.MergeFilters did not fire for:
        - Filter[filterPredicate = ("b" > 44)] => [a:bigint, b:bigint]
                Cost: {rows: 0, bytes: ?}
            - Filter[filterPredicate = ("a" < 42)] => [a:bigint, b:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [a:bigint, b:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestMergeFilters.test(TestMergeFilters.java:35)

testIdenticalWindowSpecificationsAAcpA(com.facebook.presto.sql.planner.optimizations.TestMergeWindows)  Time elapsed: 0.023 sec  <<< FAILURE!
java.lang.AssertionError: 
Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=lag (QUANTITY, ONE, ZERO) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - node(ProjectNode)
            bind ONE -> CAST(1 AS bigint)
            bind ZERO -> 0.0
            - node(WindowNode)
                WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
                bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
                - node(TableScanNode)
                    TableScanMatcher{expectedTableName=lineitem}
                    bind QUANTITY -> Column lineitem:quantity
                    bind DISCOUNT -> Column lineitem:discount
                    bind SUPPKEY -> Column lineitem:suppkey
                    bind ORDERKEY -> Column lineitem:orderkey

] but found [

- Output[sum_quantity_A, sum_quantity_B, sum_discount_A] => [sum:double, lag:double, sum_10:double]
        sum_quantity_A := sum
        sum_quantity_B := lag
        sum_discount_A := sum_10
    - Project[] => [sum:double, lag:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, expr:bigint, expr_4:double, lag:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, expr:bigint, expr_4:double, lag:double]
                    lag := lag("quantity", "expr", "expr_4") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, expr:bigint, expr_4:double]
                        expr := CAST(1 AS bigint)
                        expr_4 := 0.0
                    - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                            sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                        - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                                Cost: {rows: 60000, bytes: ?}
                                orderkey := tpch:orderkey
                                suppkey := tpch:suppkey
                                quantity := tpch:quantity
                                discount := tpch:discount

] which resolves to [

- Output[sum_quantity_A, sum_quantity_B, sum_discount_A] => [sum:double, lag:double, sum_10:double]
        sum_quantity_A := sum
        sum_quantity_B := lag
        sum_discount_A := sum_10
    - Project[] => [sum:double, lag:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, expr:bigint, expr_4:double, lag:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, expr:bigint, expr_4:double, lag:double]
                    lag := lag("quantity", "expr", "expr_4") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, expr:bigint, expr_4:double]
                        expr := CAST(1 AS bigint)
                        expr_4 := 0.0
                    - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                            sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                        - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                                Cost: {rows: 60000, bytes: ?}
                                orderkey := tpch:orderkey
                                suppkey := tpch:suppkey
                                quantity := tpch:quantity
                                discount := tpch:discount

]
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.lambda$assertUnitPlan$23(TestMergeWindows.java:510)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.assertUnitPlan(TestMergeWindows.java:508)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.testIdenticalWindowSpecificationsAAcpA(TestMergeWindows.java:222)

testIdenticalWindowSpecificationsABA(com.facebook.presto.sql.planner.optimizations.TestMergeWindows)  Time elapsed: 0.011 sec  <<< FAILURE!
java.lang.AssertionError: 
Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[ORDERKEY], orderBy=[SHIPDATE], orderings={SHIPDATE=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
            - node(TableScanNode)
                TableScanMatcher{expectedTableName=lineitem}
                bind QUANTITY -> Column lineitem:quantity
                bind DISCOUNT -> Column lineitem:discount
                bind SUPPKEY -> Column lineitem:suppkey
                bind ORDERKEY -> Column lineitem:orderkey
                bind SHIPDATE -> Column lineitem:shipdate

] but found [

- Output[sum_quantity_A, sum_quantity_B, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_quantity_A := sum
        sum_quantity_B := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (orderkey), order by (shipdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double]
                    sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double]
                        sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount
                            shipdate := tpch:shipdate

] which resolves to [

- Output[sum_quantity_A, sum_quantity_B, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_quantity_A := sum
        sum_quantity_B := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (orderkey), order by (shipdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double]
                    sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double]
                        sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount
                            shipdate := tpch:shipdate

]
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.lambda$assertUnitPlan$23(TestMergeWindows.java:510)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.assertUnitPlan(TestMergeWindows.java:508)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.testIdenticalWindowSpecificationsABA(TestMergeWindows.java:177)

testIdenticalWindowSpecificationsDefaultFrame(com.facebook.presto.sql.planner.optimizations.TestMergeWindows)  Time elapsed: 0.01 sec  <<< FAILURE!
java.lang.AssertionError: 
Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (QUANTITY) }
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) }
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[ORDERKEY], orderBy=[SHIPDATE], orderings={SHIPDATE=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) }
            - node(TableScanNode)
                TableScanMatcher{expectedTableName=lineitem}
                bind QUANTITY -> Column lineitem:quantity
                bind DISCOUNT -> Column lineitem:discount
                bind SUPPKEY -> Column lineitem:suppkey
                bind ORDERKEY -> Column lineitem:orderkey
                bind SHIPDATE -> Column lineitem:shipdate

] but found [

- Output[_col0, _col1, _col2] => [sum:double, sum_6:double, sum_10:double]
        _col0 := sum
        _col1 := sum_6
        _col2 := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") 
            - Window[partition by (orderkey), order by (shipdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double]
                    sum_6 := sum("quantity") 
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double]
                        sum := sum("quantity") 
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount
                            shipdate := tpch:shipdate

] which resolves to [

- Output[_col0, _col1, _col2] => [sum:double, sum_6:double, sum_10:double]
        _col0 := sum
        _col1 := sum_6
        _col2 := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") 
            - Window[partition by (orderkey), order by (shipdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double]
                    sum_6 := sum("quantity") 
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double]
                        sum := sum("quantity") 
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount
                            shipdate := tpch:shipdate

]
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.lambda$assertUnitPlan$23(TestMergeWindows.java:510)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.assertUnitPlan(TestMergeWindows.java:508)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.testIdenticalWindowSpecificationsDefaultFrame(TestMergeWindows.java:254)

testMergeDifferentFrames(com.facebook.presto.sql.planner.optimizations.TestMergeWindows)  Time elapsed: 0.011 sec  <<< FAILURE!
java.lang.AssertionError: 
Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=avg (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=CURRENT_ROW, value=Optional.empty}, end=Optional[FrameBound{type=UNBOUNDED_FOLLOWING, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - node(TableScanNode)
            TableScanMatcher{expectedTableName=lineitem}
            bind QUANTITY -> Column lineitem:quantity
            bind DISCOUNT -> Column lineitem:discount
            bind SUPPKEY -> Column lineitem:suppkey
            bind ORDERKEY -> Column lineitem:orderkey

] but found [

- Output[sum_quantity_C, avg_quantity_D, sum_discount_C] => [sum:double, avg:double, sum_9:double]
        sum_quantity_C := sum
        avg_quantity_D := avg
        sum_discount_C := sum_9
    - Project[] => [sum:double, avg:double, sum_9:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double, sum_9:double]
                sum_9 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double]
                    avg := avg("quantity") ROWS CURRENT_ROW UNBOUNDED_FOLLOWING
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                        sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount

] which resolves to [

- Output[sum_quantity_C, avg_quantity_D, sum_discount_C] => [sum:double, avg:double, sum_9:double]
        sum_quantity_C := sum
        avg_quantity_D := avg
        sum_discount_C := sum_9
    - Project[] => [sum:double, avg:double, sum_9:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double, sum_9:double]
                sum_9 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double]
                    avg := avg("quantity") ROWS CURRENT_ROW UNBOUNDED_FOLLOWING
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                        sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount

]
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.lambda$assertUnitPlan$23(TestMergeWindows.java:510)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.assertUnitPlan(TestMergeWindows.java:508)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.testMergeDifferentFrames(TestMergeWindows.java:290)

testMergeDifferentFramesWithDefault(com.facebook.presto.sql.planner.optimizations.TestMergeWindows)  Time elapsed: 0.01 sec  <<< FAILURE!
java.lang.AssertionError: 
Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=avg (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=CURRENT_ROW, value=Optional.empty}, end=Optional[FrameBound{type=UNBOUNDED_FOLLOWING, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) }
        bind WindowFunctionMatcher{callMaker=sum (QUANTITY) }
        - node(TableScanNode)
            TableScanMatcher{expectedTableName=lineitem}
            bind QUANTITY -> Column lineitem:quantity
            bind DISCOUNT -> Column lineitem:discount
            bind SUPPKEY -> Column lineitem:suppkey
            bind ORDERKEY -> Column lineitem:orderkey

] but found [

- Output[sum_quantity_C, avg_quantity_D, sum_discount_C] => [sum:double, avg:double, sum_9:double]
        sum_quantity_C := sum
        avg_quantity_D := avg
        sum_discount_C := sum_9
    - Project[] => [sum:double, avg:double, sum_9:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double, sum_9:double]
                sum_9 := sum("discount") 
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double]
                    avg := avg("quantity") ROWS CURRENT_ROW UNBOUNDED_FOLLOWING
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                        sum := sum("quantity") 
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount

] which resolves to [

- Output[sum_quantity_C, avg_quantity_D, sum_discount_C] => [sum:double, avg:double, sum_9:double]
        sum_quantity_C := sum
        avg_quantity_D := avg
        sum_discount_C := sum_9
    - Project[] => [sum:double, avg:double, sum_9:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double, sum_9:double]
                sum_9 := sum("discount") 
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double]
                    avg := avg("quantity") ROWS CURRENT_ROW UNBOUNDED_FOLLOWING
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                        sum := sum("quantity") 
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount

]
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.lambda$assertUnitPlan$23(TestMergeWindows.java:510)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.assertUnitPlan(TestMergeWindows.java:508)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.testMergeDifferentFramesWithDefault(TestMergeWindows.java:319)

testMergeableWindowsAllOptimizers(com.facebook.presto.sql.planner.optimizations.TestMergeWindows)  Time elapsed: 0.028 sec  <<< FAILURE!
java.lang.AssertionError: 
Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - anyTree
            - node(WindowNode)
                WindowMatcher{specification=SpecificationProvider{partitionBy=[ORDERKEY], orderBy=[SHIPDATE], orderings={SHIPDATE=ASC_NULLS_LAST}}}
                bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
                - node
                    NotPlanNodeMatcher{excludedNodeClass=class com.facebook.presto.sql.planner.plan.WindowNode}
                    - node(TableScanNode)
                        TableScanMatcher{expectedTableName=lineitem}
                        bind QUANTITY -> Column lineitem:quantity
                        bind DISCOUNT -> Column lineitem:discount
                        bind SUPPKEY -> Column lineitem:suppkey
                        bind ORDERKEY -> Column lineitem:orderkey
                        bind SHIPDATE -> Column lineitem:shipdate

] but found [

- Output[sum_quantity_A, sum_quantity_B, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_quantity_A := sum
        sum_quantity_B := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)][$hashvalue_26] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, $hashvalue_26:bigint, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, $hashvalue_26:bigint]
                    $hashvalue_26 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                - Window[partition by (orderkey), order by (shipdate ASC_NULLS_LAST)][$hashvalue_25] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, $hashvalue_25:bigint, sum_6:double]
                        sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, $hashvalue_25:bigint]
                            $hashvalue_25 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("orderkey"), 0))
                        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)][$hashvalue] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue:bigint, sum:double]
                                sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                            - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue:bigint]
                                    Cost: {rows: 60000, bytes: ?}
                                - LocalExchange[SINGLE] () => orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue:bigint, $hashvalue_22:bigint
                                        Cost: {rows: 60000, bytes: ?}
                                    - ScanProject[table = local:tpch:lineitem:sf0.01, originalConstraint = true] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue_23:bigint, $hashvalue_24:bigint]
                                            Cost: {rows: 60000, bytes: ?}/{rows: 60000, bytes: ?}
                                            $hashvalue_23 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                                            $hashvalue_24 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("orderkey"), 0))
                                            orderkey := tpch:orderkey
                                            suppkey := tpch:suppkey
                                            quantity := tpch:quantity
                                            discount := tpch:discount
                                            shipdate := tpch:shipdate

] which resolves to [

- Output[sum_quantity_A, sum_quantity_B, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_quantity_A := sum
        sum_quantity_B := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)][$hashvalue_26] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, $hashvalue_26:bigint, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, $hashvalue_26:bigint]
                    $hashvalue_26 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                - Window[partition by (orderkey), order by (shipdate ASC_NULLS_LAST)][$hashvalue_25] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, $hashvalue_25:bigint, sum_6:double]
                        sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, $hashvalue_25:bigint]
                            $hashvalue_25 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("orderkey"), 0))
                        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)][$hashvalue] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue:bigint, sum:double]
                                sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                            - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue:bigint]
                                    Cost: {rows: 60000, bytes: ?}
                                - LocalExchange[SINGLE] () => orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue:bigint, $hashvalue_22:bigint
                                        Cost: {rows: 60000, bytes: ?}
                                    - ScanProject[table = local:tpch:lineitem:sf0.01, originalConstraint = true] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue_23:bigint, $hashvalue_24:bigint]
                                            Cost: {rows: 60000, bytes: ?}/{rows: 60000, bytes: ?}
                                            $hashvalue_23 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                                            $hashvalue_24 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("orderkey"), 0))
                                            orderkey := tpch:orderkey
                                            suppkey := tpch:suppkey
                                            quantity := tpch:quantity
                                            discount := tpch:discount
                                            shipdate := tpch:shipdate

]
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.testMergeableWindowsAllOptimizers(TestMergeWindows.java:165)

testNotMergeDifferentNullOrdering(com.facebook.presto.sql.planner.optimizations.TestMergeWindows)  Time elapsed: 0.016 sec  <<< FAILURE!
java.lang.AssertionError: 
Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (EXTENDEDPRICE) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_FIRST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
            - node(TableScanNode)
                TableScanMatcher{expectedTableName=lineitem}
                bind QUANTITY -> Column lineitem:quantity
                bind SUPPKEY -> Column lineitem:suppkey
                bind ORDERKEY -> Column lineitem:orderkey
                bind DISCOUNT -> Column lineitem:discount
                bind EXTENDEDPRICE -> Column lineitem:extendedprice

] but found [

- Output[sum_extendedprice_A, sum_quantity_C, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_extendedprice_A := sum
        sum_quantity_C := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_FIRST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double]
                    sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double]
                        sum := sum("extendedprice") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            extendedprice := tpch:extendedprice
                            discount := tpch:discount

] which resolves to [

- Output[sum_extendedprice_A, sum_quantity_C, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_extendedprice_A := sum
        sum_quantity_C := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_FIRST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double]
                    sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double]
                        sum := sum("extendedprice") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            extendedprice := tpch:extendedprice
                            discount := tpch:discount

]
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.lambda$assertUnitPlan$23(TestMergeWindows.java:510)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.assertUnitPlan(TestMergeWindows.java:508)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.testNotMergeDifferentNullOrdering(TestMergeWindows.java:486)

testNotMergeDifferentOrdering(com.facebook.presto.sql.planner.optimizations.TestMergeWindows)  Time elapsed: 0.011 sec  <<< FAILURE!
java.lang.AssertionError: 
Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=DESC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (EXTENDEDPRICE) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
            bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
            - node(TableScanNode)
                TableScanMatcher{expectedTableName=lineitem}
                bind QUANTITY -> Column lineitem:quantity
                bind SUPPKEY -> Column lineitem:suppkey
                bind ORDERKEY -> Column lineitem:orderkey
                bind DISCOUNT -> Column lineitem:discount
                bind EXTENDEDPRICE -> Column lineitem:extendedprice

] but found [

- Output[sum_extendedprice_A, sum_quantity_C, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_extendedprice_A := sum
        sum_quantity_C := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey DESC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double]
                    sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double]
                        sum := sum("extendedprice") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            extendedprice := tpch:extendedprice
                            discount := tpch:discount

] which resolves to [

- Output[sum_extendedprice_A, sum_quantity_C, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_extendedprice_A := sum
        sum_quantity_C := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey DESC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double]
                    sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double]
                        sum := sum("extendedprice") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            extendedprice := tpch:extendedprice
                            discount := tpch:discount

]
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.lambda$assertUnitPlan$23(TestMergeWindows.java:510)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.assertUnitPlan(TestMergeWindows.java:508)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.testNotMergeDifferentOrdering(TestMergeWindows.java:460)

testNotMergeDifferentPartition(com.facebook.presto.sql.planner.optimizations.TestMergeWindows)  Time elapsed: 0.009 sec  <<< FAILURE!
java.lang.AssertionError: 
Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[QUANTITY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
            - node(TableScanNode)
                TableScanMatcher{expectedTableName=lineitem}
                bind QUANTITY -> Column lineitem:quantity
                bind DISCOUNT -> Column lineitem:discount
                bind SUPPKEY -> Column lineitem:suppkey
                bind ORDERKEY -> Column lineitem:orderkey

] but found [

- Output[sum_extendedprice_A, sum_quantity_C] => [sum:double, sum_6:double]
        sum_extendedprice_A := sum
        sum_quantity_C := sum_6
    - Project[] => [sum:double, sum_6:double]
        - Window[partition by (quantity), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, sum_6:double]
                sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                    sum := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                        Cost: {rows: 60000, bytes: ?}
                        orderkey := tpch:orderkey
                        suppkey := tpch:suppkey
                        quantity := tpch:quantity
                        discount := tpch:discount

] which resolves to [

- Output[sum_extendedprice_A, sum_quantity_C] => [sum:double, sum_6:double]
        sum_extendedprice_A := sum
        sum_quantity_C := sum_6
    - Project[] => [sum:double, sum_6:double]
        - Window[partition by (quantity), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, sum_6:double]
                sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                    sum := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                        Cost: {rows: 60000, bytes: ?}
                        orderkey := tpch:orderkey
                        suppkey := tpch:suppkey
                        quantity := tpch:quantity
                        discount := tpch:discount

]
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.lambda$assertUnitPlan$23(TestMergeWindows.java:510)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.assertUnitPlan(TestMergeWindows.java:508)
	at com.facebook.presto.sql.planner.optimizations.TestMergeWindows.testNotMergeDifferentPartition(TestMergeWindows.java:411)

testNotAllInputsReferenced(com.facebook.presto.sql.planner.iterative.rule.TestPruneAggregationColumns)  Time elapsed: 0.004 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneAggregationColumns did not fire for:
        - Project[] => [b:bigint]
            - Aggregate[key] => [key:bigint, a:bigint, b:bigint]
                    a := "count"(*)
                    b := "count"(*)
                - Values => [key:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneAggregationColumns.testNotAllInputsReferenced(TestPruneAggregationColumns.java:46)

testLeftInputNotReferenced(com.facebook.presto.sql.planner.iterative.rule.TestPruneCrossJoinColumns)  Time elapsed: 0.006 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneCrossJoinColumns did not fire for:
        - Project[] => [rightValue:bigint]
                Cost: {rows: 0, bytes: ?}
            - CrossJoin => [leftValue:bigint, rightValue:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [leftValue:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [rightValue:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneCrossJoinColumns.testLeftInputNotReferenced(TestPruneCrossJoinColumns.java:45)

testRightInputNotReferenced(com.facebook.presto.sql.planner.iterative.rule.TestPruneCrossJoinColumns)  Time elapsed: 0.003 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneCrossJoinColumns did not fire for:
        - Project[] => [leftValue:bigint]
                Cost: {rows: 0, bytes: ?}
            - CrossJoin => [leftValue:bigint, rightValue:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [leftValue:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [rightValue:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneCrossJoinColumns.testRightInputNotReferenced(TestPruneCrossJoinColumns.java:64)

testNotAllInputsReferenced(com.facebook.presto.sql.planner.iterative.rule.TestPruneFilterColumns)  Time elapsed: 0.003 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneFilterColumns did not fire for:
        - FilterProject[filterPredicate = ("b" > 5)] => [b:bigint]
                Cost: {rows: 0, bytes: ?}/{rows: 0, bytes: ?}
            - Values => [a:bigint, b:bigint]
                    Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneFilterColumns.testNotAllInputsReferenced(TestPruneFilterColumns.java:43)

testNotAllOutputsReferenced(com.facebook.presto.sql.planner.iterative.rule.TestPruneIndexSourceColumns)  Time elapsed: 0.005 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneIndexSourceColumns did not fire for:
        - Project[] => [orderkey:integer]
            - IndexSource[local:INSTANCE:INSTANCE, lookup = [orderkey, custkey]] => [orderkey:integer, custkey:integer, totalprice:double]
                    orderkey := tpch:orderkey
                    custkey := tpch:custkey
                    totalprice := tpch:totalprice

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneIndexSourceColumns.testNotAllOutputsReferenced(TestPruneIndexSourceColumns.java:53)

testNotAllOutputsReferenced(com.facebook.presto.sql.planner.iterative.rule.TestPruneJoinColumns)  Time elapsed: 0.003 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneJoinColumns did not fire for:
        - Project[] => [rightValue:bigint]
                Cost: {rows: 0, bytes: ?}
            - InnerJoin[("leftKey" = "rightKey")] => [leftKey:bigint, leftValue:bigint, rightKey:bigint, rightValue:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [leftKey:bigint, leftValue:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [rightKey:bigint, rightValue:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneJoinColumns.testNotAllOutputsReferenced(TestPruneJoinColumns.java:46)

testMarkerSymbolNotReferenced(com.facebook.presto.sql.planner.iterative.rule.TestPruneMarkDistinctColumns)  Time elapsed: 0.002 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneMarkDistinctColumns did not fire for:
        - Project[] => [key2:bigint]
                key2 := "key"
            - MarkDistinct[distinct=key:bigint marker=mark] => [key:bigint, unused:bigint, mark:bigint]
                - Values => [key:bigint, unused:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneMarkDistinctColumns.testMarkerSymbolNotReferenced(TestPruneMarkDistinctColumns.java:46)

testSourceSymbolNotReferenced(com.facebook.presto.sql.planner.iterative.rule.TestPruneMarkDistinctColumns)  Time elapsed: 0.004 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneMarkDistinctColumns did not fire for:
        - Project[] => [mark:bigint]
            - MarkDistinct[distinct=key:bigint marker=mark][hash] => [key:bigint, hash:bigint, unused:bigint, mark:bigint]
                - Values => [key:bigint, hash:bigint, unused:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneMarkDistinctColumns.testSourceSymbolNotReferenced(TestPruneMarkDistinctColumns.java:71)

testNotAllOutputsReferenced(com.facebook.presto.sql.planner.iterative.rule.TestPruneProjectColumns)  Time elapsed: 0.002 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneProjectColumns did not fire for:
        - Project[] => [b:bigint]
                Cost: {rows: 0, bytes: ?}
            - Project[] => [a:bigint, b:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [a:bigint, b:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneProjectColumns.testNotAllOutputsReferenced(TestPruneProjectColumns.java:43)

testSemiJoinNotNeeded(com.facebook.presto.sql.planner.iterative.rule.TestPruneSemiJoinColumns)  Time elapsed: 0.004 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneSemiJoinColumns did not fire for:
        - Project[] => [leftValue:bigint]
                Cost: {rows: 0, bytes: ?}
            - SemiJoin[leftKey = rightKey][leftKeyHash] => [leftKey:bigint, leftKeyHash:bigint, leftValue:bigint, match:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [leftKey:bigint, leftKeyHash:bigint, leftValue:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [rightKey:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneSemiJoinColumns.testSemiJoinNotNeeded(TestPruneSemiJoinColumns.java:43)

testValueNotNeeded(com.facebook.presto.sql.planner.iterative.rule.TestPruneSemiJoinColumns)  Time elapsed: 0.003 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneSemiJoinColumns did not fire for:
        - Project[] => [match:bigint]
                Cost: {rows: 0, bytes: ?}
            - SemiJoin[leftKey = rightKey][leftKeyHash] => [leftKey:bigint, leftKeyHash:bigint, leftValue:bigint, match:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [leftKey:bigint, leftKeyHash:bigint, leftValue:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [rightKey:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneSemiJoinColumns.testValueNotNeeded(TestPruneSemiJoinColumns.java:70)

testNotAllOutputsReferenced(com.facebook.presto.sql.planner.iterative.rule.TestPruneTableScanColumns)  Time elapsed: 0.003 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneTableScanColumns did not fire for:
        - ScanProject[table = local:tpch:orders:sf0.01, originalConstraint = null] => [x:bigint]
                Cost: {rows: 15000, bytes: ?}/{rows: 15000, bytes: ?}
                x := "totalprice"
                orderdate := tpch:orderdate
                totalprice := tpch:totalprice

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneTableScanColumns.testNotAllOutputsReferenced(TestPruneTableScanColumns.java:58)

testNotAllInputsReferenced(com.facebook.presto.sql.planner.iterative.rule.TestPruneTopNColumns)  Time elapsed: 0.005 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneTopNColumns did not fire for:
        - Project[] => [b:bigint]
            - TopN[10 by (b ASC_NULLS_FIRST)] => [a:bigint, b:bigint]
                - Values => [a:bigint, b:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneTopNColumns.testNotAllInputsReferenced(TestPruneTopNColumns.java:45)

testNotAllOutputsReferenced(com.facebook.presto.sql.planner.iterative.rule.TestPruneValuesColumns)  Time elapsed: 0.002 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PruneValuesColumns did not fire for:
        - Project[] => [y:bigint]
                Cost: {rows: 2, bytes: ?}
                y := "x"
            - Values => [unused:bigint, x:bigint]
                    Cost: {rows: 2, bytes: ?}
                    (1, 2)
                    (3, 4)

	at com.facebook.presto.sql.planner.iterative.rule.TestPruneValuesColumns.testNotAllOutputsReferenced(TestPruneValuesColumns.java:43)

testPushesAggregationThroughLeftJoin(com.facebook.presto.sql.planner.iterative.rule.TestPushAggregationThroughOuterJoin)  Time elapsed: 0.003 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PushAggregationThroughOuterJoin did not fire for:
        - Aggregate[COL1] => [COL1:bigint, AVG:double]
                AVG := "avg"("COL2")
            - LeftJoin[("COL1" = "COL2")] => [COL1:bigint, COL2:bigint]
                    Cost: {rows: 2, bytes: ?}
                - Values => [COL1:bigint]
                        Cost: {rows: 1, bytes: ?}
                        (10)
                - Values => [COL2:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPushAggregationThroughOuterJoin.testPushesAggregationThroughLeftJoin(TestPushAggregationThroughOuterJoin.java:58)

testPushesAggregationThroughRightJoin(com.facebook.presto.sql.planner.iterative.rule.TestPushAggregationThroughOuterJoin)  Time elapsed: 0.003 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PushAggregationThroughOuterJoin did not fire for:
        - Aggregate[COL1] => [COL1:bigint, AVG:double]
                AVG := "avg"("COL2")
            - RightJoin[("COL2" = "COL1")] => [COL2:bigint, COL1:bigint]
                    Cost: {rows: 2, bytes: ?}
                - Values => [COL2:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [COL1:bigint]
                        Cost: {rows: 1, bytes: ?}
                        (10)

	at com.facebook.presto.sql.planner.iterative.rule.TestPushAggregationThroughOuterJoin.testPushesAggregationThroughRightJoin(TestPushAggregationThroughOuterJoin.java:97)

test(com.facebook.presto.sql.planner.iterative.rule.TestPushLimitThroughMarkDistinct)  Time elapsed: 0.005 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PushLimitThroughMarkDistinct did not fire for:
        - Limit[1] => [foo:bigint]
                Cost: {rows: 1, bytes: ?}
            - MarkDistinct[distinct= marker=foo] => [foo:bigint]
                - Values => []
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPushLimitThroughMarkDistinct.test(TestPushLimitThroughMarkDistinct.java:38)

testPartitioningColumnAndHashWithoutIdentityMappingInProjection(com.facebook.presto.sql.planner.iterative.rule.TestPushProjectionThroughExchange)  Time elapsed: 0.004 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PushProjectionThroughExchange did not fire for:
        - Project[] => [a_times_5:bigint, b_times_5:bigint, h_times_5:bigint]
                Cost: {rows: 0, bytes: ?}
                a_times_5 := ("a" * 5)
                b_times_5 := ("b" * 5)
                h_times_5 := ("h" * 5)
            - RemoteExchange[GATHER][h] => a:bigint, b:bigint, h:bigint
                    Cost: {rows: 0, bytes: ?}
                - Values => [a:bigint, b:bigint, h:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPushProjectionThroughExchange.testPartitioningColumnAndHashWithoutIdentityMappingInProjection(TestPushProjectionThroughExchange.java:132)

testSimpleMultipleInputs(com.facebook.presto.sql.planner.iterative.rule.TestPushProjectionThroughExchange)  Time elapsed: 0.004 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PushProjectionThroughExchange did not fire for:
        - Project[] => [x:bigint, c2:bigint]
                Cost: {rows: 0, bytes: ?}
                x := 3
                c2 := "c"
            - RemoteExchange[GATHER] => c:bigint
                    Cost: {rows: 0, bytes: ?}
                - Values => [a:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [b:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPushProjectionThroughExchange.testSimpleMultipleInputs(TestPushProjectionThroughExchange.java:92)

test(com.facebook.presto.sql.planner.iterative.rule.TestPushProjectionThroughUnion)  Time elapsed: 0.003 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PushProjectionThroughUnion did not fire for:
        - Project[] => [c_times_3:bigint]
                c_times_3 := ("c" * 3)
            - Union => [c:bigint]
                - Values => [a:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [b:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPushProjectionThroughUnion.test(TestPushProjectionThroughUnion.java:67)

testPushThroughUnion(com.facebook.presto.sql.planner.iterative.rule.TestPushTableWriteThroughUnion)  Time elapsed: 0.432 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.PushTableWriteThroughUnion did not fire for:
        - TableWriter => [partialrows:bigint, fragment:varbinary]
                a := A
                b := B
            - Union => [A:bigint, B:bigint]
                - Values => [A1:bigint, B1:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [A2:bigint, B2:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestPushTableWriteThroughUnion.testPushThroughUnion(TestPushTableWriteThroughUnion.java:45)

test(com.facebook.presto.sql.planner.iterative.rule.TestRemoveEmptyDelete)  Time elapsed: 0.039 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.RemoveEmptyDelete did not fire for:
        - TableCommit[testConnector:com.facebook.presto.testing.TestingMetadata$TestingTableHandle@4ff61627] => [a:bigint]
            - RemoteExchange[GATHER] => a:bigint
                - Delete[testConnector:com.facebook.presto.testing.TestingMetadata$TestingTableHandle@4ff61627] => [a:bigint]
                    - Values => []
                            Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestRemoveEmptyDelete.test(TestRemoveEmptyDelete.java:55)

testNonMergeableABAReordersToAAB(com.facebook.presto.sql.planner.optimizations.TestReorderWindows)  Time elapsed: 0.016 sec  <<< FAILURE!
java.lang.AssertionError: 
Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[SHIPDATE], orderings={SHIPDATE=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=min (TAX) }
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) }
            - node(WindowNode)
                WindowMatcher{specification=SpecificationProvider{partitionBy=[PARTKEY], orderBy=[RECEIPTDATE], orderings={RECEIPTDATE=ASC_NULLS_LAST}}}
                bind WindowFunctionMatcher{callMaker=avg (DISCOUNT) }
                - node(TableScanNode)
                    TableScanMatcher{expectedTableName=lineitem}
                    bind DISCOUNT -> Column lineitem:discount
                    bind ORDERKEY -> Column lineitem:orderkey
                    bind QUANTITY -> Column lineitem:quantity
                    bind PARTKEY -> Column lineitem:partkey
                    bind RECEIPTDATE -> Column lineitem:receiptdate
                    bind SHIPDATE -> Column lineitem:shipdate
                    bind SUPPKEY -> Column lineitem:suppkey
                    bind TAX -> Column lineitem:tax

] but found [

- Output[sum_quantity_A, avg_discount_B, min_tax_A] => [sum:double, avg:double, min:double]
        sum_quantity_A := sum
        avg_discount_B := avg
        min_tax_A := min
    - Project[] => [sum:double, avg:double, min:double]
        - Window[partition by (suppkey), order by (shipdate ASC_NULLS_LAST)] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double, min:double]
                min := min("tax") 
            - Window[partition by (partkey), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double]
                    avg := avg("discount") 
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double]
                        sum := sum("quantity") 
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            partkey := tpch:partkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount
                            tax := tpch:tax
                            shipdate := tpch:shipdate
                            receiptdate := tpch:receiptdate

] which resolves to [

- Output[sum_quantity_A, avg_discount_B, min_tax_A] => [sum:double, avg:double, min:double]
        sum_quantity_A := sum
        avg_discount_B := avg
        min_tax_A := min
    - Project[] => [sum:double, avg:double, min:double]
        - Window[partition by (suppkey), order by (shipdate ASC_NULLS_LAST)] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double, min:double]
                min := min("tax") 
            - Window[partition by (partkey), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double]
                    avg := avg("discount") 
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double]
                        sum := sum("quantity") 
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            partkey := tpch:partkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount
                            tax := tpch:tax
                            shipdate := tpch:shipdate
                            receiptdate := tpch:receiptdate

]
	at com.facebook.presto.sql.planner.optimizations.TestReorderWindows.lambda$assertUnitPlan$16(TestReorderWindows.java:287)
	at com.facebook.presto.sql.planner.optimizations.TestReorderWindows.assertUnitPlan(TestReorderWindows.java:285)
	at com.facebook.presto.sql.planner.optimizations.TestReorderWindows.testNonMergeableABAReordersToAAB(TestReorderWindows.java:165)

testNonMergeableABAReordersToAABAllOptimizers(com.facebook.presto.sql.planner.optimizations.TestReorderWindows)  Time elapsed: 0.02 sec  <<< FAILURE!
java.lang.AssertionError: 
Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[SHIPDATE], orderings={SHIPDATE=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=min (TAX) }
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) }
            - anyTree
                - node(WindowNode)
                    WindowMatcher{specification=SpecificationProvider{partitionBy=[PARTKEY], orderBy=[RECEIPTDATE], orderings={RECEIPTDATE=ASC_NULLS_LAST}}}
                    bind WindowFunctionMatcher{callMaker=avg (DISCOUNT) }
                    - anyTree
                        - node(TableScanNode)
                            TableScanMatcher{expectedTableName=lineitem}
                            bind DISCOUNT -> Column lineitem:discount
                            bind ORDERKEY -> Column lineitem:orderkey
                            bind QUANTITY -> Column lineitem:quantity
                            bind PARTKEY -> Column lineitem:partkey
                            bind RECEIPTDATE -> Column lineitem:receiptdate
                            bind SHIPDATE -> Column lineitem:shipdate
                            bind SUPPKEY -> Column lineitem:suppkey
                            bind TAX -> Column lineitem:tax

] but found [

- Output[sum_quantity_A, avg_discount_B, min_tax_A] => [sum:double, avg:double, min:double]
        sum_quantity_A := sum
        avg_discount_B := avg
        min_tax_A := min
    - Project[] => [sum:double, avg:double, min:double]
        - Window[partition by (suppkey), order by (shipdate ASC_NULLS_LAST)][$hashvalue_24] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double, $hashvalue_24:bigint, min:double]
                min := min("tax") 
            - Project[] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double, $hashvalue_24:bigint]
                    $hashvalue_24 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                - Window[partition by (partkey), order by (receiptdate ASC_NULLS_LAST)][$hashvalue_23] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, $hashvalue_23:bigint, avg:double]
                        avg := avg("discount") 
                    - Project[] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, $hashvalue_23:bigint]
                            $hashvalue_23 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("partkey"), 0))
                        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)][$hashvalue] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue:bigint, sum:double]
                                sum := sum("quantity") 
                            - Project[] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue:bigint]
                                    Cost: {rows: 60000, bytes: ?}
                                - LocalExchange[SINGLE] () => orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue:bigint, $hashvalue_20:bigint
                                        Cost: {rows: 60000, bytes: ?}
                                    - ScanProject[table = local:tpch:lineitem:sf0.01, originalConstraint = true] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue_21:bigint, $hashvalue_22:bigint]
                                            Cost: {rows: 60000, bytes: ?}/{rows: 60000, bytes: ?}
                                            $hashvalue_21 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                                            $hashvalue_22 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("partkey"), 0))
                                            orderkey := tpch:orderkey
                                            partkey := tpch:partkey
                                            suppkey := tpch:suppkey
                                            quantity := tpch:quantity
                                            discount := tpch:discount
                                            tax := tpch:tax
                                            shipdate := tpch:shipdate
                                            receiptdate := tpch:receiptdate

] which resolves to [

- Output[sum_quantity_A, avg_discount_B, min_tax_A] => [sum:double, avg:double, min:double]
        sum_quantity_A := sum
        avg_discount_B := avg
        min_tax_A := min
    - Project[] => [sum:double, avg:double, min:double]
        - Window[partition by (suppkey), order by (shipdate ASC_NULLS_LAST)][$hashvalue_24] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double, $hashvalue_24:bigint, min:double]
                min := min("tax") 
            - Project[] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double, $hashvalue_24:bigint]
                    $hashvalue_24 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                - Window[partition by (partkey), order by (receiptdate ASC_NULLS_LAST)][$hashvalue_23] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, $hashvalue_23:bigint, avg:double]
                        avg := avg("discount") 
                    - Project[] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, $hashvalue_23:bigint]
                            $hashvalue_23 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("partkey"), 0))
                        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)][$hashvalue] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue:bigint, sum:double]
                                sum := sum("quantity") 
                            - Project[] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue:bigint]
                                    Cost: {rows: 60000, bytes: ?}
                                - LocalExchange[SINGLE] () => orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue:bigint, $hashvalue_20:bigint
                                        Cost: {rows: 60000, bytes: ?}
                                    - ScanProject[table = local:tpch:lineitem:sf0.01, originalConstraint = true] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue_21:bigint, $hashvalue_22:bigint]
                                            Cost: {rows: 60000, bytes: ?}/{rows: 60000, bytes: ?}
                                            $hashvalue_21 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                                            $hashvalue_22 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("partkey"), 0))
                                            orderkey := tpch:orderkey
                                            partkey := tpch:partkey
                                            suppkey := tpch:suppkey
                                            quantity := tpch:quantity
                                            discount := tpch:discount
                                            tax := tpch:tax
                                            shipdate := tpch:shipdate
                                            receiptdate := tpch:receiptdate

]
	at com.facebook.presto.sql.planner.optimizations.TestReorderWindows.testNonMergeableABAReordersToAABAllOptimizers(TestReorderWindows.java:153)

testPrefixOfPartitionComesFirstRegardlessOfTheirOrderInSQL(com.facebook.presto.sql.planner.optimizations.TestReorderWindows)  Time elapsed: 0.006 sec  <<< FAILURE!
java.lang.AssertionError: 
Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY, TAX], orderBy=[RECEIPTDATE], orderings={RECEIPTDATE=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=avg (DISCOUNT) }
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) }
            - node(TableScanNode)
                TableScanMatcher{expectedTableName=lineitem}
                bind DISCOUNT -> Column lineitem:discount
                bind ORDERKEY -> Column lineitem:orderkey
                bind QUANTITY -> Column lineitem:quantity
                bind RECEIPTDATE -> Column lineitem:receiptdate
                bind SUPPKEY -> Column lineitem:suppkey
                bind TAX -> Column lineitem:tax

] but found [

- Output[avg_discount_A, sum_quantity_A] => [avg:double, sum:double]
        avg_discount_A := avg
        sum_quantity_A := sum
    - Project[] => [avg:double, sum:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double]
                sum := sum("quantity") 
            - Window[partition by (suppkey, tax), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double]
                    avg := avg("discount") 
                - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date]
                        Cost: {rows: 60000, bytes: ?}
                        orderkey := tpch:orderkey
                        suppkey := tpch:suppkey
                        quantity := tpch:quantity
                        discount := tpch:discount
                        tax := tpch:tax
                        receiptdate := tpch:receiptdate

] which resolves to [

- Output[avg_discount_A, sum_quantity_A] => [avg:double, sum:double]
        avg_discount_A := avg
        sum_quantity_A := sum
    - Project[] => [avg:double, sum:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double]
                sum := sum("quantity") 
            - Window[partition by (suppkey, tax), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double]
                    avg := avg("discount") 
                - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date]
                        Cost: {rows: 60000, bytes: ?}
                        orderkey := tpch:orderkey
                        suppkey := tpch:suppkey
                        quantity := tpch:quantity
                        discount := tpch:discount
                        tax := tpch:tax
                        receiptdate := tpch:receiptdate

]
	at com.facebook.presto.sql.planner.optimizations.TestReorderWindows.lambda$assertUnitPlan$16(TestReorderWindows.java:287)
	at com.facebook.presto.sql.planner.optimizations.TestReorderWindows.assertUnitPlan(TestReorderWindows.java:285)
	at com.facebook.presto.sql.planner.optimizations.TestReorderWindows.testPrefixOfPartitionComesFirstRegardlessOfTheirOrderInSQL(TestReorderWindows.java:188)

testReorderBDAC(com.facebook.presto.sql.planner.optimizations.TestReorderWindows)  Time elapsed: 0.013 sec  <<< FAILURE!
java.lang.AssertionError: 
Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[TAX], orderBy=[RECEIPTDATE], orderings={RECEIPTDATE=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=avg (QUANTITY) }
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=avg (DISCOUNT) }
            - node(WindowNode)
                WindowMatcher{specification=SpecificationProvider{partitionBy=[RECEIPTDATE], orderBy=[SUPPKEY], orderings={SUPPKEY=ASC_NULLS_LAST}}}
                bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) }
                - node(WindowNode)
                    WindowMatcher{specification=SpecificationProvider{partitionBy=[QUANTITY], orderBy=[RECEIPTDATE], orderings={RECEIPTDATE=ASC_NULLS_LAST}}}
                    bind WindowFunctionMatcher{callMaker=sum (TAX) }
                    - node(TableScanNode)
                        TableScanMatcher{expectedTableName=lineitem}
                        bind DISCOUNT -> Column lineitem:discount
                        bind ORDERKEY -> Column lineitem:orderkey
                        bind QUANTITY -> Column lineitem:quantity
                        bind RECEIPTDATE -> Column lineitem:receiptdate
                        bind SUPPKEY -> Column lineitem:suppkey
                        bind TAX -> Column lineitem:tax

] but found [

- Output[avg_discount_A, sum_tax_E, avg_quantity_D, sum_discount_C] => [avg:double, sum:double, avg_9:double, sum_13:double]
        avg_discount_A := avg
        sum_tax_E := sum
        avg_quantity_D := avg_9
        sum_discount_C := sum_13
    - Project[] => [avg:double, sum:double, avg_9:double, sum_13:double]
        - Window[partition by (receiptdate), order by (suppkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double, avg_9:double, sum_13:double]
                sum_13 := sum("discount") 
            - Window[partition by (tax), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double, avg_9:double]
                    avg_9 := avg("quantity") 
                - Window[partition by (quantity), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double]
                        sum := sum("tax") 
                    - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double]
                            avg := avg("discount") 
                        - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date]
                                Cost: {rows: 60000, bytes: ?}
                                orderkey := tpch:orderkey
                                suppkey := tpch:suppkey
                                quantity := tpch:quantity
                                discount := tpch:discount
                                tax := tpch:tax
                                receiptdate := tpch:receiptdate

] which resolves to [

- Output[avg_discount_A, sum_tax_E, avg_quantity_D, sum_discount_C] => [avg:double, sum:double, avg_9:double, sum_13:double]
        avg_discount_A := avg
        sum_tax_E := sum
        avg_quantity_D := avg_9
        sum_discount_C := sum_13
    - Project[] => [avg:double, sum:double, avg_9:double, sum_13:double]
        - Window[partition by (receiptdate), order by (suppkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double, avg_9:double, sum_13:double]
                sum_13 := sum("discount") 
            - Window[partition by (tax), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double, avg_9:double]
                    avg_9 := avg("quantity") 
                - Window[partition by (quantity), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double]
                        sum := sum("tax") 
                    - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double]
                            avg := avg("discount") 
                        - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date]
                                Cost: {rows: 60000, bytes: ?}
                                orderkey := tpch:orderkey
                                suppkey := tpch:suppkey
                                quantity := tpch:quantity
                                discount := tpch:discount
                                tax := tpch:tax
                                receiptdate := tpch:receiptdate

]
	at com.facebook.presto.sql.planner.optimizations.TestReorderWindows.lambda$assertUnitPlan$16(TestReorderWindows.java:287)
	at com.facebook.presto.sql.planner.optimizations.TestReorderWindows.assertUnitPlan(TestReorderWindows.java:285)
	at com.facebook.presto.sql.planner.optimizations.TestReorderWindows.testReorderBDAC(TestReorderWindows.java:258)

subsetComesFirst(com.facebook.presto.sql.planner.iterative.rule.TestSwapAdjacentWindowsBySpecifications)  Time elapsed: 0.005 sec  <<< FAILURE!
java.lang.AssertionError: 
com.facebook.presto.sql.planner.iterative.rule.SwapAdjacentWindowsBySpecifications did not fire for:
        - Window[partition by (a)] => [a:bigint, b:bigint, avg_2:double, avg_1:double]
                avg_1 := avg("a") 
            - Window[partition by (a, b)] => [a:bigint, b:bigint, avg_2:double]
                    avg_2 := avg("b") 
                - Values => [a:bigint, b:bigint]
                        Cost: {rows: 0, bytes: ?}

	at com.facebook.presto.sql.planner.iterative.rule.TestSwapAdjacentWindowsBySpecifications.subsetComesFirst(TestSwapAdjacentWindowsBySpecifications.java:113)

testUnionUnderTopN(com.facebook.presto.sql.planner.optimizations.TestUnion)  Time elapsed: 0.021 sec  <<< FAILURE!
java.lang.AssertionError: There should be exactly one RemoteExchange expected [1] but found [2]
	at com.facebook.presto.sql.planner.optimizations.TestUnion.testUnionUnderTopN(TestUnion.java:86)

testUnionUnderTopN(com.facebook.presto.sql.planner.optimizations.TestUnionWithReplicatedJoin)  Time elapsed: 0.026 sec  <<< FAILURE!
java.lang.AssertionError: There should be exactly one RemoteExchange expected [1] but found [2]


Results :

Failed tests: 
  TestInlineProjections.test:52 com.facebook.presto.sql.planner.iterative.rule.InlineProjections did not fire for:
        - Project[] => [identity:bigint, multi_complex_1:bigint, multi_complex_2:bigint, multi_literal_1:bigint, multi_literal_2:bigint, single_complex:bigint, try:bigint]
                Cost: {rows: 0, bytes: ?}
                identity := "symbol"
                multi_complex_1 := ("complex" + 1)
                multi_complex_2 := ("complex" + 2)
                multi_literal_1 := ("literal" + 1)
                multi_literal_2 := ("literal" + 2)
                single_complex := ("complex_2" + 2)
                try := TRY(("complex" / "literal"))
            - Project[] => [symbol:bigint, complex:bigint, literal:bigint, complex_2:bigint]
                    Cost: {rows: 0, bytes: ?}
                    symbol := "x"
                    complex := ("x" * 2)
                    literal := 1
                    complex_2 := ("x" - 1)
                - Values => [x:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestMergeAdjacentWindows.testIdenticalAdjacentWindowSpecifications:168 com.facebook.presto.sql.planner.iterative.rule.MergeAdjacentWindows did not fire for:
        - Window[partition by (a)] => [a:bigint, sum_1:bigint, avg_1:bigint]
                avg_1 := avg("a") 
            - Window[partition by (a)] => [a:bigint, sum_1:bigint]
                    sum_1 := sum("a") 
                - Values => [a:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestMergeFilters.test:35 com.facebook.presto.sql.planner.iterative.rule.MergeFilters did not fire for:
        - Filter[filterPredicate = ("b" > 44)] => [a:bigint, b:bigint]
                Cost: {rows: 0, bytes: ?}
            - Filter[filterPredicate = ("a" < 42)] => [a:bigint, b:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [a:bigint, b:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPruneAggregationColumns.testNotAllInputsReferenced:46 com.facebook.presto.sql.planner.iterative.rule.PruneAggregationColumns did not fire for:
        - Project[] => [b:bigint]
            - Aggregate[key] => [key:bigint, a:bigint, b:bigint]
                    a := "count"(*)
                    b := "count"(*)
                - Values => [key:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPruneCrossJoinColumns.testLeftInputNotReferenced:45 com.facebook.presto.sql.planner.iterative.rule.PruneCrossJoinColumns did not fire for:
        - Project[] => [rightValue:bigint]
                Cost: {rows: 0, bytes: ?}
            - CrossJoin => [leftValue:bigint, rightValue:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [leftValue:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [rightValue:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPruneCrossJoinColumns.testRightInputNotReferenced:64 com.facebook.presto.sql.planner.iterative.rule.PruneCrossJoinColumns did not fire for:
        - Project[] => [leftValue:bigint]
                Cost: {rows: 0, bytes: ?}
            - CrossJoin => [leftValue:bigint, rightValue:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [leftValue:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [rightValue:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPruneFilterColumns.testNotAllInputsReferenced:43 com.facebook.presto.sql.planner.iterative.rule.PruneFilterColumns did not fire for:
        - FilterProject[filterPredicate = ("b" > 5)] => [b:bigint]
                Cost: {rows: 0, bytes: ?}/{rows: 0, bytes: ?}
            - Values => [a:bigint, b:bigint]
                    Cost: {rows: 0, bytes: ?}

  TestPruneIndexSourceColumns.testNotAllOutputsReferenced:53 com.facebook.presto.sql.planner.iterative.rule.PruneIndexSourceColumns did not fire for:
        - Project[] => [orderkey:integer]
            - IndexSource[local:INSTANCE:INSTANCE, lookup = [orderkey, custkey]] => [orderkey:integer, custkey:integer, totalprice:double]
                    orderkey := tpch:orderkey
                    custkey := tpch:custkey
                    totalprice := tpch:totalprice

  TestPruneJoinColumns.testNotAllOutputsReferenced:46 com.facebook.presto.sql.planner.iterative.rule.PruneJoinColumns did not fire for:
        - Project[] => [rightValue:bigint]
                Cost: {rows: 0, bytes: ?}
            - InnerJoin[("leftKey" = "rightKey")] => [leftKey:bigint, leftValue:bigint, rightKey:bigint, rightValue:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [leftKey:bigint, leftValue:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [rightKey:bigint, rightValue:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPruneMarkDistinctColumns.testMarkerSymbolNotReferenced:46 com.facebook.presto.sql.planner.iterative.rule.PruneMarkDistinctColumns did not fire for:
        - Project[] => [key2:bigint]
                key2 := "key"
            - MarkDistinct[distinct=key:bigint marker=mark] => [key:bigint, unused:bigint, mark:bigint]
                - Values => [key:bigint, unused:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPruneMarkDistinctColumns.testSourceSymbolNotReferenced:71 com.facebook.presto.sql.planner.iterative.rule.PruneMarkDistinctColumns did not fire for:
        - Project[] => [mark:bigint]
            - MarkDistinct[distinct=key:bigint marker=mark][hash] => [key:bigint, hash:bigint, unused:bigint, mark:bigint]
                - Values => [key:bigint, hash:bigint, unused:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPruneProjectColumns.testNotAllOutputsReferenced:43 com.facebook.presto.sql.planner.iterative.rule.PruneProjectColumns did not fire for:
        - Project[] => [b:bigint]
                Cost: {rows: 0, bytes: ?}
            - Project[] => [a:bigint, b:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [a:bigint, b:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPruneSemiJoinColumns.testSemiJoinNotNeeded:43 com.facebook.presto.sql.planner.iterative.rule.PruneSemiJoinColumns did not fire for:
        - Project[] => [leftValue:bigint]
                Cost: {rows: 0, bytes: ?}
            - SemiJoin[leftKey = rightKey][leftKeyHash] => [leftKey:bigint, leftKeyHash:bigint, leftValue:bigint, match:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [leftKey:bigint, leftKeyHash:bigint, leftValue:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [rightKey:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPruneSemiJoinColumns.testValueNotNeeded:70 com.facebook.presto.sql.planner.iterative.rule.PruneSemiJoinColumns did not fire for:
        - Project[] => [match:bigint]
                Cost: {rows: 0, bytes: ?}
            - SemiJoin[leftKey = rightKey][leftKeyHash] => [leftKey:bigint, leftKeyHash:bigint, leftValue:bigint, match:bigint]
                    Cost: {rows: 0, bytes: ?}
                - Values => [leftKey:bigint, leftKeyHash:bigint, leftValue:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [rightKey:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPruneTableScanColumns.testNotAllOutputsReferenced:58 com.facebook.presto.sql.planner.iterative.rule.PruneTableScanColumns did not fire for:
        - ScanProject[table = local:tpch:orders:sf0.01, originalConstraint = null] => [x:bigint]
                Cost: {rows: 15000, bytes: ?}/{rows: 15000, bytes: ?}
                x := "totalprice"
                orderdate := tpch:orderdate
                totalprice := tpch:totalprice

  TestPruneTopNColumns.testNotAllInputsReferenced:45 com.facebook.presto.sql.planner.iterative.rule.PruneTopNColumns did not fire for:
        - Project[] => [b:bigint]
            - TopN[10 by (b ASC_NULLS_FIRST)] => [a:bigint, b:bigint]
                - Values => [a:bigint, b:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPruneValuesColumns.testNotAllOutputsReferenced:43 com.facebook.presto.sql.planner.iterative.rule.PruneValuesColumns did not fire for:
        - Project[] => [y:bigint]
                Cost: {rows: 2, bytes: ?}
                y := "x"
            - Values => [unused:bigint, x:bigint]
                    Cost: {rows: 2, bytes: ?}
                    (1, 2)
                    (3, 4)

  TestPushAggregationThroughOuterJoin.testPushesAggregationThroughLeftJoin:58 com.facebook.presto.sql.planner.iterative.rule.PushAggregationThroughOuterJoin did not fire for:
        - Aggregate[COL1] => [COL1:bigint, AVG:double]
                AVG := "avg"("COL2")
            - LeftJoin[("COL1" = "COL2")] => [COL1:bigint, COL2:bigint]
                    Cost: {rows: 2, bytes: ?}
                - Values => [COL1:bigint]
                        Cost: {rows: 1, bytes: ?}
                        (10)
                - Values => [COL2:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPushAggregationThroughOuterJoin.testPushesAggregationThroughRightJoin:97 com.facebook.presto.sql.planner.iterative.rule.PushAggregationThroughOuterJoin did not fire for:
        - Aggregate[COL1] => [COL1:bigint, AVG:double]
                AVG := "avg"("COL2")
            - RightJoin[("COL2" = "COL1")] => [COL2:bigint, COL1:bigint]
                    Cost: {rows: 2, bytes: ?}
                - Values => [COL2:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [COL1:bigint]
                        Cost: {rows: 1, bytes: ?}
                        (10)

  TestPushLimitThroughMarkDistinct.test:38 com.facebook.presto.sql.planner.iterative.rule.PushLimitThroughMarkDistinct did not fire for:
        - Limit[1] => [foo:bigint]
                Cost: {rows: 1, bytes: ?}
            - MarkDistinct[distinct= marker=foo] => [foo:bigint]
                - Values => []
                        Cost: {rows: 0, bytes: ?}

  TestPushProjectionThroughExchange.testPartitioningColumnAndHashWithoutIdentityMappingInProjection:132 com.facebook.presto.sql.planner.iterative.rule.PushProjectionThroughExchange did not fire for:
        - Project[] => [a_times_5:bigint, b_times_5:bigint, h_times_5:bigint]
                Cost: {rows: 0, bytes: ?}
                a_times_5 := ("a" * 5)
                b_times_5 := ("b" * 5)
                h_times_5 := ("h" * 5)
            - RemoteExchange[GATHER][h] => a:bigint, b:bigint, h:bigint
                    Cost: {rows: 0, bytes: ?}
                - Values => [a:bigint, b:bigint, h:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPushProjectionThroughExchange.testSimpleMultipleInputs:92 com.facebook.presto.sql.planner.iterative.rule.PushProjectionThroughExchange did not fire for:
        - Project[] => [x:bigint, c2:bigint]
                Cost: {rows: 0, bytes: ?}
                x := 3
                c2 := "c"
            - RemoteExchange[GATHER] => c:bigint
                    Cost: {rows: 0, bytes: ?}
                - Values => [a:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [b:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPushProjectionThroughUnion.test:67 com.facebook.presto.sql.planner.iterative.rule.PushProjectionThroughUnion did not fire for:
        - Project[] => [c_times_3:bigint]
                c_times_3 := ("c" * 3)
            - Union => [c:bigint]
                - Values => [a:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [b:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestPushTableWriteThroughUnion.testPushThroughUnion:45 com.facebook.presto.sql.planner.iterative.rule.PushTableWriteThroughUnion did not fire for:
        - TableWriter => [partialrows:bigint, fragment:varbinary]
                a := A
                b := B
            - Union => [A:bigint, B:bigint]
                - Values => [A1:bigint, B1:bigint]
                        Cost: {rows: 0, bytes: ?}
                - Values => [A2:bigint, B2:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestRemoveEmptyDelete.test:55 com.facebook.presto.sql.planner.iterative.rule.RemoveEmptyDelete did not fire for:
        - TableCommit[testConnector:com.facebook.presto.testing.TestingMetadata$TestingTableHandle@4ff61627] => [a:bigint]
            - RemoteExchange[GATHER] => a:bigint
                - Delete[testConnector:com.facebook.presto.testing.TestingMetadata$TestingTableHandle@4ff61627] => [a:bigint]
                    - Values => []
                            Cost: {rows: 0, bytes: ?}

  TestSwapAdjacentWindowsBySpecifications.subsetComesFirst:113 com.facebook.presto.sql.planner.iterative.rule.SwapAdjacentWindowsBySpecifications did not fire for:
        - Window[partition by (a)] => [a:bigint, b:bigint, avg_2:double, avg_1:double]
                avg_1 := avg("a") 
            - Window[partition by (a, b)] => [a:bigint, b:bigint, avg_2:double]
                    avg_2 := avg("b") 
                - Values => [a:bigint, b:bigint]
                        Cost: {rows: 0, bytes: ?}

  TestMergeWindows.testIdenticalWindowSpecificationsAAcpA:222->assertUnitPlan:508->lambda$assertUnitPlan$23:510 Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=lag (QUANTITY, ONE, ZERO) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - node(ProjectNode)
            bind ONE -> CAST(1 AS bigint)
            bind ZERO -> 0.0
            - node(WindowNode)
                WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
                bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
                - node(TableScanNode)
                    TableScanMatcher{expectedTableName=lineitem}
                    bind QUANTITY -> Column lineitem:quantity
                    bind DISCOUNT -> Column lineitem:discount
                    bind SUPPKEY -> Column lineitem:suppkey
                    bind ORDERKEY -> Column lineitem:orderkey

] but found [

- Output[sum_quantity_A, sum_quantity_B, sum_discount_A] => [sum:double, lag:double, sum_10:double]
        sum_quantity_A := sum
        sum_quantity_B := lag
        sum_discount_A := sum_10
    - Project[] => [sum:double, lag:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, expr:bigint, expr_4:double, lag:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, expr:bigint, expr_4:double, lag:double]
                    lag := lag("quantity", "expr", "expr_4") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, expr:bigint, expr_4:double]
                        expr := CAST(1 AS bigint)
                        expr_4 := 0.0
                    - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                            sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                        - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                                Cost: {rows: 60000, bytes: ?}
                                orderkey := tpch:orderkey
                                suppkey := tpch:suppkey
                                quantity := tpch:quantity
                                discount := tpch:discount

] which resolves to [

- Output[sum_quantity_A, sum_quantity_B, sum_discount_A] => [sum:double, lag:double, sum_10:double]
        sum_quantity_A := sum
        sum_quantity_B := lag
        sum_discount_A := sum_10
    - Project[] => [sum:double, lag:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, expr:bigint, expr_4:double, lag:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, expr:bigint, expr_4:double, lag:double]
                    lag := lag("quantity", "expr", "expr_4") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, expr:bigint, expr_4:double]
                        expr := CAST(1 AS bigint)
                        expr_4 := 0.0
                    - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                            sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                        - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                                Cost: {rows: 60000, bytes: ?}
                                orderkey := tpch:orderkey
                                suppkey := tpch:suppkey
                                quantity := tpch:quantity
                                discount := tpch:discount

]
  TestMergeWindows.testIdenticalWindowSpecificationsABA:177->assertUnitPlan:508->lambda$assertUnitPlan$23:510 Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[ORDERKEY], orderBy=[SHIPDATE], orderings={SHIPDATE=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
            - node(TableScanNode)
                TableScanMatcher{expectedTableName=lineitem}
                bind QUANTITY -> Column lineitem:quantity
                bind DISCOUNT -> Column lineitem:discount
                bind SUPPKEY -> Column lineitem:suppkey
                bind ORDERKEY -> Column lineitem:orderkey
                bind SHIPDATE -> Column lineitem:shipdate

] but found [

- Output[sum_quantity_A, sum_quantity_B, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_quantity_A := sum
        sum_quantity_B := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (orderkey), order by (shipdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double]
                    sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double]
                        sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount
                            shipdate := tpch:shipdate

] which resolves to [

- Output[sum_quantity_A, sum_quantity_B, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_quantity_A := sum
        sum_quantity_B := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (orderkey), order by (shipdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double]
                    sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double]
                        sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount
                            shipdate := tpch:shipdate

]
  TestMergeWindows.testIdenticalWindowSpecificationsDefaultFrame:254->assertUnitPlan:508->lambda$assertUnitPlan$23:510 Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (QUANTITY) }
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) }
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[ORDERKEY], orderBy=[SHIPDATE], orderings={SHIPDATE=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) }
            - node(TableScanNode)
                TableScanMatcher{expectedTableName=lineitem}
                bind QUANTITY -> Column lineitem:quantity
                bind DISCOUNT -> Column lineitem:discount
                bind SUPPKEY -> Column lineitem:suppkey
                bind ORDERKEY -> Column lineitem:orderkey
                bind SHIPDATE -> Column lineitem:shipdate

] but found [

- Output[_col0, _col1, _col2] => [sum:double, sum_6:double, sum_10:double]
        _col0 := sum
        _col1 := sum_6
        _col2 := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") 
            - Window[partition by (orderkey), order by (shipdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double]
                    sum_6 := sum("quantity") 
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double]
                        sum := sum("quantity") 
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount
                            shipdate := tpch:shipdate

] which resolves to [

- Output[_col0, _col1, _col2] => [sum:double, sum_6:double, sum_10:double]
        _col0 := sum
        _col1 := sum_6
        _col2 := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") 
            - Window[partition by (orderkey), order by (shipdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double]
                    sum_6 := sum("quantity") 
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double]
                        sum := sum("quantity") 
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount
                            shipdate := tpch:shipdate

]
  TestMergeWindows.testMergeDifferentFrames:290->assertUnitPlan:508->lambda$assertUnitPlan$23:510 Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=avg (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=CURRENT_ROW, value=Optional.empty}, end=Optional[FrameBound{type=UNBOUNDED_FOLLOWING, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - node(TableScanNode)
            TableScanMatcher{expectedTableName=lineitem}
            bind QUANTITY -> Column lineitem:quantity
            bind DISCOUNT -> Column lineitem:discount
            bind SUPPKEY -> Column lineitem:suppkey
            bind ORDERKEY -> Column lineitem:orderkey

] but found [

- Output[sum_quantity_C, avg_quantity_D, sum_discount_C] => [sum:double, avg:double, sum_9:double]
        sum_quantity_C := sum
        avg_quantity_D := avg
        sum_discount_C := sum_9
    - Project[] => [sum:double, avg:double, sum_9:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double, sum_9:double]
                sum_9 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double]
                    avg := avg("quantity") ROWS CURRENT_ROW UNBOUNDED_FOLLOWING
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                        sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount

] which resolves to [

- Output[sum_quantity_C, avg_quantity_D, sum_discount_C] => [sum:double, avg:double, sum_9:double]
        sum_quantity_C := sum
        avg_quantity_D := avg
        sum_discount_C := sum_9
    - Project[] => [sum:double, avg:double, sum_9:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double, sum_9:double]
                sum_9 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double]
                    avg := avg("quantity") ROWS CURRENT_ROW UNBOUNDED_FOLLOWING
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                        sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount

]
  TestMergeWindows.testMergeDifferentFramesWithDefault:319->assertUnitPlan:508->lambda$assertUnitPlan$23:510 Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=avg (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=CURRENT_ROW, value=Optional.empty}, end=Optional[FrameBound{type=UNBOUNDED_FOLLOWING, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) }
        bind WindowFunctionMatcher{callMaker=sum (QUANTITY) }
        - node(TableScanNode)
            TableScanMatcher{expectedTableName=lineitem}
            bind QUANTITY -> Column lineitem:quantity
            bind DISCOUNT -> Column lineitem:discount
            bind SUPPKEY -> Column lineitem:suppkey
            bind ORDERKEY -> Column lineitem:orderkey

] but found [

- Output[sum_quantity_C, avg_quantity_D, sum_discount_C] => [sum:double, avg:double, sum_9:double]
        sum_quantity_C := sum
        avg_quantity_D := avg
        sum_discount_C := sum_9
    - Project[] => [sum:double, avg:double, sum_9:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double, sum_9:double]
                sum_9 := sum("discount") 
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double]
                    avg := avg("quantity") ROWS CURRENT_ROW UNBOUNDED_FOLLOWING
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                        sum := sum("quantity") 
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount

] which resolves to [

- Output[sum_quantity_C, avg_quantity_D, sum_discount_C] => [sum:double, avg:double, sum_9:double]
        sum_quantity_C := sum
        avg_quantity_D := avg
        sum_discount_C := sum_9
    - Project[] => [sum:double, avg:double, sum_9:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double, sum_9:double]
                sum_9 := sum("discount") 
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, avg:double]
                    avg := avg("quantity") ROWS CURRENT_ROW UNBOUNDED_FOLLOWING
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                        sum := sum("quantity") 
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount

]
  TestMergeWindows.testMergeableWindowsAllOptimizers:165->BasePlanTest.assertPlan:91->BasePlanTest.assertPlan:98->BasePlanTest.assertPlan:117->BasePlanTest.lambda$assertPlan$1:119 Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - anyTree
            - node(WindowNode)
                WindowMatcher{specification=SpecificationProvider{partitionBy=[ORDERKEY], orderBy=[SHIPDATE], orderings={SHIPDATE=ASC_NULLS_LAST}}}
                bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
                - node
                    NotPlanNodeMatcher{excludedNodeClass=class com.facebook.presto.sql.planner.plan.WindowNode}
                    - node(TableScanNode)
                        TableScanMatcher{expectedTableName=lineitem}
                        bind QUANTITY -> Column lineitem:quantity
                        bind DISCOUNT -> Column lineitem:discount
                        bind SUPPKEY -> Column lineitem:suppkey
                        bind ORDERKEY -> Column lineitem:orderkey
                        bind SHIPDATE -> Column lineitem:shipdate

] but found [

- Output[sum_quantity_A, sum_quantity_B, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_quantity_A := sum
        sum_quantity_B := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)][$hashvalue_26] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, $hashvalue_26:bigint, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, $hashvalue_26:bigint]
                    $hashvalue_26 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                - Window[partition by (orderkey), order by (shipdate ASC_NULLS_LAST)][$hashvalue_25] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, $hashvalue_25:bigint, sum_6:double]
                        sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, $hashvalue_25:bigint]
                            $hashvalue_25 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("orderkey"), 0))
                        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)][$hashvalue] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue:bigint, sum:double]
                                sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                            - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue:bigint]
                                    Cost: {rows: 60000, bytes: ?}
                                - LocalExchange[SINGLE] () => orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue:bigint, $hashvalue_22:bigint
                                        Cost: {rows: 60000, bytes: ?}
                                    - ScanProject[table = local:tpch:lineitem:sf0.01, originalConstraint = true] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue_23:bigint, $hashvalue_24:bigint]
                                            Cost: {rows: 60000, bytes: ?}/{rows: 60000, bytes: ?}
                                            $hashvalue_23 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                                            $hashvalue_24 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("orderkey"), 0))
                                            orderkey := tpch:orderkey
                                            suppkey := tpch:suppkey
                                            quantity := tpch:quantity
                                            discount := tpch:discount
                                            shipdate := tpch:shipdate

] which resolves to [

- Output[sum_quantity_A, sum_quantity_B, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_quantity_A := sum
        sum_quantity_B := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)][$hashvalue_26] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, $hashvalue_26:bigint, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, sum_6:double, $hashvalue_26:bigint]
                    $hashvalue_26 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                - Window[partition by (orderkey), order by (shipdate ASC_NULLS_LAST)][$hashvalue_25] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, $hashvalue_25:bigint, sum_6:double]
                        sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, sum:double, $hashvalue_25:bigint]
                            $hashvalue_25 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("orderkey"), 0))
                        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)][$hashvalue] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue:bigint, sum:double]
                                sum := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                            - Project[] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue:bigint]
                                    Cost: {rows: 60000, bytes: ?}
                                - LocalExchange[SINGLE] () => orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue:bigint, $hashvalue_22:bigint
                                        Cost: {rows: 60000, bytes: ?}
                                    - ScanProject[table = local:tpch:lineitem:sf0.01, originalConstraint = true] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, shipdate:date, $hashvalue_23:bigint, $hashvalue_24:bigint]
                                            Cost: {rows: 60000, bytes: ?}/{rows: 60000, bytes: ?}
                                            $hashvalue_23 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                                            $hashvalue_24 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("orderkey"), 0))
                                            orderkey := tpch:orderkey
                                            suppkey := tpch:suppkey
                                            quantity := tpch:quantity
                                            discount := tpch:discount
                                            shipdate := tpch:shipdate

]
  TestMergeWindows.testNotMergeDifferentNullOrdering:486->assertUnitPlan:508->lambda$assertUnitPlan$23:510 Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (EXTENDEDPRICE) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_FIRST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
            - node(TableScanNode)
                TableScanMatcher{expectedTableName=lineitem}
                bind QUANTITY -> Column lineitem:quantity
                bind SUPPKEY -> Column lineitem:suppkey
                bind ORDERKEY -> Column lineitem:orderkey
                bind DISCOUNT -> Column lineitem:discount
                bind EXTENDEDPRICE -> Column lineitem:extendedprice

] but found [

- Output[sum_extendedprice_A, sum_quantity_C, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_extendedprice_A := sum
        sum_quantity_C := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_FIRST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double]
                    sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double]
                        sum := sum("extendedprice") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            extendedprice := tpch:extendedprice
                            discount := tpch:discount

] which resolves to [

- Output[sum_extendedprice_A, sum_quantity_C, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_extendedprice_A := sum
        sum_quantity_C := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_FIRST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double]
                    sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double]
                        sum := sum("extendedprice") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            extendedprice := tpch:extendedprice
                            discount := tpch:discount

]
  TestMergeWindows.testNotMergeDifferentOrdering:460->assertUnitPlan:508->lambda$assertUnitPlan$23:510 Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=DESC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (EXTENDEDPRICE) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
            bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
            - node(TableScanNode)
                TableScanMatcher{expectedTableName=lineitem}
                bind QUANTITY -> Column lineitem:quantity
                bind SUPPKEY -> Column lineitem:suppkey
                bind ORDERKEY -> Column lineitem:orderkey
                bind DISCOUNT -> Column lineitem:discount
                bind EXTENDEDPRICE -> Column lineitem:extendedprice

] but found [

- Output[sum_extendedprice_A, sum_quantity_C, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_extendedprice_A := sum
        sum_quantity_C := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey DESC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double]
                    sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double]
                        sum := sum("extendedprice") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            extendedprice := tpch:extendedprice
                            discount := tpch:discount

] which resolves to [

- Output[sum_extendedprice_A, sum_quantity_C, sum_discount_A] => [sum:double, sum_6:double, sum_10:double]
        sum_extendedprice_A := sum
        sum_quantity_C := sum_6
        sum_discount_A := sum_10
    - Project[] => [sum:double, sum_6:double, sum_10:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double, sum_10:double]
                sum_10 := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey DESC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double, sum_6:double]
                    sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double, sum:double]
                        sum := sum("extendedprice") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, extendedprice:double, discount:double]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            extendedprice := tpch:extendedprice
                            discount := tpch:discount

]
  TestMergeWindows.testNotMergeDifferentPartition:411->assertUnitPlan:508->lambda$assertUnitPlan$23:510 Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[QUANTITY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) WindowFrame{type=ROWS, start=FrameBound{type=UNBOUNDED_PRECEDING, value=Optional.empty}, end=Optional[FrameBound{type=CURRENT_ROW, value=Optional.empty}]}}
            - node(TableScanNode)
                TableScanMatcher{expectedTableName=lineitem}
                bind QUANTITY -> Column lineitem:quantity
                bind DISCOUNT -> Column lineitem:discount
                bind SUPPKEY -> Column lineitem:suppkey
                bind ORDERKEY -> Column lineitem:orderkey

] but found [

- Output[sum_extendedprice_A, sum_quantity_C] => [sum:double, sum_6:double]
        sum_extendedprice_A := sum
        sum_quantity_C := sum_6
    - Project[] => [sum:double, sum_6:double]
        - Window[partition by (quantity), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, sum_6:double]
                sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                    sum := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                        Cost: {rows: 60000, bytes: ?}
                        orderkey := tpch:orderkey
                        suppkey := tpch:suppkey
                        quantity := tpch:quantity
                        discount := tpch:discount

] which resolves to [

- Output[sum_extendedprice_A, sum_quantity_C] => [sum:double, sum_6:double]
        sum_extendedprice_A := sum
        sum_quantity_C := sum_6
    - Project[] => [sum:double, sum_6:double]
        - Window[partition by (quantity), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double, sum_6:double]
                sum_6 := sum("quantity") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
            - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, sum:double]
                    sum := sum("discount") ROWS UNBOUNDED_PRECEDING CURRENT_ROW
                - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double]
                        Cost: {rows: 60000, bytes: ?}
                        orderkey := tpch:orderkey
                        suppkey := tpch:suppkey
                        quantity := tpch:quantity
                        discount := tpch:discount

]
  TestReorderWindows.testNonMergeableABAReordersToAAB:165->assertUnitPlan:285->lambda$assertUnitPlan$16:287 Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[SHIPDATE], orderings={SHIPDATE=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=min (TAX) }
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) }
            - node(WindowNode)
                WindowMatcher{specification=SpecificationProvider{partitionBy=[PARTKEY], orderBy=[RECEIPTDATE], orderings={RECEIPTDATE=ASC_NULLS_LAST}}}
                bind WindowFunctionMatcher{callMaker=avg (DISCOUNT) }
                - node(TableScanNode)
                    TableScanMatcher{expectedTableName=lineitem}
                    bind DISCOUNT -> Column lineitem:discount
                    bind ORDERKEY -> Column lineitem:orderkey
                    bind QUANTITY -> Column lineitem:quantity
                    bind PARTKEY -> Column lineitem:partkey
                    bind RECEIPTDATE -> Column lineitem:receiptdate
                    bind SHIPDATE -> Column lineitem:shipdate
                    bind SUPPKEY -> Column lineitem:suppkey
                    bind TAX -> Column lineitem:tax

] but found [

- Output[sum_quantity_A, avg_discount_B, min_tax_A] => [sum:double, avg:double, min:double]
        sum_quantity_A := sum
        avg_discount_B := avg
        min_tax_A := min
    - Project[] => [sum:double, avg:double, min:double]
        - Window[partition by (suppkey), order by (shipdate ASC_NULLS_LAST)] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double, min:double]
                min := min("tax") 
            - Window[partition by (partkey), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double]
                    avg := avg("discount") 
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double]
                        sum := sum("quantity") 
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            partkey := tpch:partkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount
                            tax := tpch:tax
                            shipdate := tpch:shipdate
                            receiptdate := tpch:receiptdate

] which resolves to [

- Output[sum_quantity_A, avg_discount_B, min_tax_A] => [sum:double, avg:double, min:double]
        sum_quantity_A := sum
        avg_discount_B := avg
        min_tax_A := min
    - Project[] => [sum:double, avg:double, min:double]
        - Window[partition by (suppkey), order by (shipdate ASC_NULLS_LAST)] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double, min:double]
                min := min("tax") 
            - Window[partition by (partkey), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double]
                    avg := avg("discount") 
                - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double]
                        sum := sum("quantity") 
                    - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date]
                            Cost: {rows: 60000, bytes: ?}
                            orderkey := tpch:orderkey
                            partkey := tpch:partkey
                            suppkey := tpch:suppkey
                            quantity := tpch:quantity
                            discount := tpch:discount
                            tax := tpch:tax
                            shipdate := tpch:shipdate
                            receiptdate := tpch:receiptdate

]
  TestReorderWindows.testNonMergeableABAReordersToAABAllOptimizers:153->BasePlanTest.assertPlan:91->BasePlanTest.assertPlan:98->BasePlanTest.assertPlan:117->BasePlanTest.lambda$assertPlan$1:119 Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[SHIPDATE], orderings={SHIPDATE=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=min (TAX) }
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) }
            - anyTree
                - node(WindowNode)
                    WindowMatcher{specification=SpecificationProvider{partitionBy=[PARTKEY], orderBy=[RECEIPTDATE], orderings={RECEIPTDATE=ASC_NULLS_LAST}}}
                    bind WindowFunctionMatcher{callMaker=avg (DISCOUNT) }
                    - anyTree
                        - node(TableScanNode)
                            TableScanMatcher{expectedTableName=lineitem}
                            bind DISCOUNT -> Column lineitem:discount
                            bind ORDERKEY -> Column lineitem:orderkey
                            bind QUANTITY -> Column lineitem:quantity
                            bind PARTKEY -> Column lineitem:partkey
                            bind RECEIPTDATE -> Column lineitem:receiptdate
                            bind SHIPDATE -> Column lineitem:shipdate
                            bind SUPPKEY -> Column lineitem:suppkey
                            bind TAX -> Column lineitem:tax

] but found [

- Output[sum_quantity_A, avg_discount_B, min_tax_A] => [sum:double, avg:double, min:double]
        sum_quantity_A := sum
        avg_discount_B := avg
        min_tax_A := min
    - Project[] => [sum:double, avg:double, min:double]
        - Window[partition by (suppkey), order by (shipdate ASC_NULLS_LAST)][$hashvalue_24] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double, $hashvalue_24:bigint, min:double]
                min := min("tax") 
            - Project[] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double, $hashvalue_24:bigint]
                    $hashvalue_24 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                - Window[partition by (partkey), order by (receiptdate ASC_NULLS_LAST)][$hashvalue_23] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, $hashvalue_23:bigint, avg:double]
                        avg := avg("discount") 
                    - Project[] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, $hashvalue_23:bigint]
                            $hashvalue_23 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("partkey"), 0))
                        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)][$hashvalue] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue:bigint, sum:double]
                                sum := sum("quantity") 
                            - Project[] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue:bigint]
                                    Cost: {rows: 60000, bytes: ?}
                                - LocalExchange[SINGLE] () => orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue:bigint, $hashvalue_20:bigint
                                        Cost: {rows: 60000, bytes: ?}
                                    - ScanProject[table = local:tpch:lineitem:sf0.01, originalConstraint = true] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue_21:bigint, $hashvalue_22:bigint]
                                            Cost: {rows: 60000, bytes: ?}/{rows: 60000, bytes: ?}
                                            $hashvalue_21 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                                            $hashvalue_22 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("partkey"), 0))
                                            orderkey := tpch:orderkey
                                            partkey := tpch:partkey
                                            suppkey := tpch:suppkey
                                            quantity := tpch:quantity
                                            discount := tpch:discount
                                            tax := tpch:tax
                                            shipdate := tpch:shipdate
                                            receiptdate := tpch:receiptdate

] which resolves to [

- Output[sum_quantity_A, avg_discount_B, min_tax_A] => [sum:double, avg:double, min:double]
        sum_quantity_A := sum
        avg_discount_B := avg
        min_tax_A := min
    - Project[] => [sum:double, avg:double, min:double]
        - Window[partition by (suppkey), order by (shipdate ASC_NULLS_LAST)][$hashvalue_24] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double, $hashvalue_24:bigint, min:double]
                min := min("tax") 
            - Project[] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, avg:double, $hashvalue_24:bigint]
                    $hashvalue_24 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                - Window[partition by (partkey), order by (receiptdate ASC_NULLS_LAST)][$hashvalue_23] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, $hashvalue_23:bigint, avg:double]
                        avg := avg("discount") 
                    - Project[] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, sum:double, $hashvalue_23:bigint]
                            $hashvalue_23 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("partkey"), 0))
                        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)][$hashvalue] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue:bigint, sum:double]
                                sum := sum("quantity") 
                            - Project[] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue:bigint]
                                    Cost: {rows: 60000, bytes: ?}
                                - LocalExchange[SINGLE] () => orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue:bigint, $hashvalue_20:bigint
                                        Cost: {rows: 60000, bytes: ?}
                                    - ScanProject[table = local:tpch:lineitem:sf0.01, originalConstraint = true] => [orderkey:bigint, partkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, shipdate:date, receiptdate:date, $hashvalue_21:bigint, $hashvalue_22:bigint]
                                            Cost: {rows: 60000, bytes: ?}/{rows: 60000, bytes: ?}
                                            $hashvalue_21 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("suppkey"), 0))
                                            $hashvalue_22 := "combine_hash"(BIGINT '0', COALESCE("$operator$hash_code"("partkey"), 0))
                                            orderkey := tpch:orderkey
                                            partkey := tpch:partkey
                                            suppkey := tpch:suppkey
                                            quantity := tpch:quantity
                                            discount := tpch:discount
                                            tax := tpch:tax
                                            shipdate := tpch:shipdate
                                            receiptdate := tpch:receiptdate

]
  TestReorderWindows.testPrefixOfPartitionComesFirstRegardlessOfTheirOrderInSQL:188->assertUnitPlan:285->lambda$assertUnitPlan$16:287 Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY, TAX], orderBy=[RECEIPTDATE], orderings={RECEIPTDATE=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=avg (DISCOUNT) }
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=sum (QUANTITY) }
            - node(TableScanNode)
                TableScanMatcher{expectedTableName=lineitem}
                bind DISCOUNT -> Column lineitem:discount
                bind ORDERKEY -> Column lineitem:orderkey
                bind QUANTITY -> Column lineitem:quantity
                bind RECEIPTDATE -> Column lineitem:receiptdate
                bind SUPPKEY -> Column lineitem:suppkey
                bind TAX -> Column lineitem:tax

] but found [

- Output[avg_discount_A, sum_quantity_A] => [avg:double, sum:double]
        avg_discount_A := avg
        sum_quantity_A := sum
    - Project[] => [avg:double, sum:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double]
                sum := sum("quantity") 
            - Window[partition by (suppkey, tax), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double]
                    avg := avg("discount") 
                - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date]
                        Cost: {rows: 60000, bytes: ?}
                        orderkey := tpch:orderkey
                        suppkey := tpch:suppkey
                        quantity := tpch:quantity
                        discount := tpch:discount
                        tax := tpch:tax
                        receiptdate := tpch:receiptdate

] which resolves to [

- Output[avg_discount_A, sum_quantity_A] => [avg:double, sum:double]
        avg_discount_A := avg
        sum_quantity_A := sum
    - Project[] => [avg:double, sum:double]
        - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double]
                sum := sum("quantity") 
            - Window[partition by (suppkey, tax), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double]
                    avg := avg("discount") 
                - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date]
                        Cost: {rows: 60000, bytes: ?}
                        orderkey := tpch:orderkey
                        suppkey := tpch:suppkey
                        quantity := tpch:quantity
                        discount := tpch:discount
                        tax := tpch:tax
                        receiptdate := tpch:receiptdate

]
  TestReorderWindows.testReorderBDAC:258->assertUnitPlan:285->lambda$assertUnitPlan$16:287 Plan does not match, expected [

- anyTree
    - node(WindowNode)
        WindowMatcher{specification=SpecificationProvider{partitionBy=[TAX], orderBy=[RECEIPTDATE], orderings={RECEIPTDATE=ASC_NULLS_LAST}}}
        bind WindowFunctionMatcher{callMaker=avg (QUANTITY) }
        - node(WindowNode)
            WindowMatcher{specification=SpecificationProvider{partitionBy=[SUPPKEY], orderBy=[ORDERKEY], orderings={ORDERKEY=ASC_NULLS_LAST}}}
            bind WindowFunctionMatcher{callMaker=avg (DISCOUNT) }
            - node(WindowNode)
                WindowMatcher{specification=SpecificationProvider{partitionBy=[RECEIPTDATE], orderBy=[SUPPKEY], orderings={SUPPKEY=ASC_NULLS_LAST}}}
                bind WindowFunctionMatcher{callMaker=sum (DISCOUNT) }
                - node(WindowNode)
                    WindowMatcher{specification=SpecificationProvider{partitionBy=[QUANTITY], orderBy=[RECEIPTDATE], orderings={RECEIPTDATE=ASC_NULLS_LAST}}}
                    bind WindowFunctionMatcher{callMaker=sum (TAX) }
                    - node(TableScanNode)
                        TableScanMatcher{expectedTableName=lineitem}
                        bind DISCOUNT -> Column lineitem:discount
                        bind ORDERKEY -> Column lineitem:orderkey
                        bind QUANTITY -> Column lineitem:quantity
                        bind RECEIPTDATE -> Column lineitem:receiptdate
                        bind SUPPKEY -> Column lineitem:suppkey
                        bind TAX -> Column lineitem:tax

] but found [

- Output[avg_discount_A, sum_tax_E, avg_quantity_D, sum_discount_C] => [avg:double, sum:double, avg_9:double, sum_13:double]
        avg_discount_A := avg
        sum_tax_E := sum
        avg_quantity_D := avg_9
        sum_discount_C := sum_13
    - Project[] => [avg:double, sum:double, avg_9:double, sum_13:double]
        - Window[partition by (receiptdate), order by (suppkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double, avg_9:double, sum_13:double]
                sum_13 := sum("discount") 
            - Window[partition by (tax), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double, avg_9:double]
                    avg_9 := avg("quantity") 
                - Window[partition by (quantity), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double]
                        sum := sum("tax") 
                    - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double]
                            avg := avg("discount") 
                        - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date]
                                Cost: {rows: 60000, bytes: ?}
                                orderkey := tpch:orderkey
                                suppkey := tpch:suppkey
                                quantity := tpch:quantity
                                discount := tpch:discount
                                tax := tpch:tax
                                receiptdate := tpch:receiptdate

] which resolves to [

- Output[avg_discount_A, sum_tax_E, avg_quantity_D, sum_discount_C] => [avg:double, sum:double, avg_9:double, sum_13:double]
        avg_discount_A := avg
        sum_tax_E := sum
        avg_quantity_D := avg_9
        sum_discount_C := sum_13
    - Project[] => [avg:double, sum:double, avg_9:double, sum_13:double]
        - Window[partition by (receiptdate), order by (suppkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double, avg_9:double, sum_13:double]
                sum_13 := sum("discount") 
            - Window[partition by (tax), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double, avg_9:double]
                    avg_9 := avg("quantity") 
                - Window[partition by (quantity), order by (receiptdate ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double, sum:double]
                        sum := sum("tax") 
                    - Window[partition by (suppkey), order by (orderkey ASC_NULLS_LAST)] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date, avg:double]
                            avg := avg("discount") 
                        - TableScan[local:tpch:lineitem:sf0.01, originalConstraint = null] => [orderkey:bigint, suppkey:bigint, quantity:double, discount:double, tax:double, receiptdate:date]
                                Cost: {rows: 60000, bytes: ?}
                                orderkey := tpch:orderkey
                                suppkey := tpch:suppkey
                                quantity := tpch:quantity
                                discount := tpch:discount
                                tax := tpch:tax
                                receiptdate := tpch:receiptdate

]
  TestUnion.testUnionUnderTopN:86 There should be exactly one RemoteExchange expected [1] but found [2]
  TestUnionWithReplicatedJoin>TestUnion.testUnionUnderTopN:86 There should be exactly one RemoteExchange expected [1] but found [2]

Tests run: 3325, Failures: 41, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] presto-root ........................................ SUCCESS [  4.363 s]
[INFO] presto-spi ......................................... SUCCESS [ 26.774 s]
[INFO] presto-plugin-toolkit .............................. SUCCESS [  8.311 s]
[INFO] presto-client ...................................... SUCCESS [  7.762 s]
[INFO] presto-parser ...................................... SUCCESS [ 15.100 s]
[INFO] presto-array ....................................... SUCCESS [  6.635 s]
[INFO] presto-bytecode .................................... SUCCESS [  8.538 s]
[INFO] presto-matching .................................... SUCCESS [  6.550 s]
[INFO] presto-tpch ........................................ SUCCESS [  5.685 s]
[INFO] presto-main ........................................ FAILURE [09:49 min]
[INFO] presto-resource-group-managers ..................... SKIPPED
[INFO] presto-tests ....................................... SKIPPED
[INFO] presto-atop ........................................ SKIPPED
[INFO] presto-jmx ......................................... SKIPPED
[INFO] presto-record-decoder .............................. SUCCESS [  8.061 s]
[INFO] presto-kafka ....................................... SKIPPED
[INFO] presto-redis ....................................... SKIPPED
[INFO] presto-accumulo .................................... SKIPPED
[INFO] presto-cassandra ................................... SKIPPED
[INFO] presto-blackhole ................................... SKIPPED
[INFO] presto-memory ...................................... SKIPPED
[INFO] presto-orc ......................................... SKIPPED
[INFO] presto-rcfile ...................................... SKIPPED
[INFO] presto-benchmark ................................... SKIPPED
[INFO] presto-hive ........................................ SKIPPED
[INFO] presto-hive-hadoop2 ................................ SKIPPED
[INFO] presto-teradata-functions .......................... SKIPPED
[INFO] presto-example-http ................................ SKIPPED
[INFO] presto-local-file .................................. SKIPPED
[INFO] presto-tpcds ....................................... SKIPPED
[INFO] presto-raptor ...................................... SKIPPED
[INFO] presto-base-jdbc ................................... SKIPPED
[INFO] presto-mysql ....................................... SKIPPED
[INFO] presto-postgresql .................................. SKIPPED
[INFO] presto-sqlserver ................................... SKIPPED
[INFO] presto-mongodb ..................................... SKIPPED
[INFO] presto-ml .......................................... SKIPPED
[INFO] presto-jdbc ........................................ SKIPPED
[INFO] presto-cli ......................................... SUCCESS [  9.216 s]
[INFO] presto-product-tests ............................... SKIPPED
[INFO] presto-benchmark-driver ............................ SUCCESS [  8.862 s]
[INFO] presto-thrift-connector-api ........................ SKIPPED
[INFO] presto-thrift-testing-server ....................... SKIPPED
[INFO] presto-thrift-connector ............................ SKIPPED
[INFO] presto-server ...................................... SKIPPED
[INFO] presto-server-rpm .................................. SKIPPED
[INFO] presto-docs ........................................ SKIPPED
[INFO] presto-verifier .................................... SKIPPED
[INFO] presto-testing-server-launcher ..................... SKIPPED
[INFO] presto-benchto-benchmarks .......................... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 11:47 min
[INFO] Finished at: 2017-08-08T17:08:45+02:00
[INFO] Final Memory: 222M/2758M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.19.1:test (default-test) on project presto-main: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/prestodb/presto/262238336/presto-main/target/surefire-reports for the individual test results.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :presto-main
