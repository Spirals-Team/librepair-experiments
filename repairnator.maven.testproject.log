[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building torrentx 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ torrentx ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 8 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:compile (default-compile) @ torrentx ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 80 source files to /root/workspace/UniversityFinalProjects/TorrentX/372085190/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ torrentx ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 17 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:testCompile (default-testCompile) @ torrentx ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.16:test (default-test) @ torrentx ---
[INFO] Surefire report directory: /root/workspace/UniversityFinalProjects/TorrentX/372085190/target/surefire-reports
Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.16/surefire-junit4-2.16.pom
3/3 KB   
3/3 KB   
         
Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.16/surefire-junit4-2.16.pom (3 KB at 4.8 KB/sec)
Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.16/surefire-providers-2.16.pom
3/3 KB   
         
Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.16/surefire-providers-2.16.pom (3 KB at 122.2 KB/sec)
Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.16/surefire-junit4-2.16.jar
3/63 KB   
5/63 KB   
8/63 KB   
11/63 KB   
13/63 KB   
16/63 KB   
19/63 KB   
21/63 KB   
24/63 KB   
27/63 KB   
29/63 KB   
32/63 KB   
36/63 KB   
40/63 KB   
44/63 KB   
48/63 KB   
52/63 KB   
56/63 KB   
60/63 KB   
63/63 KB   
           
Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.16/surefire-junit4-2.16.jar (63 KB at 452.0 KB/sec)

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.runner.CucumberTest
Feature: connect to choking fake-peers and map between them and their pieces
Feature: connect to a fake peers and communicate with them
17:23:11 [elastic-4] ERROR - Operator called default onErrorDropped

java.io.EOFException: null
	at java.io.DataInputStream.readFully(DataInputStream.java:197)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at main.peer.PeerMessageFactory.create(PeerMessageFactory.java:14)
	at main.peer.ReceivePeerMessagesImpl.listenForPeerMessages(ReceivePeerMessagesImpl.java:123)
	at main.peer.ReceivePeerMessagesImpl.lambda$new$0(ReceivePeerMessagesImpl.java:33)
	at reactor.core.publisher.FluxCreate.subscribe(FluxCreate.java:92)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.Flux.subscribe(Flux.java:7179)
	at reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.run(FluxSubscribeOn.java:194)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxCreate] :
	reactor.core.publisher.Flux.create(Flux.java:623)
	reactor.core.publisher.Flux.create(Flux.java:584)
	main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	main.peer.Link.<init>(Link.java:45)
	main.peer.PeersProvider.lambda$connectToPeerMono$1(PeersProvider.java:63)
	reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:123)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Flux.create ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	|_	Flux.subscribeOn ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:41)
	|_	Flux.doOnNext ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:45)
	|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
	|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
	|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:96)
	|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:97)
	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(MyStepdefs.java:190)
		|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
		|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
		|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:100)
		|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:101)

17:23:11 [elastic-2] ERROR - Operator called default onErrorDropped

java.io.EOFException: null
	at java.io.DataInputStream.readFully(DataInputStream.java:197)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at main.peer.PeerMessageFactory.create(PeerMessageFactory.java:14)
	at main.peer.ReceivePeerMessagesImpl.listenForPeerMessages(ReceivePeerMessagesImpl.java:123)
	at main.peer.ReceivePeerMessagesImpl.lambda$new$0(ReceivePeerMessagesImpl.java:33)
	at reactor.core.publisher.FluxCreate.subscribe(FluxCreate.java:92)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.Flux.subscribe(Flux.java:7179)
	at reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.run(FluxSubscribeOn.java:194)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxCreate] :
	reactor.core.publisher.Flux.create(Flux.java:623)
	reactor.core.publisher.Flux.create(Flux.java:584)
	main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	main.peer.Link.<init>(Link.java:45)
	main.peer.PeersProvider.lambda$connectToPeerMono$1(PeersProvider.java:63)
	reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:123)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Flux.create ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	|_	Flux.subscribeOn ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:41)
	|_	Flux.doOnNext ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:45)
	|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
	|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
	|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:72)
	|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:73)
	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(MyStepdefs.java:190)
		|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
		|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
		|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:76)
		|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:77)

17:23:11 [elastic-3] ERROR - Operator called default onErrorDropped

java.io.EOFException: null
	at java.io.DataInputStream.readFully(DataInputStream.java:197)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at main.peer.PeerMessageFactory.create(PeerMessageFactory.java:14)
	at main.peer.ReceivePeerMessagesImpl.listenForPeerMessages(ReceivePeerMessagesImpl.java:123)
	at main.peer.ReceivePeerMessagesImpl.lambda$new$0(ReceivePeerMessagesImpl.java:33)
	at reactor.core.publisher.FluxCreate.subscribe(FluxCreate.java:92)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.Flux.subscribe(Flux.java:7179)
	at reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.run(FluxSubscribeOn.java:194)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxCreate] :
	reactor.core.publisher.Flux.create(Flux.java:623)
	reactor.core.publisher.Flux.create(Flux.java:584)
	main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	main.peer.Link.<init>(Link.java:45)
	main.peer.PeersProvider.lambda$connectToPeerMono$1(PeersProvider.java:63)
	reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:123)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Flux.create ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	|_	Flux.subscribeOn ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:41)
	|_	Flux.doOnNext ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:45)
	|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
	|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
	|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:88)
	|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:89)
	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(MyStepdefs.java:190)
		|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
		|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
		|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:92)
		|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:93)

17:23:11 [elastic-4] ERROR - Scheduler worker in group main failed with an uncaught exception

java.io.EOFException: null
	at java.io.DataInputStream.readFully(DataInputStream.java:197)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at main.peer.PeerMessageFactory.create(PeerMessageFactory.java:14)
	at main.peer.ReceivePeerMessagesImpl.listenForPeerMessages(ReceivePeerMessagesImpl.java:123)
	at main.peer.ReceivePeerMessagesImpl.lambda$new$0(ReceivePeerMessagesImpl.java:33)
	at reactor.core.publisher.FluxCreate.subscribe(FluxCreate.java:92)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.Flux.subscribe(Flux.java:7179)
	at reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.run(FluxSubscribeOn.java:194)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxCreate] :
	reactor.core.publisher.Flux.create(Flux.java:623)
	reactor.core.publisher.Flux.create(Flux.java:584)
	main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	main.peer.Link.<init>(Link.java:45)
	main.peer.PeersProvider.lambda$connectToPeerMono$1(PeersProvider.java:63)
	reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:123)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Flux.create ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	|_	Flux.subscribeOn ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:41)
	|_	Flux.doOnNext ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:45)
	|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
	|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
	|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:96)
	|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:97)
	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(MyStepdefs.java:190)
		|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
		|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
		|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:100)
		|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:101)

17:23:11 [elastic-3] ERROR - Scheduler worker in group main failed with an uncaught exception

java.io.EOFException: null
	at java.io.DataInputStream.readFully(DataInputStream.java:197)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at main.peer.PeerMessageFactory.create(PeerMessageFactory.java:14)
	at main.peer.ReceivePeerMessagesImpl.listenForPeerMessages(ReceivePeerMessagesImpl.java:123)
	at main.peer.ReceivePeerMessagesImpl.lambda$new$0(ReceivePeerMessagesImpl.java:33)
	at reactor.core.publisher.FluxCreate.subscribe(FluxCreate.java:92)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.Flux.subscribe(Flux.java:7179)
	at reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.run(FluxSubscribeOn.java:194)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxCreate] :
	reactor.core.publisher.Flux.create(Flux.java:623)
	reactor.core.publisher.Flux.create(Flux.java:584)
	main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	main.peer.Link.<init>(Link.java:45)
	main.peer.PeersProvider.lambda$connectToPeerMono$1(PeersProvider.java:63)
	reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:123)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Flux.create ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	|_	Flux.subscribeOn ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:41)
	|_	Flux.doOnNext ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:45)
	|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
	|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
	|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:88)
	|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:89)
	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(MyStepdefs.java:190)
		|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
		|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
		|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:92)
		|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:93)

17:23:11 [elastic-2] ERROR - Scheduler worker in group main failed with an uncaught exception

java.io.EOFException: null
	at java.io.DataInputStream.readFully(DataInputStream.java:197)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at main.peer.PeerMessageFactory.create(PeerMessageFactory.java:14)
	at main.peer.ReceivePeerMessagesImpl.listenForPeerMessages(ReceivePeerMessagesImpl.java:123)
	at main.peer.ReceivePeerMessagesImpl.lambda$new$0(ReceivePeerMessagesImpl.java:33)
	at reactor.core.publisher.FluxCreate.subscribe(FluxCreate.java:92)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.Flux.subscribe(Flux.java:7179)
	at reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.run(FluxSubscribeOn.java:194)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxCreate] :
	reactor.core.publisher.Flux.create(Flux.java:623)
	reactor.core.publisher.Flux.create(Flux.java:584)
	main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	main.peer.Link.<init>(Link.java:45)
	main.peer.PeersProvider.lambda$connectToPeerMono$1(PeersProvider.java:63)
	reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:123)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Flux.create ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	|_	Flux.subscribeOn ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:41)
	|_	Flux.doOnNext ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:45)
	|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
	|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
	|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:72)
	|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:73)
	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(MyStepdefs.java:190)
		|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
		|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
		|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:76)
		|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:77)

17:23:11 [elastic-5] ERROR - Operator called default onErrorDropped

java.io.EOFException: null
	at java.io.DataInputStream.readFully(DataInputStream.java:197)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at main.peer.PeerMessageFactory.create(PeerMessageFactory.java:14)
	at main.peer.ReceivePeerMessagesImpl.listenForPeerMessages(ReceivePeerMessagesImpl.java:123)
	at main.peer.ReceivePeerMessagesImpl.lambda$new$0(ReceivePeerMessagesImpl.java:33)
	at reactor.core.publisher.FluxCreate.subscribe(FluxCreate.java:92)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.Flux.subscribe(Flux.java:7179)
	at reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.run(FluxSubscribeOn.java:194)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxCreate] :
	reactor.core.publisher.Flux.create(Flux.java:623)
	reactor.core.publisher.Flux.create(Flux.java:584)
	main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	main.peer.Link.<init>(Link.java:45)
	main.peer.PeersProvider.lambda$connectToPeerMono$1(PeersProvider.java:63)
	reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:123)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Flux.create ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	|_	Flux.subscribeOn ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:41)
	|_	Flux.doOnNext ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:45)
	|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
	|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
	|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:104)
	|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:105)
	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(MyStepdefs.java:190)
		|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
		|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
		|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:112)
		|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:113)

17:23:11 [elastic-5] ERROR - Scheduler worker in group main failed with an uncaught exception

java.io.EOFException: null
	at java.io.DataInputStream.readFully(DataInputStream.java:197)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at main.peer.PeerMessageFactory.create(PeerMessageFactory.java:14)
	at main.peer.ReceivePeerMessagesImpl.listenForPeerMessages(ReceivePeerMessagesImpl.java:123)
	at main.peer.ReceivePeerMessagesImpl.lambda$new$0(ReceivePeerMessagesImpl.java:33)
	at reactor.core.publisher.FluxCreate.subscribe(FluxCreate.java:92)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.Flux.subscribe(Flux.java:7179)
	at reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.run(FluxSubscribeOn.java:194)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxCreate] :
	reactor.core.publisher.Flux.create(Flux.java:623)
	reactor.core.publisher.Flux.create(Flux.java:584)
	main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	main.peer.Link.<init>(Link.java:45)
	main.peer.PeersProvider.lambda$connectToPeerMono$1(PeersProvider.java:63)
	reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:123)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Flux.create ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	|_	Flux.subscribeOn ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:41)
	|_	Flux.doOnNext ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:45)
	|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
	|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
	|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:104)
	|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:105)
	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(MyStepdefs.java:190)
		|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
		|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
		|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:112)
		|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:113)


  Scenario: we send peer-messages and must receive the same peer-messages back                             [90m# cucumber/CommunicateWithFakePeers.feature:3[0m
    #  1. the fake peers response with the same peer-message they received
    #  2. the second response will be delayed in 2 seconds
    #  3. the third response will cause the peer to shutdown the connection and not responding anything
    [32mGiven [0m[32mnew torrent file: "[0m[32m[1mtor.torrent[0m[32m"[0m                                                                  [90m# MyStepdefs.newTorrentFile(String)[0m
    [32mThen [0m[32mapplication send to [peer ip: "[0m[32m[1mlocalhost[0m[32m", peer port: "[0m[32m[1m8980[0m[32m"] and receive the following messages:[0m [90m# MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(String,int,PeerFakeRequestResponse>)[0m
    [32mThen [0m[32mapplication send to [peer ip: "[0m[32m[1mlocalhost[0m[32m", peer port: "[0m[32m[1m8981[0m[32m"] and receive the following messages:[0m [90m# MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(String,int,PeerFakeRequestResponse>)[0m
    [32mThen [0m[32mapplication send to [peer ip: "[0m[32m[1mlocalhost[0m[32m", peer port: "[0m[32m[1m8982[0m[32m"] and receive the following messages:[0m [90m# MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(String,int,PeerFakeRequestResponse>)[0m
    [32mThen [0m[32mapplication send to [peer ip: "[0m[32m[1mlocalhost[0m[32m", peer port: "[0m[32m[1m8983[0m[32m"] and receive the following messages:[0m [90m# MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(String,int,PeerFakeRequestResponse>)[0m
    [32mThen [0m[32mapplication send to [peer ip: "[0m[32m[1mlocalhost[0m[32m", peer port: "[0m[32m[1m8984[0m[32m"] and receive the following messages:[0m [90m# MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(String,int,PeerFakeRequestResponse>)[0m
17:23:11 [elastic-3] ERROR - Operator called default onErrorDropped

java.io.EOFException: null
	at java.io.DataInputStream.readFully(DataInputStream.java:197)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at main.peer.PeerMessageFactory.create(PeerMessageFactory.java:14)
	at main.peer.ReceivePeerMessagesImpl.listenForPeerMessages(ReceivePeerMessagesImpl.java:123)
	at main.peer.ReceivePeerMessagesImpl.lambda$new$0(ReceivePeerMessagesImpl.java:33)
	at reactor.core.publisher.FluxCreate.subscribe(FluxCreate.java:92)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.Flux.subscribe(Flux.java:7179)
	at reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.run(FluxSubscribeOn.java:194)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxCreate] :
	reactor.core.publisher.Flux.create(Flux.java:623)
	reactor.core.publisher.Flux.create(Flux.java:584)
	main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	main.peer.Link.<init>(Link.java:45)
	main.peer.PeersProvider.lambda$connectToPeerMono$1(PeersProvider.java:63)
	reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:123)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Flux.create ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	|_	Flux.subscribeOn ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:41)
	|_	Flux.doOnNext ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:45)
	|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
	|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
	|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:116)
	|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:117)
	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(MyStepdefs.java:190)
		|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
		|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
		|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:108)
		|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:109)

17:23:11 [elastic-3] ERROR - Scheduler worker in group main failed with an uncaught exception

java.io.EOFException: null
	at java.io.DataInputStream.readFully(DataInputStream.java:197)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at main.peer.PeerMessageFactory.create(PeerMessageFactory.java:14)
	at main.peer.ReceivePeerMessagesImpl.listenForPeerMessages(ReceivePeerMessagesImpl.java:123)
	at main.peer.ReceivePeerMessagesImpl.lambda$new$0(ReceivePeerMessagesImpl.java:33)
	at reactor.core.publisher.FluxCreate.subscribe(FluxCreate.java:92)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.Flux.subscribe(Flux.java:7179)
	at reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.run(FluxSubscribeOn.java:194)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxCreate] :
	reactor.core.publisher.Flux.create(Flux.java:623)
	reactor.core.publisher.Flux.create(Flux.java:584)
	main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	main.peer.Link.<init>(Link.java:45)
	main.peer.PeersProvider.lambda$connectToPeerMono$1(PeersProvider.java:63)
	reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:123)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Flux.create ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	|_	Flux.subscribeOn ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:41)
	|_	Flux.doOnNext ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:45)
	|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
	|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
	|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:116)
	|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:117)
	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(MyStepdefs.java:190)
		|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
		|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
		|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:108)
		|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:109)


  Scenario: we send 3 peer-messages and the connection must be closed by the rules of the fake peers       [90m# cucumber/CommunicateWithFakePeers.feature:33[0m
    #  1. the fake peers response with the same peer-message they received
    #  2. the second response will be delayed in 2 seconds
    #  3. the third response will cause the peer to shutdown the connection and not responding anything
    [32mGiven [0m[32mnew torrent file: "[0m[32m[1mtor.torrent[0m[32m"[0m                                                                  [90m# MyStepdefs.newTorrentFile(String)[0m
    [32mThen [0m[32mapplication send to [peer ip: "[0m[32m[1mlocalhost[0m[32m", peer port: "[0m[32m[1m8985[0m[32m"] and receive the following messages:[0m [90m# MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(String,int,PeerFakeRequestResponse>)[0m

  Scenario Outline: fake peer request pieces from me and I give him what he want                            [90m# cucumber/CommunicateWithFakePeers.feature:46[0m
    [36mThen [0m[36mapplication save random blocks for torrent: "<torrent>" in "<downloadLocation>" and check it saved[0m
    [36mThen [0m[36mrandom-fake-peer connect to me for torrent: "<torrent>" in "<downloadLocation>" and he request:[0m
    [36mThen [0m[36mwe assert that for torrent: "<torrent>", we gave the following pieces to the random-fake-peer:[0m

    Examples: 
17:23:11 [elastic-6] ERROR - Operator called default onErrorDropped

java.io.EOFException: null
	at java.io.DataInputStream.readFully(DataInputStream.java:197)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at main.peer.PeerMessageFactory.create(PeerMessageFactory.java:14)
	at main.peer.ReceivePeerMessagesImpl.listenForPeerMessages(ReceivePeerMessagesImpl.java:123)
	at main.peer.ReceivePeerMessagesImpl.lambda$new$0(ReceivePeerMessagesImpl.java:33)
	at reactor.core.publisher.FluxCreate.subscribe(FluxCreate.java:92)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.Flux.subscribe(Flux.java:7179)
	at reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.run(FluxSubscribeOn.java:194)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxCreate] :
	reactor.core.publisher.Flux.create(Flux.java:623)
	reactor.core.publisher.Flux.create(Flux.java:584)
	main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	main.peer.Link.<init>(Link.java:45)
	main.peer.PeersProvider.lambda$connectToPeerMono$1(PeersProvider.java:63)
	reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:123)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Flux.create ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	|_	Flux.subscribeOn ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:41)
	|_	Flux.doOnNext ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:45)
	|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
	|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
	|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:72)
	|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:73)
	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(MyStepdefs.java:190)
		|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
		|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
		|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:72)
		|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:73)

17:23:11 [elastic-6] ERROR - Scheduler worker in group main failed with an uncaught exception

java.io.EOFException: null
	at java.io.DataInputStream.readFully(DataInputStream.java:197)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at main.peer.PeerMessageFactory.create(PeerMessageFactory.java:14)
	at main.peer.ReceivePeerMessagesImpl.listenForPeerMessages(ReceivePeerMessagesImpl.java:123)
	at main.peer.ReceivePeerMessagesImpl.lambda$new$0(ReceivePeerMessagesImpl.java:33)
	at reactor.core.publisher.FluxCreate.subscribe(FluxCreate.java:92)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.Flux.subscribe(Flux.java:7179)
	at reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.run(FluxSubscribeOn.java:194)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxCreate] :
	reactor.core.publisher.Flux.create(Flux.java:623)
	reactor.core.publisher.Flux.create(Flux.java:584)
	main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	main.peer.Link.<init>(Link.java:45)
	main.peer.PeersProvider.lambda$connectToPeerMono$1(PeersProvider.java:63)
	reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:123)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
	reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Flux.create ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:33)
	|_	Flux.subscribeOn ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:41)
	|_	Flux.doOnNext ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:45)
	|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
	|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
	|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:72)
	|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:73)
	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSendToPeerIpPeerPortAndReceiveTheFollowingMessages(MyStepdefs.java:190)
		|_	Flux.publish ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:68)
		|_	ConnectableFlux.autoConnect ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:69)
		|_	Flux.filter ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:72)
		|_	Flux.cast ⇢ main.peer.ReceivePeerMessagesImpl.<init>(ReceivePeerMessagesImpl.java:73)


  Scenario Outline: fake peer request pieces from me and I give him what he want                          [90m# cucumber/CommunicateWithFakePeers.feature:64[0m
    [32mThen [0m[32mapplication save random blocks for torrent: "[0m[32m[1mtor.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" and check it saved[0m [90m# MyStepdefs.applicationSaveARandomBlockInsideTorrentInAndCheckItSaved(String,String,BlockOfPiece>)[0m
    [31mThen [0m[31mrandom-fake-peer connect to me for torrent: "[0m[31m[1mtor.torrent[0m[31m" in "[0m[31m[1mtorrents-test/[0m[31m" and he request:[0m    [90m# MyStepdefs.randomFakePeerConnectToMeForTorrentInAndHeRequest(String,String,BlockOfPiece>)[0m
      [31mjava.util.NoSuchElementException: No value present
      	at java.util.Optional.get(Optional.java:135)
      	at com.steps.MyStepdefs.randomFakePeerConnectToMeForTorrentInAndHeRequest(MyStepdefs.java:958)
      	at ✽.Then random-fake-peer connect to me for torrent: "tor.torrent" in "torrents-test/" and he request:(cucumber/CommunicateWithFakePeers.feature:52)
      [0m
    [36mThen [0m[36mwe assert that for torrent: "[0m[36m[1mtor.torrent[0m[36m", we gave the following pieces to the random-fake-peer:[0m [90m# MyStepdefs.weAssertThatForTorrentWeGaveTheFollowingPiecesToTheRandomFakePeer(String,BlockOfPiece>)[0m

  Scenario Outline: fake peer request pieces from me but I don't have nothing to give                       [90m# cucumber/CommunicateWithFakePeers.feature:66[0m
    [36mThen [0m[36mapplication save random blocks for torrent: "<torrent>" in "<downloadLocation>" and check it saved[0m
    [36mThen [0m[36mrandom-fake-peer connect to me for torrent: "<torrent>" in "<downloadLocation>" and he request:[0m
    [36mThen [0m[36mwe assert that for torrent: "<torrent>", we gave the following pieces to the random-fake-peer:[0m

    Examples: 

  Scenario Outline: fake peer request pieces from me but I don't have nothing to give                     [90m# cucumber/CommunicateWithFakePeers.feature:79[0m
    [32mThen [0m[32mapplication save random blocks for torrent: "[0m[32m[1mtor.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" and check it saved[0m [90m# MyStepdefs.applicationSaveARandomBlockInsideTorrentInAndCheckItSaved(String,String,BlockOfPiece>)[0m
    [31mThen [0m[31mrandom-fake-peer connect to me for torrent: "[0m[31m[1mtor.torrent[0m[31m" in "[0m[31m[1mtorrents-test/[0m[31m" and he request:[0m    [90m# MyStepdefs.randomFakePeerConnectToMeForTorrentInAndHeRequest(String,String,BlockOfPiece>)[0m
      [31mjava.util.NoSuchElementException: No value present
      	at java.util.Optional.get(Optional.java:135)
      	at com.steps.MyStepdefs.randomFakePeerConnectToMeForTorrentInAndHeRequest(MyStepdefs.java:958)
      	at ✽.Then random-fake-peer connect to me for torrent: "tor.torrent" in "torrents-test/" and he request:(cucumber/CommunicateWithFakePeers.feature:69)
      [0m
    [36mThen [0m[36mwe assert that for torrent: "[0m[36m[1mtor.torrent[0m[36m", we gave the following pieces to the random-fake-peer:[0m [90m# MyStepdefs.weAssertThatForTorrentWeGaveTheFollowingPiecesToTheRandomFakePeer(String,BlockOfPiece>)[0m
Feature: connect to real peers and communicate with them

  #  Scenario Outline: we send request block of a piece and we receive it
  #    Given initial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:
  #      | START_DOWNLOAD        | false |
  #      | START_UPLOAD          | false |
  #      | PAUSE_DOWNLOAD        | false |
  #      | RESUME_DOWNLOAD       | false |
  #      | PAUSE_UPLOAD          | false |
  #      | RESUME_UPLOAD         | false |
  #      | COMPLETED_DOWNLOADING | false |
  #      | REMOVE_TORRENT        | false |
  #      | REMOVE_FILES          | false |
  #    Then application interested in all peers for torrent: "<torrent>"
  #    Then application request for a random block of a random piece from all peers in torrent: "<torrent>"
  #    Then application receive at list one random block of a random piece in torrent: "<torrent>"
  #
  #    Examples:
  #      | torrent     | downloadLocation |
  #      | tor.torrent | torrents-test/   |
  #      | torrent-file-example3.torrent | torrents-test/   |
  Scenario: we connect to all peers and get their bitfield status                                                             [90m# cucumber/CommunicateWithRealPeers.feature:23[0m
    and then check that the list of peers we connected to is given
    to us by reactor

    [32mThen [0m[32mapplication connect to all peers and assert that we connected to them - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m [90m# MyStepdefs.applicationConnectToAllPeersAndAssertThatWeConnectedToThemForTorrent(String)[0m
Feature: download blocks from fake-peer

  Scenario Outline: download blocks from a valid fake-peer                                                [90m# cucumber/DownloadBlocksAlgorithm.feature:3[0m
    [36mGiven [0m[36mtorrent: "<torrent>","<downloadLocation>"[0m
    [36mGiven [0m[36mlink to "VALID" - fake-peer on port "4040" with the following pieces - for torrent: "<torrent>"[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mWhen [0m[36mapplication request the following blocks from him - for torrent: "<torrent>":[0m
    [36mThen [0m[36mapplication receive the following blocks from him - for torrent: "<torrent>":[0m

    Examples: 

  Scenario Outline: download blocks from a valid fake-peer                                                                    [90m# cucumber/DownloadBlocksAlgorithm.feature:22[0m
    [32mGiven [0m[32mtorrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m                                                            [90m# MyStepdefs.torrent(String,String)[0m
    [32mGiven [0m[32mlink to "[0m[32m[1mVALID[0m[32m" - fake-peer on port "[0m[32m[1m4040[0m[32m" with the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m [90m# MyStepdefs.linkToFakePeerWithTheFollowingPiecesForTorrent(FakePeerType,Integer,String,Integer>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m                                   [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mWhen [0m[32mapplication request the following blocks from him - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                    [90m# MyStepdefs.applicationRequestTheFollowingBlocksFromHimForTorrent(String,BlockOfPiece>)[0m
    [32mThen [0m[32mapplication receive the following blocks from him - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                    [90m# MyStepdefs.applicationReceiveTheFollowingBlocksFromHimForTorrent(String,BlockOfPiece>)[0m

  Scenario Outline: download the last blocks from a valid fake-peer                                       [90m# cucumber/DownloadBlocksAlgorithm.feature:25[0m
    [36mGiven [0m[36mtorrent: "<torrent>","<downloadLocation>"[0m
    [36mGiven [0m[36mlink to "VALID" - fake-peer on port "4040" with the following pieces - for torrent: "<torrent>"[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mWhen [0m[36mapplication request the following blocks from him - for torrent: "<torrent>":[0m
    #      | -1         | 0    | 10     |
    [36mThen [0m[36mapplication receive the following blocks from him - for torrent: "<torrent>":[0m

    #      | -1         | 0    | 10     |
    Examples: 

  Scenario Outline: download the last blocks from a valid fake-peer                                                           [90m# cucumber/DownloadBlocksAlgorithm.feature:49[0m
    [32mGiven [0m[32mtorrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m                                                            [90m# MyStepdefs.torrent(String,String)[0m
    [32mGiven [0m[32mlink to "[0m[32m[1mVALID[0m[32m" - fake-peer on port "[0m[32m[1m4040[0m[32m" with the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m [90m# MyStepdefs.linkToFakePeerWithTheFollowingPiecesForTorrent(FakePeerType,Integer,String,Integer>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m                                   [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mWhen [0m[32mapplication request the following blocks from him - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                    [90m# MyStepdefs.applicationRequestTheFollowingBlocksFromHimForTorrent(String,BlockOfPiece>)[0m
    #      | -1         | 0    | 10     |
    [32mThen [0m[32mapplication receive the following blocks from him - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                    [90m# MyStepdefs.applicationReceiveTheFollowingBlocksFromHimForTorrent(String,BlockOfPiece>)[0m

  Scenario Outline: download blocks from peer which closes the connection when he get the first request                    [90m# cucumber/DownloadBlocksAlgorithm.feature:51[0m
    [36mGiven [0m[36mtorrent: "<torrent>","<downloadLocation>"[0m
    [36mGiven [0m[36mlink to "CLOSE_IN_FIRST_REQUEST" - fake-peer on port "4040" with the following pieces - for torrent: "<torrent>"[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mWhen [0m[36mapplication request the following blocks from him - for torrent: "<torrent>":[0m
    [36mThen [0m[36mapplication doesn't receive the following blocks from him - for torrent: "<torrent>":[0m

    Examples: 

  Scenario Outline: download blocks from peer which closes the connection when he get the first request                                        [90m# cucumber/DownloadBlocksAlgorithm.feature:71[0m
    [32mGiven [0m[32mtorrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m                                                                             [90m# MyStepdefs.torrent(String,String)[0m
    [32mGiven [0m[32mlink to "[0m[32m[1mCLOSE_IN_FIRST_REQUEST[0m[32m" - fake-peer on port "[0m[32m[1m4040[0m[32m" with the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m [90m# MyStepdefs.linkToFakePeerWithTheFollowingPiecesForTorrent(FakePeerType,Integer,String,Integer>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m                                                    [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mWhen [0m[32mapplication request the following blocks from him - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                                     [90m# MyStepdefs.applicationRequestTheFollowingBlocksFromHimForTorrent(String,BlockOfPiece>)[0m
    [31mThen [0m[31mapplication doesn't receive the following blocks from him - for torrent: "[0m[31m[1mtorrent-file-example1.torrent[0m[31m":[0m                             [90m# MyStepdefs.applicationDoesnTReceiveTheFollowingBlocksFromHimForTorrent(String,BlockOfPiece>)[0m
      [31mjava.lang.NullPointerException
      	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
      	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
      	at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
      	at com.steps.MyStepdefs.applicationDoesnTReceiveTheFollowingBlocksFromHimForTorrent(MyStepdefs.java:1227)
      	at ✽.Then application doesn't receive the following blocks from him - for torrent: "torrent-file-example1.torrent":(cucumber/DownloadBlocksAlgorithm.feature:63)
      [0m

  Scenario Outline: download the last blocks from a valid fake-peer which respond successfully with small delay            [90m# cucumber/DownloadBlocksAlgorithm.feature:74[0m
    [36mGiven [0m[36mtorrent: "<torrent>","<downloadLocation>"[0m
    [36mGiven [0m[36mlink to "RESPOND_WITH_DELAY_100" - fake-peer on port "4040" with the following pieces - for torrent: "<torrent>"[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mWhen [0m[36mapplication request the following blocks from him - for torrent: "<torrent>":[0m
    [36mThen [0m[36mapplication receive the following blocks from him - for torrent: "<torrent>":[0m

    Examples: 

  Scenario Outline: download the last blocks from a valid fake-peer which respond successfully with small delay                                [90m# cucumber/DownloadBlocksAlgorithm.feature:98[0m
    [32mGiven [0m[32mtorrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m                                                                             [90m# MyStepdefs.torrent(String,String)[0m
    [32mGiven [0m[32mlink to "[0m[32m[1mRESPOND_WITH_DELAY_100[0m[32m" - fake-peer on port "[0m[32m[1m4040[0m[32m" with the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m [90m# MyStepdefs.linkToFakePeerWithTheFollowingPiecesForTorrent(FakePeerType,Integer,String,Integer>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m                                                    [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mWhen [0m[32mapplication request the following blocks from him - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                                     [90m# MyStepdefs.applicationRequestTheFollowingBlocksFromHimForTorrent(String,BlockOfPiece>)[0m
    [32mThen [0m[32mapplication receive the following blocks from him - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                                     [90m# MyStepdefs.applicationReceiveTheFollowingBlocksFromHimForTorrent(String,BlockOfPiece>)[0m

  Scenario Outline: download the last blocks from a valid fake-peer which response with too much delay                      [90m# cucumber/DownloadBlocksAlgorithm.feature:100[0m
    [36mGiven [0m[36mtorrent: "<torrent>","<downloadLocation>"[0m
    [36mGiven [0m[36mlink to "RESPOND_WITH_DELAY_3000" - fake-peer on port "4040" with the following pieces - for torrent: "<torrent>"[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mWhen [0m[36mapplication request the following blocks from him - for torrent: "<torrent>":[0m
    [36mThen [0m[36mapplication doesn't receive the following blocks from him - for torrent: "<torrent>":[0m

    Examples: 

  Scenario Outline: download the last blocks from a valid fake-peer which response with too much delay                                          [90m# cucumber/DownloadBlocksAlgorithm.feature:124[0m
    [32mGiven [0m[32mtorrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m                                                                              [90m# MyStepdefs.torrent(String,String)[0m
    [32mGiven [0m[32mlink to "[0m[32m[1mRESPOND_WITH_DELAY_3000[0m[32m" - fake-peer on port "[0m[32m[1m4040[0m[32m" with the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m [90m# MyStepdefs.linkToFakePeerWithTheFollowingPiecesForTorrent(FakePeerType,Integer,String,Integer>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m                                                     [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mWhen [0m[32mapplication request the following blocks from him - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                                      [90m# MyStepdefs.applicationRequestTheFollowingBlocksFromHimForTorrent(String,BlockOfPiece>)[0m
    [31mThen [0m[31mapplication doesn't receive the following blocks from him - for torrent: "[0m[31m[1mtorrent-file-example1.torrent[0m[31m":[0m                              [90m# MyStepdefs.applicationDoesnTReceiveTheFollowingBlocksFromHimForTorrent(String,BlockOfPiece>)[0m
      [31mjava.lang.NullPointerException
      	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
      	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
      	at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
      	at com.steps.MyStepdefs.applicationDoesnTReceiveTheFollowingBlocksFromHimForTorrent(MyStepdefs.java:1227)
      	at ✽.Then application doesn't receive the following blocks from him - for torrent: "torrent-file-example1.torrent":(cucumber/DownloadBlocksAlgorithm.feature:116)
      [0m
Feature: create get and delete active torrents

  Scenario Outline: we create active torrent                                     [90m# cucumber/FileSystem.feature:3[0m
    [36mThen [0m[36mapplication create active-torrent for: "<torrent>","<downloadLocation>"[0m
    [36mThen [0m[36mactive-torrent exist: "true" for torrent: "<torrent>"[0m
    [36mThen [0m[36mfiles of torrent: "<torrent>" exist: "true" in "<downloadLocation>"[0m

    Examples: 

  Scenario Outline: we create active torrent                                                    [90m# cucumber/FileSystem.feature:10[0m
    [32mThen [0m[32mapplication create active-torrent for: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m [90m# MyStepdefs.applicationCreateActiveTorrentFor(String,String)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mtrue[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m              [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m
    [32mThen [0m[32mfiles of torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" exist: "[0m[32m[1mtrue[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m"[0m     [90m# MyStepdefs.torrentExistIn(String,boolean,String)[0m

  Scenario Outline: we create active torrent                                                    [90m# cucumber/FileSystem.feature:11[0m
    [32mThen [0m[32mapplication create active-torrent for: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m [90m# MyStepdefs.applicationCreateActiveTorrentFor(String,String)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mtrue[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m"[0m              [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m
    [32mThen [0m[32mfiles of torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m" exist: "[0m[32m[1mtrue[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m"[0m     [90m# MyStepdefs.torrentExistIn(String,boolean,String)[0m

  Scenario Outline: we create active torrent                                                    [90m# cucumber/FileSystem.feature:12[0m
    [32mThen [0m[32mapplication create active-torrent for: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m [90m# MyStepdefs.applicationCreateActiveTorrentFor(String,String)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mtrue[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m"[0m              [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m
    [32mThen [0m[32mfiles of torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m" exist: "[0m[32m[1mtrue[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m"[0m     [90m# MyStepdefs.torrentExistIn(String,boolean,String)[0m

  Scenario Outline: we delete torrent files only                                  [90m# cucumber/FileSystem.feature:14[0m
    [36mThen [0m[36mapplication create active-torrent for: "<torrent>","<downloadLocation>"[0m
    [36mThen [0m[36mapplication delete active-torrent: "<torrent>": "false" and file: "true"[0m
    [36mThen [0m[36mfiles of torrent: "<torrent>" exist: "false" in "<downloadLocation>"[0m
    [36mThen [0m[36mactive-torrent exist: "true" for torrent: "<torrent>"[0m

    Examples: 

  Scenario Outline: we delete torrent files only                                                      [90m# cucumber/FileSystem.feature:22[0m
    [32mThen [0m[32mapplication create active-torrent for: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m       [90m# MyStepdefs.applicationCreateActiveTorrentFor(String,String)[0m
    [32mThen [0m[32mapplication delete active-torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m": "[0m[32m[1mfalse[0m[32m" and file: "[0m[32m[1mtrue[0m[32m"[0m [90m# MyStepdefs.applicationDeleteActiveTorrentAndFile(String,boolean,boolean)[0m
    [32mThen [0m[32mfiles of torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" exist: "[0m[32m[1mfalse[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m"[0m          [90m# MyStepdefs.torrentExistIn(String,boolean,String)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mtrue[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m                    [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m

  Scenario Outline: we delete torrent files only                                                      [90m# cucumber/FileSystem.feature:23[0m
    [32mThen [0m[32mapplication create active-torrent for: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m       [90m# MyStepdefs.applicationCreateActiveTorrentFor(String,String)[0m
    [32mThen [0m[32mapplication delete active-torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m": "[0m[32m[1mfalse[0m[32m" and file: "[0m[32m[1mtrue[0m[32m"[0m [90m# MyStepdefs.applicationDeleteActiveTorrentAndFile(String,boolean,boolean)[0m
    [32mThen [0m[32mfiles of torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m" exist: "[0m[32m[1mfalse[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m"[0m          [90m# MyStepdefs.torrentExistIn(String,boolean,String)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mtrue[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m"[0m                    [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m

  Scenario Outline: we delete torrent files only                                                      [90m# cucumber/FileSystem.feature:24[0m
    [32mThen [0m[32mapplication create active-torrent for: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m       [90m# MyStepdefs.applicationCreateActiveTorrentFor(String,String)[0m
    [32mThen [0m[32mapplication delete active-torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m": "[0m[32m[1mfalse[0m[32m" and file: "[0m[32m[1mtrue[0m[32m"[0m [90m# MyStepdefs.applicationDeleteActiveTorrentAndFile(String,boolean,boolean)[0m
    [32mThen [0m[32mfiles of torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m" exist: "[0m[32m[1mfalse[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m"[0m          [90m# MyStepdefs.torrentExistIn(String,boolean,String)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mtrue[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m"[0m                    [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m

  Scenario Outline: we delete active torrent only                                 [90m# cucumber/FileSystem.feature:26[0m
    [36mThen [0m[36mapplication create active-torrent for: "<torrent>","<downloadLocation>"[0m
    [36mThen [0m[36mapplication delete active-torrent: "<torrent>": "true" and file: "false"[0m
    [36mThen [0m[36mfiles of torrent: "<torrent>" exist: "true" in "<downloadLocation>"[0m
    [36mThen [0m[36mactive-torrent exist: "false" for torrent: "<torrent>"[0m

    Examples: 

  Scenario Outline: we delete active torrent only                                                     [90m# cucumber/FileSystem.feature:34[0m
    [32mThen [0m[32mapplication create active-torrent for: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m       [90m# MyStepdefs.applicationCreateActiveTorrentFor(String,String)[0m
    [32mThen [0m[32mapplication delete active-torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m": "[0m[32m[1mtrue[0m[32m" and file: "[0m[32m[1mfalse[0m[32m"[0m [90m# MyStepdefs.applicationDeleteActiveTorrentAndFile(String,boolean,boolean)[0m
    [32mThen [0m[32mfiles of torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" exist: "[0m[32m[1mtrue[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m"[0m           [90m# MyStepdefs.torrentExistIn(String,boolean,String)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mfalse[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m                   [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m

  Scenario Outline: we delete active torrent only                                                     [90m# cucumber/FileSystem.feature:35[0m
    [32mThen [0m[32mapplication create active-torrent for: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m       [90m# MyStepdefs.applicationCreateActiveTorrentFor(String,String)[0m
    [32mThen [0m[32mapplication delete active-torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m": "[0m[32m[1mtrue[0m[32m" and file: "[0m[32m[1mfalse[0m[32m"[0m [90m# MyStepdefs.applicationDeleteActiveTorrentAndFile(String,boolean,boolean)[0m
    [32mThen [0m[32mfiles of torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m" exist: "[0m[32m[1mtrue[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m"[0m           [90m# MyStepdefs.torrentExistIn(String,boolean,String)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mfalse[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m"[0m                   [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m

  Scenario Outline: we delete active torrent only                                                     [90m# cucumber/FileSystem.feature:36[0m
    [32mThen [0m[32mapplication create active-torrent for: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m       [90m# MyStepdefs.applicationCreateActiveTorrentFor(String,String)[0m
    [32mThen [0m[32mapplication delete active-torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m": "[0m[32m[1mtrue[0m[32m" and file: "[0m[32m[1mfalse[0m[32m"[0m [90m# MyStepdefs.applicationDeleteActiveTorrentAndFile(String,boolean,boolean)[0m
    [32mThen [0m[32mfiles of torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m" exist: "[0m[32m[1mtrue[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m"[0m           [90m# MyStepdefs.torrentExistIn(String,boolean,String)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mfalse[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m"[0m                   [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m

  Scenario Outline: we delete active torrent and file                            [90m# cucumber/FileSystem.feature:38[0m
    [36mThen [0m[36mapplication create active-torrent for: "<torrent>","<downloadLocation>"[0m
    [36mThen [0m[36mapplication delete active-torrent: "<torrent>": "true" and file: "true"[0m
    [36mThen [0m[36mactive-torrent exist: "false" for torrent: "<torrent>"[0m
    [36mThen [0m[36mfiles of torrent: "<torrent>" exist: "false" in "<downloadLocation>"[0m
    [36mThen [0m[36mactive-torrent exist: "false" for torrent: "<torrent>"[0m

    Examples: 

  Scenario Outline: we delete active torrent and file                                                [90m# cucumber/FileSystem.feature:47[0m
    [32mThen [0m[32mapplication create active-torrent for: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m      [90m# MyStepdefs.applicationCreateActiveTorrentFor(String,String)[0m
    [32mThen [0m[32mapplication delete active-torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m": "[0m[32m[1mtrue[0m[32m" and file: "[0m[32m[1mtrue[0m[32m"[0m [90m# MyStepdefs.applicationDeleteActiveTorrentAndFile(String,boolean,boolean)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mfalse[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m                  [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m
    [32mThen [0m[32mfiles of torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" exist: "[0m[32m[1mfalse[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m"[0m         [90m# MyStepdefs.torrentExistIn(String,boolean,String)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mfalse[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m                  [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m

  Scenario Outline: we delete active torrent and file                                                [90m# cucumber/FileSystem.feature:48[0m
    [32mThen [0m[32mapplication create active-torrent for: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m      [90m# MyStepdefs.applicationCreateActiveTorrentFor(String,String)[0m
    [32mThen [0m[32mapplication delete active-torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m": "[0m[32m[1mtrue[0m[32m" and file: "[0m[32m[1mtrue[0m[32m"[0m [90m# MyStepdefs.applicationDeleteActiveTorrentAndFile(String,boolean,boolean)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mfalse[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m"[0m                  [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m
    [32mThen [0m[32mfiles of torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m" exist: "[0m[32m[1mfalse[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m"[0m         [90m# MyStepdefs.torrentExistIn(String,boolean,String)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mfalse[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m"[0m                  [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m

  Scenario Outline: we delete active torrent and file                                                [90m# cucumber/FileSystem.feature:49[0m
    [32mThen [0m[32mapplication create active-torrent for: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m      [90m# MyStepdefs.applicationCreateActiveTorrentFor(String,String)[0m
    [32mThen [0m[32mapplication delete active-torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m": "[0m[32m[1mtrue[0m[32m" and file: "[0m[32m[1mtrue[0m[32m"[0m [90m# MyStepdefs.applicationDeleteActiveTorrentAndFile(String,boolean,boolean)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mfalse[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m"[0m                  [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m
    [32mThen [0m[32mfiles of torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m" exist: "[0m[32m[1mfalse[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m"[0m         [90m# MyStepdefs.torrentExistIn(String,boolean,String)[0m
    [32mThen [0m[32mactive-torrent exist: "[0m[32m[1mfalse[0m[32m" for torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m"[0m                  [90m# MyStepdefs.activeTorrentExistForTorrent(boolean,String)[0m

  Scenario Outline: we save piece of active torrent                                                         [90m# cucumber/FileSystem.feature:51[0m
    # we can't use "Then application create active-torrent for" because we don't have Flux<PieceMessage> to give yet.
    [36mThen [0m[36mapplication save random blocks for torrent: "<torrent>" in "<downloadLocation>" and check it saved[0m

    #      | 1          | 0    | 1      |
    #      | -1         | 0    | 1      |
    #      | -2         | 0    |        |
    #    Then completed pieces are for torrent: "<torrent>" in "<downloadLocation>":
    #      | 0  |
    #      | -2 |
    Examples: 

  #      | torrent-file-example1.torrent | torrents-test    |
  Scenario Outline: we save piece of active torrent                                                                        [90m# cucumber/FileSystem.feature:66[0m
    # we can't use "Then application create active-torrent for" because we don't have Flux<PieceMessage> to give yet.
    [32mThen [0m[32mapplication save random blocks for torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m" and check it saved[0m [90m# MyStepdefs.applicationSaveARandomBlockInsideTorrentInAndCheckItSaved(String,String,BlockOfPiece>)[0m

  #      | torrent-file-example3.torrent | torrents-test    |
  Scenario Outline: we save random blocks inside files and if a piece completely downloaded, we check it has been marked as downloaded [90m# cucumber/FileSystem.feature:69[0m
    # we can't use "Then application create active-torrent for" because we don't have Flux<PieceMessage> to give yet.
    [36mThen [0m[36mapplication save random blocks for torrent: "<torrent>" in "<downloadLocation>" and check it saved[0m
    [36mThen [0m[36mcompleted pieces are for torrent: "<torrent>" in "<downloadLocation>":[0m

    Examples: 

  Scenario Outline: we save random blocks inside files and if a piece completely downloaded, we check it has been marked as downloaded [90m# cucumber/FileSystem.feature:86[0m
    # we can't use "Then application create active-torrent for" because we don't have Flux<PieceMessage> to give yet.
    [32mThen [0m[32mapplication save random blocks for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m" and check it saved[0m             [90m# MyStepdefs.applicationSaveARandomBlockInsideTorrentInAndCheckItSaved(String,String,BlockOfPiece>)[0m
    [32mThen [0m[32mcompleted pieces are for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m":[0m                                         [90m# MyStepdefs.completedPiecesAreForTorrent(String,String,Integer>)[0m

  Scenario Outline: we save random blocks inside files and if a piece completely downloaded, we check it has been marked as downloaded [90m# cucumber/FileSystem.feature:87[0m
    # we can't use "Then application create active-torrent for" because we don't have Flux<PieceMessage> to give yet.
    [32mThen [0m[32mapplication save random blocks for torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m" and check it saved[0m             [90m# MyStepdefs.applicationSaveARandomBlockInsideTorrentInAndCheckItSaved(String,String,BlockOfPiece>)[0m
    [32mThen [0m[32mcompleted pieces are for torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m":[0m                                         [90m# MyStepdefs.completedPiecesAreForTorrent(String,String,Integer>)[0m

  Scenario Outline: we save random blocks inside files and if a piece completely downloaded, we check it has been marked as downloaded [90m# cucumber/FileSystem.feature:88[0m
    # we can't use "Then application create active-torrent for" because we don't have Flux<PieceMessage> to give yet.
    [32mThen [0m[32mapplication save random blocks for torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m" and check it saved[0m             [90m# MyStepdefs.applicationSaveARandomBlockInsideTorrentInAndCheckItSaved(String,String,BlockOfPiece>)[0m
    [32mThen [0m[32mcompleted pieces are for torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m" in "[0m[32m[1mtorrents-test[0m[32m":[0m                                         [90m# MyStepdefs.completedPiecesAreForTorrent(String,String,Integer>)[0m

  Scenario Outline: we save the last piece of active torrent                          [90m# cucumber/FileSystem.feature:90[0m
    # we can't use "Then application create active-torrent for" because we don't have Flux<PieceMessage> to give yet.
    [36mThen [0m[36mapplication save the last piece of torrent: "<torrent>","<downloadLocation>"[0m

    Examples: 

  #      | torrent-file-example1.torrent | torrents-test    |
  #      | torrent-file-example2.torrent | torrents-test    |
  Scenario Outline: we save the last piece of active torrent                                         [90m# cucumber/FileSystem.feature:98[0m
    # we can't use "Then application create active-torrent for" because we don't have Flux<PieceMessage> to give yet.
    [31mThen [0m[31mapplication save the last piece of torrent: "[0m[31m[1mtorrent-file-example3.torrent[0m[31m","[0m[31m[1mtorrents-test[0m[31m"[0m [90m# MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(String,String)[0m
      [31mjava.lang.AssertionError: expectation "expectNextCount(1)" failed (expected: count = 1; actual: counted = 0; signal: onError(The read operation failed to read exactly what we wrote: arrays first differed at element [102813]; expected:<0> but was:<-99>))
      	at reactor.test.ErrorFormatter.assertionError(ErrorFormatter.java:105)
      	at reactor.test.ErrorFormatter.failPrefix(ErrorFormatter.java:94)
      	at reactor.test.ErrorFormatter.fail(ErrorFormatter.java:64)
      	at reactor.test.ErrorFormatter.failOptional(ErrorFormatter.java:79)
      	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.checkCountMismatch(DefaultStepVerifierBuilder.java:1223)
      	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onSignalCount(DefaultStepVerifierBuilder.java:1455)
      	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onExpectation(DefaultStepVerifierBuilder.java:1304)
      	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onError(DefaultStepVerifierBuilder.java:996)
      	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
      	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:141)
      	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
      	at reactor.core.publisher.FluxTake$TakeFuseableSubscriber.onError(FluxTake.java:415)
      	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
      	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:228)
      	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
      	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:782)
      	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:556)
      	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:536)
      	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onError(FluxFlatMap.java:408)
      	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
      	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:228)
      	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:199)
      	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:378)
      	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)
      	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:378)
      	at reactor.core.publisher.FluxReplay$UnboundedReplayBuffer.replayNormal(FluxReplay.java:564)
      	at reactor.core.publisher.FluxReplay$UnboundedReplayBuffer.replay(FluxReplay.java:651)
      	at reactor.core.publisher.FluxReplay.subscribe(FluxReplay.java:1085)
      	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:148)
      	at reactor.core.publisher.ConnectableFluxOnAssembly.subscribe(ConnectableFluxOnAssembly.java:60)
      	at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
      	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
      	at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
      	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
      	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
      	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
      	at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
      	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
      	at reactor.core.publisher.FluxTakeFuseable.subscribe(FluxTakeFuseable.java:45)
      	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
      	at reactor.core.publisher.MonoSingle.subscribe(MonoSingle.java:58)
      	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
      	at reactor.core.publisher.Mono.subscribe(Mono.java:3257)
      	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
      	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
      	at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
      	at com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:630)
      	at ✽.Then application save the last piece of torrent: "torrent-file-example3.torrent","torrents-test"(cucumber/FileSystem.feature:92)
      	Suppressed: The read operation failed to read exactly what we wrote: arrays first differed at element [102813]; expected:<0> but was:<-99>
      		at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:55)
      		at org.junit.Assert.internalArrayEquals(Assert.java:532)
      		at org.junit.Assert.assertArrayEquals(Assert.java:341)
      		at com.steps.MyStepdefs.lambda$applicationSaveAllTheLastPieceOfTorrent$39(MyStepdefs.java:616)
      		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:190)
      		at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:378)
      		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)
      		at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:378)
      		at reactor.core.publisher.FluxReplay$UnboundedReplayBuffer.replayNormal(FluxReplay.java:564)
      		at reactor.core.publisher.FluxReplay$UnboundedReplayBuffer.replay(FluxReplay.java:651)
      		at reactor.core.publisher.FluxReplay.subscribe(FluxReplay.java:1085)
      		at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:148)
      		at reactor.core.publisher.ConnectableFluxOnAssembly.subscribe(ConnectableFluxOnAssembly.java:60)
      		at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
      		at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
      		at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
      		at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
      		at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
      		at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
      		at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
      		at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
      		at reactor.core.publisher.FluxTakeFuseable.subscribe(FluxTakeFuseable.java:45)
      		at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
      		at reactor.core.publisher.MonoSingle.subscribe(MonoSingle.java:58)
      		at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
      		at reactor.core.publisher.Mono.subscribe(Mono.java:3257)
      		at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
      		at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
      		at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
      		at com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:630)
      		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
      		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
      		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
      		at java.lang.reflect.Method.invoke(Method.java:498)
      		at cucumber.runtime.Utils$1.call(Utils.java:40)
      		at cucumber.runtime.Timeout.timeout(Timeout.java:16)
      		at cucumber.runtime.Utils.invoke(Utils.java:34)
      		at cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:38)
      		at cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)
      		at cucumber.runtime.Runtime.runStep(Runtime.java:300)
      		at cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)
      		at cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)
      		at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)
      		at cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:102)
      		at org.junit.runners.Suite.runChild(Suite.java:128)
      		at org.junit.runners.Suite.runChild(Suite.java:27)
      		at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
      		at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
      		at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
      		at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
      		at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
      		at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
      		at cucumber.runtime.junit.ExamplesRunner.run(ExamplesRunner.java:59)
      		at org.junit.runners.Suite.runChild(Suite.java:128)
      		at org.junit.runners.Suite.runChild(Suite.java:27)
      		at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
      		at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
      		at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
      		at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
      		at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
      		at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
      		at cucumber.runtime.junit.ScenarioOutlineRunner.run(ScenarioOutlineRunner.java:53)
      		at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)
      		at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)
      		at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
      		at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
      		at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
      		at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
      		at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
      		at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
      		at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)
      		at cucumber.api.junit.Cucumber.runChild(Cucumber.java:95)
      		at cucumber.api.junit.Cucumber.runChild(Cucumber.java:38)
      		at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
      		at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
      		at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
      		at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
      		at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
      		at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
      		at cucumber.api.junit.Cucumber.run(Cucumber.java:100)
      		at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
      		at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
      		at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
      		at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
      		at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
      		at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
      		Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
      Assembly trace from producer [reactor.core.publisher.FluxPeekFuseable] :
      	reactor.core.publisher.Flux.doOnSignal(Flux.java:8541)
      	reactor.core.publisher.Flux.doOnNext(Flux.java:3756)
      	com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:613)
      	cucumber.runtime.Utils$1.call(Utils.java:40)
      	cucumber.runtime.Timeout.timeout(Timeout.java:16)
      	cucumber.runtime.Utils.invoke(Utils.java:34)
      	cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:38)
      	cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)
      	cucumber.runtime.Runtime.runStep(Runtime.java:300)
      	cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)
      	cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)
      	cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)
      	cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:102)
      	cucumber.runtime.junit.ExamplesRunner.run(ExamplesRunner.java:59)
      	cucumber.runtime.junit.ScenarioOutlineRunner.run(ScenarioOutlineRunner.java:53)
      	cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)
      	cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)
      	cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)
      	cucumber.api.junit.Cucumber.runChild(Cucumber.java:95)
      	cucumber.api.junit.Cucumber.runChild(Cucumber.java:38)
      	cucumber.api.junit.Cucumber.run(Cucumber.java:100)
      	org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
      	org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
      	org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
      	org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
      	org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
      	org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
      Error has been observed by the following operator(s):
      	|_	Flux.doOnNext ⇢ com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:613)
      	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:619)
      	|_	Flux.doOnNext ⇢ com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:620)
      	|_	Flux.take ⇢ com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:625)
      	|_	Flux.single ⇢ com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:626)
      
      	Caused by: java.lang.AssertionError: expected:<0> but was:<-99>
      		at org.junit.Assert.fail(Assert.java:88)
      		at org.junit.Assert.failNotEquals(Assert.java:834)
      		at org.junit.Assert.assertEquals(Assert.java:118)
      		at org.junit.Assert.assertEquals(Assert.java:144)
      		at org.junit.internal.ExactComparisonCriteria.assertElementsEqual(ExactComparisonCriteria.java:8)
      		at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:53)
      		... 85 more
      [0m

  Scenario Outline: we save all the pieces and expect to see that the fluxes are completed [90m# cucumber/FileSystem.feature:100[0m
    [36mGiven [0m[36mtorrent: "<torrent>","<downloadLocation>"[0m
    [36mWhen [0m[36mapplication save the all the pieces of torrent: "<torrent>"[0m
    [36mThen [0m[36mthe saved pieces flux send complete signal - for torrent: "<torrent>"[0m
    [36mThen [0m[36mthe saved blocks flux send  complete signal - for torrent: "<torrent>"[0m

    #    Then torrent-status for torrent "<torrent>" will be:
    #      | PAUSE_DOWNLOAD        |
    #      | COMPLETED_DOWNLOADING |
    Examples: 

  Scenario Outline: we save all the pieces and expect to see that the fluxes are completed          [90m# cucumber/FileSystem.feature:111[0m
    [32mGiven [0m[32mtorrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m                                  [90m# MyStepdefs.torrent(String,String)[0m
    [32mWhen [0m[32mapplication save the all the pieces of torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m            [90m# MyStepdefs.applicationSaveTheAllThePiecesOfTorrent(String)[0m
    [32mThen [0m[32mthe saved pieces flux send complete signal - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m  [90m# MyStepdefs.theSavedPiecesFluxSendCompleteSignalForTorrent(String)[0m
    [32mThen [0m[32mthe saved blocks flux send  complete signal - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m [90m# MyStepdefs.theSavedBlocksFluxSendCompleteSignalForTorrent(String)[0m

  Scenario Outline: we save all the pieces and expect to see that the fluxes are completed          [90m# cucumber/FileSystem.feature:112[0m
    [32mGiven [0m[32mtorrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m                                  [90m# MyStepdefs.torrent(String,String)[0m
    [32mWhen [0m[32mapplication save the all the pieces of torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m"[0m            [90m# MyStepdefs.applicationSaveTheAllThePiecesOfTorrent(String)[0m
    [32mThen [0m[32mthe saved pieces flux send complete signal - for torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m"[0m  [90m# MyStepdefs.theSavedPiecesFluxSendCompleteSignalForTorrent(String)[0m
    [32mThen [0m[32mthe saved blocks flux send  complete signal - for torrent: "[0m[32m[1mtorrent-file-example2.torrent[0m[32m"[0m [90m# MyStepdefs.theSavedBlocksFluxSendCompleteSignalForTorrent(String)[0m

  Scenario Outline: we save all the pieces and expect to see that the fluxes are completed          [90m# cucumber/FileSystem.feature:113[0m
    [32mGiven [0m[32mtorrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m","[0m[32m[1mtorrents-test[0m[32m"[0m                                  [90m# MyStepdefs.torrent(String,String)[0m
    [32mWhen [0m[32mapplication save the all the pieces of torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m"[0m            [90m# MyStepdefs.applicationSaveTheAllThePiecesOfTorrent(String)[0m
    [32mThen [0m[32mthe saved pieces flux send complete signal - for torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m"[0m  [90m# MyStepdefs.theSavedPiecesFluxSendCompleteSignalForTorrent(String)[0m
    [32mThen [0m[32mthe saved blocks flux send  complete signal - for torrent: "[0m[32m[1mtorrent-file-example3.torrent[0m[32m"[0m [90m# MyStepdefs.theSavedBlocksFluxSendCompleteSignalForTorrent(String)[0m
Feature: inject incoming and outgoing messages to test the statistics
Feature: download pieces from fake-peers

  Scenario Outline: download 2 pieces ,one by one, from a valid fake-peer                                          [90m# cucumber/PiecesDownloader.feature:3[0m
    [36mGiven [0m[36mtorrent: "<torrent>","<downloadLocation>"[0m
    [36mGiven [0m[36mlink to "VALID" - fake-peer on port "4040" with the following pieces - for torrent: "<torrent>"[0m
    [36mWhen [0m[36mapplication download the following pieces - concurrent piece's downloads: "1" - for torrent: "<torrent>":[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mapplication downloaded the following pieces - for torrent: "<torrent>":[0m

    Examples: 

  Scenario Outline: download 2 pieces ,one by one, from a valid fake-peer                                                              [90m# cucumber/PiecesDownloader.feature:19[0m
    [32mGiven [0m[32mtorrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test/[0m[32m"[0m                                                                    [90m# MyStepdefs.torrent(String,String)[0m
    [32mGiven [0m[32mlink to "[0m[32m[1mVALID[0m[32m" - fake-peer on port "[0m[32m[1m4040[0m[32m" with the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m          [90m# MyStepdefs.linkToFakePeerWithTheFollowingPiecesForTorrent(FakePeerType,Integer,String,Integer>)[0m
    [32mWhen [0m[32mapplication download the following pieces - concurrent piece's downloads: "[0m[32m[1m1[0m[32m" - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m [90m# MyStepdefs.applicationDownloadTheFollowingPiecesConcurrentPieceSDownloadsForTorrent(int,String,Integer>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m                                            [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mapplication downloaded the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                                   [90m# MyStepdefs.applicationDownloadedTheFollowingPiecesForTorrent(String,Integer>)[0m

  Scenario Outline: download 2 pieces concurrently from a valid fake-peer                                          [90m# cucumber/PiecesDownloader.feature:21[0m
    [36mGiven [0m[36mtorrent: "<torrent>","<downloadLocation>"[0m
    [36mGiven [0m[36mlink to "VALID" - fake-peer on port "4040" with the following pieces - for torrent: "<torrent>"[0m
    [36mWhen [0m[36mapplication download the following pieces - concurrent piece's downloads: "2" - for torrent: "<torrent>":[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mapplication downloaded the following pieces - for torrent: "<torrent>":[0m

    Examples: 

  Scenario Outline: download 2 pieces concurrently from a valid fake-peer                                                              [90m# cucumber/PiecesDownloader.feature:37[0m
    [32mGiven [0m[32mtorrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test/[0m[32m"[0m                                                                    [90m# MyStepdefs.torrent(String,String)[0m
    [32mGiven [0m[32mlink to "[0m[32m[1mVALID[0m[32m" - fake-peer on port "[0m[32m[1m4040[0m[32m" with the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m          [90m# MyStepdefs.linkToFakePeerWithTheFollowingPiecesForTorrent(FakePeerType,Integer,String,Integer>)[0m
    [32mWhen [0m[32mapplication download the following pieces - concurrent piece's downloads: "[0m[32m[1m2[0m[32m" - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m [90m# MyStepdefs.applicationDownloadTheFollowingPiecesConcurrentPieceSDownloadsForTorrent(int,String,Integer>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m                                            [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mapplication downloaded the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                                   [90m# MyStepdefs.applicationDownloadedTheFollowingPiecesForTorrent(String,Integer>)[0m

  Scenario Outline: fail to download 2 pieces from a invalid fake-peer which have big delay in response.                    [90m# cucumber/PiecesDownloader.feature:39[0m
    [36mGiven [0m[36mtorrent: "<torrent>","<downloadLocation>"[0m
    [36mGiven [0m[36mlink to "RESPOND_WITH_DELAY_3000" - fake-peer on port "4040" with the following pieces - for torrent: "<torrent>"[0m
    [36mWhen [0m[36mapplication download the following pieces - concurrent piece's downloads: "1" - for torrent: "<torrent>":[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mapplication couldn't downloaded the following pieces - for torrent: "<torrent>":[0m

    Examples: 

  Scenario Outline: fail to download 2 pieces from a invalid fake-peer which have big delay in response.                                        [90m# cucumber/PiecesDownloader.feature:55[0m
    [32mGiven [0m[32mtorrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test/[0m[32m"[0m                                                                             [90m# MyStepdefs.torrent(String,String)[0m
    [32mGiven [0m[32mlink to "[0m[32m[1mRESPOND_WITH_DELAY_3000[0m[32m" - fake-peer on port "[0m[32m[1m4040[0m[32m" with the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m [90m# MyStepdefs.linkToFakePeerWithTheFollowingPiecesForTorrent(FakePeerType,Integer,String,Integer>)[0m
    [32mWhen [0m[32mapplication download the following pieces - concurrent piece's downloads: "[0m[32m[1m1[0m[32m" - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m          [90m# MyStepdefs.applicationDownloadTheFollowingPiecesConcurrentPieceSDownloadsForTorrent(int,String,Integer>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m                                                     [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mapplication couldn't downloaded the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                                   [90m# MyStepdefs.applicationCloudnTDownloadedTheFollowingPiecesForTorrent(String,Integer>)[0m

  Scenario Outline: download 2 pieces ,one by one, from a valid fake-peer while we pause and resume the download.     [90m# cucumber/PiecesDownloader.feature:57[0m
    [36mGiven [0m[36mtorrent: "<torrent>","<downloadLocation>"[0m
    [36mGiven [0m[36mlink to "VALID" - fake-peer on port "4040" with the following pieces - for torrent: "<torrent>"[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mWhen [0m[36mapplication download the following pieces - concurrent piece's downloads: "1" - for torrent: "<torrent>":[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mapplication couldn't downloaded the following pieces - for torrent: "<torrent>":[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mapplication downloaded the following pieces - for torrent: "<torrent>":[0m
    [36mWhen [0m[36mfake-peer on port "4040" notify on more completed pieces using "BitFieldMessage" - for torrent: "<torrent>":[0m
    [36mWhen [0m[36mapplication download the following pieces - concurrent piece's downloads: "1" - for torrent: "<torrent>":[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mapplication couldn't downloaded the following pieces - for torrent: "<torrent>":[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mapplication downloaded the following pieces - for torrent: "<torrent>":[0m

    Examples: 

  Scenario Outline: download 2 pieces ,one by one, from a valid fake-peer while we pause and resume the download.                         [90m# cucumber/PiecesDownloader.feature:88[0m
    [32mGiven [0m[32mtorrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m","[0m[32m[1mtorrents-test/[0m[32m"[0m                                                                       [90m# MyStepdefs.torrent(String,String)[0m
    [32mGiven [0m[32mlink to "[0m[32m[1mVALID[0m[32m" - fake-peer on port "[0m[32m[1m4040[0m[32m" with the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m"[0m             [90m# MyStepdefs.linkToFakePeerWithTheFollowingPiecesForTorrent(FakePeerType,Integer,String,Integer>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m                                               [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mWhen [0m[32mapplication download the following pieces - concurrent piece's downloads: "[0m[32m[1m1[0m[32m" - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m    [90m# MyStepdefs.applicationDownloadTheFollowingPiecesConcurrentPieceSDownloadsForTorrent(int,String,Integer>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m                                               [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mapplication couldn't downloaded the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                             [90m# MyStepdefs.applicationCloudnTDownloadedTheFollowingPiecesForTorrent(String,Integer>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m                                               [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mapplication downloaded the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                                      [90m# MyStepdefs.applicationDownloadedTheFollowingPiecesForTorrent(String,Integer>)[0m
    [32mWhen [0m[32mfake-peer on port "[0m[32m[1m4040[0m[32m" notify on more completed pieces using "[0m[32m[1mBitFieldMessage[0m[32m" - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m [90m# MyStepdefs.fakePeerOnPortNotifyOnMoreCompletedPiecesUsingForTorrent(int,String,String,Integer>)[0m
    [32mWhen [0m[32mapplication download the following pieces - concurrent piece's downloads: "[0m[32m[1m1[0m[32m" - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m    [90m# MyStepdefs.applicationDownloadTheFollowingPiecesConcurrentPieceSDownloadsForTorrent(int,String,Integer>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m                                               [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mapplication couldn't downloaded the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                             [90m# MyStepdefs.applicationCloudnTDownloadedTheFollowingPiecesForTorrent(String,Integer>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m                                               [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mapplication downloaded the following pieces - for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m":[0m                                      [90m# MyStepdefs.applicationDownloadedTheFollowingPiecesForTorrent(String,Integer>)[0m
Feature: start/stop downloading/uploading

  Scenario Outline: start downloading & uploading                                     [90m# cucumber/TorrentStatus.feature:3[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: start downloading & uploading                                                     [90m# cucumber/TorrentStatus.feature:27[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: start downloading & uploading and then stop uploading             [90m# cucumber/TorrentStatus.feature:29[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: start downloading & uploading and then stop uploading                             [90m# cucumber/TorrentStatus.feature:60[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: torrent-status is in downloading & uploading state and then stop uploading [90m# cucumber/TorrentStatus.feature:62[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: torrent-status is in downloading & uploading state and then stop uploading        [90m# cucumber/TorrentStatus.feature:85[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: start downloading & uploading and then stop uploading and downloading [90m# cucumber/TorrentStatus.feature:87[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: start downloading & uploading and then stop uploading and downloading             [90m# cucumber/TorrentStatus.feature:111[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: start downloading & uploading & listen for incoming peers and then remove torrent [90m# cucumber/TorrentStatus.feature:113[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: start downloading & uploading & listen for incoming peers and then remove torrent [90m# cucumber/TorrentStatus.feature:139[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: start downloading & uploading when torrent is removed             [90m# cucumber/TorrentStatus.feature:141[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: start downloading & uploading when torrent is removed                             [90m# cucumber/TorrentStatus.feature:165[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: start downloading & uploading when files are removed              [90m# cucumber/TorrentStatus.feature:167[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: start downloading & uploading when files are removed                              [90m# cucumber/TorrentStatus.feature:189[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: start downloading & uploading when torrent and files are removed  [90m# cucumber/TorrentStatus.feature:191[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: start downloading & uploading when torrent and files are removed                  [90m# cucumber/TorrentStatus.feature:214[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: complete downloading & uploading when torrent and files are removed [90m# cucumber/TorrentStatus.feature:216[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: complete downloading & uploading when torrent and files are removed               [90m# cucumber/TorrentStatus.feature:239[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: starting download and upload which already download and upload already started [90m# cucumber/TorrentStatus.feature:241[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: starting download and upload which already download and upload already started    [90m# cucumber/TorrentStatus.feature:265[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: starting a torrent twice                                          [90m# cucumber/TorrentStatus.feature:267[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: starting a torrent twice                                                          [90m# cucumber/TorrentStatus.feature:303[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: remove torrent twice                                              [90m# cucumber/TorrentStatus.feature:305[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: remove torrent twice                                                              [90m# cucumber/TorrentStatus.feature:326[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: remove files twice                                                [90m# cucumber/TorrentStatus.feature:328[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: remove files twice                                                                [90m# cucumber/TorrentStatus.feature:347[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: complete torrent twice                                            [90m# cucumber/TorrentStatus.feature:349[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: complete torrent twice                                                            [90m# cucumber/TorrentStatus.feature:369[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: start listening for incoming peers                                [90m# cucumber/TorrentStatus.feature:371[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: start listening for incoming peers                                                [90m# cucumber/TorrentStatus.feature:391[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: stop listening for incoming peers                                 [90m# cucumber/TorrentStatus.feature:393[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: stop listening for incoming peers                                                 [90m# cucumber/TorrentStatus.feature:413[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: stop listening for incoming peers while keep searching peers      [90m# cucumber/TorrentStatus.feature:415[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: stop listening for incoming peers while keep searching peers                      [90m# cucumber/TorrentStatus.feature:437[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: remove torrent while searching peers                              [90m# cucumber/TorrentStatus.feature:439[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: remove torrent while searching peers                                              [90m# cucumber/TorrentStatus.feature:460[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: remove files while searching peers                                [90m# cucumber/TorrentStatus.feature:462[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: remove files while searching peers                                                [90m# cucumber/TorrentStatus.feature:483[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: start search peers when the download is already completed         [90m# cucumber/TorrentStatus.feature:485[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: start search peers when the download is already completed                         [90m# cucumber/TorrentStatus.feature:505[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m

  Scenario Outline: start search peers while downloading                              [90m# cucumber/TorrentStatus.feature:507[0m
    [36mGiven [0m[36minitial torrent-status for torrent: "<torrent>" in "<downloadLocation>" is:[0m
    [36mWhen [0m[36mtorrent-status for torrent "<torrent>" is trying to change to:[0m
    [36mThen [0m[36mtorrent-status for torrent "<torrent>" will be:[0m

    Examples: 

  Scenario Outline: start search peers while downloading                                              [90m# cucumber/TorrentStatus.feature:529[0m
    [32mGiven [0m[32minitial torrent-status for torrent: "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" in "[0m[32m[1mtorrents-test/[0m[32m" is:[0m [90m# MyStepdefs.activeTorrentForInWithTheFollowingStatus(String,String,TorrentStatusType,Boolean>)[0m
    [32mWhen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" is trying to change to:[0m           [90m# MyStepdefs.torrentStatusForIsTryingToChangeTo(String,TorrentStatusType>)[0m
    [32mThen [0m[32mtorrent-status for torrent "[0m[32m[1mtorrent-file-example1.torrent[0m[32m" will be:[0m                          [90m# MyStepdefs.torrentStatusForWillBe(String,TorrentStatusType>)[0m
Feature: test tracker api calls

  Background: read torrent file           [90m# cucumber/TrackerCommunication.feature:3[0m
    [32mGiven [0m[32mnew torrent file: "[0m[32m[1mtor.torrent[0m[32m"[0m [90m# MyStepdefs.newTorrentFile(String)[0m

  Scenario: find any tracker, from all the trackers, which response to: connect,announce and scrape requests [90m# cucumber/TrackerCommunication.feature:6[0m
    [32mThen [0m[32mapplication send and receive the following messages from a random tracker:[0m                          [90m# MyStepdefs.applicationSendAndReceiveTheFollowingMessagesFromARandomTracker(TrackerFakeRequestResponseMessage>)[0m

  Background: read torrent file           [90m# cucumber/TrackerCommunication.feature:3[0m
    [32mGiven [0m[32mnew torrent file: "[0m[32m[1mtor.torrent[0m[32m"[0m [90m# MyStepdefs.newTorrentFile(String)[0m

  Scenario: communicating with collection of trackers which contain a not-responding trackers [90m# cucumber/TrackerCommunication.feature:13[0m
    [32mGiven [0m[32madditional not-responding trackers to the tracker-list[0m                              [90m# MyStepdefs.additionalNotRespondingTrackersToTheTrackerListFromFile()[0m
    [32mThen [0m[32mapplication send and receive the following messages from a random tracker:[0m           [90m# MyStepdefs.applicationSendAndReceiveTheFollowingMessagesFromARandomTracker(TrackerFakeRequestResponseMessage>)[0m

  Background: read torrent file           [90m# cucumber/TrackerCommunication.feature:3[0m
    [32mGiven [0m[32mnew torrent file: "[0m[32m[1mtor.torrent[0m[32m"[0m [90m# MyStepdefs.newTorrentFile(String)[0m
17:23:15 [elastic-89] ERROR - error signal: (the application doesn't try to send a request again after this error).
error message: null.
error type: java.lang.NullPointerException


  Scenario: communicating with collection of trackers which contain invalid urls of trackers [90m# cucumber/TrackerCommunication.feature:19[0m
    [32mGiven [0m[32monly one invalid url of a tracker[0m                                                  [90m# MyStepdefs.additionalInvalidUrlOfATrackerOf()[0m
    [32mThen [0m[32mapplication send and receive the following messages from a random tracker:[0m          [90m# MyStepdefs.applicationSendAndReceiveTheFollowingMessagesFromARandomTracker(TrackerFakeRequestResponseMessage>)[0m
Feature: connect to valid fake-peers and map between them and their pieces

[31mFailed scenarios:[0m
[31mcucumber/CommunicateWithFakePeers.feature:64 [0m# Scenario Outline: fake peer request pieces from me and I give him what he want
[31mcucumber/CommunicateWithFakePeers.feature:79 [0m# Scenario Outline: fake peer request pieces from me but I don't have nothing to give
[31mcucumber/DownloadBlocksAlgorithm.feature:71 [0m# Scenario Outline: download blocks from peer which closes the connection when he get the first request
[31mcucumber/DownloadBlocksAlgorithm.feature:124 [0m# Scenario Outline: download the last blocks from a valid fake-peer which response with too much delay
[31mcucumber/FileSystem.feature:98 [0m# Scenario Outline: we save the last piece of active torrent

58 Scenarios ([31m5 failed[0m, [32m53 passed[0m)
212 Steps ([31m5 failed[0m, [36m2 skipped[0m, [32m205 passed[0m)
0m5.174s

java.util.NoSuchElementException: No value present
	at java.util.Optional.get(Optional.java:135)
	at com.steps.MyStepdefs.randomFakePeerConnectToMeForTorrentInAndHeRequest(MyStepdefs.java:958)
	at ✽.Then random-fake-peer connect to me for torrent: "tor.torrent" in "torrents-test/" and he request:(cucumber/CommunicateWithFakePeers.feature:52)

java.util.NoSuchElementException: No value present
	at java.util.Optional.get(Optional.java:135)
	at com.steps.MyStepdefs.randomFakePeerConnectToMeForTorrentInAndHeRequest(MyStepdefs.java:958)
	at ✽.Then random-fake-peer connect to me for torrent: "tor.torrent" in "torrents-test/" and he request:(cucumber/CommunicateWithFakePeers.feature:69)

java.lang.NullPointerException
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
	at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
	at com.steps.MyStepdefs.applicationDoesnTReceiveTheFollowingBlocksFromHimForTorrent(MyStepdefs.java:1227)
	at ✽.Then application doesn't receive the following blocks from him - for torrent: "torrent-file-example1.torrent":(cucumber/DownloadBlocksAlgorithm.feature:63)

java.lang.NullPointerException
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
	at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
	at com.steps.MyStepdefs.applicationDoesnTReceiveTheFollowingBlocksFromHimForTorrent(MyStepdefs.java:1227)
	at ✽.Then application doesn't receive the following blocks from him - for torrent: "torrent-file-example1.torrent":(cucumber/DownloadBlocksAlgorithm.feature:116)

java.lang.AssertionError: expectation "expectNextCount(1)" failed (expected: count = 1; actual: counted = 0; signal: onError(The read operation failed to read exactly what we wrote: arrays first differed at element [102813]; expected:<0> but was:<-99>))
	at reactor.test.ErrorFormatter.assertionError(ErrorFormatter.java:105)
	at reactor.test.ErrorFormatter.failPrefix(ErrorFormatter.java:94)
	at reactor.test.ErrorFormatter.fail(ErrorFormatter.java:64)
	at reactor.test.ErrorFormatter.failOptional(ErrorFormatter.java:79)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.checkCountMismatch(DefaultStepVerifierBuilder.java:1223)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onSignalCount(DefaultStepVerifierBuilder.java:1455)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onExpectation(DefaultStepVerifierBuilder.java:1304)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onError(DefaultStepVerifierBuilder.java:996)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.FluxTake$TakeFuseableSubscriber.onError(FluxTake.java:415)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:228)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:782)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:556)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:536)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onError(FluxFlatMap.java:408)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:228)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:199)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:378)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:378)
	at reactor.core.publisher.FluxReplay$UnboundedReplayBuffer.replayNormal(FluxReplay.java:564)
	at reactor.core.publisher.FluxReplay$UnboundedReplayBuffer.replay(FluxReplay.java:651)
	at reactor.core.publisher.FluxReplay.subscribe(FluxReplay.java:1085)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:148)
	at reactor.core.publisher.ConnectableFluxOnAssembly.subscribe(ConnectableFluxOnAssembly.java:60)
	at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.FluxTakeFuseable.subscribe(FluxTakeFuseable.java:45)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.MonoSingle.subscribe(MonoSingle.java:58)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
	at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
	at com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:630)
	at ✽.Then application save the last piece of torrent: "torrent-file-example3.torrent","torrents-test"(cucumber/FileSystem.feature:92)
	Suppressed: The read operation failed to read exactly what we wrote: arrays first differed at element [102813]; expected:<0> but was:<-99>
		at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:55)
		at org.junit.Assert.internalArrayEquals(Assert.java:532)
		at org.junit.Assert.assertArrayEquals(Assert.java:341)
		at com.steps.MyStepdefs.lambda$applicationSaveAllTheLastPieceOfTorrent$39(MyStepdefs.java:616)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:190)
		at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:378)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)
		at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:378)
		at reactor.core.publisher.FluxReplay$UnboundedReplayBuffer.replayNormal(FluxReplay.java:564)
		at reactor.core.publisher.FluxReplay$UnboundedReplayBuffer.replay(FluxReplay.java:651)
		at reactor.core.publisher.FluxReplay.subscribe(FluxReplay.java:1085)
		at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:148)
		at reactor.core.publisher.ConnectableFluxOnAssembly.subscribe(ConnectableFluxOnAssembly.java:60)
		at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
		at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
		at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
		at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
		at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
		at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
		at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
		at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
		at reactor.core.publisher.FluxTakeFuseable.subscribe(FluxTakeFuseable.java:45)
		at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
		at reactor.core.publisher.MonoSingle.subscribe(MonoSingle.java:58)
		at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
		at reactor.core.publisher.Mono.subscribe(Mono.java:3257)
		at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
		at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
		at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
		at com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:630)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at cucumber.runtime.Utils$1.call(Utils.java:40)
		at cucumber.runtime.Timeout.timeout(Timeout.java:16)
		at cucumber.runtime.Utils.invoke(Utils.java:34)
		at cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:38)
		at cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)
		at cucumber.runtime.Runtime.runStep(Runtime.java:300)
		at cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)
		at cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)
		at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)
		at cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:102)
		at org.junit.runners.Suite.runChild(Suite.java:128)
		at org.junit.runners.Suite.runChild(Suite.java:27)
		at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
		at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
		at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
		at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
		at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
		at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
		at cucumber.runtime.junit.ExamplesRunner.run(ExamplesRunner.java:59)
		at org.junit.runners.Suite.runChild(Suite.java:128)
		at org.junit.runners.Suite.runChild(Suite.java:27)
		at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
		at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
		at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
		at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
		at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
		at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
		at cucumber.runtime.junit.ScenarioOutlineRunner.run(ScenarioOutlineRunner.java:53)
		at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)
		at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)
		at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
		at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
		at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
		at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
		at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
		at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
		at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)
		at cucumber.api.junit.Cucumber.runChild(Cucumber.java:95)
		at cucumber.api.junit.Cucumber.runChild(Cucumber.java:38)
		at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
		at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
		at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
		at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
		at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
		at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
		at cucumber.api.junit.Cucumber.run(Cucumber.java:100)
		at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
		at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
		at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
		at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
		at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
		at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
		Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxPeekFuseable] :
	reactor.core.publisher.Flux.doOnSignal(Flux.java:8541)
	reactor.core.publisher.Flux.doOnNext(Flux.java:3756)
	com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:613)
	cucumber.runtime.Utils$1.call(Utils.java:40)
	cucumber.runtime.Timeout.timeout(Timeout.java:16)
	cucumber.runtime.Utils.invoke(Utils.java:34)
	cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:38)
	cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)
	cucumber.runtime.Runtime.runStep(Runtime.java:300)
	cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)
	cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)
	cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)
	cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:102)
	cucumber.runtime.junit.ExamplesRunner.run(ExamplesRunner.java:59)
	cucumber.runtime.junit.ScenarioOutlineRunner.run(ScenarioOutlineRunner.java:53)
	cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)
	cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)
	cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)
	cucumber.api.junit.Cucumber.runChild(Cucumber.java:95)
	cucumber.api.junit.Cucumber.runChild(Cucumber.java:38)
	cucumber.api.junit.Cucumber.run(Cucumber.java:100)
	org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Error has been observed by the following operator(s):
	|_	Flux.doOnNext ⇢ com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:613)
	|_	Flux.flatMap ⇢ com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:619)
	|_	Flux.doOnNext ⇢ com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:620)
	|_	Flux.take ⇢ com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:625)
	|_	Flux.single ⇢ com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:626)

	Caused by: java.lang.AssertionError: expected:<0> but was:<-99>
		at org.junit.Assert.fail(Assert.java:88)
		at org.junit.Assert.failNotEquals(Assert.java:834)
		at org.junit.Assert.assertEquals(Assert.java:118)
		at org.junit.Assert.assertEquals(Assert.java:144)
		at org.junit.internal.ExactComparisonCriteria.assertElementsEqual(ExactComparisonCriteria.java:8)
		at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:53)
		... 85 more

Tests run: 270, Failures: 2, Errors: 8, Skipped: 2, Time elapsed: 6.47 sec <<< FAILURE! - in com.runner.CucumberTest
Then random-fake-peer connect to me for torrent: "tor.torrent" in "torrents-test/" and he request:(| tor.torrent | torrents-test/ |)  Time elapsed: 0.005 sec  <<< ERROR!
java.util.NoSuchElementException: No value present
	at java.util.Optional.get(Optional.java:135)
	at com.steps.MyStepdefs.randomFakePeerConnectToMeForTorrentInAndHeRequest(MyStepdefs.java:958)
	at ✽.Then random-fake-peer connect to me for torrent: "tor.torrent" in "torrents-test/" and he request:(cucumber/CommunicateWithFakePeers.feature:52)

| tor.torrent | torrents-test/ |  Time elapsed: 0.005 sec  <<< ERROR!
java.util.NoSuchElementException: No value present
	at java.util.Optional.get(Optional.java:135)
	at com.steps.MyStepdefs.randomFakePeerConnectToMeForTorrentInAndHeRequest(MyStepdefs.java:958)
	at ✽.Then random-fake-peer connect to me for torrent: "tor.torrent" in "torrents-test/" and he request:(cucumber/CommunicateWithFakePeers.feature:52)

Then random-fake-peer connect to me for torrent: "tor.torrent" in "torrents-test/" and he request:(| tor.torrent | torrents-test/ |)  Time elapsed: 0 sec  <<< ERROR!
java.util.NoSuchElementException: No value present
	at java.util.Optional.get(Optional.java:135)
	at com.steps.MyStepdefs.randomFakePeerConnectToMeForTorrentInAndHeRequest(MyStepdefs.java:958)
	at ✽.Then random-fake-peer connect to me for torrent: "tor.torrent" in "torrents-test/" and he request:(cucumber/CommunicateWithFakePeers.feature:69)

| tor.torrent | torrents-test/ |  Time elapsed: 0.001 sec  <<< ERROR!
java.util.NoSuchElementException: No value present
	at java.util.Optional.get(Optional.java:135)
	at com.steps.MyStepdefs.randomFakePeerConnectToMeForTorrentInAndHeRequest(MyStepdefs.java:958)
	at ✽.Then random-fake-peer connect to me for torrent: "tor.torrent" in "torrents-test/" and he request:(cucumber/CommunicateWithFakePeers.feature:69)

Then application doesn't receive the following blocks from him - for torrent: "torrent-file-example1.torrent":(| torrent-file-example1.torrent | torrents-test |)  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.NullPointerException: null
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
	at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
	at com.steps.MyStepdefs.applicationDoesnTReceiveTheFollowingBlocksFromHimForTorrent(MyStepdefs.java:1227)
	at ✽.Then application doesn't receive the following blocks from him - for torrent: "torrent-file-example1.torrent":(cucumber/DownloadBlocksAlgorithm.feature:63)

| torrent-file-example1.torrent | torrents-test |  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.NullPointerException: null
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
	at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
	at com.steps.MyStepdefs.applicationDoesnTReceiveTheFollowingBlocksFromHimForTorrent(MyStepdefs.java:1227)
	at ✽.Then application doesn't receive the following blocks from him - for torrent: "torrent-file-example1.torrent":(cucumber/DownloadBlocksAlgorithm.feature:63)

Then application doesn't receive the following blocks from him - for torrent: "torrent-file-example1.torrent":(| torrent-file-example1.torrent | torrents-test |)  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.NullPointerException: null
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
	at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
	at com.steps.MyStepdefs.applicationDoesnTReceiveTheFollowingBlocksFromHimForTorrent(MyStepdefs.java:1227)
	at ✽.Then application doesn't receive the following blocks from him - for torrent: "torrent-file-example1.torrent":(cucumber/DownloadBlocksAlgorithm.feature:116)

| torrent-file-example1.torrent | torrents-test |  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.NullPointerException: null
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
	at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
	at com.steps.MyStepdefs.applicationDoesnTReceiveTheFollowingBlocksFromHimForTorrent(MyStepdefs.java:1227)
	at ✽.Then application doesn't receive the following blocks from him - for torrent: "torrent-file-example1.torrent":(cucumber/DownloadBlocksAlgorithm.feature:116)

Then application save the last piece of torrent: "torrent-file-example3.torrent","torrents-test"(| torrent-file-example3.torrent | torrents-test |)  Time elapsed: 0.001 sec  <<< FAILURE!
java.lang.AssertionError: expectation "expectNextCount(1)" failed (expected: count = 1; actual: counted = 0; signal: onError(The read operation failed to read exactly what we wrote: arrays first differed at element [102813]; expected:<0> but was:<-99>))
	at reactor.test.ErrorFormatter.assertionError(ErrorFormatter.java:105)
	at reactor.test.ErrorFormatter.failPrefix(ErrorFormatter.java:94)
	at reactor.test.ErrorFormatter.fail(ErrorFormatter.java:64)
	at reactor.test.ErrorFormatter.failOptional(ErrorFormatter.java:79)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.checkCountMismatch(DefaultStepVerifierBuilder.java:1223)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onSignalCount(DefaultStepVerifierBuilder.java:1455)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onExpectation(DefaultStepVerifierBuilder.java:1304)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onError(DefaultStepVerifierBuilder.java:996)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.FluxTake$TakeFuseableSubscriber.onError(FluxTake.java:415)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:228)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:782)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:556)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:536)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onError(FluxFlatMap.java:408)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:228)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:199)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:378)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:378)
	at reactor.core.publisher.FluxReplay$UnboundedReplayBuffer.replayNormal(FluxReplay.java:564)
	at reactor.core.publisher.FluxReplay$UnboundedReplayBuffer.replay(FluxReplay.java:651)
	at reactor.core.publisher.FluxReplay.subscribe(FluxReplay.java:1085)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:148)
	at reactor.core.publisher.ConnectableFluxOnAssembly.subscribe(ConnectableFluxOnAssembly.java:60)
	at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.FluxTakeFuseable.subscribe(FluxTakeFuseable.java:45)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.MonoSingle.subscribe(MonoSingle.java:58)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
	at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
	at com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:630)
	at ✽.Then application save the last piece of torrent: "torrent-file-example3.torrent","torrents-test"(cucumber/FileSystem.feature:92)

| torrent-file-example3.torrent | torrents-test |  Time elapsed: 0.002 sec  <<< FAILURE!
java.lang.AssertionError: expectation "expectNextCount(1)" failed (expected: count = 1; actual: counted = 0; signal: onError(The read operation failed to read exactly what we wrote: arrays first differed at element [102813]; expected:<0> but was:<-99>))
	at reactor.test.ErrorFormatter.assertionError(ErrorFormatter.java:105)
	at reactor.test.ErrorFormatter.failPrefix(ErrorFormatter.java:94)
	at reactor.test.ErrorFormatter.fail(ErrorFormatter.java:64)
	at reactor.test.ErrorFormatter.failOptional(ErrorFormatter.java:79)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.checkCountMismatch(DefaultStepVerifierBuilder.java:1223)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onSignalCount(DefaultStepVerifierBuilder.java:1455)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onExpectation(DefaultStepVerifierBuilder.java:1304)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onError(DefaultStepVerifierBuilder.java:996)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.FluxTake$TakeFuseableSubscriber.onError(FluxTake.java:415)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:228)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:782)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:556)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:536)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onError(FluxFlatMap.java:408)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:383)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:228)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:199)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:378)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:378)
	at reactor.core.publisher.FluxReplay$UnboundedReplayBuffer.replayNormal(FluxReplay.java:564)
	at reactor.core.publisher.FluxReplay$UnboundedReplayBuffer.replay(FluxReplay.java:651)
	at reactor.core.publisher.FluxReplay.subscribe(FluxReplay.java:1085)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:148)
	at reactor.core.publisher.ConnectableFluxOnAssembly.subscribe(ConnectableFluxOnAssembly.java:60)
	at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.FluxTakeFuseable.subscribe(FluxTakeFuseable.java:45)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:164)
	at reactor.core.publisher.MonoSingle.subscribe(MonoSingle.java:58)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3257)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:773)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:744)
	at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:616)
	at com.steps.MyStepdefs.applicationSaveAllTheLastPieceOfTorrent(MyStepdefs.java:630)
	at ✽.Then application save the last piece of torrent: "torrent-file-example3.torrent","torrents-test"(cucumber/FileSystem.feature:92)


Results :

Failed tests: 
  expectation "expectNextCount(1)" failed (expected: count = 1; actual: counted = 0; signal: onError(The read operation failed to read exactly what we wrote: arrays first differed at element [102813]; expected:<0> but was:<-99>))
  expectation "expectNextCount(1)" failed (expected: count = 1; actual: counted = 0; signal: onError(The read operation failed to read exactly what we wrote: arrays first differed at element [102813]; expected:<0> but was:<-99>))

Tests in error: 
  No value present
  No value present
  No value present
  No value present
  null
  null
  null
  null

Tests run: 270, Failures: 2, Errors: 8, Skipped: 2

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 14.748 s
[INFO] Finished at: 2018-04-27T17:23:16+02:00
[INFO] Final Memory: 26M/829M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.16:test (default-test) on project torrentx: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/UniversityFinalProjects/TorrentX/372085190/target/surefire-reports for the individual test results.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
