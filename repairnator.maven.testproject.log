[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for fr.inria.gforge.spoon:spoon-core:jar:6.3.0-SNAPSHOT
[WARNING] 'build.plugins.plugin.version' for org.pitest:pitest-maven is missing. @ line 478, column 15
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] Inspecting build with total of 1 modules...
[INFO] Installing Nexus Staging features:
[INFO]   ... total of 1 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Spoon Core 6.3.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @ spoon-core ---
[INFO] Skipping Rule Enforcement.
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ spoon-core ---
[INFO] argLine set to -javaagent:/root/./workspace/INRIA/spoon/380444930/.m2/org/jacoco/org.jacoco.agent/0.7.9/org.jacoco.agent-0.7.9-runtime.jar=destfile=/root/workspace/INRIA/spoon/380444930/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ spoon-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 3 resources
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ spoon-core ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ spoon-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 162 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ spoon-core ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ spoon-core ---
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.pom (4 KB at 9.9 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.20.1/surefire-providers-2.20.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.20.1/surefire-providers-2.20.1.pom (3 KB at 136.0 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.jar
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.jar (81 KB at 1516.0 KB/sec)
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running spoon.test.api.FileSystemFolderTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.512 s - in spoon.test.api.FileSystemFolderTest
[INFO] Running spoon.test.api.APITest
./target/nooutput_b028db18-5b5e-4a1a-95e5-1618775e5b94
[INFO] Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 13.981 s - in spoon.test.api.APITest
[INFO] Running spoon.test.api.NoClasspathTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.234 s - in spoon.test.api.NoClasspathTest
[INFO] Running spoon.test.api.MetamodelTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.243 s - in spoon.test.api.MetamodelTest
[INFO] Running spoon.test.exceptions.ExceptionTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.27 s - in spoon.test.exceptions.ExceptionTest
[INFO] Running spoon.test.module.TestModule
[WARNING] Tests run: 8, Failures: 0, Errors: 0, Skipped: 2, Time elapsed: 0.089 s - in spoon.test.module.TestModule
[INFO] Running spoon.test.imports.ImportAndExtendWithPackageNameTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 s - in spoon.test.imports.ImportAndExtendWithPackageNameTest
[INFO] Running spoon.test.imports.ImportScannerTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.163 s - in spoon.test.imports.ImportScannerTest
[INFO] Running spoon.test.imports.ImportTest
[ERROR] Tests run: 43, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 3.869 s <<< FAILURE! - in spoon.test.imports.ImportTest
[ERROR] testAccessType(spoon.test.imports.ImportTest)  Time elapsed: 0.141 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: java.util.Arrays
	at spoon.test.imports.ImportTest.testAccessType(ImportTest.java:462)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.imports.ImportTest.testAccessType(ImportTest.java:462)

[ERROR] testCanAccess(spoon.test.imports.ImportTest)  Time elapsed: 0.169 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: java.util.Arrays
	at spoon.test.imports.ImportTest.testCanAccess(ImportTest.java:548)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.imports.ImportTest.testCanAccess(ImportTest.java:548)

[ERROR] testSpoonWithImports(spoon.test.imports.ImportTest)  Time elapsed: 0.163 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: java.util.Arrays
	at spoon.test.imports.ImportTest.testSpoonWithImports(ImportTest.java:259)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.imports.ImportTest.testSpoonWithImports(ImportTest.java:259)

[ERROR] testAccessToNestedClass(spoon.test.imports.ImportTest)  Time elapsed: 0.132 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: java.util.Arrays
	at spoon.test.imports.ImportTest.testAccessToNestedClass(ImportTest.java:446)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.imports.ImportTest.testAccessToNestedClass(ImportTest.java:446)

[INFO] Running spoon.test.prettyprinter.DefaultPrettyPrinterTest
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.612 s - in spoon.test.prettyprinter.DefaultPrettyPrinterTest
[INFO] Running spoon.test.prettyprinter.PrinterTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.439 s - in spoon.test.prettyprinter.PrinterTest
[INFO] Running spoon.test.prettyprinter.QualifiedThisRefTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.162 s - in spoon.test.prettyprinter.QualifiedThisRefTest
[INFO] Running spoon.test.prettyprinter.LinesTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.348 s - in spoon.test.prettyprinter.LinesTest
[INFO] Running spoon.test.visitor.AssignmentsEqualsTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 s - in spoon.test.visitor.AssignmentsEqualsTest
[INFO] Running spoon.test.visitor.VisitorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 s - in spoon.test.visitor.VisitorTest
[INFO] Running spoon.test.loop.LoopTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.246 s - in spoon.test.loop.LoopTest
[INFO] Running spoon.test.intercession.insertBefore.InsertMethodsTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.677 s - in spoon.test.intercession.insertBefore.InsertMethodsTest
[INFO] Running spoon.test.intercession.RemoveTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 s - in spoon.test.intercession.RemoveTest
[INFO] Running spoon.test.intercession.IntercessionContractTest
[INFO] Tests run: 107, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.844 s - in spoon.test.intercession.IntercessionContractTest
[INFO] Running spoon.test.intercession.IntercessionTest
[WARNING] Tests run: 8, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 3.933 s - in spoon.test.intercession.IntercessionTest
[INFO] Running spoon.test.variable.AccessFullyQualifiedFieldTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.65 s - in spoon.test.variable.AccessFullyQualifiedFieldTest
[INFO] Running spoon.test.variable.AccessTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.321 s - in spoon.test.variable.AccessTest
[INFO] Running spoon.test.annotation.AnnotationValuesTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.149 s - in spoon.test.annotation.AnnotationValuesTest
[INFO] Running spoon.test.annotation.AnnotationLoopTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 s - in spoon.test.annotation.AnnotationLoopTest
[INFO] Running spoon.test.annotation.AnnotationTest
[INFO] Tests run: 52, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.633 s - in spoon.test.annotation.AnnotationTest
[INFO] Running spoon.test.pkg.PackageTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.657 s - in spoon.test.pkg.PackageTest
[INFO] Running spoon.test.comment.CommentTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 22.185 s - in spoon.test.comment.CommentTest
[INFO] Running spoon.test.generics.GenericsTest
[INFO] Tests run: 45, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.711 s - in spoon.test.generics.GenericsTest
[INFO] Running spoon.test.visibility.VisibilityTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.58 s - in spoon.test.visibility.VisibilityTest
[INFO] Running spoon.test.jdtimportbuilder.ImportBuilderTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.479 s - in spoon.test.jdtimportbuilder.ImportBuilderTest
[INFO] Running spoon.test.trycatch.TryCatchTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.58 s - in spoon.test.trycatch.TryCatchTest
[INFO] Running spoon.test.processing.ProcessingTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.367 s - in spoon.test.processing.ProcessingTest
[INFO] Running spoon.test.filters.FilterTest
2018-05-18 00:24:16,015 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:16,018 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:16,018 INFO spoon.Launcher - start processing...
2018-05-18 00:24:16,064 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:16,064 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:16,245 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:16,245 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:16,245 INFO spoon.Launcher - start processing...
2018-05-18 00:24:16,292 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:16,293 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:16,441 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:16,441 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:16,441 INFO spoon.Launcher - start processing...
2018-05-18 00:24:16,479 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:16,480 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:16,837 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:16,838 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:16,838 INFO spoon.Launcher - start processing...
2018-05-18 00:24:16,901 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:16,901 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:17,041 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:17,042 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:17,042 INFO spoon.Launcher - start processing...
2018-05-18 00:24:17,120 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:17,120 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:17,565 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:17,566 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:17,566 INFO spoon.Launcher - start processing...
2018-05-18 00:24:17,606 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:17,606 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:17,920 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:17,920 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:17,920 INFO spoon.Launcher - start processing...
2018-05-18 00:24:17,966 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:17,966 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:18,159 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:18,160 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:18,160 INFO spoon.Launcher - start processing...
2018-05-18 00:24:18,198 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:18,198 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:18,235 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:18,235 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:18,235 INFO spoon.Launcher - start processing...
2018-05-18 00:24:18,276 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:18,276 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:18,392 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:18,392 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:18,392 INFO spoon.Launcher - start processing...
2018-05-18 00:24:18,430 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:18,431 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:18,535 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:18,536 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:18,536 INFO spoon.Launcher - start processing...
2018-05-18 00:24:18,575 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:18,575 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:18,618 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:18,618 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:18,618 INFO spoon.Launcher - start processing...
2018-05-18 00:24:18,664 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:18,664 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:18,986 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:18,987 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:18,987 INFO spoon.Launcher - start processing...
2018-05-18 00:24:19,026 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:19,026 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:19,060 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:19,061 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:19,061 INFO spoon.Launcher - start processing...
2018-05-18 00:24:19,099 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:19,099 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:19,352 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:19,353 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:19,353 INFO spoon.Launcher - start processing...
2018-05-18 00:24:19,391 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:19,391 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:19,394 INFO spoon.Launcher - Step filter CtClass only) spoon.reflect.CtModelImpl$CtRootPackage cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtRootPackage: unnamed package
2018-05-18 00:24:19,394 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtPackageImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageImpl: spoon
2018-05-18 00:24:19,394 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtPackageImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageImpl: spoon.test
2018-05-18 00:24:19,395 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtPackageImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageImpl: spoon.test.filters
2018-05-18 00:24:19,395 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtPackageImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,395 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-05-18 00:24:19,395 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,396 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: AbstractTostada() {
}
2018-05-18 00:24:19,396 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-05-18 00:24:19,396 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-05-18 00:24:19,396 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: java.lang.Object()
2018-05-18 00:24:19,396 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-05-18 00:24:19,396 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,397 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-05-18 00:24:19,397 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,397 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public spoon.test.filters.testclasses.ITostada make() {
    return new spoon.test.filters.testclasses.Tostada() {
        @java.lang.Override
        public void prepare() {
            super.prepare();
        }

        @java.lang.Override
        public spoon.test.filters.testclasses.ITostada make() {
            return super.make();
        }
    };
}
2018-05-18 00:24:19,397 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-05-18 00:24:19,397 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,397 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,398 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,398 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,398 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-05-18 00:24:19,398 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,398 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return new spoon.test.filters.testclasses.Tostada() {
        @java.lang.Override
        public void prepare() {
            super.prepare();
        }

        @java.lang.Override
        public spoon.test.filters.testclasses.ITostada make() {
            return super.make();
        }
    };
}
2018-05-18 00:24:19,399 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return new spoon.test.filters.testclasses.Tostada() {
    @java.lang.Override
    public void prepare() {
        super.prepare();
    }

    @java.lang.Override
    public spoon.test.filters.testclasses.ITostada make() {
        return super.make();
    }
}
2018-05-18 00:24:19,399 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtNewClassImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtNewClassImpl: new spoon.test.filters.testclasses.Tostada() {
    @java.lang.Override
    public void prepare() {
        super.prepare();
    }

    @java.lang.Override
    public spoon.test.filters.testclasses.ITostada make() {
        return super.make();
    }
}
2018-05-18 00:24:19,399 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.AbstractTostada$1()
2018-05-18 00:24:19,400 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada.1
2018-05-18 00:24:19,400 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-05-18 00:24:19,400 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,400 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,401 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,401 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,401 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,401 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: 1() {
}
2018-05-18 00:24:19,402 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-05-18 00:24:19,402 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-05-18 00:24:19,402 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.Tostada()
2018-05-18 00:24:19,402 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,402 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,402 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,402 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,402 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
    super.prepare();
}
2018-05-18 00:24:19,403 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-05-18 00:24:19,403 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,403 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,403 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,403 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,403 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,403 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    super.prepare();
}
2018-05-18 00:24:19,403 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.prepare()
2018-05-18 00:24:19,404 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-05-18 00:24:19,404 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-05-18 00:24:19,404 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,404 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,404 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: prepare()
2018-05-18 00:24:19,404 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,404 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,405 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,405 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public spoon.test.filters.testclasses.ITostada make() {
    return super.make();
}
2018-05-18 00:24:19,405 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-05-18 00:24:19,405 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,405 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,405 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,405 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,405 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-05-18 00:24:19,406 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,406 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return super.make();
}
2018-05-18 00:24:19,406 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return super.make()
2018-05-18 00:24:19,406 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.make()
2018-05-18 00:24:19,406 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-05-18 00:24:19,406 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-05-18 00:24:19,406 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,407 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,407 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: make()
2018-05-18 00:24:19,407 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,407 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,407 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-05-18 00:24:19,407 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,407 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public abstract void prepare();
2018-05-18 00:24:19,407 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,408 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void honey() {
}
2018-05-18 00:24:19,408 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,408 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-05-18 00:24:19,408 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-05-18 00:24:19,408 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,408 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: Antojito() {
}
2018-05-18 00:24:19,408 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-05-18 00:24:19,408 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-05-18 00:24:19,409 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.AbstractTostada()
2018-05-18 00:24:19,409 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-05-18 00:24:19,409 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,409 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-05-18 00:24:19,409 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,409 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
    java.lang.System.out.println("Antojito");
}
2018-05-18 00:24:19,410 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-05-18 00:24:19,410 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,410 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,410 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,410 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,410 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,410 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    java.lang.System.out.println("Antojito");
}
2018-05-18 00:24:19,411 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: java.lang.System.out.println("Antojito")
2018-05-18 00:24:19,411 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldReadImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReadImpl: java.lang.System.out
2018-05-18 00:24:19,411 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: java.lang.System
2018-05-18 00:24:19,411 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.System
2018-05-18 00:24:19,411 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,411 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: java.lang.System.out
2018-05-18 00:24:19,411 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.System
2018-05-18 00:24:19,411 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,412 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.io.PrintStream
2018-05-18 00:24:19,412 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.io
2018-05-18 00:24:19,412 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: println(java.lang.String)
2018-05-18 00:24:19,412 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.io.PrintStream
2018-05-18 00:24:19,412 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.io
2018-05-18 00:24:19,412 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,412 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-05-18 00:24:19,413 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,413 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: "Antojito"
2018-05-18 00:24:19,413 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-05-18 00:24:19,413 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,413 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void prepare(java.lang.String ingredient) {
}
2018-05-18 00:24:19,413 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,413 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtParameterImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtParameterImpl: java.lang.String ingredient
2018-05-18 00:24:19,413 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-05-18 00:24:19,414 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,414 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-05-18 00:24:19,414 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-05-18 00:24:19,414 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-05-18 00:24:19,414 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtFieldImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldImpl: private int myfield = 0;
2018-05-18 00:24:19,414 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-05-18 00:24:19,414 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: 0
2018-05-18 00:24:19,414 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-05-18 00:24:19,415 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: FieldAccessFilterTacos() {
    super();
    this.myfield = 0;
}
2018-05-18 00:24:19,415 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    super();
    this.myfield = 0;
}
2018-05-18 00:24:19,415 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-05-18 00:24:19,415 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: java.util.ArrayList()
2018-05-18 00:24:19,415 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-05-18 00:24:19,415 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-05-18 00:24:19,415 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-05-18 00:24:19,415 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-05-18 00:24:19,416 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtAssignmentImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAssignmentImpl: this.myfield = 0
2018-05-18 00:24:19,416 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-05-18 00:24:19,416 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldWriteImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldWriteImpl: this.myfield
2018-05-18 00:24:19,416 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtThisAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtThisAccessImpl: this
2018-05-18 00:24:19,416 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-05-18 00:24:19,416 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,416 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-05-18 00:24:19,416 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-05-18 00:24:19,416 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,416 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: myfield
2018-05-18 00:24:19,417 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-05-18 00:24:19,417 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,417 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-05-18 00:24:19,417 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: 0
2018-05-18 00:24:19,417 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-05-18 00:24:19,418 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void m() {
    myfield = super.size();
    java.lang.Object o = super.get(myfield);
}
2018-05-18 00:24:19,418 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,418 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    myfield = super.size();
    java.lang.Object o = super.get(myfield);
}
2018-05-18 00:24:19,418 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtAssignmentImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAssignmentImpl: myfield = super.size()
2018-05-18 00:24:19,418 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-05-18 00:24:19,419 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldWriteImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldWriteImpl: myfield
2018-05-18 00:24:19,419 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtThisAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtThisAccessImpl: 
2018-05-18 00:24:19,419 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-05-18 00:24:19,419 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,419 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-05-18 00:24:19,419 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-05-18 00:24:19,420 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,420 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: myfield
2018-05-18 00:24:19,420 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-05-18 00:24:19,420 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,420 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-05-18 00:24:19,420 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.size()
2018-05-18 00:24:19,420 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-05-18 00:24:19,420 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-05-18 00:24:19,420 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-05-18 00:24:19,420 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-05-18 00:24:19,420 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: size()
2018-05-18 00:24:19,421 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-05-18 00:24:19,421 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-05-18 00:24:19,421 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-05-18 00:24:19,421 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLocalVariableImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableImpl: java.lang.Object o = super.get(myfield)
2018-05-18 00:24:19,421 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-05-18 00:24:19,421 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,421 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.get(myfield)
2018-05-18 00:24:19,421 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-05-18 00:24:19,421 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-05-18 00:24:19,421 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-05-18 00:24:19,422 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-05-18 00:24:19,422 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: get(int)
2018-05-18 00:24:19,422 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-05-18 00:24:19,422 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-05-18 00:24:19,422 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-05-18 00:24:19,422 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,422 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-05-18 00:24:19,422 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldReadImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReadImpl: myfield
2018-05-18 00:24:19,422 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtThisAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtThisAccessImpl: 
2018-05-18 00:24:19,423 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-05-18 00:24:19,423 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,423 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-05-18 00:24:19,423 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-05-18 00:24:19,423 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,423 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: myfield
2018-05-18 00:24:19,423 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-05-18 00:24:19,423 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,423 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-05-18 00:24:19,423 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtInterfaceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInterfaceImpl: interface Foo {}
2018-05-18 00:24:19,424 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtInterfaceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInterfaceImpl: interface Honey {
    void honey();
}
2018-05-18 00:24:19,424 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: void honey();
2018-05-18 00:24:19,424 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,424 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtInterfaceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInterfaceImpl: public interface ITostada extends spoon.test.filters.testclasses.Foo {
    spoon.test.filters.testclasses.ITostada make();
}
2018-05-18 00:24:19,424 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Foo
2018-05-18 00:24:19,424 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,424 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: spoon.test.filters.testclasses.ITostada make();
2018-05-18 00:24:19,424 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-05-18 00:24:19,424 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,424 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,424 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: SubTostada() {
}
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.Tostada()
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
    java.lang.System.out.println("SubTostada");
    super.prepare();
}
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,425 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,426 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    java.lang.System.out.println("SubTostada");
    super.prepare();
}
2018-05-18 00:24:19,426 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: java.lang.System.out.println("SubTostada")
2018-05-18 00:24:19,426 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldReadImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReadImpl: java.lang.System.out
2018-05-18 00:24:19,426 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: java.lang.System
2018-05-18 00:24:19,426 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.System
2018-05-18 00:24:19,426 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,426 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: java.lang.System.out
2018-05-18 00:24:19,426 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.System
2018-05-18 00:24:19,426 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,426 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.io.PrintStream
2018-05-18 00:24:19,426 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.io
2018-05-18 00:24:19,426 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: println(java.lang.String)
2018-05-18 00:24:19,426 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.io.PrintStream
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.io
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: "SubTostada"
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.prepare()
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: prepare()
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,427 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,428 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-05-18 00:24:19,428 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,428 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: Tacos() {
}
2018-05-18 00:24:19,428 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-05-18 00:24:19,428 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-05-18 00:24:19,428 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: java.lang.Object()
2018-05-18 00:24:19,428 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-05-18 00:24:19,428 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,428 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-05-18 00:24:19,428 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,428 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public spoon.test.filters.testclasses.ITostada make() {
    return null;
}
2018-05-18 00:24:19,428 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-05-18 00:24:19,429 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,429 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,429 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,429 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,429 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-05-18 00:24:19,429 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,429 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return null;
}
2018-05-18 00:24:19,429 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return null
2018-05-18 00:24:19,429 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: null
2018-05-18 00:24:19,429 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: <nulltype>
2018-05-18 00:24:19,429 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void prepare() {
    final java.util.ArrayList<java.lang.String> strings = new java.util.ArrayList<java.lang.String>();
    strings.size();
}
2018-05-18 00:24:19,429 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    final java.util.ArrayList<java.lang.String> strings = new java.util.ArrayList<java.lang.String>();
    strings.size();
}
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLocalVariableImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableImpl: final java.util.ArrayList<java.lang.String> strings = new java.util.ArrayList<java.lang.String>()
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList<java.lang.String>
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtConstructorCallImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorCallImpl: new java.util.ArrayList<java.lang.String>()
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: java.util.ArrayList()
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList<java.lang.String>
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,430 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: strings.size()
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtVariableReadImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtVariableReadImpl: strings
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: strings
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList<java.lang.String>
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: size()
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step 6) Skipped element, because CtFunction#accept(input) returned false
Parameter 1) CtMethodImpl: void honey();
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,431 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Honey
2018-05-18 00:24:19,432 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,432 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: Tostada() {
}
2018-05-18 00:24:19,432 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-05-18 00:24:19,432 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-05-18 00:24:19,432 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.AbstractTostada()
2018-05-18 00:24:19,432 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-05-18 00:24:19,432 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,432 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-05-18 00:24:19,432 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,432 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public spoon.test.filters.testclasses.ITostada make() {
    return new spoon.test.filters.testclasses.Tostada() {
        @java.lang.Override
        public void prepare() {
            int a = 3;
            super.prepare();
        }
    };
}
2018-05-18 00:24:19,432 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-05-18 00:24:19,432 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,432 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,433 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,433 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,433 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-05-18 00:24:19,433 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,433 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return new spoon.test.filters.testclasses.Tostada() {
        @java.lang.Override
        public void prepare() {
            int a = 3;
            super.prepare();
        }
    };
}
2018-05-18 00:24:19,433 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return new spoon.test.filters.testclasses.Tostada() {
    @java.lang.Override
    public void prepare() {
        int a = 3;
        super.prepare();
    }
}
2018-05-18 00:24:19,433 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtNewClassImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtNewClassImpl: new spoon.test.filters.testclasses.Tostada() {
    @java.lang.Override
    public void prepare() {
        int a = 3;
        super.prepare();
    }
}
2018-05-18 00:24:19,433 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.Tostada$1()
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada.1
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: 1() {
}
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.Tostada()
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
    int a = 3;
    super.prepare();
}
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,434 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    int a = 3;
    super.prepare();
}
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLocalVariableImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableImpl: int a = 3
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: 3
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.prepare()
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: prepare()
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
}
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-05-18 00:24:19,435 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public java.lang.String toString() {
    return "";
}
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return "";
}
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return ""
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: ""
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-05-18 00:24:19,436 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,437 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void honey() {
}
2018-05-18 00:24:19,437 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-05-18 00:24:19,437 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,437 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,437 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-05-18 00:24:19,437 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-05-18 00:24:19,437 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,437 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-05-18 00:24:19,437 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void foo() {
}
2018-05-18 00:24:19,437 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-05-18 00:24:19,437 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
[INFO] Tests run: 43, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.579 s - in spoon.test.filters.FilterTest
[INFO] Running spoon.test.filters.CUFilterTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.097 s - in spoon.test.filters.CUFilterTest
[INFO] Running spoon.test.modifiers.TestModifiers
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.252 s - in spoon.test.modifiers.TestModifiers
[INFO] Running spoon.test.ctClass.CtClassTest
2018-05-18 00:24:20,283 ERROR spoon.Launcher - cannot load class: daikon.Runtime
spoon.support.SpoonClassNotFoundException: cannot load class: daikon.Runtime
	at spoon.support.reflect.reference.CtTypeReferenceImpl.findClass(CtTypeReferenceImpl.java:164)
	at spoon.support.reflect.reference.CtTypeReferenceImpl.getActualClass(CtTypeReferenceImpl.java:146)
	at spoon.support.reflect.reference.CtFieldReferenceImpl.getActualField(CtFieldReferenceImpl.java:65)
	at spoon.support.reflect.reference.CtFieldReferenceImpl.getModifiers(CtFieldReferenceImpl.java:223)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.isInitializeStaticFinalField(DefaultJavaPrettyPrinter.java:889)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.printCtFieldAccess(DefaultJavaPrettyPrinter.java:836)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtFieldWrite(DefaultJavaPrettyPrinter.java:795)
	at spoon.support.reflect.code.CtFieldWriteImpl.accept(CtFieldWriteImpl.java:27)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:343)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtAssignment(DefaultJavaPrettyPrinter.java:491)
	at spoon.support.reflect.code.CtAssignmentImpl.accept(CtAssignmentImpl.java:55)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:343)
	at spoon.reflect.visitor.ElementPrinterHelper.writeStatement(ElementPrinterHelper.java:180)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:523)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:343)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtAnonymousExecutable(DefaultJavaPrettyPrinter.java:442)
	at spoon.support.reflect.declaration.CtAnonymousExecutableImpl.accept(CtAnonymousExecutableImpl.java:46)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:343)
	at spoon.reflect.visitor.ElementPrinterHelper.writeElementList(ElementPrinterHelper.java:194)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:615)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:68)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:343)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.calculate(DefaultJavaPrettyPrinter.java:1950)
	at spoon.support.JavaOutputProcessor.createJavaFile(JavaOutputProcessor.java:133)
	at spoon.support.JavaOutputProcessor.process(JavaOutputProcessor.java:171)
	at spoon.support.JavaOutputProcessor.process(JavaOutputProcessor.java:45)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:74)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:148)
	at spoon.reflect.visitor.CtScanner.visitCtPackage(CtScanner.java:650)
	at spoon.support.reflect.declaration.CtPackageImpl.accept(CtPackageImpl.java:56)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:182)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:148)
	at spoon.reflect.visitor.CtScanner.visitCtPackage(CtScanner.java:649)
	at spoon.support.reflect.declaration.CtPackageImpl.accept(CtPackageImpl.java:56)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:182)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)
	at spoon.reflect.visitor.CtScanner.visitCtModule(CtScanner.java:925)
	at spoon.reflect.factory.ModuleFactory$CtUnnamedModule.accept(ModuleFactory.java:105)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:182)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.support.QueueProcessingManager.process(QueueProcessingManager.java:119)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFilesUsingTypes(JDTBasedSpoonCompiler.java:497)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:208)
	at spoon.Launcher.prettyprint(Launcher.java:725)
	at spoon.Launcher.run(Launcher.java:663)
	at spoon.test.ctClass.CtClassTest.testParentOfTheEnclosingClassOfStaticClass(CtClassTest.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:369)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:275)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:239)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:160)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
Caused by: java.lang.ClassNotFoundException: daikon.Runtime
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at spoon.support.reflect.reference.CtTypeReferenceImpl.findClass(CtTypeReferenceImpl.java:162)
	... 75 more
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.073 s - in spoon.test.ctClass.CtClassTest
[INFO] Running spoon.test.javadoc.JavaDocTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.109 s - in spoon.test.javadoc.JavaDocTest
[INFO] Running spoon.test.reference.VariableAccessTest
2018-05-18 00:24:23,461 ERROR spoon.support.compiler.jdt.JDTTreeBuilder - Could not find declaration for variable e at (/root/workspace/INRIA/spoon/380444930/src/test/resources/noclasspath/org/elasticsearch/indices/analysis/HunspellService.java:100)
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.528 s - in spoon.test.reference.VariableAccessTest
[INFO] Running spoon.test.reference.ExecutableReferenceGenericTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.572 s - in spoon.test.reference.ExecutableReferenceGenericTest
[INFO] Running spoon.test.reference.TypeReferenceTest
[INFO] Tests run: 28, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.18 s - in spoon.test.reference.TypeReferenceTest
[INFO] Running spoon.test.reference.CloneReferenceTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.076 s - in spoon.test.reference.CloneReferenceTest
[INFO] Running spoon.test.reference.ExecutableReferenceTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.33 s - in spoon.test.reference.ExecutableReferenceTest
[INFO] Running spoon.test.reference.AnnotationFieldReferenceTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.068 s - in spoon.test.reference.AnnotationFieldReferenceTest
[INFO] Running spoon.test.reference.ElasticsearchStackoverflowTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.104 s - in spoon.test.reference.ElasticsearchStackoverflowTest
[INFO] Running spoon.test.field.FieldTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.162 s - in spoon.test.field.FieldTest
[INFO] Running spoon.test.template.TemplateInvocationSubstitutionTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.175 s - in spoon.test.template.TemplateInvocationSubstitutionTest
[INFO] Running spoon.test.template.TemplateTest
0
[ERROR] Tests run: 24, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 1.88 s <<< FAILURE! - in spoon.test.template.TemplateTest
[ERROR] testTemplateInterfaces(spoon.test.template.TemplateTest)  Time elapsed: 0.082 s  <<< ERROR!
spoon.SpoonException: Getting of template parameters failed
	at spoon.test.template.TemplateTest.testTemplateInterfaces(TemplateTest.java:592)
Caused by: spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.template.TemplateTest.testTemplateInterfaces(TemplateTest.java:592)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.template.TemplateTest.testTemplateInterfaces(TemplateTest.java:592)

[INFO] Running spoon.test.template.TemplateClassAccessTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.099 s - in spoon.test.template.TemplateClassAccessTest
[INFO] Running spoon.test.template.TemplateReplaceReturnTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.193 s - in spoon.test.template.TemplateReplaceReturnTest
[INFO] Running spoon.test.template.TemplateArrayAccessTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.1 s - in spoon.test.template.TemplateArrayAccessTest
[INFO] Running spoon.test.template.TemplateEnumAccessTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.096 s - in spoon.test.template.TemplateEnumAccessTest
[INFO] Running spoon.test.refactoring.MethodsRefactoringTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.697 s - in spoon.test.refactoring.MethodsRefactoringTest
[INFO] Running spoon.test.refactoring.CtRenameLocalVariableRefactoringTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.609 s - in spoon.test.refactoring.CtRenameLocalVariableRefactoringTest
[INFO] Running spoon.test.refactoring.RefactoringTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.403 s - in spoon.test.refactoring.RefactoringTest
[INFO] Running spoon.test.compilationunit.TestCompilationUnit
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.225 s - in spoon.test.compilationunit.TestCompilationUnit
[INFO] Running spoon.test.compilationunit.GetBinaryFilesTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.383 s - in spoon.test.compilationunit.GetBinaryFilesTest
[INFO] Running spoon.test.executable.ExecutableTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.103 s - in spoon.test.executable.ExecutableTest
[INFO] Running spoon.test.executable.ExecutableRefTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.22 s - in spoon.test.executable.ExecutableRefTest
[INFO] Running spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.221 s - in spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest
[INFO] Running spoon.test.parent.NullParentTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.268 s - in spoon.test.parent.NullParentTest
[INFO] Running spoon.test.parent.ParentContractTest
[ERROR] Tests run: 67, Failures: 0, Errors: 67, Skipped: 0, Time elapsed: 0.569 s <<< FAILURE! - in spoon.test.parent.ParentContractTest
[ERROR] testContract[public interface CtAnnotationFieldAccess<T> extends spoon.reflect.code.CtTargetedExpression<T, spoon.reflect.code.CtExpression<?>> , spoon.reflect.code.CtVariableRead<T> {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.VARIABLE)
    spoon.reflect.reference.CtFieldReference<T> getVariable();

    @java.lang.Override
    spoon.reflect.code.CtAnnotationFieldAccess<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.009 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtArrayRead<T> extends spoon.reflect.code.CtArrayAccess<T, spoon.reflect.code.CtExpression<?>> {
    @java.lang.Override
    spoon.reflect.code.CtArrayRead<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtArrayWrite<T> extends spoon.reflect.code.CtArrayAccess<T, spoon.reflect.code.CtExpression<?>> {
    @java.lang.Override
    spoon.reflect.code.CtArrayWrite<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.008 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtAssert<T> extends spoon.reflect.code.CtStatement {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.CONDITION)
    spoon.reflect.code.CtExpression<java.lang.Boolean> getAssertExpression();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CONDITION)
    <A extends spoon.reflect.code.CtAssert<T>> A setAssertExpression(spoon.reflect.code.CtExpression<java.lang.Boolean> asserted);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    spoon.reflect.code.CtExpression<T> getExpression();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <A extends spoon.reflect.code.CtAssert<T>> A setExpression(spoon.reflect.code.CtExpression<T> expression);

    @java.lang.Override
    spoon.reflect.code.CtAssert<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtAssignment<T, A extends T> extends spoon.reflect.code.CtExpression<T> , spoon.reflect.code.CtRHSReceiver<A> , spoon.reflect.code.CtStatement {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.ASSIGNED)
    spoon.reflect.code.CtExpression<T> getAssigned();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.ASSIGNED)
    <C extends spoon.reflect.code.CtAssignment<T, A>> C setAssigned(spoon.reflect.code.CtExpression<T> assigned);

    @java.lang.Override
    spoon.reflect.code.CtAssignment<T, A> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.008 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtBinaryOperator<T> extends spoon.reflect.code.CtExpression<T> {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.LEFT_OPERAND)
    spoon.reflect.code.CtExpression<?> getLeftHandOperand();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.RIGHT_OPERAND)
    spoon.reflect.code.CtExpression<?> getRightHandOperand();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.LEFT_OPERAND)
    <C extends spoon.reflect.code.CtBinaryOperator<T>> C setLeftHandOperand(spoon.reflect.code.CtExpression<?> expression);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.RIGHT_OPERAND)
    <C extends spoon.reflect.code.CtBinaryOperator<T>> C setRightHandOperand(spoon.reflect.code.CtExpression<?> expression);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.OPERATOR_KIND)
    <C extends spoon.reflect.code.CtBinaryOperator<T>> C setKind(spoon.reflect.code.BinaryOperatorKind kind);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.OPERATOR_KIND)
    spoon.reflect.code.BinaryOperatorKind getKind();

    @java.lang.Override
    spoon.reflect.code.CtBinaryOperator<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtBlock<R> extends spoon.reflect.code.CtStatement , spoon.reflect.code.CtStatementList , spoon.template.TemplateParameter<R> {
    @java.lang.Override
    spoon.reflect.code.CtBlock<R> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtBreak extends spoon.reflect.code.CtLabelledFlowBreak {
    @java.lang.Override
    spoon.reflect.code.CtBreak clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtCase<S> extends spoon.reflect.code.CtStatement , spoon.reflect.code.CtStatementList {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    spoon.reflect.code.CtExpression<S> getCaseExpression();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <T extends spoon.reflect.code.CtCase<S>> T setCaseExpression(spoon.reflect.code.CtExpression<S> caseExpression);

    @java.lang.Override
    spoon.reflect.code.CtCase<S> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.008 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtCatch extends spoon.reflect.code.CtBodyHolder , spoon.reflect.code.CtCodeElement {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.PARAMETER)
    spoon.reflect.code.CtCatchVariable<? extends java.lang.Throwable> getParameter();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.PARAMETER)
    <T extends spoon.reflect.code.CtCatch> T setParameter(spoon.reflect.code.CtCatchVariable<? extends java.lang.Throwable> parameter);

    @java.lang.Override
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.BODY)
    spoon.reflect.code.CtBlock<?> getBody();

    @java.lang.Override
    spoon.reflect.code.CtCatch clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.008 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtCatchVariable<T> extends spoon.reflect.code.CtCodeElement , spoon.reflect.declaration.CtMultiTypedElement , spoon.reflect.declaration.CtVariable<T> {
    @spoon.support.DerivedProperty
    spoon.reflect.reference.CtCatchVariableReference<T> getReference();

    @java.lang.Override
    spoon.reflect.code.CtCatchVariable<T> clone();

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtVariable<T>> C setDefaultExpression(spoon.reflect.code.CtExpression<T> assignedExpression);

    @java.lang.Override
    @spoon.support.DerivedProperty
    spoon.reflect.reference.CtTypeReference<T> getType();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.008 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtCodeSnippetExpression<T> extends spoon.reflect.code.CtExpression<T> , spoon.reflect.declaration.CtCodeSnippet {
    <E extends spoon.reflect.code.CtExpression<T>> E compile() throws spoon.support.compiler.SnippetCompilationError;

    @java.lang.Override
    spoon.reflect.code.CtCodeSnippetExpression<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtCodeSnippetStatement extends spoon.reflect.code.CtStatement , spoon.reflect.declaration.CtCodeSnippet {
    <S extends spoon.reflect.code.CtStatement> S compile() throws spoon.support.compiler.SnippetCompilationError;

    @java.lang.Override
    spoon.reflect.code.CtCodeSnippetStatement clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtComment extends spoon.reflect.code.CtStatement {
    enum CommentType {
        FILE, JAVADOC, INLINE, BLOCK;}

    java.lang.String LINE_SEPARATOR = "\n";

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.COMMENT_CONTENT)
    java.lang.String getContent();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.COMMENT_CONTENT)
    <E extends spoon.reflect.code.CtComment> E setContent(java.lang.String content);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.COMMENT_TYPE)
    spoon.reflect.code.CtComment.CommentType getCommentType();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.COMMENT_TYPE)
    <E extends spoon.reflect.code.CtComment> E setCommentType(spoon.reflect.code.CtComment.CommentType commentType);

    @java.lang.Override
    spoon.reflect.code.CtComment clone();

    spoon.reflect.code.CtJavaDoc asJavaDoc();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtConditional<T> extends spoon.reflect.code.CtExpression<T> {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.ELSE)
    spoon.reflect.code.CtExpression<T> getElseExpression();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.THEN)
    spoon.reflect.code.CtExpression<T> getThenExpression();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.CONDITION)
    spoon.reflect.code.CtExpression<java.lang.Boolean> getCondition();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.ELSE)
    <C extends spoon.reflect.code.CtConditional<T>> C setElseExpression(spoon.reflect.code.CtExpression<T> elseExpression);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.THEN)
    <C extends spoon.reflect.code.CtConditional<T>> C setThenExpression(spoon.reflect.code.CtExpression<T> thenExpression);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CONDITION)
    <C extends spoon.reflect.code.CtConditional<T>> C setCondition(spoon.reflect.code.CtExpression<java.lang.Boolean> condition);

    @java.lang.Override
    spoon.reflect.code.CtConditional<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.008 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtConstructorCall<T> extends spoon.reflect.code.CtAbstractInvocation<T> , spoon.reflect.code.CtStatement , spoon.reflect.code.CtTargetedExpression<T, spoon.reflect.code.CtExpression<?>> , spoon.reflect.reference.CtActualTypeContainer {
    @java.lang.Override
    @spoon.support.DerivedProperty
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.TYPE_ARGUMENT)
    java.util.List<spoon.reflect.reference.CtTypeReference<?>> getActualTypeArguments();

    @java.lang.Override
    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.TYPE_ARGUMENT)
    <T extends spoon.reflect.reference.CtActualTypeContainer> T setActualTypeArguments(java.util.List<? extends spoon.reflect.reference.CtTypeReference<?>> actualTypeArguments);

    @java.lang.Override
    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.TYPE_ARGUMENT)
    <T extends spoon.reflect.reference.CtActualTypeContainer> T addActualTypeArgument(spoon.reflect.reference.CtTypeReference<?> actualTypeArgument);

    @java.lang.Override
    spoon.reflect.code.CtConstructorCall<T> clone();

    @java.lang.Override
    @spoon.support.DerivedProperty
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.TYPE)
    spoon.reflect.reference.CtTypeReference<T> getType();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.008 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtContinue extends spoon.reflect.code.CtLabelledFlowBreak {
    @java.lang.Override
    spoon.reflect.code.CtContinue clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtDo extends spoon.reflect.code.CtLoop {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    spoon.reflect.code.CtExpression<java.lang.Boolean> getLoopingExpression();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <T extends spoon.reflect.code.CtDo> T setLoopingExpression(spoon.reflect.code.CtExpression<java.lang.Boolean> expression);

    @java.lang.Override
    spoon.reflect.code.CtDo clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtExecutableReferenceExpression<T, E extends spoon.reflect.code.CtExpression<?>> extends spoon.reflect.code.CtTargetedExpression<T, E> {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXECUTABLE_REF)
    spoon.reflect.reference.CtExecutableReference<T> getExecutable();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXECUTABLE_REF)
    <C extends spoon.reflect.code.CtExecutableReferenceExpression<T, E>> C setExecutable(spoon.reflect.reference.CtExecutableReference<T> executable);

    @java.lang.Override
    spoon.reflect.code.CtExecutableReferenceExpression<T, E> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.009 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtFieldRead<T> extends spoon.reflect.code.CtFieldAccess<T> , spoon.reflect.code.CtVariableRead<T> {
    @java.lang.Override
    spoon.reflect.code.CtFieldRead<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.01 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtFieldWrite<T> extends spoon.reflect.code.CtFieldAccess<T> , spoon.reflect.code.CtVariableWrite<T> {
    @java.lang.Override
    spoon.reflect.code.CtFieldWrite<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.009 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtFor extends spoon.reflect.code.CtLoop {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    spoon.reflect.code.CtExpression<java.lang.Boolean> getExpression();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <T extends spoon.reflect.code.CtFor> T setExpression(spoon.reflect.code.CtExpression<java.lang.Boolean> expression);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.FOR_INIT)
    java.util.List<spoon.reflect.code.CtStatement> getForInit();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.FOR_INIT)
    <T extends spoon.reflect.code.CtFor> T addForInit(spoon.reflect.code.CtStatement statement);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.FOR_INIT)
    <T extends spoon.reflect.code.CtFor> T setForInit(java.util.List<spoon.reflect.code.CtStatement> forInit);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.FOR_INIT)
    boolean removeForInit(spoon.reflect.code.CtStatement statement);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.FOR_UPDATE)
    java.util.List<spoon.reflect.code.CtStatement> getForUpdate();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.FOR_UPDATE)
    <T extends spoon.reflect.code.CtFor> T addForUpdate(spoon.reflect.code.CtStatement statement);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.FOR_UPDATE)
    <T extends spoon.reflect.code.CtFor> T setForUpdate(java.util.List<spoon.reflect.code.CtStatement> forUpdate);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.FOR_UPDATE)
    boolean removeForUpdate(spoon.reflect.code.CtStatement statement);

    @java.lang.Override
    spoon.reflect.code.CtFor clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.008 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtForEach extends spoon.reflect.code.CtLoop {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    spoon.reflect.code.CtExpression<?> getExpression();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.FOREACH_VARIABLE)
    spoon.reflect.code.CtLocalVariable<?> getVariable();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <T extends spoon.reflect.code.CtForEach> T setExpression(spoon.reflect.code.CtExpression<?> expression);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.FOREACH_VARIABLE)
    <T extends spoon.reflect.code.CtForEach> T setVariable(spoon.reflect.code.CtLocalVariable<?> variable);

    @java.lang.Override
    spoon.reflect.code.CtForEach clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtIf extends spoon.reflect.code.CtStatement , spoon.template.TemplateParameter<java.lang.Void> {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.CONDITION)
    spoon.reflect.code.CtExpression<java.lang.Boolean> getCondition();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.ELSE)
    <S extends spoon.reflect.code.CtStatement> S getElseStatement();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.THEN)
    <S extends spoon.reflect.code.CtStatement> S getThenStatement();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CONDITION)
    <T extends spoon.reflect.code.CtIf> T setCondition(spoon.reflect.code.CtExpression<java.lang.Boolean> expression);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.ELSE)
    <T extends spoon.reflect.code.CtIf> T setElseStatement(spoon.reflect.code.CtStatement elseStatement);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.THEN)
    <T extends spoon.reflect.code.CtIf> T setThenStatement(spoon.reflect.code.CtStatement thenStatement);

    @java.lang.Override
    spoon.reflect.code.CtIf clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtInvocation<T> extends spoon.reflect.code.CtAbstractInvocation<T> , spoon.reflect.code.CtStatement , spoon.reflect.code.CtTargetedExpression<T, spoon.reflect.code.CtExpression<?>> , spoon.reflect.reference.CtActualTypeContainer {
    @java.lang.Override
    @spoon.support.DerivedProperty
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.TYPE_ARGUMENT)
    java.util.List<spoon.reflect.reference.CtTypeReference<?>> getActualTypeArguments();

    @java.lang.Override
    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.TYPE_ARGUMENT)
    <T extends spoon.reflect.reference.CtActualTypeContainer> T setActualTypeArguments(java.util.List<? extends spoon.reflect.reference.CtTypeReference<?>> actualTypeArguments);

    @java.lang.Override
    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.TYPE_ARGUMENT)
    <T extends spoon.reflect.reference.CtActualTypeContainer> T addActualTypeArgument(spoon.reflect.reference.CtTypeReference<?> actualTypeArgument);

    @java.lang.Override
    @spoon.support.DerivedProperty
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.TYPE)
    spoon.reflect.reference.CtTypeReference<T> getType();

    @java.lang.Override
    spoon.reflect.code.CtInvocation<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtJavaDoc extends spoon.reflect.code.CtComment {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.COMMENT_TAG)
    java.util.List<spoon.reflect.code.CtJavaDocTag> getTags();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.COMMENT_TAG)
    <E extends spoon.reflect.code.CtJavaDoc> E setTags(java.util.List<spoon.reflect.code.CtJavaDocTag> tags);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.COMMENT_TAG)
    <E extends spoon.reflect.code.CtJavaDoc> E addTag(spoon.reflect.code.CtJavaDocTag tag);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.COMMENT_TAG)
    <E extends spoon.reflect.code.CtJavaDoc> E addTag(int index, spoon.reflect.code.CtJavaDocTag tag);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.COMMENT_TAG)
    <E extends spoon.reflect.code.CtJavaDoc> E removeTag(int index);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.COMMENT_TAG)
    <E extends spoon.reflect.code.CtJavaDoc> E removeTag(spoon.reflect.code.CtJavaDocTag tag);

    @spoon.support.DerivedProperty
    java.lang.String getShortDescription();

    @spoon.support.DerivedProperty
    java.lang.String getLongDescription();

    @java.lang.Override
    spoon.reflect.code.CtJavaDoc clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtJavaDocTag extends spoon.reflect.declaration.CtElement {
    java.lang.String JAVADOC_TAG_PREFIX = "@";

    enum TagType {
        AUTHOR, DEPRECATED, EXCEPTION, PARAM, RETURN, SEE, SERIAL, SERIAL_DATA, SERIAL_FIELD, SINCE, THROWS, VERSION, UNKNOWN;
        public boolean hasParam() {
            return ((this) == (spoon.reflect.code.CtJavaDocTag.TagType.PARAM)) || ((this) == (spoon.reflect.code.CtJavaDocTag.TagType.THROWS));
        }

        public static spoon.reflect.code.CtJavaDocTag.TagType tagFromName(java.lang.String tagName) {
            for (spoon.reflect.code.CtJavaDocTag.TagType t : spoon.reflect.code.CtJavaDocTag.TagType.values()) {
                if (t.name().toLowerCase().equals(tagName.toLowerCase())) {
                    return t;
                }
            }
            return spoon.reflect.code.CtJavaDocTag.TagType.UNKNOWN;
        }

        @java.lang.Override
        public java.lang.String toString() {
            return (spoon.reflect.code.CtJavaDocTag.JAVADOC_TAG_PREFIX) + (name().toLowerCase());
        }
    }

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.DOCUMENTATION_TYPE)
    spoon.reflect.code.CtJavaDocTag.TagType getType();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.DOCUMENTATION_TYPE)
    <E extends spoon.reflect.code.CtJavaDocTag> E setType(java.lang.String type);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.DOCUMENTATION_TYPE)
    <E extends spoon.reflect.code.CtJavaDocTag> E setType(spoon.reflect.code.CtJavaDocTag.TagType type);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.COMMENT_CONTENT)
    java.lang.String getContent();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.COMMENT_CONTENT)
    <E extends spoon.reflect.code.CtJavaDocTag> E setContent(java.lang.String content);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.JAVADOC_TAG_VALUE)
    java.lang.String getParam();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.JAVADOC_TAG_VALUE)
    <E extends spoon.reflect.code.CtJavaDocTag> E setParam(java.lang.String param);

    @java.lang.Override
    spoon.reflect.code.CtJavaDocTag clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.008 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtLambda<T> extends spoon.reflect.code.CtExpression<T> , spoon.reflect.declaration.CtExecutable<T> {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    spoon.reflect.code.CtExpression<T> getExpression();

    @spoon.support.DerivedProperty
    <R> spoon.reflect.declaration.CtMethod<R> getOverriddenMethod();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <C extends spoon.reflect.code.CtLambda<T>> C setExpression(spoon.reflect.code.CtExpression<T> expression);

    @java.lang.Override
    spoon.reflect.code.CtLambda<T> clone();

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <T1 extends spoon.reflect.declaration.CtExecutable<T>> T1 setThrownTypes(java.util.Set<spoon.reflect.reference.CtTypeReference<? extends java.lang.Throwable>> thrownTypes);
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtLiteral<T> extends spoon.reflect.code.CtExpression<T> {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.VALUE)
    T getValue();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.VALUE)
    <C extends spoon.reflect.code.CtLiteral<T>> C setValue(T value);

    @java.lang.Override
    spoon.reflect.code.CtLiteral<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtLocalVariable<T> extends spoon.reflect.code.CtRHSReceiver<T> , spoon.reflect.code.CtStatement , spoon.reflect.declaration.CtVariable<T> {
    @spoon.support.DerivedProperty
    spoon.reflect.reference.CtLocalVariableReference<T> getReference();

    @java.lang.Override
    @spoon.support.DerivedProperty
    spoon.reflect.code.CtExpression<T> getAssignment();

    @java.lang.Override
    spoon.reflect.code.CtLocalVariable<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.008 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtNewArray<T> extends spoon.reflect.code.CtExpression<T> {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.DIMENSION)
    java.util.List<spoon.reflect.code.CtExpression<java.lang.Integer>> getDimensionExpressions();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.DIMENSION)
    <C extends spoon.reflect.code.CtNewArray<T>> C setDimensionExpressions(java.util.List<spoon.reflect.code.CtExpression<java.lang.Integer>> dimensions);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.DIMENSION)
    <C extends spoon.reflect.code.CtNewArray<T>> C addDimensionExpression(spoon.reflect.code.CtExpression<java.lang.Integer> dimension);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.DIMENSION)
    boolean removeDimensionExpression(spoon.reflect.code.CtExpression<java.lang.Integer> dimension);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    java.util.List<spoon.reflect.code.CtExpression<?>> getElements();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <C extends spoon.reflect.code.CtNewArray<T>> C setElements(java.util.List<spoon.reflect.code.CtExpression<?>> expression);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <C extends spoon.reflect.code.CtNewArray<T>> C addElement(spoon.reflect.code.CtExpression<?> expression);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    boolean removeElement(spoon.reflect.code.CtExpression<?> expression);

    @java.lang.Override
    spoon.reflect.code.CtNewArray<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.008 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtNewClass<T> extends spoon.reflect.code.CtConstructorCall<T> {
    @java.lang.Override
    @spoon.support.DerivedProperty
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.TYPE_ARGUMENT)
    java.util.List<spoon.reflect.reference.CtTypeReference<?>> getActualTypeArguments();

    @java.lang.Override
    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.TYPE_ARGUMENT)
    <T extends spoon.reflect.reference.CtActualTypeContainer> T setActualTypeArguments(java.util.List<? extends spoon.reflect.reference.CtTypeReference<?>> actualTypeArguments);

    @java.lang.Override
    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.TYPE_ARGUMENT)
    <T extends spoon.reflect.reference.CtActualTypeContainer> T addActualTypeArgument(spoon.reflect.reference.CtTypeReference<?> actualTypeArgument);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.NESTED_TYPE)
    spoon.reflect.declaration.CtClass<?> getAnonymousClass();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.NESTED_TYPE)
    <N extends spoon.reflect.code.CtNewClass> N setAnonymousClass(spoon.reflect.declaration.CtClass<?> anonymousClass);

    @java.lang.Override
    spoon.reflect.code.CtNewClass<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtOperatorAssignment<T, A extends T> extends spoon.reflect.code.CtAssignment<T, A> {
    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.OPERATOR_KIND)
    <C extends spoon.reflect.code.CtOperatorAssignment<T, A>> C setKind(spoon.reflect.code.BinaryOperatorKind kind);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.OPERATOR_KIND)
    spoon.reflect.code.BinaryOperatorKind getKind();

    @java.lang.Override
    spoon.reflect.code.CtOperatorAssignment<T, A> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.01 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtReturn<R> extends spoon.reflect.code.CtCFlowBreak , spoon.template.TemplateParameter<java.lang.Void> {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    spoon.reflect.code.CtExpression<R> getReturnedExpression();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <T extends spoon.reflect.code.CtReturn<R>> T setReturnedExpression(spoon.reflect.code.CtExpression<R> returnedExpression);

    @java.lang.Override
    spoon.reflect.code.CtReturn<R> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.01 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtStatementList extends java.lang.Iterable<spoon.reflect.code.CtStatement> , spoon.reflect.code.CtCodeElement {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.STATEMENT)
    java.util.List<spoon.reflect.code.CtStatement> getStatements();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.STATEMENT)
    <T extends spoon.reflect.code.CtStatementList> T setStatements(java.util.List<spoon.reflect.code.CtStatement> statements);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.STATEMENT)
    <T extends spoon.reflect.code.CtStatementList> T addStatement(spoon.reflect.code.CtStatement statement);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.STATEMENT)
    <T extends spoon.reflect.code.CtStatementList> T addStatement(int index, spoon.reflect.code.CtStatement statement);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.STATEMENT)
    <T extends spoon.reflect.code.CtStatementList> T insertBegin(spoon.reflect.code.CtStatement statement);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.STATEMENT)
    <T extends spoon.reflect.code.CtStatementList> T insertBegin(spoon.reflect.code.CtStatementList statements);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.STATEMENT)
    <T extends spoon.reflect.code.CtStatementList> T insertEnd(spoon.reflect.code.CtStatement statement);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.STATEMENT)
    <T extends spoon.reflect.code.CtStatementList> T insertEnd(spoon.reflect.code.CtStatementList statements);

    @spoon.support.DerivedProperty
    <T extends spoon.reflect.code.CtStatementList> T insertBefore(spoon.reflect.visitor.Filter<? extends spoon.reflect.code.CtStatement> insertionPoints, spoon.reflect.code.CtStatement statement);

    @spoon.support.DerivedProperty
    <T extends spoon.reflect.code.CtStatementList> T insertBefore(spoon.reflect.visitor.Filter<? extends spoon.reflect.code.CtStatement> insertionPoints, spoon.reflect.code.CtStatementList statements);

    @spoon.support.DerivedProperty
    <T extends spoon.reflect.code.CtStatementList> T insertAfter(spoon.reflect.visitor.Filter<? extends spoon.reflect.code.CtStatement> insertionPoints, spoon.reflect.code.CtStatement statement);

    @spoon.support.DerivedProperty
    <T extends spoon.reflect.code.CtStatementList> T insertAfter(spoon.reflect.visitor.Filter<? extends spoon.reflect.code.CtStatement> insertionPoints, spoon.reflect.code.CtStatementList statements);

    @spoon.support.DerivedProperty
    <T extends spoon.reflect.code.CtStatement> T getStatement(int i);

    @spoon.support.DerivedProperty
    <T extends spoon.reflect.code.CtStatement> T getLastStatement();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.STATEMENT)
    void removeStatement(spoon.reflect.code.CtStatement statement);

    @java.lang.Override
    spoon.reflect.code.CtStatementList clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.011 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtSuperAccess<T> extends spoon.reflect.code.CtTargetedExpression<T, spoon.reflect.code.CtExpression<?>> , spoon.reflect.code.CtVariableRead<T> {
    @java.lang.Override
    spoon.reflect.code.CtSuperAccess<T> clone();

    @java.lang.Override
    @spoon.support.DerivedProperty
    spoon.reflect.reference.CtTypeReference<T> getType();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.009 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtSwitch<S> extends spoon.reflect.code.CtStatement {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    spoon.reflect.code.CtExpression<S> getSelector();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <T extends spoon.reflect.code.CtSwitch<S>> T setSelector(spoon.reflect.code.CtExpression<S> selector);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.CASE)
    java.util.List<spoon.reflect.code.CtCase<? super S>> getCases();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CASE)
    <T extends spoon.reflect.code.CtSwitch<S>> T setCases(java.util.List<spoon.reflect.code.CtCase<? super S>> cases);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CASE)
    <T extends spoon.reflect.code.CtSwitch<S>> T addCase(spoon.reflect.code.CtCase<? super S> c);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CASE)
    boolean removeCase(spoon.reflect.code.CtCase<? super S> c);

    @java.lang.Override
    spoon.reflect.code.CtSwitch<S> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtSynchronized extends spoon.reflect.code.CtStatement {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    spoon.reflect.code.CtExpression<?> getExpression();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <T extends spoon.reflect.code.CtSynchronized> T setExpression(spoon.reflect.code.CtExpression<?> expression);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.BODY)
    spoon.reflect.code.CtBlock<?> getBlock();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.BODY)
    <T extends spoon.reflect.code.CtSynchronized> T setBlock(spoon.reflect.code.CtBlock<?> block);

    @java.lang.Override
    spoon.reflect.code.CtSynchronized clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.006 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtThisAccess<T> extends spoon.reflect.code.CtTargetedExpression<T, spoon.reflect.code.CtExpression<?>> {
    @java.lang.Override
    spoon.reflect.code.CtThisAccess<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtThrow extends spoon.reflect.code.CtCFlowBreak , spoon.template.TemplateParameter<java.lang.Void> {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    spoon.reflect.code.CtExpression<? extends java.lang.Throwable> getThrownExpression();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <T extends spoon.reflect.code.CtThrow> T setThrownExpression(spoon.reflect.code.CtExpression<? extends java.lang.Throwable> thrownExpression);

    @java.lang.Override
    spoon.reflect.code.CtThrow clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtTry extends spoon.reflect.code.CtBodyHolder , spoon.reflect.code.CtStatement , spoon.template.TemplateParameter<java.lang.Void> {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.CATCH)
    java.util.List<spoon.reflect.code.CtCatch> getCatchers();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CATCH)
    <T extends spoon.reflect.code.CtTry> T setCatchers(java.util.List<spoon.reflect.code.CtCatch> catchers);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CATCH)
    <T extends spoon.reflect.code.CtTry> T addCatcher(spoon.reflect.code.CtCatch catcher);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CATCH)
    boolean removeCatcher(spoon.reflect.code.CtCatch catcher);

    @java.lang.Override
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.BODY)
    spoon.reflect.code.CtBlock<?> getBody();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.FINALIZER)
    spoon.reflect.code.CtBlock<?> getFinalizer();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.FINALIZER)
    <T extends spoon.reflect.code.CtTry> T setFinalizer(spoon.reflect.code.CtBlock<?> finalizer);

    @java.lang.Override
    spoon.reflect.code.CtTry clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtTryWithResource extends spoon.reflect.code.CtTry {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.TRY_RESOURCE)
    java.util.List<spoon.reflect.code.CtLocalVariable<?>> getResources();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.TRY_RESOURCE)
    <T extends spoon.reflect.code.CtTryWithResource> T setResources(java.util.List<spoon.reflect.code.CtLocalVariable<?>> resources);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.TRY_RESOURCE)
    <T extends spoon.reflect.code.CtTryWithResource> T addResource(spoon.reflect.code.CtLocalVariable<?> resource);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.TRY_RESOURCE)
    boolean removeResource(spoon.reflect.code.CtLocalVariable<?> resource);

    @java.lang.Override
    spoon.reflect.code.CtTryWithResource clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.006 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtTypeAccess<A> extends spoon.reflect.code.CtExpression<java.lang.Void> {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.ACCESSED_TYPE)
    spoon.reflect.reference.CtTypeReference<A> getAccessedType();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.ACCESSED_TYPE)
    <C extends spoon.reflect.code.CtTypeAccess<A>> C setAccessedType(spoon.reflect.reference.CtTypeReference<A> accessedType);

    @java.lang.Override
    @spoon.support.DerivedProperty
    spoon.reflect.reference.CtTypeReference<java.lang.Void> getType();

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtTypedElement> C setType(spoon.reflect.reference.CtTypeReference<java.lang.Void> type);

    @java.lang.Override
    spoon.reflect.code.CtTypeAccess<A> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtUnaryOperator<T> extends spoon.reflect.code.CtExpression<T> , spoon.reflect.code.CtStatement {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    spoon.reflect.code.CtExpression<T> getOperand();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <C extends spoon.reflect.code.CtUnaryOperator> C setOperand(spoon.reflect.code.CtExpression<T> expression);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.OPERATOR_KIND)
    <C extends spoon.reflect.code.CtUnaryOperator> C setKind(spoon.reflect.code.UnaryOperatorKind kind);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.OPERATOR_KIND)
    spoon.reflect.code.UnaryOperatorKind getKind();

    @java.lang.Override
    spoon.reflect.code.CtUnaryOperator<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtVariableRead<T> extends spoon.reflect.code.CtVariableAccess<T> {
    @java.lang.Override
    spoon.reflect.code.CtVariableRead<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtVariableWrite<T> extends spoon.reflect.code.CtVariableAccess<T> {
    @java.lang.Override
    spoon.reflect.code.CtVariableWrite<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtWhile extends spoon.reflect.code.CtLoop {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    spoon.reflect.code.CtExpression<java.lang.Boolean> getLoopingExpression();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPRESSION)
    <T extends spoon.reflect.code.CtWhile> T setLoopingExpression(spoon.reflect.code.CtExpression<java.lang.Boolean> expression);

    @java.lang.Override
    spoon.reflect.code.CtWhile clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.006 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtAnnotation<A extends java.lang.annotation.Annotation> extends spoon.reflect.code.CtExpression<A> , spoon.reflect.declaration.CtShadowable {
    @spoon.support.DerivedProperty
    A getActualAnnotation();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.ANNOTATION_TYPE)
    spoon.reflect.reference.CtTypeReference<A> getAnnotationType();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.VALUE)
    <T extends spoon.reflect.code.CtExpression> T getValue(java.lang.String key);

    @spoon.support.DerivedProperty
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.VALUE)
    <T extends spoon.reflect.code.CtExpression> T getWrappedValue(java.lang.String key);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.VALUE)
    java.util.Map<java.lang.String, spoon.reflect.code.CtExpression> getValues();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.ANNOTATION_TYPE)
    <T extends spoon.reflect.declaration.CtAnnotation<A>> T setAnnotationType(spoon.reflect.reference.CtTypeReference<? extends java.lang.annotation.Annotation> type);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.VALUE)
    <T extends spoon.reflect.declaration.CtAnnotation<A>> T setElementValues(java.util.Map<java.lang.String, java.lang.Object> values);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.VALUE)
    <T extends spoon.reflect.declaration.CtAnnotation<A>> T setValues(java.util.Map<java.lang.String, spoon.reflect.code.CtExpression> values);

    @spoon.support.DerivedProperty
    spoon.reflect.declaration.CtElement getAnnotatedElement();

    @spoon.support.DerivedProperty
    spoon.reflect.declaration.CtAnnotatedElementType getAnnotatedElementType();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.VALUE)
    <T extends spoon.reflect.declaration.CtAnnotation<A>> T addValue(java.lang.String elementName, java.lang.Object value);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.VALUE)
    <T extends spoon.reflect.declaration.CtAnnotation<A>> T addValue(java.lang.String elementName, spoon.reflect.code.CtLiteral<?> value);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.VALUE)
    <T extends spoon.reflect.declaration.CtAnnotation<A>> T addValue(java.lang.String elementName, spoon.reflect.code.CtNewArray<? extends spoon.reflect.code.CtExpression> value);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.VALUE)
    <T extends spoon.reflect.declaration.CtAnnotation<A>> T addValue(java.lang.String elementName, spoon.reflect.code.CtFieldAccess<?> value);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.VALUE)
    <T extends spoon.reflect.declaration.CtAnnotation<A>> T addValue(java.lang.String elementName, spoon.reflect.declaration.CtAnnotation<?> value);

    @java.lang.Override
    spoon.reflect.declaration.CtAnnotation<A> clone();

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.code.CtExpression<A>> C setTypeCasts(java.util.List<spoon.reflect.reference.CtTypeReference<?>> types);

    static spoon.reflect.declaration.CtAnnotatedElementType getAnnotatedElementTypeForCtElement(spoon.reflect.declaration.CtElement element) {
        if (element == null) {
            return null;
        }
        if (element instanceof spoon.reflect.declaration.CtMethod) {
            return spoon.reflect.declaration.CtAnnotatedElementType.METHOD;
        }
        if ((element instanceof spoon.reflect.declaration.CtAnnotation) || (element instanceof spoon.reflect.declaration.CtAnnotationType)) {
            return spoon.reflect.declaration.CtAnnotatedElementType.ANNOTATION_TYPE;
        }
        if (element instanceof spoon.reflect.declaration.CtType) {
            return spoon.reflect.declaration.CtAnnotatedElementType.TYPE;
        }
        if (element instanceof spoon.reflect.declaration.CtField) {
            return spoon.reflect.declaration.CtAnnotatedElementType.FIELD;
        }
        if (element instanceof spoon.reflect.declaration.CtConstructor) {
            return spoon.reflect.declaration.CtAnnotatedElementType.CONSTRUCTOR;
        }
        if (element instanceof spoon.reflect.declaration.CtParameter) {
            return spoon.reflect.declaration.CtAnnotatedElementType.PARAMETER;
        }
        if (element instanceof spoon.reflect.code.CtLocalVariable) {
            return spoon.reflect.declaration.CtAnnotatedElementType.LOCAL_VARIABLE;
        }
        if (element instanceof spoon.reflect.declaration.CtPackage) {
            return spoon.reflect.declaration.CtAnnotatedElementType.PACKAGE;
        }
        if (element instanceof spoon.reflect.reference.CtTypeParameterReference) {
            return spoon.reflect.declaration.CtAnnotatedElementType.TYPE_PARAMETER;
        }
        if (element instanceof spoon.reflect.reference.CtTypeReference) {
            return spoon.reflect.declaration.CtAnnotatedElementType.TYPE_USE;
        }
        return null;
    }
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtAnnotationMethod<T> extends spoon.reflect.declaration.CtMethod<T> {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.DEFAULT_EXPRESSION)
    spoon.reflect.code.CtExpression<T> getDefaultExpression();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.DEFAULT_EXPRESSION)
    <C extends spoon.reflect.declaration.CtAnnotationMethod<T>> C setDefaultExpression(spoon.reflect.code.CtExpression<T> assignedExpression);

    @java.lang.Override
    spoon.reflect.declaration.CtAnnotationMethod<T> clone();

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <T1 extends spoon.reflect.code.CtBodyHolder> T1 setBody(spoon.reflect.code.CtStatement body);

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <T1 extends spoon.reflect.declaration.CtExecutable<T>> T1 setThrownTypes(java.util.Set<spoon.reflect.reference.CtTypeReference<? extends java.lang.Throwable>> thrownTypes);

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <T extends spoon.reflect.declaration.CtFormalTypeDeclarer> T setFormalCtTypeParameters(java.util.List<spoon.reflect.declaration.CtTypeParameter> formalTypeParameters);

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <T1 extends spoon.reflect.declaration.CtExecutable<T>> T1 setParameters(java.util.List<spoon.reflect.declaration.CtParameter<?>> parameters);
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtAnnotationType<T extends java.lang.annotation.Annotation> extends spoon.reflect.declaration.CtType<T> {
    @spoon.support.DerivedProperty
    java.util.Set<spoon.reflect.declaration.CtAnnotationMethod<?>> getAnnotationMethods();

    @java.lang.Override
    <M, C extends spoon.reflect.declaration.CtType<T>> C addMethod(spoon.reflect.declaration.CtMethod<M> method);

    @java.lang.Override
    <C extends spoon.reflect.declaration.CtType<T>> C setMethods(java.util.Set<spoon.reflect.declaration.CtMethod<?>> methods);

    @java.lang.Override
    spoon.reflect.declaration.CtAnnotationType<T> clone();

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <T extends spoon.reflect.declaration.CtFormalTypeDeclarer> T setFormalCtTypeParameters(java.util.List<spoon.reflect.declaration.CtTypeParameter> formalTypeParameters);

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtType<T>> C setSuperInterfaces(java.util.Set<spoon.reflect.reference.CtTypeReference<?>> interfaces);

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtType<T>> C setSuperclass(spoon.reflect.reference.CtTypeReference<?> superClass);
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.008 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtAnonymousExecutable extends spoon.reflect.declaration.CtExecutable<java.lang.Void> , spoon.reflect.declaration.CtTypeMember {
    @java.lang.Override
    spoon.reflect.declaration.CtAnonymousExecutable clone();

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <T extends spoon.reflect.declaration.CtExecutable<java.lang.Void>> T setThrownTypes(java.util.Set<spoon.reflect.reference.CtTypeReference<? extends java.lang.Throwable>> thrownTypes);

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <T extends spoon.reflect.declaration.CtExecutable<java.lang.Void>> T setParameters(java.util.List<spoon.reflect.declaration.CtParameter<?>> parameters);

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtTypedElement> C setType(spoon.reflect.reference.CtTypeReference<java.lang.Void> type);
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtClass<T extends java.lang.Object> extends spoon.reflect.code.CtStatement , spoon.reflect.declaration.CtType<T> {
    @spoon.support.DerivedProperty
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.ANNONYMOUS_EXECUTABLE)
    java.util.List<spoon.reflect.declaration.CtAnonymousExecutable> getAnonymousExecutables();

    @spoon.support.DerivedProperty
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.CONSTRUCTOR)
    spoon.reflect.declaration.CtConstructor<T> getConstructor(spoon.reflect.reference.CtTypeReference<?>... parameterTypes);

    @spoon.support.DerivedProperty
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.CONSTRUCTOR)
    java.util.Set<spoon.reflect.declaration.CtConstructor<T>> getConstructors();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.ANNONYMOUS_EXECUTABLE)
    <C extends spoon.reflect.declaration.CtClass<T>> C setAnonymousExecutables(java.util.List<spoon.reflect.declaration.CtAnonymousExecutable> e);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.ANNONYMOUS_EXECUTABLE)
    <C extends spoon.reflect.declaration.CtClass<T>> C addAnonymousExecutable(spoon.reflect.declaration.CtAnonymousExecutable e);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.ANNONYMOUS_EXECUTABLE)
    boolean removeAnonymousExecutable(spoon.reflect.declaration.CtAnonymousExecutable e);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CONSTRUCTOR)
    <C extends spoon.reflect.declaration.CtClass<T>> C setConstructors(java.util.Set<spoon.reflect.declaration.CtConstructor<T>> constructors);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CONSTRUCTOR)
    <C extends spoon.reflect.declaration.CtClass<T>> C addConstructor(spoon.reflect.declaration.CtConstructor<T> constructor);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CONSTRUCTOR)
    void removeConstructor(spoon.reflect.declaration.CtConstructor<T> constructor);

    boolean isAnonymous();

    @java.lang.Override
    spoon.reflect.declaration.CtClass<T> clone();

    T newInstance();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtConstructor<T> extends spoon.reflect.declaration.CtExecutable<T> , spoon.reflect.declaration.CtFormalTypeDeclarer , spoon.reflect.declaration.CtShadowable , spoon.reflect.declaration.CtTypeMember {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.NAME)
    java.lang.String getSimpleName();

    @java.lang.Override
    spoon.reflect.declaration.CtConstructor<T> clone();

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtTypedElement> C setType(spoon.reflect.reference.CtTypeReference<T> type);
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtEnum<T extends java.lang.Enum<?>> extends spoon.reflect.declaration.CtClass<T> {
    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.VALUE)
    <C extends spoon.reflect.declaration.CtEnum<T>> C addEnumValue(spoon.reflect.declaration.CtEnumValue<?> enumValue);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.VALUE)
    boolean removeEnumValue(spoon.reflect.declaration.CtEnumValue<?> enumValue);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.VALUE)
    spoon.reflect.declaration.CtEnumValue<?> getEnumValue(java.lang.String name);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.VALUE)
    java.util.List<spoon.reflect.declaration.CtEnumValue<?>> getEnumValues();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.VALUE)
    <C extends spoon.reflect.declaration.CtEnum<T>> C setEnumValues(java.util.List<spoon.reflect.declaration.CtEnumValue<?>> enumValues);

    @java.lang.Override
    spoon.reflect.declaration.CtEnum<T> clone();

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <T extends spoon.reflect.declaration.CtFormalTypeDeclarer> T setFormalCtTypeParameters(java.util.List<spoon.reflect.declaration.CtTypeParameter> formalTypeParameters);

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtType<T>> C setSuperclass(spoon.reflect.reference.CtTypeReference<?> superClass);
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.007 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtEnumValue<T> extends spoon.reflect.declaration.CtField<T> {
    @java.lang.Override
    spoon.reflect.declaration.CtEnumValue clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.009 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtField<T> extends spoon.reflect.code.CtRHSReceiver<T> , spoon.reflect.declaration.CtShadowable , spoon.reflect.declaration.CtTypeMember , spoon.reflect.declaration.CtVariable<T> {
    java.lang.String FIELD_SEPARATOR = "#";

    @spoon.support.DerivedProperty
    spoon.reflect.reference.CtFieldReference<T> getReference();

    @java.lang.Override
    @spoon.support.DerivedProperty
    spoon.reflect.code.CtExpression<T> getAssignment();

    @java.lang.Override
    spoon.reflect.declaration.CtField<T> clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.009 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtImport extends spoon.reflect.declaration.CtElement {
    @spoon.support.DerivedProperty
    spoon.reflect.declaration.CtImportKind getImportKind();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.IMPORT_REFERENCE)
    spoon.reflect.reference.CtReference getReference();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.IMPORT_REFERENCE)
    <T extends spoon.reflect.declaration.CtImport> T setReference(spoon.reflect.reference.CtReference reference);

    @java.lang.Override
    spoon.reflect.declaration.CtImport clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.01 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtInterface<T> extends spoon.reflect.declaration.CtType<T> {
    @java.lang.Override
    spoon.reflect.declaration.CtInterface<T> clone();

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtType<T>> C setSuperclass(spoon.reflect.reference.CtTypeReference<?> superClass);
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.011 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtMethod<T> extends spoon.reflect.declaration.CtExecutable<T> , spoon.reflect.declaration.CtFormalTypeDeclarer , spoon.reflect.declaration.CtShadowable , spoon.reflect.declaration.CtTypeMember {
    boolean isOverriding(spoon.reflect.declaration.CtMethod<?> superMethod);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.IS_DEFAULT)
    boolean isDefaultMethod();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.IS_DEFAULT)
    <C extends spoon.reflect.declaration.CtMethod<T>> C setDefaultMethod(boolean defaultMethod);

    @java.lang.Override
    spoon.reflect.declaration.CtMethod<T> clone();

    java.util.Collection<spoon.reflect.declaration.CtMethod<?>> getTopDefinitions();

    spoon.reflect.declaration.CtMethod<?> copyMethod();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.01 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtModule extends spoon.reflect.declaration.CtNamedElement {
    java.lang.String TOP_LEVEL_MODULE_NAME = "unnamed module";

    @spoon.support.DerivedProperty
    boolean isUnnamedModule();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.MODIFIER)
    boolean isOpenModule();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.MODIFIER)
    <T extends spoon.reflect.declaration.CtModule> T setIsOpenModule(boolean openModule);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.MODULE_DIRECTIVE)
    <T extends spoon.reflect.declaration.CtModule> T setModuleDirectives(java.util.List<spoon.reflect.declaration.CtModuleDirective> moduleDirectives);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.MODULE_DIRECTIVE)
    <T extends spoon.reflect.declaration.CtModule> T addModuleDirective(spoon.reflect.declaration.CtModuleDirective moduleDirective);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.MODULE_DIRECTIVE)
    <T extends spoon.reflect.declaration.CtModule> T addModuleDirectiveAt(int position, spoon.reflect.declaration.CtModuleDirective moduleDirective);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.MODULE_DIRECTIVE)
    java.util.List<spoon.reflect.declaration.CtModuleDirective> getModuleDirectives();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.MODULE_DIRECTIVE)
    <T extends spoon.reflect.declaration.CtModule> T removeModuleDirective(spoon.reflect.declaration.CtModuleDirective moduleDirective);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.SERVICE_TYPE)
    @spoon.support.DerivedProperty
    java.util.List<spoon.reflect.declaration.CtUsedService> getUsedServices();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.SERVICE_TYPE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T setUsedServices(java.util.List<spoon.reflect.declaration.CtUsedService> usedServices);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.SERVICE_TYPE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T addUsedService(spoon.reflect.declaration.CtUsedService usedService);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.SERVICE_TYPE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T removeUsedService(spoon.reflect.declaration.CtUsedService usedService);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPORTED_PACKAGE)
    @spoon.support.DerivedProperty
    java.util.List<spoon.reflect.declaration.CtPackageExport> getExportedPackages();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPORTED_PACKAGE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T setExportedPackages(java.util.List<spoon.reflect.declaration.CtPackageExport> exportedPackages);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPORTED_PACKAGE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T addExportedPackage(spoon.reflect.declaration.CtPackageExport exportedPackage);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.EXPORTED_PACKAGE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T removeExportedPackage(spoon.reflect.declaration.CtPackageExport exportedPackage);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.OPENED_PACKAGE)
    @spoon.support.DerivedProperty
    java.util.List<spoon.reflect.declaration.CtPackageExport> getOpenedPackages();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.OPENED_PACKAGE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T setOpenedPackages(java.util.List<spoon.reflect.declaration.CtPackageExport> openedPackages);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.OPENED_PACKAGE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T addOpenedPackage(spoon.reflect.declaration.CtPackageExport openedPackage);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.OPENED_PACKAGE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T removeOpenedPackage(spoon.reflect.declaration.CtPackageExport openedPackage);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.REQUIRED_MODULE)
    @spoon.support.DerivedProperty
    java.util.List<spoon.reflect.declaration.CtModuleRequirement> getRequiredModules();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.REQUIRED_MODULE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T setRequiredModules(java.util.List<spoon.reflect.declaration.CtModuleRequirement> requiredModules);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.REQUIRED_MODULE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T addRequiredModule(spoon.reflect.declaration.CtModuleRequirement requiredModule);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.REQUIRED_MODULE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T removeRequiredModule(spoon.reflect.declaration.CtModuleRequirement requiredModule);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.PROVIDED_SERVICE)
    @spoon.support.DerivedProperty
    java.util.List<spoon.reflect.declaration.CtProvidedService> getProvidedServices();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.PROVIDED_SERVICE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T setProvidedServices(java.util.List<spoon.reflect.declaration.CtProvidedService> providedServices);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.PROVIDED_SERVICE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T addProvidedService(spoon.reflect.declaration.CtProvidedService providedService);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.PROVIDED_SERVICE)
    @spoon.support.DerivedProperty
    <T extends spoon.reflect.declaration.CtModule> T removeProvidedService(spoon.reflect.declaration.CtProvidedService providedService);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.SUB_PACKAGE)
    spoon.reflect.declaration.CtPackage getRootPackage();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.SUB_PACKAGE)
    <T extends spoon.reflect.declaration.CtModule> T setRootPackage(spoon.reflect.declaration.CtPackage rootPackage);

    @spoon.support.DerivedProperty
    @java.lang.Override
    spoon.reflect.reference.CtModuleReference getReference();

    @java.lang.Override
    spoon.reflect.declaration.CtModule clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.011 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtModuleRequirement extends spoon.reflect.declaration.CtModuleDirective {
    enum RequiresModifier {
        STATIC, TRANSITIVE;}

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.MODIFIER)
    java.util.Set<spoon.reflect.declaration.CtModuleRequirement.RequiresModifier> getRequiresModifiers();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.MODIFIER)
    <T extends spoon.reflect.declaration.CtModuleRequirement> T setRequiresModifiers(java.util.Set<spoon.reflect.declaration.CtModuleRequirement.RequiresModifier> requiresModifiers);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.MODULE_REF)
    spoon.reflect.reference.CtModuleReference getModuleReference();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.MODULE_REF)
    <T extends spoon.reflect.declaration.CtModuleRequirement> T setModuleReference(spoon.reflect.reference.CtModuleReference moduleReference);

    @java.lang.Override
    spoon.reflect.declaration.CtModuleRequirement clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.01 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtPackage extends spoon.reflect.declaration.CtNamedElement , spoon.reflect.declaration.CtShadowable {
    java.lang.String PACKAGE_SEPARATOR = ".";

    char PACKAGE_SEPARATOR_CHAR = '.';

    java.lang.String TOP_LEVEL_PACKAGE_NAME = "unnamed package";

    @spoon.support.DerivedProperty
    spoon.reflect.declaration.CtModule getDeclaringModule();

    @spoon.support.DerivedProperty
    spoon.reflect.declaration.CtPackage getDeclaringPackage();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.SUB_PACKAGE)
    spoon.reflect.declaration.CtPackage getPackage(java.lang.String name);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.SUB_PACKAGE)
    java.util.Set<spoon.reflect.declaration.CtPackage> getPackages();

    java.lang.String getQualifiedName();

    @spoon.support.DerivedProperty
    spoon.reflect.reference.CtPackageReference getReference();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.CONTAINED_TYPE)
    <T extends spoon.reflect.declaration.CtType<?>> T getType(java.lang.String simpleName);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.CONTAINED_TYPE)
    java.util.Set<spoon.reflect.declaration.CtType<?>> getTypes();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CONTAINED_TYPE)
    <T extends spoon.reflect.declaration.CtPackage> T addType(spoon.reflect.declaration.CtType<?> type);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CONTAINED_TYPE)
    void removeType(spoon.reflect.declaration.CtType<?> type);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.SUB_PACKAGE)
    <T extends spoon.reflect.declaration.CtPackage> T setPackages(java.util.Set<spoon.reflect.declaration.CtPackage> pack);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.SUB_PACKAGE)
    <T extends spoon.reflect.declaration.CtPackage> T addPackage(spoon.reflect.declaration.CtPackage pack);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.SUB_PACKAGE)
    boolean removePackage(spoon.reflect.declaration.CtPackage pack);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.CONTAINED_TYPE)
    <T extends spoon.reflect.declaration.CtPackage> T setTypes(java.util.Set<spoon.reflect.declaration.CtType<?>> types);

    @java.lang.Override
    spoon.reflect.declaration.CtPackage clone();

    boolean isUnnamedPackage();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.009 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtPackageExport extends spoon.reflect.declaration.CtModuleDirective {
    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.OPENED_PACKAGE)
    <T extends spoon.reflect.declaration.CtPackageExport> T setOpenedPackage(boolean openedPackage);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.OPENED_PACKAGE)
    boolean isOpenedPackage();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.PACKAGE_REF)
    spoon.reflect.reference.CtPackageReference getPackageReference();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.PACKAGE_REF)
    <T extends spoon.reflect.declaration.CtPackageExport> T setPackageReference(spoon.reflect.reference.CtPackageReference packageReference);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.MODULE_REF)
    java.util.List<spoon.reflect.reference.CtModuleReference> getTargetExport();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.MODULE_REF)
    <T extends spoon.reflect.declaration.CtPackageExport> T setTargetExport(java.util.List<spoon.reflect.reference.CtModuleReference> targetExport);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.MODULE_REF)
    <T extends spoon.reflect.declaration.CtPackageExport> T addTargetExport(spoon.reflect.reference.CtModuleReference targetExport);

    @java.lang.Override
    spoon.reflect.declaration.CtPackageExport clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.011 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtParameter<T> extends spoon.reflect.declaration.CtShadowable , spoon.reflect.declaration.CtVariable<T> {
    @java.lang.Override
    @spoon.support.DerivedProperty
    spoon.reflect.declaration.CtExecutable<?> getParent();

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.IS_VARARGS)
    boolean isVarArgs();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.IS_VARARGS)
    <C extends spoon.reflect.declaration.CtParameter<T>> C setVarArgs(boolean varArgs);

    @java.lang.Override
    @spoon.support.DerivedProperty
    spoon.reflect.reference.CtParameterReference<T> getReference();

    @java.lang.Override
    spoon.reflect.declaration.CtParameter<T> clone();

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtVariable<T>> C setDefaultExpression(spoon.reflect.code.CtExpression<T> assignedExpression);
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.01 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtProvidedService extends spoon.reflect.declaration.CtModuleDirective {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.SERVICE_TYPE)
    spoon.reflect.reference.CtTypeReference getServiceType();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.SERVICE_TYPE)
    <T extends spoon.reflect.declaration.CtProvidedService> T setServiceType(spoon.reflect.reference.CtTypeReference providingType);

    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.IMPLEMENTATION_TYPE)
    java.util.List<spoon.reflect.reference.CtTypeReference> getImplementationTypes();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.IMPLEMENTATION_TYPE)
    <T extends spoon.reflect.declaration.CtProvidedService> T setImplementationTypes(java.util.List<spoon.reflect.reference.CtTypeReference> usedTypes);

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.IMPLEMENTATION_TYPE)
    <T extends spoon.reflect.declaration.CtProvidedService> T addImplementationType(spoon.reflect.reference.CtTypeReference usedType);

    @java.lang.Override
    spoon.reflect.declaration.CtProvidedService clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.01 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtTypeParameter extends spoon.reflect.declaration.CtType<java.lang.Object> {
    @java.lang.Override
    @spoon.support.DerivedProperty
    spoon.reflect.reference.CtTypeParameterReference getReference();

    @spoon.support.DerivedProperty
    spoon.reflect.declaration.CtFormalTypeDeclarer getTypeParameterDeclarer();

    @java.lang.Override
    spoon.reflect.declaration.CtTypeParameter clone();

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <T extends spoon.reflect.declaration.CtFormalTypeDeclarer> T setFormalCtTypeParameters(java.util.List<spoon.reflect.declaration.CtTypeParameter> formalTypeParameters);

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtType<java.lang.Object>> C setSuperInterfaces(java.util.Set<spoon.reflect.reference.CtTypeReference<?>> interfaces);

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtType<java.lang.Object>> C setTypeMembers(java.util.List<spoon.reflect.declaration.CtTypeMember> members);

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtType<java.lang.Object>> C setFields(java.util.List<spoon.reflect.declaration.CtField<?>> fields);

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtType<java.lang.Object>> C setMethods(java.util.Set<spoon.reflect.declaration.CtMethod<?>> methods);

    @java.lang.Override
    @spoon.support.UnsettableProperty
    <C extends spoon.reflect.declaration.CtType<java.lang.Object>> C setNestedTypes(java.util.Set<spoon.reflect.declaration.CtType<?>> nestedTypes);
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.011 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[ERROR] testContract[public interface CtUsedService extends spoon.reflect.declaration.CtModuleDirective {
    @spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.SERVICE_TYPE)
    spoon.reflect.reference.CtTypeReference getServiceType();

    @spoon.reflect.annotations.PropertySetter(role = spoon.reflect.path.CtRole.SERVICE_TYPE)
    <T extends spoon.reflect.declaration.CtUsedService> T setServiceType(spoon.reflect.reference.CtTypeReference providingType);

    @java.lang.Override
    spoon.reflect.declaration.CtUsedService clone();
}](spoon.test.parent.ParentContractTest)  Time elapsed: 0.01 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.Factory
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.parent.ParentContractTest.testContract(ParentContractTest.java:101)

[INFO] Running spoon.test.parent.ParentTest
[WARNING] Tests run: 11, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.595 s - in spoon.test.parent.ParentTest
[INFO] Running spoon.test.parent.TopLevelTypeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 s - in spoon.test.parent.TopLevelTypeTest
[INFO] Running spoon.test.parent.SetParentTest
[INFO] Tests run: 67, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.058 s - in spoon.test.parent.SetParentTest
[INFO] Running spoon.test.replace.ReplaceTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.005 s - in spoon.test.replace.ReplaceTest
[INFO] Running spoon.test.replace.ReplaceParametrizedTest
[INFO] Tests run: 80, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.592 s - in spoon.test.replace.ReplaceParametrizedTest
[INFO] Running spoon.test.control.ControlTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.074 s - in spoon.test.control.ControlTest
[INFO] Running spoon.test.initializers.InitializerTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.078 s - in spoon.test.initializers.InitializerTest
[INFO] Running spoon.test.query_function.testclasses.VariableReferencesModelTest
[INFO] Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in spoon.test.query_function.testclasses.VariableReferencesModelTest
[INFO] Running spoon.test.query_function.VariableReferencesTest
2018-05-18 00:24:46,852 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:46,853 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:46,853 INFO spoon.Launcher - start processing...
2018-05-18 00:24:46,898 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:46,898 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:46,926 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:46,926 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:46,926 INFO spoon.Launcher - start processing...
2018-05-18 00:24:46,967 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:46,967 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:47,008 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:47,008 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:47,008 INFO spoon.Launcher - start processing...
2018-05-18 00:24:47,053 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:47,053 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:47,056 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:47,056 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:47,056 INFO spoon.Launcher - start processing...
2018-05-18 00:24:47,102 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:47,102 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:47,148 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:47,148 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:47,148 INFO spoon.Launcher - start processing...
2018-05-18 00:24:47,189 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:47,189 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:47,196 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:47,196 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:47,196 INFO spoon.Launcher - start processing...
2018-05-18 00:24:47,237 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:47,237 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:47,244 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:47,244 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:47,244 INFO spoon.Launcher - start processing...
2018-05-18 00:24:47,292 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:47,292 INFO spoon.Launcher - no errors, no warnings
2018-05-18 00:24:47,333 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-05-18 00:24:47,333 INFO spoon.Launcher - running Spoon...
2018-05-18 00:24:47,333 INFO spoon.Launcher - start processing...
2018-05-18 00:24:47,382 INFO spoon.Launcher - end of processing: 
2018-05-18 00:24:47,382 INFO spoon.Launcher - no errors, no warnings
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.608 s - in spoon.test.query_function.VariableReferencesTest
[INFO] Running spoon.test.targeted.TargetedExpressionTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.658 s - in spoon.test.targeted.TargetedExpressionTest
[INFO] Running spoon.test.secondaryclasses.ClassesTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.241 s - in spoon.test.secondaryclasses.ClassesTest
[INFO] Running spoon.test.casts.CastTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.173 s - in spoon.test.casts.CastTest
[INFO] Running spoon.test.strings.StringTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 s - in spoon.test.strings.StringTest
[INFO] Running spoon.test.strings.StringLiteralTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 s - in spoon.test.strings.StringLiteralTest
[INFO] Running spoon.test.model.AnonymousExecutableTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 s - in spoon.test.model.AnonymousExecutableTest
[INFO] Running spoon.test.model.BlockTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.07 s - in spoon.test.model.BlockTest
[INFO] Running spoon.test.model.TypeTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.294 s - in spoon.test.model.TypeTest
[INFO] Running spoon.test.model.SwitchCaseTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 s - in spoon.test.model.SwitchCaseTest
[INFO] Running spoon.test.method_overriding.MethodOverriddingTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.082 s - in spoon.test.method_overriding.MethodOverriddingTest
[INFO] Running spoon.test.factory.ExecutableFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.factory.ExecutableFactoryTest
[INFO] Running spoon.test.factory.TypeFactoryTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.111 s - in spoon.test.factory.TypeFactoryTest
[INFO] Running spoon.test.factory.FieldFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.105 s - in spoon.test.factory.FieldFactoryTest
[INFO] Running spoon.test.factory.ClassFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in spoon.test.factory.ClassFactoryTest
[INFO] Running spoon.test.factory.CodeFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.factory.CodeFactoryTest
[INFO] Running spoon.test.factory.AnnotationFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 s - in spoon.test.factory.AnnotationFactoryTest
[INFO] Running spoon.test.factory.ConstructorFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 s - in spoon.test.factory.ConstructorFactoryTest
[INFO] Running spoon.test.factory.FactoryTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.498 s - in spoon.test.factory.FactoryTest
[INFO] Running spoon.test.fieldaccesses.FieldAccessTest
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.64 s - in spoon.test.fieldaccesses.FieldAccessTest
[INFO] Running spoon.test.constructor.ConstructorTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.391 s - in spoon.test.constructor.ConstructorTest
[INFO] Running spoon.test.lambda.LambdaTest
2018-05-18 00:24:55,067 ERROR spoon.support.compiler.jdt.JDTTreeBuilder - Could not find declaration for variable Strings at (/root/workspace/INRIA/spoon/380444930/src/test/resources/noclasspath/lambdas/TypeAccessInLambda.java:6)
[INFO] Tests run: 22, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.413 s - in spoon.test.lambda.LambdaTest
[INFO] Running spoon.test.enums.EnumsTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.135 s - in spoon.test.enums.EnumsTest
[INFO] Running spoon.test.enums.EnumsTypeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 s - in spoon.test.enums.EnumsTypeTest
[INFO] Running spoon.test.position.PositionTest
[INFO] Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.671 s - in spoon.test.position.PositionTest
[INFO] Running spoon.test.interfaces.TestInterfaceWithoutSetup
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.095 s - in spoon.test.interfaces.TestInterfaceWithoutSetup
[INFO] Running spoon.test.interfaces.InterfaceTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.214 s - in spoon.test.interfaces.InterfaceTest
[INFO] Running spoon.test.parameters.ParameterTest
2018-05-18 00:24:56,688 ERROR spoon.support.compiler.jdt.JDTTreeBuilder - Could not find declaration for variable typeRatingFilters at (/root/workspace/INRIA/spoon/380444930/src/test/resources/noclasspath/Tacos.java:4)
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.125 s - in spoon.test.parameters.ParameterTest
[INFO] Running spoon.test.methodreference.MethodReferenceTest
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.22 s - in spoon.test.methodreference.MethodReferenceTest
[INFO] Running spoon.test.constructorcallnewclass.NewClassTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.436 s - in spoon.test.constructorcallnewclass.NewClassTest
[INFO] Running spoon.test.constructorcallnewclass.ConstructorCallTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.253 s - in spoon.test.constructorcallnewclass.ConstructorCallTest
[INFO] Running spoon.test.arrays.ArraysTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.205 s - in spoon.test.arrays.ArraysTest
[INFO] Running spoon.test.OutputTypeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.OutputTypeTest
[INFO] Running spoon.test.ctCase.SwitchCaseTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 s - in spoon.test.ctCase.SwitchCaseTest
[INFO] Running spoon.test.change.ChangeCollectorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 s - in spoon.test.change.ChangeCollectorTest
[INFO] Running spoon.test.role.TestCtRole
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in spoon.test.role.TestCtRole
[INFO] Running spoon.test.path.PathTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.339 s - in spoon.test.path.PathTest
[INFO] Running spoon.test.delete.DeleteTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.549 s - in spoon.test.delete.DeleteTest
[INFO] Running spoon.test.compilation.CompilationTest
>> Hello: Bar <<
>> Hello: FooEx <<
>> Hello: IBar <<
>> Hello: SimpleProcessor <<
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.481 s - in spoon.test.compilation.CompilationTest
[INFO] Running spoon.test.limits.utils.InternalTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 s - in spoon.test.limits.utils.InternalTest
[INFO] Running spoon.test.staticFieldAccess.StaticAccessTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.118 s - in spoon.test.staticFieldAccess.StaticAccessTest
[INFO] Running spoon.test.snippets.SnippetTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.31 s - in spoon.test.snippets.SnippetTest
[INFO] Running spoon.test.condition.ConditionalTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.146 s - in spoon.test.condition.ConditionalTest
[INFO] Running spoon.test.type.TypeTest
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.614 s - in spoon.test.type.TypeTest
[INFO] Running spoon.test.ctBlock.TestCtBlock
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.12 s - in spoon.test.ctBlock.TestCtBlock
[INFO] Running spoon.test.varargs.VarArgsTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 s - in spoon.test.varargs.VarArgsTest
[INFO] Running spoon.test.invocations.InvocationTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.135 s - in spoon.test.invocations.InvocationTest
[INFO] Running spoon.test.method.MethodTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.157 s - in spoon.test.method.MethodTest
[INFO] Running spoon.test.sourcePosition.SourcePositionTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.104 s - in spoon.test.sourcePosition.SourcePositionTest
[INFO] Running spoon.test.support.ResourceTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.195 s - in spoon.test.support.ResourceTest
[INFO] Running spoon.test.eval.EvalTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.52 s - in spoon.test.eval.EvalTest
[INFO] Running spoon.test.signature.SignatureTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.55 s - in spoon.test.signature.SignatureTest
[INFO] Running spoon.test.literal.LiteralTest
2018-05-18 00:25:07,518 ERROR spoon.support.compiler.jdt.JDTTreeBuilder - Could not find declaration for variable Longs at (/root/workspace/INRIA/spoon/380444930/src/test/resources/noclasspath/SecondaryIndexManager.java:611)
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.474 s - in spoon.test.literal.LiteralTest
[INFO] Running spoon.test.ctElement.ElementTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.ctElement.ElementTest
[INFO] Running spoon.test.ctElement.MetadataTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 s - in spoon.test.ctElement.MetadataTest
[INFO] Running spoon.test.ctType.CtTypeParameterTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.085 s - in spoon.test.ctType.CtTypeParameterTest
[INFO] Running spoon.test.ctType.CtTypeTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.364 s - in spoon.test.ctType.CtTypeTest
[INFO] Running spoon.test.ctBodyHolder.CtBodyHolderTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.325 s - in spoon.test.ctBodyHolder.CtBodyHolderTest
[INFO] Running spoon.test.reflect.meta.MetaModelTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.592 s - in spoon.test.reflect.meta.MetaModelTest
[INFO] Running spoon.test.reflect.visitor.ReferenceQueryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.04 s - in spoon.test.reflect.visitor.ReferenceQueryTest
[INFO] Running spoon.test.logging.LogTest
2018-05-18 00:25:11,318 DEBUG spoon.Launcher - destination: /root/workspace/INRIA/spoon/380444930/spooned-classes
2018-05-18 00:25:11,318 DEBUG spoon.Launcher - source classpath: null
2018-05-18 00:25:11,318 DEBUG spoon.Launcher - template classpath: []
2018-05-18 00:25:11,319 INFO spoon.Launcher - Log info
2018-05-18 00:25:11,319 WARN spoon.Launcher - Log warn
2018-05-18 00:25:11,319 ERROR spoon.Launcher - Log error
2018-05-18 00:25:11,319 DEBUG spoon.Launcher - Log debug
2018-05-18 00:25:11,320 DEBUG spoon.Launcher - destination: /root/workspace/INRIA/spoon/380444930/spooned-classes
2018-05-18 00:25:11,320 DEBUG spoon.Launcher - source classpath: null
2018-05-18 00:25:11,320 DEBUG spoon.Launcher - template classpath: []
2018-05-18 00:25:11,320 INFO spoon.Launcher - Log info
2018-05-18 00:25:11,320 WARN spoon.Launcher - Log warn
2018-05-18 00:25:11,320 ERROR spoon.Launcher - Log error
2018-05-18 00:25:11,320 DEBUG spoon.Launcher - Log debug
2018-05-18 00:25:11,321 INFO spoon.Launcher - Log info
2018-05-18 00:25:11,321 WARN spoon.Launcher - Log warn
2018-05-18 00:25:11,321 ERROR spoon.Launcher - Log error
2018-05-18 00:25:11,322 WARN spoon.Launcher - Log warn
2018-05-18 00:25:11,322 ERROR spoon.Launcher - Log error
2018-05-18 00:25:11,322 ERROR spoon.Launcher - Log error
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in spoon.test.logging.LogTest
[INFO] Running spoon.test.labels.TestLabels
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 s - in spoon.test.labels.TestLabels
[INFO] Running spoon.test.main.MainTest
[ERROR] Tests run: 13, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 162.258 s <<< FAILURE! - in spoon.test.main.MainTest
[ERROR] testTest(spoon.test.main.MainTest)  Time elapsed: 20.348 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: spoon.reflect.factory.CodeFactory
	at spoon.test.main.MainTest.checkBoundAndUnboundTypeReference(MainTest.java:157)
	at spoon.test.main.MainTest.checkGenericContracts(MainTest.java:144)
	at spoon.test.main.MainTest.testTest(MainTest.java:537)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.main.MainTest.checkBoundAndUnboundTypeReference(MainTest.java:157)
	at spoon.test.main.MainTest.checkGenericContracts(MainTest.java:144)
	at spoon.test.main.MainTest.testTest(MainTest.java:537)

[ERROR] testMain_checkGenericContracts(spoon.test.main.MainTest)  Time elapsed: 9.855 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: java.util.Arrays
	at spoon.test.main.MainTest.checkBoundAndUnboundTypeReference(MainTest.java:157)
	at spoon.test.main.MainTest.checkGenericContracts(MainTest.java:144)
	at spoon.test.main.MainTest.testMain_checkGenericContracts(MainTest.java:104)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.main.MainTest.checkBoundAndUnboundTypeReference(MainTest.java:157)
	at spoon.test.main.MainTest.checkGenericContracts(MainTest.java:144)
	at spoon.test.main.MainTest.testMain_checkGenericContracts(MainTest.java:104)

[ERROR] testMain_checkShadow(spoon.test.main.MainTest)  Time elapsed: 0.084 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: java.util.Arrays
	at spoon.test.main.MainTest.checkShadow(MainTest.java:266)
	at spoon.test.main.MainTest.testMain_checkShadow(MainTest.java:109)
Caused by: spoon.SpoonException: Unexpected java reflection type: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl
	at spoon.test.main.MainTest.checkShadow(MainTest.java:266)
	at spoon.test.main.MainTest.testMain_checkShadow(MainTest.java:109)

[INFO] Running spoon.test.properties.PropertiesTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 s - in spoon.test.properties.PropertiesTest
[INFO] Running spoon.test.architecture.SpoonArchitectureEnforcerTest
[ERROR] Tests run: 8, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 25.15 s <<< FAILURE! - in spoon.test.architecture.SpoonArchitectureEnforcerTest
[ERROR] testSrcMainJava(spoon.test.architecture.SpoonArchitectureEnforcerTest)  Time elapsed: 7.508 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: java.util.TreeMap
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.testSrcMainJava(SpoonArchitectureEnforcerTest.java:137)
Caused by: java.lang.UnsupportedOperationException: Only type with class or ParameterizedType are supported.
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.testSrcMainJava(SpoonArchitectureEnforcerTest.java:137)

[INFO] Running spoon.test.comparison.EqualTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.215 s - in spoon.test.comparison.EqualTest
[INFO] Running spoon.test.serializable.SourcePositionTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.073 s - in spoon.test.serializable.SourcePositionTest
[INFO] Running spoon.test.serializable.SerializableTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.129 s - in spoon.test.serializable.SerializableTest
[INFO] Running spoon.test.jar.JarTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.104 s - in spoon.test.jar.JarTest
[INFO] Running spoon.testing.CtPackageAssertTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.096 s - in spoon.testing.CtPackageAssertTest
[INFO] Running spoon.testing.FileAssertTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.127 s - in spoon.testing.FileAssertTest
[INFO] Running spoon.testing.AbstractAssertTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.256 s - in spoon.testing.AbstractAssertTest
[INFO] Running spoon.testing.CtElementAssertTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.18 s - in spoon.testing.CtElementAssertTest
[INFO] Running spoon.processing.CtGenerationTest
[ERROR] Tests run: 4, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 36.421 s <<< FAILURE! - in spoon.processing.CtGenerationTest
[ERROR] testGenerateRoleHandler(spoon.processing.CtGenerationTest)  Time elapsed: 1.002 s  <<< ERROR!
spoon.support.SpoonClassNotFoundException: cannot create shadow class: java.util.Collections
	at spoon.processing.CtGenerationTest.testGenerateRoleHandler(CtGenerationTest.java:176)
Caused by: java.lang.UnsupportedOperationException: Only type with class or ParameterizedType are supported.
	at spoon.processing.CtGenerationTest.testGenerateRoleHandler(CtGenerationTest.java:176)

[INFO] Running spoon.processing.ProcessingTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.058 s - in spoon.processing.ProcessingTest
[INFO] Running spoon.reflect.visitor.CtIteratorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.149 s - in spoon.reflect.visitor.CtIteratorTest
[INFO] Running spoon.reflect.visitor.CtInheritanceScannerTest
[INFO] Tests run: 81, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.369 s - in spoon.reflect.visitor.CtInheritanceScannerTest
[INFO] Running spoon.reflect.visitor.CtScannerTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.618 s - in spoon.reflect.visitor.CtScannerTest
[INFO] Running spoon.reflect.visitor.CtVisitorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.849 s - in spoon.reflect.visitor.CtVisitorTest
[INFO] Running spoon.reflect.visitor.CtInheritanceScannerMethodsTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.862 s - in spoon.reflect.visitor.CtInheritanceScannerMethodsTest
[INFO] Running spoon.reflect.ast.CloneTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.419 s - in spoon.reflect.ast.CloneTest
[INFO] Running spoon.reflect.ast.AstCheckerTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.235 s - in spoon.reflect.ast.AstCheckerTest
[INFO] Running spoon.reflect.declaration.UnknownDeclarationTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 s - in spoon.reflect.declaration.UnknownDeclarationTest
[INFO] Running spoon.reflect.declaration.CtTypeInformationTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.445 s - in spoon.reflect.declaration.CtTypeInformationTest
[INFO] Running spoon.support.visitor.java.JavaReflectionTreeBuilderTest
[ERROR] Tests run: 17, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 2.354 s <<< FAILURE! - in spoon.support.visitor.java.JavaReflectionTreeBuilderTest
[ERROR] testScannerClass(spoon.support.visitor.java.JavaReflectionTreeBuilderTest)  Time elapsed: 0.055 s  <<< FAILURE!
java.lang.AssertionError
	at spoon.support.visitor.java.JavaReflectionTreeBuilderTest.testScannerClass(JavaReflectionTreeBuilderTest.java:75)

[ERROR] testShadowModelEqualsNormalModel(spoon.support.visitor.java.JavaReflectionTreeBuilderTest)  Time elapsed: 2.225 s  <<< FAILURE!
java.lang.AssertionError: Unexpected shadow typeMember: $jacocoData
	at spoon.support.visitor.java.JavaReflectionTreeBuilderTest.checkShadowTypeIsEqual(JavaReflectionTreeBuilderTest.java:208)
	at spoon.support.visitor.java.JavaReflectionTreeBuilderTest.testShadowModelEqualsNormalModel(JavaReflectionTreeBuilderTest.java:182)

[INFO] Running spoon.support.compiler.jdt.JDTBasedSpoonCompilerTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.275 s - in spoon.support.compiler.jdt.JDTBasedSpoonCompilerTest
[INFO] Running spoon.support.compiler.jdt.JDTBatchCompilerTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.075 s - in spoon.support.compiler.jdt.JDTBatchCompilerTest
[INFO] Running spoon.support.compiler.jdt.JDTBuilderTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.support.compiler.jdt.JDTBuilderTest
[INFO] Running spoon.support.compiler.jdt.ExtendedStringLiteralTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 s - in spoon.support.compiler.jdt.ExtendedStringLiteralTest
[INFO] Running spoon.support.compiler.classpath.ComputeClasspathTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.support.compiler.classpath.ComputeClasspathTest
[INFO] Running spoon.LauncherTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.175 s - in spoon.LauncherTest
[INFO] Running spoon.MavenLauncherTest
[ERROR] Tests run: 6, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 0.124 s <<< FAILURE! - in spoon.MavenLauncherTest
[ERROR] mavenLauncherTestMultiModulesAndVariables(spoon.MavenLauncherTest)  Time elapsed: 0.065 s  <<< FAILURE!
java.lang.AssertionError: Content of classpath: 
	at spoon.MavenLauncherTest.mavenLauncherTestMultiModulesAndVariables(MavenLauncherTest.java:70)

[ERROR] spoonMavenLauncherTest(spoon.MavenLauncherTest)  Time elapsed: 0.048 s  <<< FAILURE!
java.lang.AssertionError: expected:<7> but was:<0>
	at spoon.MavenLauncherTest.spoonMavenLauncherTest(MavenLauncherTest.java:19)

[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   MavenLauncherTest.mavenLauncherTestMultiModulesAndVariables:70 Content of classpath: 
[ERROR]   MavenLauncherTest.spoonMavenLauncherTest:19 expected:<7> but was:<0>
[ERROR]   JavaReflectionTreeBuilderTest.testScannerClass:75
[ERROR]   JavaReflectionTreeBuilderTest.testShadowModelEqualsNormalModel:182->checkShadowTypeIsEqual:208 Unexpected shadow typeMember: $jacocoData
[ERROR] Errors: 
[ERROR]   CtGenerationTest.testGenerateRoleHandler:176 » SpoonClassNotFound cannot creat...
[ERROR]   SpoonArchitectureEnforcerTest.testSrcMainJava:137 » SpoonClassNotFound cannot ...
[ERROR]   ImportTest.testAccessToNestedClass:446 » SpoonClassNotFound cannot create shad...
[ERROR]   ImportTest.testAccessType:462 » SpoonClassNotFound cannot create shadow class:...
[ERROR]   ImportTest.testCanAccess:548 » SpoonClassNotFound cannot create shadow class: ...
[ERROR]   ImportTest.testSpoonWithImports:259 » SpoonClassNotFound cannot create shadow ...
[ERROR]   MainTest.testMain_checkGenericContracts:104->checkGenericContracts:144->checkBoundAndUnboundTypeReference:157 » SpoonClassNotFound
[ERROR]   MainTest.testMain_checkShadow:109->checkShadow:266 » SpoonClassNotFound cannot...
[ERROR]   MainTest.testTest:537->checkGenericContracts:144->checkBoundAndUnboundTypeReference:157 » SpoonClassNotFound
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   ParentContractTest.testContract:101 » SpoonClassNotFound cannot create shadow ...
[ERROR]   TemplateTest.testTemplateInterfaces:592 » Spoon Getting of template parameters...
[INFO] 
[ERROR] Tests run: 1420, Failures: 4, Errors: 77, Skipped: 4
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 06:17 min
[INFO] Finished at: 2018-05-18T00:29:24+02:00
[INFO] Final Memory: 26M/950M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.20.1:test (default-test) on project spoon-core: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/INRIA/spoon/380444930/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
