[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for fr.inria.gforge.spoon:spoon-core:jar:7.1.0-SNAPSHOT
[WARNING] 'build.plugins.plugin.version' for org.pitest:pitest-maven is missing. @ line 521, column 15
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] Inspecting build with total of 1 modules...
[INFO] Installing Nexus Staging features:
[INFO]   ... total of 1 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Spoon Core 7.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @ spoon-core ---
[INFO] Skipping Rule Enforcement.
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.1:prepare-agent (default) @ spoon-core ---
[INFO] argLine set to -javaagent:/root/./workspace/INRIA/spoon/401928806/.m2/org/jacoco/org.jacoco.agent/0.8.1/org.jacoco.agent-0.8.1-runtime.jar=destfile=/root/workspace/INRIA/spoon/401928806/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ spoon-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 3 resources
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ spoon-core ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ spoon-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 178 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ spoon-core ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ spoon-core ---
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.pom (4 KB at 3.5 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.21.0/surefire-providers-2.21.0.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.21.0/surefire-providers-2.21.0.pom (3 KB at 59.9 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.jar
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.jar (83 KB at 533.3 KB/sec)
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running spoon.support.compiler.jdt.ExtendedStringLiteralTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.913 s - in spoon.support.compiler.jdt.ExtendedStringLiteralTest
[INFO] Running spoon.support.compiler.jdt.JDTBuilderTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.support.compiler.jdt.JDTBuilderTest
[INFO] Running spoon.support.compiler.jdt.JDTBatchCompilerTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.653 s - in spoon.support.compiler.jdt.JDTBatchCompilerTest
[INFO] Running spoon.support.compiler.jdt.JDTBasedSpoonCompilerTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 17.253 s - in spoon.support.compiler.jdt.JDTBasedSpoonCompilerTest
[INFO] Running spoon.support.compiler.classpath.ComputeClasspathTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in spoon.support.compiler.classpath.ComputeClasspathTest
[INFO] Running spoon.support.visitor.java.JavaReflectionTreeBuilderTest
[INFO] Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 18.269 s - in spoon.support.visitor.java.JavaReflectionTreeBuilderTest
[INFO] Running spoon.testing.CtPackageAssertTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.555 s - in spoon.testing.CtPackageAssertTest
[INFO] Running spoon.testing.CtElementAssertTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.134 s - in spoon.testing.CtElementAssertTest
[INFO] Running spoon.testing.FileAssertTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.362 s - in spoon.testing.FileAssertTest
[INFO] Running spoon.testing.AbstractAssertTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.776 s - in spoon.testing.AbstractAssertTest
[INFO] Running spoon.processing.CtGenerationTest
2018-07-09 22:22:28,662 INFO spoon.Launcher - spoon.support.JavaOutputProcessor
2018-07-09 22:22:33,322 INFO spoon.Launcher - end of processing: 
2018-07-09 22:22:33,323 INFO spoon.Launcher - no errors, no warnings
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 99.077 s - in spoon.processing.CtGenerationTest
[INFO] Running spoon.processing.ProcessingTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.3 s - in spoon.processing.ProcessingTest
[INFO] Running spoon.MavenLauncherTest
2018-07-09 22:23:38,784 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,789 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-cas/3.0.0-SNAPSHOT
2018-07-09 22:23:38,789 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-saml/3.0.0-SNAPSHOT
2018-07-09 22:23:38,790 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-oauth/3.0.0-SNAPSHOT
2018-07-09 22:23:38,790 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-oidc/3.0.0-SNAPSHOT
2018-07-09 22:23:38,790 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-ldap/3.0.0-SNAPSHOT
2018-07-09 22:23:38,791 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-http/3.0.0-SNAPSHOT
2018-07-09 22:23:38,792 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/zaxxer/HikariCP/2.6.1
2018-07-09 22:23:38,797 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-sql/3.0.0-SNAPSHOT
2018-07-09 22:23:38,798 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/security/spring-security-crypto/4.2.2.RELEASE
2018-07-09 22:23:38,798 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/shiro/shiro-core/1.3.2
2018-07-09 22:23:38,799 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,799 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:38,800 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:38,805 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-ldap/3.0.0-SNAPSHOT
2018-07-09 22:23:38,805 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/unboundid/unboundid-ldapsdk/3.2.1
2018-07-09 22:23:38,805 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-sql/3.0.0-SNAPSHOT
2018-07-09 22:23:38,806 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,806 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-config/3.0.0-SNAPSHOT
2018-07-09 22:23:38,807 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-oauth/3.0.0-SNAPSHOT
2018-07-09 22:23:38,807 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-cas/3.0.0-SNAPSHOT
2018-07-09 22:23:38,808 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-openid/3.0.0-SNAPSHOT
2018-07-09 22:23:38,813 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-http/3.0.0-SNAPSHOT
2018-07-09 22:23:38,813 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-saml/3.0.0-SNAPSHOT
2018-07-09 22:23:38,814 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-gae/3.0.0-SNAPSHOT
2018-07-09 22:23:38,814 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-oidc/3.0.0-SNAPSHOT
2018-07-09 22:23:38,814 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-jwt/3.0.0-SNAPSHOT
2018-07-09 22:23:38,815 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-ldap/3.0.0-SNAPSHOT
2018-07-09 22:23:38,821 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-sql/3.0.0-SNAPSHOT
2018-07-09 22:23:38,838 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-mongo/3.0.0-SNAPSHOT
2018-07-09 22:23:38,838 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-couch/3.0.0-SNAPSHOT
2018-07-09 22:23:38,838 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-kerberos/3.0.0-SNAPSHOT
2018-07-09 22:23:38,839 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/slf4j/slf4j-api/1.7.25
2018-07-09 22:23:38,841 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:38,842 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/guava/guava/21.0
2018-07-09 22:23:38,842 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/security/spring-security-crypto/4.2.2.RELEASE
2018-07-09 22:23:38,843 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/shiro/shiro-core/1.3.2
2018-07-09 22:23:38,843 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:38,844 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/spring-test/4.3.7.RELEASE
2018-07-09 22:23:38,844 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25
2018-07-09 22:23:38,844 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:38,845 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/mockito/mockito-core/2.7.19
2018-07-09 22:23:38,851 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,851 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-cas/3.0.0-SNAPSHOT
2018-07-09 22:23:38,852 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-saml/3.0.0-SNAPSHOT
2018-07-09 22:23:38,857 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-oauth/3.0.0-SNAPSHOT
2018-07-09 22:23:38,857 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-oidc/3.0.0-SNAPSHOT
2018-07-09 22:23:38,857 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-ldap/3.0.0-SNAPSHOT
2018-07-09 22:23:38,863 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-http/3.0.0-SNAPSHOT
2018-07-09 22:23:38,863 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/zaxxer/HikariCP/2.6.1
2018-07-09 22:23:38,863 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-sql/3.0.0-SNAPSHOT
2018-07-09 22:23:38,869 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/security/spring-security-crypto/4.2.2.RELEASE
2018-07-09 22:23:38,869 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/shiro/shiro-core/1.3.2
2018-07-09 22:23:38,869 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,870 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:38,870 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:38,877 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-ldap/3.0.0-SNAPSHOT
2018-07-09 22:23:38,877 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/unboundid/unboundid-ldapsdk/3.2.1
2018-07-09 22:23:38,878 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-sql/3.0.0-SNAPSHOT
2018-07-09 22:23:38,878 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,878 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/commons-codec/commons-codec/1.10
2018-07-09 22:23:38,880 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/github/scribejava/scribejava-apis/3.3.0
2018-07-09 22:23:38,881 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.8.7
2018-07-09 22:23:38,885 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:38,885 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,885 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:38,886 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:38,886 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,886 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/jasig/cas/client/cas-client-core/3.4.1
2018-07-09 22:23:38,887 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/jasig/cas/client/cas-client-support-saml/3.4.1
2018-07-09 22:23:38,893 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:38,893 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/guava/guava/21.0
2018-07-09 22:23:38,895 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,896 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:38,897 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:38,897 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,901 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/openid4java/openid4java/1.0.0
2018-07-09 22:23:38,901 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25
2018-07-09 22:23:38,901 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/xml-apis/xml-apis/2.0.2
2018-07-09 22:23:38,902 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:38,902 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,908 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:38,909 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:38,909 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,910 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/commons-codec/commons-codec/1.10
2018-07-09 22:23:38,910 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.8.7
2018-07-09 22:23:38,911 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,911 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:38,911 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:38,917 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/mockito/mockito-core/2.7.19
2018-07-09 22:23:38,917 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/guava/guava/21.0
2018-07-09 22:23:38,917 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/nanohttpd/nanohttpd/2.3.1
2018-07-09 22:23:38,918 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,918 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-core/3.3.0
2018-07-09 22:23:38,918 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/net/shibboleth/utilities/java-support/7.3.0
2018-07-09 22:23:38,919 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-saml-api/3.3.0
2018-07-09 22:23:38,927 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-saml-impl/3.3.0
2018-07-09 22:23:38,927 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-soap-api/3.3.0
2018-07-09 22:23:38,927 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-xmlsec-api/3.3.0
2018-07-09 22:23:38,928 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-security-api/3.3.0
2018-07-09 22:23:38,928 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-security-impl/3.3.0
2018-07-09 22:23:38,928 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-profile-api/3.3.0
2018-07-09 22:23:38,929 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-profile-impl/3.3.0
2018-07-09 22:23:38,933 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-messaging-api/3.3.0
2018-07-09 22:23:38,934 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-messaging-impl/3.3.0
2018-07-09 22:23:38,935 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-xmlsec-impl/3.3.0
2018-07-09 22:23:38,941 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/guava/guava/21.0
2018-07-09 22:23:38,941 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/cryptacular/cryptacular/1.1.0
2018-07-09 22:23:38,941 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/joda-time/joda-time/2.9.2
2018-07-09 22:23:38,942 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/xalan/xalan/2.7.2
2018-07-09 22:23:38,942 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/velocity/velocity/1.7
2018-07-09 22:23:38,942 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/commons-collections/commons-collections/3.2.2
2018-07-09 22:23:38,943 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25
2018-07-09 22:23:38,943 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:38,943 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/spring-core/4.3.7.RELEASE
2018-07-09 22:23:38,944 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,944 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:38,969 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:38,973 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/spring-test/4.3.7.RELEASE
2018-07-09 22:23:38,975 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/spring-web/4.3.7.RELEASE
2018-07-09 22:23:38,976 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/mockito/mockito-core/2.7.19
2018-07-09 22:23:38,976 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,977 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/appengine/appengine-api-1.0-sdk/1.9.50
2018-07-09 22:23:38,984 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/appengine/appengine-jsr107cache/1.9.50
2018-07-09 22:23:38,990 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/net/sf/jsr107cache/jsr107cache/1.1
2018-07-09 22:23:38,990 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:38,990 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,990 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:38,991 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:38,991 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/appengine/appengine-testing/1.9.50
2018-07-09 22:23:38,991 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/appengine/appengine-api-labs/1.9.50
2018-07-09 22:23:38,991 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/appengine/appengine-api-stubs/1.9.50
2018-07-09 22:23:38,991 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,992 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/nimbusds/oauth2-oidc-sdk/5.24.2
2018-07-09 22:23:38,992 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/nimbusds/nimbus-jose-jwt/4.35
2018-07-09 22:23:38,992 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:38,992 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,016 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,017 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,017 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/nimbusds/nimbus-jose-jwt/4.35
2018-07-09 22:23:39,018 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.56
2018-07-09 22:23:39,018 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,019 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,019 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,019 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-oauth/3.0.0-SNAPSHOT
2018-07-09 22:23:39,019 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,019 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/ldaptive/ldaptive/1.2.1
2018-07-09 22:23:39,020 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,020 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,021 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,021 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/unboundid/unboundid-ldapsdk/3.2.1
2018-07-09 22:23:39,022 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,023 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/jdbi/jdbi/2.78
2018-07-09 22:23:39,023 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,023 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,023 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/security/spring-security-crypto/4.2.2.RELEASE
2018-07-09 22:23:39,023 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/h2database/h2/1.4.194
2018-07-09 22:23:39,024 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,024 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/mongodb/mongo-java-driver/3.4.2
2018-07-09 22:23:39,024 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,026 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,026 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,029 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/shiro/shiro-core/1.3.2
2018-07-09 22:23:39,029 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/de/flapdoodle/embed/de.flapdoodle.embed.mongo/2.0.0
2018-07-09 22:23:39,037 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,037 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/ektorp/org.ektorp/1.4.4
2018-07-09 22:23:39,037 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.3.3
2018-07-09 22:23:39,037 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,049 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/io/bdrc/mcouch-ektorp/1.0.0
2018-07-09 22:23:39,049 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,049 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,049 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/shiro/shiro-core/1.3.2
2018-07-09 22:23:39,049 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,050 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/spring-core/4.3.7.RELEASE
2018-07-09 22:23:39,050 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,050 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,050 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,050 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/mockito/mockito-core/2.7.19
2018-07-09 22:23:39,050 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:39,051 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/kerby/kerby-kdc/1.0.0
2018-07-09 22:23:39,051 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/kerby/kerb-simplekdc/1.0.0
2018-07-09 22:23:39,051 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/kerby/kerb-client/1.0.0
2018-07-09 22:23:39,051 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/kerby/token-provider/1.0.0
2018-07-09 22:23:39,051 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/kerby/integration-test/1.0.0
2018-07-09 22:23:39,204 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,204 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-config/3.0.0-SNAPSHOT
2018-07-09 22:23:39,209 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-oauth/3.0.0-SNAPSHOT
2018-07-09 22:23:39,209 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-cas/3.0.0-SNAPSHOT
2018-07-09 22:23:39,209 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-openid/3.0.0-SNAPSHOT
2018-07-09 22:23:39,209 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-http/3.0.0-SNAPSHOT
2018-07-09 22:23:39,210 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-saml/3.0.0-SNAPSHOT
2018-07-09 22:23:39,210 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-gae/3.0.0-SNAPSHOT
2018-07-09 22:23:39,210 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-oidc/3.0.0-SNAPSHOT
2018-07-09 22:23:39,210 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-jwt/3.0.0-SNAPSHOT
2018-07-09 22:23:39,211 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-ldap/3.0.0-SNAPSHOT
2018-07-09 22:23:39,211 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-sql/3.0.0-SNAPSHOT
2018-07-09 22:23:39,211 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-mongo/3.0.0-SNAPSHOT
2018-07-09 22:23:39,211 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-couch/3.0.0-SNAPSHOT
2018-07-09 22:23:39,213 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-kerberos/3.0.0-SNAPSHOT
2018-07-09 22:23:39,245 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/slf4j/slf4j-api/1.7.25
2018-07-09 22:23:39,245 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:39,245 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/guava/guava/21.0
2018-07-09 22:23:39,245 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/security/spring-security-crypto/4.2.2.RELEASE
2018-07-09 22:23:39,246 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/shiro/shiro-core/1.3.2
2018-07-09 22:23:39,246 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,246 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/spring-test/4.3.7.RELEASE
2018-07-09 22:23:39,246 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25
2018-07-09 22:23:39,246 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,246 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/mockito/mockito-core/2.7.19
2018-07-09 22:23:39,246 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,247 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-cas/3.0.0-SNAPSHOT
2018-07-09 22:23:39,247 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-saml/3.0.0-SNAPSHOT
2018-07-09 22:23:39,247 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-oauth/3.0.0-SNAPSHOT
2018-07-09 22:23:39,247 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-oidc/3.0.0-SNAPSHOT
2018-07-09 22:23:39,247 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-ldap/3.0.0-SNAPSHOT
2018-07-09 22:23:39,247 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-http/3.0.0-SNAPSHOT
2018-07-09 22:23:39,248 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/zaxxer/HikariCP/2.6.1
2018-07-09 22:23:39,248 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-sql/3.0.0-SNAPSHOT
2018-07-09 22:23:39,248 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/security/spring-security-crypto/4.2.2.RELEASE
2018-07-09 22:23:39,248 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/shiro/shiro-core/1.3.2
2018-07-09 22:23:39,248 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,248 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,253 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,254 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-ldap/3.0.0-SNAPSHOT
2018-07-09 22:23:39,254 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/unboundid/unboundid-ldapsdk/3.2.1
2018-07-09 22:23:39,254 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-sql/3.0.0-SNAPSHOT
2018-07-09 22:23:39,254 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,254 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/commons-codec/commons-codec/1.10
2018-07-09 22:23:39,255 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/github/scribejava/scribejava-apis/3.3.0
2018-07-09 22:23:39,255 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.8.7
2018-07-09 22:23:39,255 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:39,255 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,255 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,255 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,256 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,256 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/jasig/cas/client/cas-client-core/3.4.1
2018-07-09 22:23:39,256 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/jasig/cas/client/cas-client-support-saml/3.4.1
2018-07-09 22:23:39,256 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:39,256 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/guava/guava/21.0
2018-07-09 22:23:39,265 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,265 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,265 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,265 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,265 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/openid4java/openid4java/1.0.0
2018-07-09 22:23:39,265 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25
2018-07-09 22:23:39,266 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/xml-apis/xml-apis/2.0.2
2018-07-09 22:23:39,266 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:39,266 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,266 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,269 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,269 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,270 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/commons-codec/commons-codec/1.10
2018-07-09 22:23:39,270 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.8.7
2018-07-09 22:23:39,276 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,276 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,276 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,276 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/mockito/mockito-core/2.7.19
2018-07-09 22:23:39,277 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/guava/guava/21.0
2018-07-09 22:23:39,277 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/nanohttpd/nanohttpd/2.3.1
2018-07-09 22:23:39,277 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,277 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-core/3.3.0
2018-07-09 22:23:39,278 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/net/shibboleth/utilities/java-support/7.3.0
2018-07-09 22:23:39,278 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-saml-api/3.3.0
2018-07-09 22:23:39,278 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-saml-impl/3.3.0
2018-07-09 22:23:39,289 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-soap-api/3.3.0
2018-07-09 22:23:39,289 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-xmlsec-api/3.3.0
2018-07-09 22:23:39,293 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-security-api/3.3.0
2018-07-09 22:23:39,293 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-security-impl/3.3.0
2018-07-09 22:23:39,294 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-profile-api/3.3.0
2018-07-09 22:23:39,294 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-profile-impl/3.3.0
2018-07-09 22:23:39,294 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-messaging-api/3.3.0
2018-07-09 22:23:39,294 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-messaging-impl/3.3.0
2018-07-09 22:23:39,294 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/opensaml/opensaml-xmlsec-impl/3.3.0
2018-07-09 22:23:39,294 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/guava/guava/21.0
2018-07-09 22:23:39,294 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/cryptacular/cryptacular/1.1.0
2018-07-09 22:23:39,295 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/joda-time/joda-time/2.9.2
2018-07-09 22:23:39,295 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/xalan/xalan/2.7.2
2018-07-09 22:23:39,295 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/velocity/velocity/1.7
2018-07-09 22:23:39,295 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/commons-collections/commons-collections/3.2.2
2018-07-09 22:23:39,295 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25
2018-07-09 22:23:39,295 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:39,296 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/spring-core/4.3.7.RELEASE
2018-07-09 22:23:39,296 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,296 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,296 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,296 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/spring-test/4.3.7.RELEASE
2018-07-09 22:23:39,296 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/spring-web/4.3.7.RELEASE
2018-07-09 22:23:39,297 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/mockito/mockito-core/2.7.19
2018-07-09 22:23:39,297 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,298 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/appengine/appengine-api-1.0-sdk/1.9.50
2018-07-09 22:23:39,298 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/appengine/appengine-jsr107cache/1.9.50
2018-07-09 22:23:39,298 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/net/sf/jsr107cache/jsr107cache/1.1
2018-07-09 22:23:39,298 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:39,298 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,303 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,303 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,303 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/appengine/appengine-testing/1.9.50
2018-07-09 22:23:39,303 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/appengine/appengine-api-labs/1.9.50
2018-07-09 22:23:39,304 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/google/appengine/appengine-api-stubs/1.9.50
2018-07-09 22:23:39,307 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,307 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/nimbusds/oauth2-oidc-sdk/5.24.2
2018-07-09 22:23:39,307 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/nimbusds/nimbus-jose-jwt/4.35
2018-07-09 22:23:39,308 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,308 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,308 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,308 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,308 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/nimbusds/nimbus-jose-jwt/4.35
2018-07-09 22:23:39,309 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.56
2018-07-09 22:23:39,309 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,309 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,309 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,309 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-oauth/3.0.0-SNAPSHOT
2018-07-09 22:23:39,309 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,310 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/ldaptive/ldaptive/1.2.1
2018-07-09 22:23:39,310 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,310 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,310 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,310 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/unboundid/unboundid-ldapsdk/3.2.1
2018-07-09 22:23:39,310 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,310 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/jdbi/jdbi/2.78
2018-07-09 22:23:39,311 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,311 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,311 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/security/spring-security-crypto/4.2.2.RELEASE
2018-07-09 22:23:39,311 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/h2database/h2/1.4.194
2018-07-09 22:23:39,311 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,311 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/mongodb/mongo-java-driver/3.4.2
2018-07-09 22:23:39,311 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,312 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,312 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,312 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/shiro/shiro-core/1.3.2
2018-07-09 22:23:39,312 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/de/flapdoodle/embed/de.flapdoodle.embed.mongo/2.0.0
2018-07-09 22:23:39,312 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,312 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/ektorp/org.ektorp/1.4.4
2018-07-09 22:23:39,325 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.3.3
2018-07-09 22:23:39,326 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,326 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/io/bdrc/mcouch-ektorp/1.0.0
2018-07-09 22:23:39,326 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,326 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,326 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/shiro/shiro-core/1.3.2
2018-07-09 22:23:39,326 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,327 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/springframework/spring-core/4.3.7.RELEASE
2018-07-09 22:23:39,327 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/pac4j/pac4j-core/3.0.0-SNAPSHOT
2018-07-09 22:23:39,327 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/junit/junit/4.12
2018-07-09 22:23:39,327 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/ch/qos/logback/logback-classic/1.2.2
2018-07-09 22:23:39,327 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/mockito/mockito-core/2.7.19
2018-07-09 22:23:39,327 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0
2018-07-09 22:23:39,328 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/kerby/kerby-kdc/1.0.0
2018-07-09 22:23:39,328 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/kerby/kerb-simplekdc/1.0.0
2018-07-09 22:23:39,328 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/kerby/kerb-client/1.0.0
2018-07-09 22:23:39,328 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/kerby/token-provider/1.0.0
2018-07-09 22:23:39,333 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/kerby/integration-test/1.0.0
2018-07-09 22:23:39,773 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/eclipse/jdt/org.eclipse.jdt.core/3.13.102
2018-07-09 22:23:39,774 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/martiansoftware/jsap/2.1
2018-07-09 22:23:39,774 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/log4j/log4j/1.2.17
2018-07-09 22:23:39,774 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/commons-io/commons-io/2.5
2018-07-09 22:23:39,774 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/maven/maven-model/3.3.9
2018-07-09 22:23:39,774 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/org/apache/commons/commons-lang3/3.5
2018-07-09 22:23:39,774 ERROR spoon.Launcher - Dependency not found at /root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.2
[ERROR] Tests run: 6, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 1.381 s <<< FAILURE! - in spoon.MavenLauncherTest
[ERROR] mavenLauncherTestMultiModulesAndVariables(spoon.MavenLauncherTest)  Time elapsed: 0.678 s  <<< FAILURE!
java.lang.AssertionError: Content of classpath: 
	at spoon.MavenLauncherTest.mavenLauncherTestMultiModulesAndVariables(MavenLauncherTest.java:76)

[ERROR] spoonMavenLauncherTest(spoon.MavenLauncherTest)  Time elapsed: 0.45 s  <<< FAILURE!
java.lang.AssertionError: expected:<23> but was:<0>
	at spoon.MavenLauncherTest.spoonMavenLauncherTest(MavenLauncherTest.java:20)

[INFO] Running spoon.reflect.visitor.CtInheritanceScannerMethodsTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.09 s - in spoon.reflect.visitor.CtInheritanceScannerMethodsTest
[INFO] Running spoon.reflect.visitor.CtVisitorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.902 s - in spoon.reflect.visitor.CtVisitorTest
[INFO] Running spoon.reflect.visitor.CtIteratorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.414 s - in spoon.reflect.visitor.CtIteratorTest
[INFO] Running spoon.reflect.visitor.CtInheritanceScannerTest
[INFO] Tests run: 82, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.527 s - in spoon.reflect.visitor.CtInheritanceScannerTest
[INFO] Running spoon.reflect.visitor.CtScannerTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 20.152 s - in spoon.reflect.visitor.CtScannerTest
[INFO] Running spoon.reflect.ast.AstCheckerTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 24.721 s - in spoon.reflect.ast.AstCheckerTest
[INFO] Running spoon.reflect.ast.CloneTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 18.141 s - in spoon.reflect.ast.CloneTest
[INFO] Running spoon.reflect.declaration.UnknownDeclarationTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.14 s - in spoon.reflect.declaration.UnknownDeclarationTest
[INFO] Running spoon.reflect.declaration.CtTypeInformationTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.391 s - in spoon.reflect.declaration.CtTypeInformationTest
[INFO] Running spoon.test.enums.EnumsTypeTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.154 s - in spoon.test.enums.EnumsTypeTest
[INFO] Running spoon.test.enums.EnumsTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.989 s - in spoon.test.enums.EnumsTest
[INFO] Running spoon.test.visibility.VisibilityTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.013 s - in spoon.test.visibility.VisibilityTest
[INFO] Running spoon.test.condition.ConditionalTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.312 s - in spoon.test.condition.ConditionalTest
[INFO] Running spoon.test.comment.CommentTest
[INFO] Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 35.297 s - in spoon.test.comment.CommentTest
[INFO] Running spoon.test.path.PathTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.718 s - in spoon.test.path.PathTest
[INFO] Running spoon.test.sourcePosition.SourcePositionTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.266 s - in spoon.test.sourcePosition.SourcePositionTest
[INFO] Running spoon.test.generics.GenericsTest
[INFO] Tests run: 45, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.7 s - in spoon.test.generics.GenericsTest
[INFO] Running spoon.test.exceptions.ExceptionTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.126 s - in spoon.test.exceptions.ExceptionTest
[INFO] Running spoon.test.filters.CUFilterTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.325 s - in spoon.test.filters.CUFilterTest
[INFO] Running spoon.test.filters.FilterTest
2018-07-09 22:25:44,511 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:44,512 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:44,518 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:44,518 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:44,519 INFO spoon.Launcher - start processing...
2018-07-09 22:25:44,625 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:44,625 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:45,037 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:45,038 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:45,039 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:45,039 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:45,039 INFO spoon.Launcher - start processing...
2018-07-09 22:25:45,161 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:45,165 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:45,578 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:45,579 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:45,580 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:45,580 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:45,580 INFO spoon.Launcher - start processing...
2018-07-09 22:25:45,694 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:45,695 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:46,355 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:46,356 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:46,366 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:46,369 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:46,369 INFO spoon.Launcher - start processing...
2018-07-09 22:25:46,489 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:46,489 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:46,737 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:46,738 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:46,741 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:46,742 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:46,742 INFO spoon.Launcher - start processing...
2018-07-09 22:25:46,879 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:46,880 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:48,037 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:48,038 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:48,041 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:48,041 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:48,042 INFO spoon.Launcher - start processing...
2018-07-09 22:25:48,159 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:48,160 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:48,286 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:48,286 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:48,820 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:48,829 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:48,830 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:48,830 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:48,830 INFO spoon.Launcher - start processing...
2018-07-09 22:25:49,006 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:49,007 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:49,450 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:49,450 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:49,451 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:49,451 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:49,452 INFO spoon.Launcher - start processing...
2018-07-09 22:25:49,524 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:49,524 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:49,586 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:49,586 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:49,587 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:49,587 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:49,587 INFO spoon.Launcher - start processing...
2018-07-09 22:25:49,662 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:49,662 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:49,871 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:49,872 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:49,876 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:49,876 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:49,876 INFO spoon.Launcher - start processing...
2018-07-09 22:25:49,996 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:49,996 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:50,264 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:50,264 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:50,269 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:50,270 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:50,270 INFO spoon.Launcher - start processing...
2018-07-09 22:25:50,375 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:50,375 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:50,473 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:50,474 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:50,475 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:50,488 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:50,488 INFO spoon.Launcher - start processing...
2018-07-09 22:25:50,642 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:50,643 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:51,355 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:51,356 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:51,363 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:51,364 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:51,364 INFO spoon.Launcher - start processing...
2018-07-09 22:25:51,466 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:51,467 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:51,569 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:51,570 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:51,571 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:51,573 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:51,573 INFO spoon.Launcher - start processing...
2018-07-09 22:25:51,691 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:51,697 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:52,512 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:25:52,512 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:25:52,513 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:25:52,517 INFO spoon.Launcher - running Spoon...
2018-07-09 22:25:52,517 INFO spoon.Launcher - start processing...
2018-07-09 22:25:52,640 INFO spoon.Launcher - end of processing: 
2018-07-09 22:25:52,640 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:25:52,654 INFO spoon.Launcher - Step filter CtClass only) spoon.reflect.CtModelImpl$CtRootPackage cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtRootPackage: unnamed package
2018-07-09 22:25:52,661 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtPackageImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageImpl: spoon
2018-07-09 22:25:52,661 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtPackageImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageImpl: spoon.test
2018-07-09 22:25:52,662 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtPackageImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageImpl: spoon.test.filters
2018-07-09 22:25:52,662 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtPackageImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,663 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-07-09 22:25:52,663 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,664 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: AbstractTostada() {
}
2018-07-09 22:25:52,664 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-07-09 22:25:52,664 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-07-09 22:25:52,665 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: java.lang.Object()
2018-07-09 22:25:52,665 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-07-09 22:25:52,665 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,666 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-07-09 22:25:52,666 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,666 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public spoon.test.filters.testclasses.ITostada make() {
    return new spoon.test.filters.testclasses.Tostada() {
        @java.lang.Override
        public void prepare() {
            super.prepare();
        }

        @java.lang.Override
        public spoon.test.filters.testclasses.ITostada make() {
            return super.make();
        }
    };
}
2018-07-09 22:25:52,667 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-07-09 22:25:52,667 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,668 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,668 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,668 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,668 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-07-09 22:25:52,669 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,669 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return new spoon.test.filters.testclasses.Tostada() {
        @java.lang.Override
        public void prepare() {
            super.prepare();
        }

        @java.lang.Override
        public spoon.test.filters.testclasses.ITostada make() {
            return super.make();
        }
    };
}
2018-07-09 22:25:52,670 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return new spoon.test.filters.testclasses.Tostada() {
    @java.lang.Override
    public void prepare() {
        super.prepare();
    }

    @java.lang.Override
    public spoon.test.filters.testclasses.ITostada make() {
        return super.make();
    }
}
2018-07-09 22:25:52,671 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtNewClassImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtNewClassImpl: new spoon.test.filters.testclasses.Tostada() {
    @java.lang.Override
    public void prepare() {
        super.prepare();
    }

    @java.lang.Override
    public spoon.test.filters.testclasses.ITostada make() {
        return super.make();
    }
}
2018-07-09 22:25:52,673 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.AbstractTostada$1()
2018-07-09 22:25:52,674 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada.1
2018-07-09 22:25:52,685 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-07-09 22:25:52,685 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,686 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,686 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,686 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,686 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,687 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: 1() {
}
2018-07-09 22:25:52,687 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-07-09 22:25:52,687 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-07-09 22:25:52,688 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.Tostada()
2018-07-09 22:25:52,688 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,689 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,689 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,689 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,690 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
    super.prepare();
}
2018-07-09 22:25:52,690 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-07-09 22:25:52,691 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,691 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,691 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,707 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,708 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,708 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    super.prepare();
}
2018-07-09 22:25:52,713 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.prepare()
2018-07-09 22:25:52,713 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-07-09 22:25:52,716 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-07-09 22:25:52,716 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,716 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,717 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: prepare()
2018-07-09 22:25:52,717 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,717 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,717 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,718 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public spoon.test.filters.testclasses.ITostada make() {
    return super.make();
}
2018-07-09 22:25:52,718 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-07-09 22:25:52,718 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,719 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,719 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,719 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,719 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-07-09 22:25:52,720 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,720 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return super.make();
}
2018-07-09 22:25:52,720 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return super.make()
2018-07-09 22:25:52,721 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.make()
2018-07-09 22:25:52,721 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-07-09 22:25:52,721 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-07-09 22:25:52,721 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,722 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,722 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: make()
2018-07-09 22:25:52,722 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,723 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,723 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-07-09 22:25:52,723 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,723 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public abstract void prepare();
2018-07-09 22:25:52,724 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,724 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void honey() {
}
2018-07-09 22:25:52,724 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,724 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-07-09 22:25:52,725 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtCommentImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtCommentImpl: /**
 * Copyright (C) 2006-2015 INRIA and contributors
 * Spoon - http://spoon.gforge.inria.fr/
 *
 * This software is governed by the CeCILL-C License under French law and
 * abiding by the rules of distribution of free software. You can use, modify
 * and/or redistribute the software under the terms of the CeCILL-C license as
 * circulated by CEA, CNRS and INRIA at http://www.cecill.info.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the CeCILL-C License for more details.
 *
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL-C license and that you accept its terms.
 */
2018-07-09 22:25:52,733 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-07-09 22:25:52,734 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,734 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: Antojito() {
}
2018-07-09 22:25:52,734 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-07-09 22:25:52,734 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-07-09 22:25:52,734 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.AbstractTostada()
2018-07-09 22:25:52,735 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-07-09 22:25:52,735 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,735 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-07-09 22:25:52,736 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,737 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
    java.lang.System.out.println("Antojito");
}
2018-07-09 22:25:52,737 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-07-09 22:25:52,737 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,737 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,737 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,738 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,738 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,738 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    java.lang.System.out.println("Antojito");
}
2018-07-09 22:25:52,738 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: java.lang.System.out.println("Antojito")
2018-07-09 22:25:52,739 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldReadImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReadImpl: java.lang.System.out
2018-07-09 22:25:52,739 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: java.lang.System
2018-07-09 22:25:52,739 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.System
2018-07-09 22:25:52,739 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,741 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: java.lang.System.out
2018-07-09 22:25:52,741 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.System
2018-07-09 22:25:52,741 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,742 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.io.PrintStream
2018-07-09 22:25:52,742 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.io
2018-07-09 22:25:52,742 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: println(java.lang.String)
2018-07-09 22:25:52,742 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.io.PrintStream
2018-07-09 22:25:52,744 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.io
2018-07-09 22:25:52,745 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,745 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-07-09 22:25:52,745 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,746 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: "Antojito"
2018-07-09 22:25:52,746 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-07-09 22:25:52,746 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,746 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void prepare(java.lang.String ingredient) {
}
2018-07-09 22:25:52,753 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,753 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtParameterImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtParameterImpl: java.lang.String ingredient
2018-07-09 22:25:52,753 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-07-09 22:25:52,754 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,754 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-07-09 22:25:52,754 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtCommentImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtCommentImpl: /**
 * Copyright (C) 2006-2015 INRIA and contributors
 * Spoon - http://spoon.gforge.inria.fr/
 *
 * This software is governed by the CeCILL-C License under French law and
 * abiding by the rules of distribution of free software. You can use, modify
 * and/or redistribute the software under the terms of the CeCILL-C license as
 * circulated by CEA, CNRS and INRIA at http://www.cecill.info.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the CeCILL-C License for more details.
 *
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL-C license and that you accept its terms.
 */
2018-07-09 22:25:52,755 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-07-09 22:25:52,755 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-07-09 22:25:52,755 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtFieldImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldImpl: private int myfield = 0;
2018-07-09 22:25:52,756 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-07-09 22:25:52,756 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: 0
2018-07-09 22:25:52,756 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-07-09 22:25:52,756 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: FieldAccessFilterTacos() {
    super();
    this.myfield = 0;
}
2018-07-09 22:25:52,757 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    super();
    this.myfield = 0;
}
2018-07-09 22:25:52,757 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-07-09 22:25:52,757 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: java.util.ArrayList()
2018-07-09 22:25:52,758 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-07-09 22:25:52,758 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-07-09 22:25:52,758 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-07-09 22:25:52,758 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-07-09 22:25:52,759 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtAssignmentImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAssignmentImpl: this.myfield = 0
2018-07-09 22:25:52,759 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-07-09 22:25:52,759 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldWriteImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldWriteImpl: this.myfield
2018-07-09 22:25:52,760 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtThisAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtThisAccessImpl: this
2018-07-09 22:25:52,778 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-07-09 22:25:52,778 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,779 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-07-09 22:25:52,779 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-07-09 22:25:52,779 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,779 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: myfield
2018-07-09 22:25:52,780 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-07-09 22:25:52,780 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,780 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-07-09 22:25:52,785 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: 0
2018-07-09 22:25:52,785 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-07-09 22:25:52,786 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void m() {
    myfield = super.size();
    java.lang.Object o = super.get(myfield);
}
2018-07-09 22:25:52,787 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,787 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    myfield = super.size();
    java.lang.Object o = super.get(myfield);
}
2018-07-09 22:25:52,788 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtAssignmentImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAssignmentImpl: myfield = super.size()
2018-07-09 22:25:52,789 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-07-09 22:25:52,789 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldWriteImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldWriteImpl: myfield
2018-07-09 22:25:52,789 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtThisAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtThisAccessImpl: 
2018-07-09 22:25:52,790 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-07-09 22:25:52,790 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,790 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-07-09 22:25:52,790 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-07-09 22:25:52,791 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,791 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: myfield
2018-07-09 22:25:52,791 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-07-09 22:25:52,791 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,794 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-07-09 22:25:52,794 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.size()
2018-07-09 22:25:52,801 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-07-09 22:25:52,802 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-07-09 22:25:52,802 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-07-09 22:25:52,802 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-07-09 22:25:52,803 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: size()
2018-07-09 22:25:52,803 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-07-09 22:25:52,803 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-07-09 22:25:52,803 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-07-09 22:25:52,804 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLocalVariableImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableImpl: java.lang.Object o = super.get(myfield)
2018-07-09 22:25:52,804 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-07-09 22:25:52,805 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,805 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.get(myfield)
2018-07-09 22:25:52,805 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-07-09 22:25:52,805 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-07-09 22:25:52,806 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-07-09 22:25:52,806 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-07-09 22:25:52,806 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: get(int)
2018-07-09 22:25:52,806 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-07-09 22:25:52,807 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-07-09 22:25:52,807 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-07-09 22:25:52,807 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,807 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-07-09 22:25:52,808 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldReadImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReadImpl: myfield
2018-07-09 22:25:52,808 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtThisAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtThisAccessImpl: 
2018-07-09 22:25:52,808 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-07-09 22:25:52,813 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,813 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-07-09 22:25:52,813 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-07-09 22:25:52,814 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,814 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: myfield
2018-07-09 22:25:52,814 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-07-09 22:25:52,814 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,815 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-07-09 22:25:52,815 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtCommentImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtCommentImpl: /**
 * Copyright (C) 2006-2015 INRIA and contributors
 * Spoon - http://spoon.gforge.inria.fr/
 *
 * This software is governed by the CeCILL-C License under French law and
 * abiding by the rules of distribution of free software. You can use, modify
 * and/or redistribute the software under the terms of the CeCILL-C license as
 * circulated by CEA, CNRS and INRIA at http://www.cecill.info.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the CeCILL-C License for more details.
 *
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL-C license and that you accept its terms.
 */
2018-07-09 22:25:52,816 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtInterfaceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInterfaceImpl: interface Foo {}
2018-07-09 22:25:52,816 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtInterfaceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInterfaceImpl: interface Honey {
    void honey();
}
2018-07-09 22:25:52,816 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: void honey();
2018-07-09 22:25:52,821 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,821 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtInterfaceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInterfaceImpl: public interface ITostada extends spoon.test.filters.testclasses.Foo {
    spoon.test.filters.testclasses.ITostada make();
}
2018-07-09 22:25:52,822 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Foo
2018-07-09 22:25:52,822 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,823 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: spoon.test.filters.testclasses.ITostada make();
2018-07-09 22:25:52,823 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-07-09 22:25:52,823 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,824 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtCommentImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtCommentImpl: /**
 * Copyright (C) 2006-2015 INRIA and contributors
 * Spoon - http://spoon.gforge.inria.fr/
 *
 * This software is governed by the CeCILL-C License under French law and
 * abiding by the rules of distribution of free software. You can use, modify
 * and/or redistribute the software under the terms of the CeCILL-C license as
 * circulated by CEA, CNRS and INRIA at http://www.cecill.info.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the CeCILL-C License for more details.
 *
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL-C license and that you accept its terms.
 */
2018-07-09 22:25:52,824 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,824 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,825 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: SubTostada() {
}
2018-07-09 22:25:52,825 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-07-09 22:25:52,825 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-07-09 22:25:52,825 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.Tostada()
2018-07-09 22:25:52,826 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,826 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,826 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,827 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,827 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
    java.lang.System.out.println("SubTostada");
    super.prepare();
}
2018-07-09 22:25:52,827 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-07-09 22:25:52,828 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,828 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,828 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,828 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,829 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,829 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    java.lang.System.out.println("SubTostada");
    super.prepare();
}
2018-07-09 22:25:52,830 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: java.lang.System.out.println("SubTostada")
2018-07-09 22:25:52,831 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldReadImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReadImpl: java.lang.System.out
2018-07-09 22:25:52,831 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: java.lang.System
2018-07-09 22:25:52,832 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.System
2018-07-09 22:25:52,836 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,837 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: java.lang.System.out
2018-07-09 22:25:52,837 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.System
2018-07-09 22:25:52,837 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,838 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.io.PrintStream
2018-07-09 22:25:52,838 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.io
2018-07-09 22:25:52,838 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: println(java.lang.String)
2018-07-09 22:25:52,838 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.io.PrintStream
2018-07-09 22:25:52,839 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.io
2018-07-09 22:25:52,839 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,839 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-07-09 22:25:52,839 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,840 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: "SubTostada"
2018-07-09 22:25:52,841 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-07-09 22:25:52,841 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,841 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.prepare()
2018-07-09 22:25:52,842 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-07-09 22:25:52,842 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-07-09 22:25:52,842 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,842 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,843 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: prepare()
2018-07-09 22:25:52,843 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,843 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,843 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,844 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtCommentImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtCommentImpl: /**
 * Copyright (C) 2006-2015 INRIA and contributors
 * Spoon - http://spoon.gforge.inria.fr/
 *
 * This software is governed by the CeCILL-C License under French law and
 * abiding by the rules of distribution of free software. You can use, modify
 * and/or redistribute the software under the terms of the CeCILL-C license as
 * circulated by CEA, CNRS and INRIA at http://www.cecill.info.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the CeCILL-C License for more details.
 *
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL-C license and that you accept its terms.
 */
2018-07-09 22:25:52,851 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-07-09 22:25:52,851 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,852 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: Tacos() {
}
2018-07-09 22:25:52,852 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-07-09 22:25:52,857 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-07-09 22:25:52,857 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: java.lang.Object()
2018-07-09 22:25:52,857 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-07-09 22:25:52,857 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,858 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-07-09 22:25:52,858 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,858 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public spoon.test.filters.testclasses.ITostada make() {
    return null;
}
2018-07-09 22:25:52,858 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-07-09 22:25:52,859 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,859 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,859 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,860 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,860 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-07-09 22:25:52,860 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,860 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return null;
}
2018-07-09 22:25:52,861 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return null
2018-07-09 22:25:52,861 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: null
2018-07-09 22:25:52,861 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: <nulltype>
2018-07-09 22:25:52,862 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void prepare() {
    final java.util.ArrayList<java.lang.String> strings = new java.util.ArrayList<java.lang.String>();
    strings.size();
}
2018-07-09 22:25:52,864 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,865 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    final java.util.ArrayList<java.lang.String> strings = new java.util.ArrayList<java.lang.String>();
    strings.size();
}
2018-07-09 22:25:52,865 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLocalVariableImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableImpl: final java.util.ArrayList<java.lang.String> strings = new java.util.ArrayList<java.lang.String>()
2018-07-09 22:25:52,865 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList<java.lang.String>
2018-07-09 22:25:52,866 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-07-09 22:25:52,866 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-07-09 22:25:52,866 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,867 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtConstructorCallImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorCallImpl: new java.util.ArrayList<java.lang.String>()
2018-07-09 22:25:52,867 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: java.util.ArrayList()
2018-07-09 22:25:52,867 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-07-09 22:25:52,873 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-07-09 22:25:52,873 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList<java.lang.String>
2018-07-09 22:25:52,873 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-07-09 22:25:52,874 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-07-09 22:25:52,874 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,874 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: strings.size()
2018-07-09 22:25:52,874 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtVariableReadImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtVariableReadImpl: strings
2018-07-09 22:25:52,901 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: strings
2018-07-09 22:25:52,901 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList<java.lang.String>
2018-07-09 22:25:52,901 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-07-09 22:25:52,902 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-07-09 22:25:52,902 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,902 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: size()
2018-07-09 22:25:52,902 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-07-09 22:25:52,903 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-07-09 22:25:52,903 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-07-09 22:25:52,903 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtCommentImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtCommentImpl: /**
 * Copyright (C) 2006-2015 INRIA and contributors
 * Spoon - http://spoon.gforge.inria.fr/
 *
 * This software is governed by the CeCILL-C License under French law and
 * abiding by the rules of distribution of free software. You can use, modify
 * and/or redistribute the software under the terms of the CeCILL-C license as
 * circulated by CEA, CNRS and INRIA at http://www.cecill.info.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the CeCILL-C License for more details.
 *
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL-C license and that you accept its terms.
 */
2018-07-09 22:25:52,904 INFO spoon.Launcher - Step 6) Skipped element, because CtFunction#accept(input) returned false
Parameter 1) CtMethodImpl: void honey();
2018-07-09 22:25:52,904 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-07-09 22:25:52,906 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,906 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Honey
2018-07-09 22:25:52,906 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,906 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: Tostada() {
}
2018-07-09 22:25:52,907 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-07-09 22:25:52,907 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-07-09 22:25:52,907 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.AbstractTostada()
2018-07-09 22:25:52,908 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-07-09 22:25:52,908 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,908 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-07-09 22:25:52,908 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,909 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public spoon.test.filters.testclasses.ITostada make() {
    return new spoon.test.filters.testclasses.Tostada() {
        @java.lang.Override
        public void prepare() {
            int a = 3;
            super.prepare();
        }
    };
}
2018-07-09 22:25:52,909 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-07-09 22:25:52,909 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,910 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,910 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,910 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,910 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-07-09 22:25:52,911 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,911 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return new spoon.test.filters.testclasses.Tostada() {
        @java.lang.Override
        public void prepare() {
            int a = 3;
            super.prepare();
        }
    };
}
2018-07-09 22:25:52,911 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return new spoon.test.filters.testclasses.Tostada() {
    @java.lang.Override
    public void prepare() {
        int a = 3;
        super.prepare();
    }
}
2018-07-09 22:25:52,912 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtNewClassImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtNewClassImpl: new spoon.test.filters.testclasses.Tostada() {
    @java.lang.Override
    public void prepare() {
        int a = 3;
        super.prepare();
    }
}
2018-07-09 22:25:52,912 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.Tostada$1()
2018-07-09 22:25:52,913 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada.1
2018-07-09 22:25:52,913 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,914 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,914 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,914 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,915 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,915 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,915 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: 1() {
}
2018-07-09 22:25:52,917 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-07-09 22:25:52,917 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-07-09 22:25:52,918 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.Tostada()
2018-07-09 22:25:52,924 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,925 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,925 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,925 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,926 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
    int a = 3;
    super.prepare();
}
2018-07-09 22:25:52,926 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-07-09 22:25:52,926 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,927 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,927 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,927 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,927 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,928 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    int a = 3;
    super.prepare();
}
2018-07-09 22:25:52,928 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLocalVariableImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableImpl: int a = 3
2018-07-09 22:25:52,928 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-07-09 22:25:52,928 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: 3
2018-07-09 22:25:52,929 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-07-09 22:25:52,929 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.prepare()
2018-07-09 22:25:52,929 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-07-09 22:25:52,930 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-07-09 22:25:52,930 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,930 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,930 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: prepare()
2018-07-09 22:25:52,930 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-07-09 22:25:52,933 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-07-09 22:25:52,945 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,946 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
}
2018-07-09 22:25:52,946 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-07-09 22:25:52,946 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,947 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,947 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,947 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,947 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,948 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-07-09 22:25:52,948 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public java.lang.String toString() {
    return "";
}
2018-07-09 22:25:52,948 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-07-09 22:25:52,949 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,949 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,949 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,949 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,950 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-07-09 22:25:52,950 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,950 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return "";
}
2018-07-09 22:25:52,950 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return ""
2018-07-09 22:25:52,951 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: ""
2018-07-09 22:25:52,951 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-07-09 22:25:52,951 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,951 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void honey() {
}
2018-07-09 22:25:52,952 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-07-09 22:25:52,952 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,952 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,957 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-07-09 22:25:52,957 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-07-09 22:25:52,957 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,958 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-07-09 22:25:52,958 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void foo() {
}
2018-07-09 22:25:52,958 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-07-09 22:25:52,958 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-07-09 22:25:52,959 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtCommentImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtCommentImpl: /**
 * Copyright (C) 2006-2015 INRIA and contributors
 * Spoon - http://spoon.gforge.inria.fr/
 *
 * This software is governed by the CeCILL-C License under French law and
 * abiding by the rules of distribution of free software. You can use, modify
 * and/or redistribute the software under the terms of the CeCILL-C license as
 * circulated by CEA, CNRS and INRIA at http://www.cecill.info.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the CeCILL-C License for more details.
 *
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL-C license and that you accept its terms.
 */
[INFO] Tests run: 43, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.818 s - in spoon.test.filters.FilterTest
[INFO] Running spoon.test.visitor.VisitorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.097 s - in spoon.test.visitor.VisitorTest
[INFO] Running spoon.test.visitor.AssignmentsEqualsTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.071 s - in spoon.test.visitor.AssignmentsEqualsTest
[INFO] Running spoon.test.field.FieldTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.41 s - in spoon.test.field.FieldTest
[INFO] Running spoon.test.jdtimportbuilder.ImportBuilderTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.269 s - in spoon.test.jdtimportbuilder.ImportBuilderTest
[INFO] Running spoon.test.parent.NullParentTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.91 s - in spoon.test.parent.NullParentTest
[INFO] Running spoon.test.parent.ParentTest
[WARNING] Tests run: 11, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 1.393 s - in spoon.test.parent.ParentTest
[INFO] Running spoon.test.parent.TopLevelTypeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.139 s - in spoon.test.parent.TopLevelTypeTest
[INFO] Running spoon.test.parent.SetParentTest
[INFO] Tests run: 67, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.376 s - in spoon.test.parent.SetParentTest
[INFO] Running spoon.test.parent.ContractOnSettersParametrizedTest
[INFO] Tests run: 67, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.002 s - in spoon.test.parent.ContractOnSettersParametrizedTest
[INFO] Running spoon.test.modifiers.TestModifiers
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.824 s - in spoon.test.modifiers.TestModifiers
[INFO] Running spoon.test.support.ResourceTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.465 s - in spoon.test.support.ResourceTest
[INFO] Running spoon.test.invocations.InvocationTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.366 s - in spoon.test.invocations.InvocationTest
[INFO] Running spoon.test.main.MainTest
[INFO] Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 354.161 s - in spoon.test.main.MainTest
[INFO] Running spoon.test.executable.ExecutableTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.34 s - in spoon.test.executable.ExecutableTest
[INFO] Running spoon.test.executable.ExecutableRefTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.546 s - in spoon.test.executable.ExecutableRefTest
[INFO] Running spoon.test.serializable.SerializableTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.369 s - in spoon.test.serializable.SerializableTest
[INFO] Running spoon.test.serializable.SourcePositionTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.088 s - in spoon.test.serializable.SourcePositionTest
[INFO] Running spoon.test.serializable.ModelStreamerTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.496 s - in spoon.test.serializable.ModelStreamerTest
[INFO] Running spoon.test.labels.TestLabels
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.064 s - in spoon.test.labels.TestLabels
[INFO] Running spoon.test.casts.CastTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.677 s - in spoon.test.casts.CastTest
[INFO] Running spoon.test.initializers.InitializerTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.129 s - in spoon.test.initializers.InitializerTest
[INFO] Running spoon.test.staticFieldAccess.StaticAccessTest
2018-07-09 22:32:03,952 ERROR spoon.Launcher - ChangeCollector was not attached to the Environment
spoon.SpoonException: ChangeCollector was not attached to the Environment
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.getChangeCollector(ChangesAwareDefaultJavaPrettyPrinter.java:61)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scanInternal(ChangesAwareDefaultJavaPrettyPrinter.java:194)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:179)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:38)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.calculate(DefaultJavaPrettyPrinter.java:1954)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.getCompilationUnitInputStream(JDTBasedSpoonCompiler.java:677)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFilesUsingCUs(JDTBasedSpoonCompiler.java:581)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:214)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:201)
	at spoon.test.staticFieldAccess.StaticAccessTest.testProcessAndCompile(StaticAccessTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:03,960 ERROR spoon.Launcher - ChangeCollector was not attached to the Environment
spoon.SpoonException: ChangeCollector was not attached to the Environment
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.getChangeCollector(ChangesAwareDefaultJavaPrettyPrinter.java:61)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scanInternal(ChangesAwareDefaultJavaPrettyPrinter.java:194)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:179)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:38)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.calculate(DefaultJavaPrettyPrinter.java:1954)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.getCompilationUnitInputStream(JDTBasedSpoonCompiler.java:677)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFilesUsingCUs(JDTBasedSpoonCompiler.java:581)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:214)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:201)
	at spoon.test.staticFieldAccess.StaticAccessTest.testProcessAndCompile(StaticAccessTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:03,962 ERROR spoon.Launcher - ChangeCollector was not attached to the Environment
spoon.SpoonException: ChangeCollector was not attached to the Environment
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.getChangeCollector(ChangesAwareDefaultJavaPrettyPrinter.java:61)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scanInternal(ChangesAwareDefaultJavaPrettyPrinter.java:194)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:179)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:38)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.calculate(DefaultJavaPrettyPrinter.java:1954)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.getCompilationUnitInputStream(JDTBasedSpoonCompiler.java:677)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFilesUsingCUs(JDTBasedSpoonCompiler.java:581)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:214)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:201)
	at spoon.test.staticFieldAccess.StaticAccessTest.testProcessAndCompile(StaticAccessTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.584 s - in spoon.test.staticFieldAccess.StaticAccessTest
[INFO] Running spoon.test.reference.VariableAccessTest
2018-07-09 22:32:04,914 ERROR spoon.support.compiler.jdt.JDTTreeBuilder - Could not find declaration for variable e at (/root/workspace/INRIA/spoon/401928806/src/test/resources/noclasspath/org/elasticsearch/indices/analysis/HunspellService.java:100)
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.011 s - in spoon.test.reference.VariableAccessTest
[INFO] Running spoon.test.reference.TypeReferenceTest
[INFO] Tests run: 28, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.628 s - in spoon.test.reference.TypeReferenceTest
[INFO] Running spoon.test.reference.ExecutableReferenceTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.394 s - in spoon.test.reference.ExecutableReferenceTest
[INFO] Running spoon.test.reference.CloneReferenceTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.309 s - in spoon.test.reference.CloneReferenceTest
[INFO] Running spoon.test.reference.ElasticsearchStackoverflowTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.26 s - in spoon.test.reference.ElasticsearchStackoverflowTest
[INFO] Running spoon.test.reference.ExecutableReferenceGenericTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.088 s - in spoon.test.reference.ExecutableReferenceGenericTest
[INFO] Running spoon.test.reference.AnnotationFieldReferenceTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.087 s - in spoon.test.reference.AnnotationFieldReferenceTest
[INFO] Running spoon.test.trycatch.TryCatchTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.015 s - in spoon.test.trycatch.TryCatchTest
[INFO] Running spoon.test.processing.ProcessingTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.185 s - in spoon.test.processing.ProcessingTest
[INFO] Running spoon.test.ctClass.CtClassTest
2018-07-09 22:32:14,725 ERROR spoon.Launcher - cannot load class: daikon.Runtime
spoon.support.SpoonClassNotFoundException: cannot load class: daikon.Runtime
	at spoon.support.reflect.reference.CtTypeReferenceImpl.findClass(CtTypeReferenceImpl.java:159)
	at spoon.support.reflect.reference.CtTypeReferenceImpl.getActualClass(CtTypeReferenceImpl.java:141)
	at spoon.support.reflect.reference.CtFieldReferenceImpl.getActualField(CtFieldReferenceImpl.java:64)
	at spoon.support.reflect.reference.CtFieldReferenceImpl.getModifiers(CtFieldReferenceImpl.java:228)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.isInitializeStaticFinalField(DefaultJavaPrettyPrinter.java:889)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.printCtFieldAccess(DefaultJavaPrettyPrinter.java:836)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtFieldWrite(DefaultJavaPrettyPrinter.java:795)
	at spoon.support.reflect.code.CtFieldWriteImpl.accept(CtFieldWriteImpl.java:27)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:349)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtAssignment(DefaultJavaPrettyPrinter.java:497)
	at spoon.support.reflect.code.CtAssignmentImpl.accept(CtAssignmentImpl.java:54)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:349)
	at spoon.reflect.visitor.ElementPrinterHelper.writeStatement(ElementPrinterHelper.java:181)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:529)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:67)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:349)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtAnonymousExecutable(DefaultJavaPrettyPrinter.java:448)
	at spoon.support.reflect.declaration.CtAnonymousExecutableImpl.accept(CtAnonymousExecutableImpl.java:46)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:349)
	at spoon.reflect.visitor.ElementPrinterHelper.writeElementList(ElementPrinterHelper.java:195)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:621)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:67)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:349)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.calculate(DefaultJavaPrettyPrinter.java:1954)
	at spoon.support.JavaOutputProcessor.createJavaFile(JavaOutputProcessor.java:118)
	at spoon.support.JavaOutputProcessor.process(JavaOutputProcessor.java:153)
	at spoon.support.JavaOutputProcessor.process(JavaOutputProcessor.java:46)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:74)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:148)
	at spoon.reflect.visitor.CtScanner.visitCtPackage(CtScanner.java:650)
	at spoon.support.reflect.declaration.CtPackageImpl.accept(CtPackageImpl.java:102)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:182)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:148)
	at spoon.reflect.visitor.CtScanner.visitCtPackage(CtScanner.java:649)
	at spoon.support.reflect.declaration.CtPackageImpl.accept(CtPackageImpl.java:102)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:182)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)
	at spoon.reflect.visitor.CtScanner.visitCtModule(CtScanner.java:925)
	at spoon.reflect.factory.ModuleFactory$CtUnnamedModule.accept(ModuleFactory.java:105)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:182)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.support.QueueProcessingManager.process(QueueProcessingManager.java:124)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFilesUsingTypes(JDTBasedSpoonCompiler.java:518)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:211)
	at spoon.Launcher.prettyprint(Launcher.java:786)
	at spoon.Launcher.run(Launcher.java:724)
	at spoon.test.ctClass.CtClassTest.testParentOfTheEnclosingClassOfStaticClass(CtClassTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
Caused by: java.lang.ClassNotFoundException: daikon.Runtime
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at spoon.support.reflect.reference.CtTypeReferenceImpl.findClass(CtTypeReferenceImpl.java:157)
	... 75 more
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.934 s - in spoon.test.ctClass.CtClassTest
[INFO] Running spoon.test.ctBlock.TestCtBlock
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.197 s - in spoon.test.ctBlock.TestCtBlock
[INFO] Running spoon.test.change.ChangeCollectorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.138 s - in spoon.test.change.ChangeCollectorTest
[INFO] Running spoon.test.variable.InferredVariableTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.225 s - in spoon.test.variable.InferredVariableTest
[INFO] Running spoon.test.variable.AccessTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.83 s - in spoon.test.variable.AccessTest
[INFO] Running spoon.test.variable.AccessFullyQualifiedFieldTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.509 s - in spoon.test.variable.AccessFullyQualifiedFieldTest
[INFO] Running spoon.test.jar.JarTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.192 s - in spoon.test.jar.JarTest
[INFO] Running spoon.test.position.PositionTest
2018-07-09 22:32:23,612 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - /* c2 */ is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:14)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionClass(PositionTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:23,613 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - // c5 is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:17)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionClass(PositionTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:23,614 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - /* c6 */ is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:18)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionClass(PositionTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:23,614 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - // c7 is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:19)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionClass(PositionTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:24,308 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - /* c2 */ is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:14)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionInterface(PositionTest.java:161)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:24,309 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - // c5 is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:17)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionInterface(PositionTest.java:161)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:24,310 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - /* c6 */ is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:18)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionInterface(PositionTest.java:161)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:24,317 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - // c7 is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:19)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionInterface(PositionTest.java:161)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:24,777 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - /* c2 */ is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:14)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionClassWithComments(PositionTest.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:24,779 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - // c5 is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:17)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionClassWithComments(PositionTest.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:24,779 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - /* c6 */ is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:18)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionClassWithComments(PositionTest.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:24,780 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - // c7 is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:19)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionClassWithComments(PositionTest.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:25,569 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - /* c2 */ is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:14)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionAnnotation(PositionTest.java:195)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:25,573 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - // c5 is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:17)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionAnnotation(PositionTest.java:195)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:25,574 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - /* c6 */ is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:18)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionAnnotation(PositionTest.java:195)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:32:25,575 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - // c7 is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:19)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.testing.utils.ModelUtils.build(ModelUtils.java:101)
	at spoon.test.position.PositionTest.testPositionAnnotation(PositionTest.java:195)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
[INFO] Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.431 s - in spoon.test.position.PositionTest
[INFO] Running spoon.test.position.SourceFragmentTest
[ERROR] Tests run: 8, Failures: 0, Errors: 7, Skipped: 0, Time elapsed: 0.176 s <<< FAILURE! - in spoon.test.position.SourceFragmentTest
[ERROR] testSourceFragmentWrapChildrenAndSiblings(spoon.test.position.SourceFragmentTest)  Time elapsed: 0.002 s  <<< ERROR!
spoon.SpoonException: Mandatory parameter compilationUnit is null
	at spoon.test.position.SourceFragmentTest.createFragment(SourceFragmentTest.java:192)
	at spoon.test.position.SourceFragmentTest.testSourceFragmentWrapChildrenAndSiblings(SourceFragmentTest.java:155)

[ERROR] testSourcePositionFragment(spoon.test.position.SourceFragmentTest)  Time elapsed: 0.001 s  <<< ERROR!
spoon.SpoonException: Mandatory parameter compilationUnit is null
	at spoon.test.position.SourceFragmentTest.testSourcePositionFragment(SourceFragmentTest.java:29)

[ERROR] testSourceFragmentWrapChild(spoon.test.position.SourceFragmentTest)  Time elapsed: 0 s  <<< ERROR!
spoon.SpoonException: Mandatory parameter compilationUnit is null
	at spoon.test.position.SourceFragmentTest.createFragment(SourceFragmentTest.java:192)
	at spoon.test.position.SourceFragmentTest.testSourceFragmentWrapChild(SourceFragmentTest.java:143)

[ERROR] testDeclarationSourcePositionFragment(spoon.test.position.SourceFragmentTest)  Time elapsed: 0.001 s  <<< ERROR!
spoon.SpoonException: Mandatory parameter compilationUnit is null
	at spoon.test.position.SourceFragmentTest.testDeclarationSourcePositionFragment(SourceFragmentTest.java:40)

[ERROR] testBodyHolderSourcePositionFragment(spoon.test.position.SourceFragmentTest)  Time elapsed: 0.001 s  <<< ERROR!
spoon.SpoonException: Mandatory parameter compilationUnit is null
	at spoon.test.position.SourceFragmentTest.testBodyHolderSourcePositionFragment(SourceFragmentTest.java:73)

[ERROR] testSourceFragmentAddChild(spoon.test.position.SourceFragmentTest)  Time elapsed: 0.001 s  <<< ERROR!
spoon.SpoonException: Mandatory parameter compilationUnit is null
	at spoon.test.position.SourceFragmentTest.createFragment(SourceFragmentTest.java:192)
	at spoon.test.position.SourceFragmentTest.testSourceFragmentAddChild(SourceFragmentTest.java:112)

[ERROR] testLocalizationOfSourceFragment(spoon.test.position.SourceFragmentTest)  Time elapsed: 0 s  <<< ERROR!
spoon.SpoonException: Mandatory parameter compilationUnit is null
	at spoon.test.position.SourceFragmentTest.createFragment(SourceFragmentTest.java:192)
	at spoon.test.position.SourceFragmentTest.testLocalizationOfSourceFragment(SourceFragmentTest.java:178)

[INFO] Running spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.811 s - in spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest
[INFO] Running spoon.test.role.TestCtRole
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in spoon.test.role.TestCtRole
[INFO] Running spoon.test.secondaryclasses.ClassesTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.538 s - in spoon.test.secondaryclasses.ClassesTest
[INFO] Running spoon.test.annotation.AnnotationValuesTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.476 s - in spoon.test.annotation.AnnotationValuesTest
[INFO] Running spoon.test.annotation.AnnotationTest
[INFO] Tests run: 52, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.906 s - in spoon.test.annotation.AnnotationTest
[INFO] Running spoon.test.annotation.AnnotationLoopTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.079 s - in spoon.test.annotation.AnnotationLoopTest
[INFO] Running spoon.test.query_function.testclasses.VariableReferencesModelTest
[INFO] Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 s - in spoon.test.query_function.testclasses.VariableReferencesModelTest
[INFO] Running spoon.test.query_function.VariableReferencesTest
2018-07-09 22:32:35,801 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:32:35,801 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:32:35,802 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:32:35,802 INFO spoon.Launcher - running Spoon...
2018-07-09 22:32:35,802 INFO spoon.Launcher - start processing...
2018-07-09 22:32:35,913 INFO spoon.Launcher - end of processing: 
2018-07-09 22:32:35,914 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:32:36,009 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:32:36,010 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:32:36,010 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:32:36,011 INFO spoon.Launcher - running Spoon...
2018-07-09 22:32:36,011 INFO spoon.Launcher - start processing...
2018-07-09 22:32:36,130 INFO spoon.Launcher - end of processing: 
2018-07-09 22:32:36,130 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:32:36,193 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:32:36,193 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:32:36,194 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:32:36,194 INFO spoon.Launcher - running Spoon...
2018-07-09 22:32:36,194 INFO spoon.Launcher - start processing...
2018-07-09 22:32:36,282 INFO spoon.Launcher - end of processing: 
2018-07-09 22:32:36,282 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:32:36,294 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:32:36,295 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:32:36,295 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:32:36,296 INFO spoon.Launcher - running Spoon...
2018-07-09 22:32:36,296 INFO spoon.Launcher - start processing...
2018-07-09 22:32:36,393 INFO spoon.Launcher - end of processing: 
2018-07-09 22:32:36,394 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:32:36,428 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:32:36,428 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:32:36,429 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:32:36,429 INFO spoon.Launcher - running Spoon...
2018-07-09 22:32:36,429 INFO spoon.Launcher - start processing...
2018-07-09 22:32:36,519 INFO spoon.Launcher - end of processing: 
2018-07-09 22:32:36,519 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:32:36,676 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:32:36,676 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:32:36,678 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:32:36,678 INFO spoon.Launcher - running Spoon...
2018-07-09 22:32:36,679 INFO spoon.Launcher - start processing...
2018-07-09 22:32:36,838 INFO spoon.Launcher - end of processing: 
2018-07-09 22:32:36,839 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:32:36,862 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:32:36,863 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:32:36,863 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:32:36,863 INFO spoon.Launcher - running Spoon...
2018-07-09 22:32:36,863 INFO spoon.Launcher - start processing...
2018-07-09 22:32:36,974 INFO spoon.Launcher - end of processing: 
2018-07-09 22:32:36,974 INFO spoon.Launcher - no errors, no warnings
2018-07-09 22:32:37,058 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:32:37,069 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:32:37,069 INFO spoon.Launcher - Spoon version 7.1.0-SNAPSHOT
2018-07-09 22:32:37,070 INFO spoon.Launcher - running Spoon...
2018-07-09 22:32:37,070 INFO spoon.Launcher - start processing...
2018-07-09 22:32:37,197 INFO spoon.Launcher - end of processing: 
2018-07-09 22:32:37,197 INFO spoon.Launcher - no errors, no warnings
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.526 s - in spoon.test.query_function.VariableReferencesTest
[INFO] Running spoon.test.replace.ReplaceParametrizedTest
[INFO] Tests run: 80, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.485 s - in spoon.test.replace.ReplaceParametrizedTest
[INFO] Running spoon.test.replace.ReplaceTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.939 s - in spoon.test.replace.ReplaceTest
[INFO] Running spoon.test.javadoc.JavaDocTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.162 s - in spoon.test.javadoc.JavaDocTest
[INFO] Running spoon.test.strings.StringTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.06 s - in spoon.test.strings.StringTest
[INFO] Running spoon.test.strings.StringLiteralTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.063 s - in spoon.test.strings.StringLiteralTest
[INFO] Running spoon.test.constructorcallnewclass.ConstructorCallTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.527 s - in spoon.test.constructorcallnewclass.ConstructorCallTest
[INFO] Running spoon.test.constructorcallnewclass.NewClassTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.114 s - in spoon.test.constructorcallnewclass.NewClassTest
[INFO] Running spoon.test.factory.CodeFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.factory.CodeFactoryTest
[INFO] Running spoon.test.factory.FactoryTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.417 s - in spoon.test.factory.FactoryTest
[INFO] Running spoon.test.factory.TypeFactoryTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.454 s - in spoon.test.factory.TypeFactoryTest
[INFO] Running spoon.test.factory.FieldFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.417 s - in spoon.test.factory.FieldFactoryTest
[INFO] Running spoon.test.factory.ConstructorFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.115 s - in spoon.test.factory.ConstructorFactoryTest
[INFO] Running spoon.test.factory.ExecutableFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in spoon.test.factory.ExecutableFactoryTest
[INFO] Running spoon.test.factory.ClassFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in spoon.test.factory.ClassFactoryTest
[INFO] Running spoon.test.factory.AnnotationFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.121 s - in spoon.test.factory.AnnotationFactoryTest
[INFO] Running spoon.test.lambda.LambdaTest
2018-07-09 22:32:46,609 ERROR spoon.support.compiler.jdt.JDTTreeBuilder - Could not find declaration for variable Strings at (/root/workspace/INRIA/spoon/401928806/src/test/resources/noclasspath/lambdas/TypeAccessInLambda.java:6)
[INFO] Tests run: 23, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.447 s - in spoon.test.lambda.LambdaTest
[INFO] Running spoon.test.reflect.visitor.ReferenceQueryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.063 s - in spoon.test.reflect.visitor.ReferenceQueryTest
[INFO] Running spoon.test.interfaces.InterfaceTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.507 s - in spoon.test.interfaces.InterfaceTest
[INFO] Running spoon.test.interfaces.TestInterfaceWithoutSetup
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.182 s - in spoon.test.interfaces.TestInterfaceWithoutSetup
[INFO] Running spoon.test.compilation.CompilationTest
>> Hello: Bar <<
>> Hello: FooEx <<
>> Hello: IBar <<
>> Hello: SimpleProcessor <<
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 14.673 s - in spoon.test.compilation.CompilationTest
[INFO] Running spoon.test.literal.LiteralTest
2018-07-09 22:33:03,628 ERROR spoon.support.compiler.jdt.JDTTreeBuilder - Could not find declaration for variable Longs at (/root/workspace/INRIA/spoon/401928806/src/test/resources/noclasspath/SecondaryIndexManager.java:611)
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.338 s - in spoon.test.literal.LiteralTest
[INFO] Running spoon.test.limits.utils.InternalTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.121 s - in spoon.test.limits.utils.InternalTest
[INFO] Running spoon.test.constructor.ConstructorTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.288 s - in spoon.test.constructor.ConstructorTest
[INFO] Running spoon.test.model.AnonymousExecutableTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.124 s - in spoon.test.model.AnonymousExecutableTest
[INFO] Running spoon.test.model.TypeTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.692 s - in spoon.test.model.TypeTest
[INFO] Running spoon.test.model.SwitchCaseTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.128 s - in spoon.test.model.SwitchCaseTest
[INFO] Running spoon.test.model.IncrementalLauncherTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.339 s - in spoon.test.model.IncrementalLauncherTest
[INFO] Running spoon.test.model.BlockTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.14 s - in spoon.test.model.BlockTest
[INFO] Running spoon.test.OutputTypeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in spoon.test.OutputTypeTest
[INFO] Running spoon.test.parameters.ParameterTest
2018-07-09 22:33:11,719 ERROR spoon.support.compiler.jdt.JDTTreeBuilder - Could not find declaration for variable typeRatingFilters at (/root/workspace/INRIA/spoon/401928806/src/test/resources/noclasspath/Tacos.java:4)
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.349 s - in spoon.test.parameters.ParameterTest
[INFO] Running spoon.test.comparison.EqualTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.614 s - in spoon.test.comparison.EqualTest
[INFO] Running spoon.test.properties.PropertiesTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.123 s - in spoon.test.properties.PropertiesTest
[INFO] Running spoon.test.control.ControlTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.156 s - in spoon.test.control.ControlTest
[INFO] Running spoon.test.imports.ImportAndExtendWithPackageNameTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.11 s - in spoon.test.imports.ImportAndExtendWithPackageNameTest
[INFO] Running spoon.test.imports.ImportTest
2018-07-09 22:33:16,628 ERROR spoon.Launcher - ChangeCollector was not attached to the Environment
spoon.SpoonException: ChangeCollector was not attached to the Environment
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.getChangeCollector(ChangesAwareDefaultJavaPrettyPrinter.java:61)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scanInternal(ChangesAwareDefaultJavaPrettyPrinter.java:194)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:179)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:38)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.calculate(DefaultJavaPrettyPrinter.java:1954)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.getCompilationUnitInputStream(JDTBasedSpoonCompiler.java:677)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFilesUsingCUs(JDTBasedSpoonCompiler.java:581)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:214)
	at spoon.Launcher.prettyprint(Launcher.java:786)
	at spoon.Launcher.run(Launcher.java:724)
	at spoon.test.imports.ImportTest.testmportInCu(ImportTest.java:1004)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
[ERROR] Tests run: 44, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 9.069 s <<< FAILURE! - in spoon.test.imports.ImportTest
[ERROR] testmportInCu(spoon.test.imports.ImportTest)  Time elapsed: 0.084 s  <<< FAILURE!
java.lang.AssertionError
	at spoon.test.imports.ImportTest.testmportInCu(ImportTest.java:1010)

[INFO] Running spoon.test.imports.ImportScannerTest
2018-07-09 22:34:01,347 WARN spoon.Launcher - ImportScannerTest: Import scanner imports 581 unused imports and misses 0 imports
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 39.903 s - in spoon.test.imports.ImportScannerTest
[INFO] Running spoon.test.snippets.SnippetTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.598 s - in spoon.test.snippets.SnippetTest
[INFO] Running spoon.test.ctBodyHolder.CtBodyHolderTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.226 s - in spoon.test.ctBodyHolder.CtBodyHolderTest
[INFO] Running spoon.test.eval.EvalTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.853 s - in spoon.test.eval.EvalTest
[INFO] Running spoon.test.method.MethodTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.556 s - in spoon.test.method.MethodTest
[INFO] Running spoon.test.ctCase.SwitchCaseTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.349 s - in spoon.test.ctCase.SwitchCaseTest
[INFO] Running spoon.test.api.APITest
./target/nooutput_e3a4f312-0f44-4548-86d8-d63662b701f5
2018-07-09 22:34:28,785 ERROR spoon.Launcher - ChangeCollector was not attached to the Environment
spoon.SpoonException: ChangeCollector was not attached to the Environment
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.getChangeCollector(ChangesAwareDefaultJavaPrettyPrinter.java:61)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scanInternal(ChangesAwareDefaultJavaPrettyPrinter.java:194)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:179)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:38)
	at spoon.reflect.visitor.ElementPrinterHelper.writeComment(ElementPrinterHelper.java:392)
	at spoon.reflect.visitor.ElementPrinterHelper.writeComment(ElementPrinterHelper.java:401)
	at spoon.reflect.visitor.ElementPrinterHelper.writeComment(ElementPrinterHelper.java:413)
	at spoon.reflect.visitor.ElementPrinterHelper.writeHeader(ElementPrinterHelper.java:356)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeHeader(DefaultJavaPrettyPrinter.java:1926)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.calculate(DefaultJavaPrettyPrinter.java:1952)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.getCompilationUnitInputStream(JDTBasedSpoonCompiler.java:677)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFilesUsingCUs(JDTBasedSpoonCompiler.java:581)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:214)
	at spoon.Launcher.prettyprint(Launcher.java:786)
	at spoon.Launcher.run(Launcher.java:724)
	at spoon.test.api.APITest.testBasicAPIUsage(APITest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
[INFO] Tests run: 23, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 23.479 s - in spoon.test.api.APITest
[INFO] Running spoon.test.api.NoClasspathTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.453 s - in spoon.test.api.NoClasspathTest
[INFO] Running spoon.test.api.FileSystemFolderTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in spoon.test.api.FileSystemFolderTest
[INFO] Running spoon.test.api.MetamodelTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.539 s - in spoon.test.api.MetamodelTest
[INFO] Running spoon.test.loop.LoopTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.147 s - in spoon.test.loop.LoopTest
[INFO] Running spoon.test.ctElement.MetadataTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.066 s - in spoon.test.ctElement.MetadataTest
[INFO] Running spoon.test.ctElement.ElementTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in spoon.test.ctElement.ElementTest
[INFO] Running spoon.test.delete.DeleteTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.885 s - in spoon.test.delete.DeleteTest
[INFO] Running spoon.test.ctType.CtTypeParameterTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.183 s - in spoon.test.ctType.CtTypeParameterTest
[INFO] Running spoon.test.ctType.CtTypeTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.679 s - in spoon.test.ctType.CtTypeTest
[INFO] Running spoon.test.intercession.OneCanCallSetterWithNullParameterizedTest
[INFO] Tests run: 117, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.585 s - in spoon.test.intercession.OneCanCallSetterWithNullParameterizedTest
[INFO] Running spoon.test.intercession.insertBefore.InsertMethodsTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.171 s - in spoon.test.intercession.insertBefore.InsertMethodsTest
[INFO] Running spoon.test.intercession.IntercessionTest
[WARNING] Tests run: 8, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 8.237 s - in spoon.test.intercession.IntercessionTest
[INFO] Running spoon.test.intercession.RemoveTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.086 s - in spoon.test.intercession.RemoveTest
[INFO] Running spoon.test.type.TypeTest
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.324 s - in spoon.test.type.TypeTest
[INFO] Running spoon.test.fieldaccesses.FieldAccessTest
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.463 s - in spoon.test.fieldaccesses.FieldAccessTest
[INFO] Running spoon.test.module.TestModule
[WARNING] Tests run: 8, Failures: 0, Errors: 0, Skipped: 2, Time elapsed: 0.316 s - in spoon.test.module.TestModule
[INFO] Running spoon.test.methodreference.MethodReferenceTest
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.771 s - in spoon.test.methodreference.MethodReferenceTest
[INFO] Running spoon.test.arrays.ArraysTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.103 s - in spoon.test.arrays.ArraysTest
[INFO] Running spoon.test.prettyprinter.PrinterTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.328 s - in spoon.test.prettyprinter.PrinterTest
[INFO] Running spoon.test.prettyprinter.PrintChangesTest
[ERROR] Tests run: 3, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 1.507 s <<< FAILURE! - in spoon.test.prettyprinter.PrintChangesTest
[ERROR] testPrintUnchaged(spoon.test.prettyprinter.PrintChangesTest)  Time elapsed: 0.279 s  <<< FAILURE!
org.junit.ComparisonFailure: 
expected:<...inter.testclasses;

[import java.util.ArrayList;
import java.util.List;

/**
 * The content of this file 
 * 

 * 		should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
	extends ArrayList<T /* let's confuse > it */ > implements List<T>,
	Cloneable
{
	
	
	/**/
	final
	//
	private String string = "a"
			+ "b" + "c"+"d";
	
	//and spaces here are wanted too
	
	
	public <T, K> void andSomeOtherMethod(
			int param1,
			String param2         , List<?>[][] ... twoDArrayOfLists)
	{/**/
		System.out.println("aaa"
				+ "xyz");
	/*x*/}
	List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

//and what about this comment? ]> but was:<...inter.testclasses;

[
/**
 * The content of this file 
 * 

 * 		should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
	extends ArrayList<T /* let's confuse > it */ > implements List<T>,
	Cloneable
{
	
	
	/**/
	final
	//
	private String string = "a"
			+ "b" + "c"+"d";
	
	//and spaces here are wanted too
	
	
	public <T, K> void andSomeOtherMethod(
			int param1,
			String param2         , List<?>[][] ... twoDArrayOfLists)
	{/**/
		System.out.println("aaa"
				+ "xyz");
	/*x*/}
	List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

]>
	at spoon.test.prettyprinter.PrintChangesTest.testPrintUnchaged(PrintChangesTest.java:38)

[ERROR] testPrintChangedReferenceBuilder(spoon.test.prettyprinter.PrintChangesTest)  Time elapsed: 1.09 s  <<< FAILURE!
org.junit.ComparisonFailure: 
expected:<...port.compiler.jdt;

[import org.eclipse.jdt.core.compiler.CharOperation;
import org.eclipse.jdt.internal.compiler.ast.ASTNode;
import org.eclipse.jdt.internal.compiler.ast.AllocationExpression;
import org.eclipse.jdt.internal.compiler.ast.Annotation;
import org.eclipse.jdt.internal.compiler.ast.Argument;
import org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;
import org.eclipse.jdt.internal.compiler.ast.Expression;
import org.eclipse.jdt.internal.compiler.ast.ImportReference;
import org.eclipse.jdt.internal.compiler.ast.LambdaExpression;
import org.eclipse.jdt.internal.compiler.ast.MessageSend;
import org.eclipse.jdt.internal.compiler.ast.ModuleReference;
import org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;
import org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;
import org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;
import org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;
import org.eclipse.jdt.internal.compiler.ast.SingleNameReference;
import org.eclipse.jdt.internal.compiler.ast.TypeReference;
import org.eclipse.jdt.internal.compiler.ast.Wildcard;
import org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants;
import org.eclipse.jdt.internal.compiler.impl.ReferenceContext;
import org.eclipse.jdt.internal.compiler.lookup.ArrayBinding;
import org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.Binding;
import org.eclipse.jdt.internal.compiler.lookup.BlockScope;
import org.eclipse.jdt.internal.compiler.lookup.CaptureBinding;
import org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding;
import org.eclipse.jdt.internal.compiler.lookup.ClassScope;
import org.eclipse.jdt.internal.compiler.lookup.FieldBinding;
import org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18;
import org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;
import org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment;
import org.eclipse.jdt.internal.compiler.lookup.MethodBinding;
import org.eclipse.jdt.internal.compiler.lookup.MethodScope;
import org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.PackageBinding;
import org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.ProblemBinding;
import org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding;
import org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding;
import org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding;
import org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;
import org.eclipse.jdt.internal.compiler.lookup.Scope;
import org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.TypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;
import org.eclipse.jdt.internal.compiler.lookup.VariableBinding;
import org.eclipse.jdt.internal.compiler.lookup.VoidTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.WildcardBinding;
import spoon.reflect.code.CtLambda;
import spoon.reflect.declaration.CtModule;
import spoon.reflect.declaration.CtPackage;
import spoon.reflect.declaration.CtParameter;
import spoon.reflect.declaration.ModifierKind;
import spoon.reflect.factory.PackageFactory;
import spoon.reflect.reference.CtArrayTypeReference;
import spoon.reflect.reference.CtCatchVariableReference;
import spoon.reflect.reference.CtExecutableReference;
import spoon.reflect.reference.CtFieldReference;
import spoon.reflect.reference.CtLocalVariableReference;
import spoon.reflect.reference.CtModuleReference;
import spoon.reflect.reference.CtPackageReference;
import spoon.reflect.reference.CtParameterReference;
import spoon.reflect.reference.CtReference;
import spoon.reflect.reference.CtTypeParameterReference;
import spoon.reflect.reference.CtTypeReference;
import spoon.reflect.reference.CtVariableReference;
import spoon.support.reflect.CtExtendedModifier;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchPackage;
import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchType;
import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchTypeBinding;

public class ReferenceBuilder {

	@SuppressWarnings("unchecked")
	<T> CtTypeReference<T> getTypeReference(TypeBinding binding) {
		if (binding == null) {
			return null;
		}

		CtTypeReference<?> ref = null;

		if (binding instanceof RawTypeBinding) {
			ref = getTypeReference(((ParameterizedTypeBinding) binding).genericType());
		} else if (binding instanceof ParameterizedTypeBinding) {
			if (binding.actualType() != null && binding.actualType() instanceof LocalTypeBinding) {
				// When we define a nested class in a method and when the enclosing class of this method
				// is a parameterized type binding, JDT give a ParameterizedTypeBinding for the nested class
				// and hide the real class in actualType().
				ref = getTypeReference(binding.actualType());
			} else {
				ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
				this.exploringParameterizedBindings.put(binding, ref);
				if (binding.isAnonymousType()) {
					ref.setSimpleName("");
				} else {
					ref.setSimpleName(String.valueOf(binding.sourceName()));
					if (binding.enclosingType() != null) {
						ref.setDeclaringType(getTypeReference(binding.enclosingType()));
					} else {
						ref.setPackage(getPackageReference(binding.getPackage()));
					}
				}
			}
			if (binding.actualType() instanceof MissingTypeBinding) {
				ref = getTypeReference(binding.actualType());
			}

			if (((ParameterizedTypeBinding) binding).arguments != null) {
				for (TypeBinding b : ((ParameterizedTypeBinding) binding).arguments) {
					if (bindingCache.containsKey(b)) {
						ref.addActualTypeArgument(getCtCircularTypeReference(b));
					} else {
						if (!this.exploringParameterizedBindings.containsKey(b)) {
							this.exploringParameterizedBindings.put(b, null);
							CtTypeReference typeRefB = getTypeReference(b);
							this.exploringParameterizedBindings.put(b, typeRefB);
							ref.addActualTypeArgument(typeRefB);
						} else {
							CtTypeReference typeRefB = this.exploringParameterizedBindings.get(b);
							if (typeRefB != null) {
								ref.addActualTypeArgument(typeRefB.clone());
							}
						}
					}
				}
			}
		} else if (binding instanceof MissingTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(new String(binding.sourceName()));
			ref.setPackage(getPackageReference(binding.getPackage()));
			if (!this.jdtTreeBuilder.getContextBuilder().ignoreComputeImports) {
				final CtReference declaring = this.getDeclaringReferenceFromImports(binding.sourceName());
				if (declaring instanceof CtPackageReference) {
					ref.setPackage((CtPackageReference) declaring);
				} else if (declaring instanceof CtTypeReference) {
					ref.setDeclaringType((CtTypeReference) declaring);
				}
			}
		} else if (binding instanceof BinaryTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			if (binding.enclosingType() != null) {
				ref.setDeclaringType(getTypeReference(binding.enclosingType()));
			} else {
				ref.setPackage(getPackageReference(binding.getPackage()));
			}
			ref.setSimpleName(new String(binding.sourceName()));
		} else if (binding instanceof TypeVariableBinding) {
			boolean oldBounds = bounds;

			if (binding instanceof CaptureBinding) {
				ref = this.jdtTreeBuilder.getFactory().Core().createWildcardReference();
				bounds = true;
			} else {
				TypeVariableBinding typeParamBinding = (TypeVariableBinding) binding;
				ReferenceBinding superClass = typeParamBinding.superclass;
				ReferenceBinding[] superInterfaces = typeParamBinding.superInterfaces();

				CtTypeReference refSuperClass = null;

				// if the type parameter has a super class other than java.lang.Object, we get it
				// superClass.superclass() is null if it's java.lang.Object
				if (superClass != null && !(superClass.superclass() == null)) {

					// this case could happen with Enum<E extends Enum<E>> for example:
					// in that case we only want to have E -> Enum -> E
					// to conserve the same behavior as JavaReflectionTreeBuilder
					if (!(superClass instanceof ParameterizedTypeBinding) || !this.exploringParameterizedBindings.containsKey(superClass)) {
						refSuperClass = this.getTypeReference(superClass);
					}

				// if the type parameter has a super interface, then we'll get it too, as a superclass
				// type parameter can only extends an interface or a class, so we don't make the distinction
				// in Spoon. Moreover we can only have one extends in a type parameter.
				} else if (superInterfaces != null && superInterfaces.length == 1) {
					refSuperClass = this.getTypeReference(superInterfaces[0]);
				}

				ref = this.jdtTreeBuilder.getFactory().Core().createTypeParameterReference();
				ref.setSimpleName(new String(binding.sourceName()));

				if (refSuperClass != null) {
					((CtTypeParameterReference) ref).addBound(refSuperClass);
				}
			}
			TypeVariableBinding b = (TypeVariableBinding) binding;
			if (bounds) {
				if (b instanceof CaptureBinding && ((CaptureBinding) b).wildcard != null) {
					bounds = oldBounds;
					return getTypeReference(((CaptureBinding) b).wildcard);
				} else if (b.superclass != null && b.firstBound == b.superclass) {
					bounds = false;
					bindingCache.put(binding, ref);
					((CtTypeParameterReference) ref).setBoundingType(getTypeReference(b.superclass));
					bounds = oldBounds;
				}
			}
			if (bounds && b.superInterfaces != null && b.superInterfaces != Binding.NO_SUPERINTERFACES) {
				bounds = false;
				bindingCache.put(binding, ref);
				List<CtTypeReference<?>> bounds = new ArrayList<>();
				CtTypeParameterReference typeParameterReference = (CtTypeParameterReference) ref;
				if (!(typeParameterReference.isDefaultBoundingType())) { // if it's object we can ignore it
					bounds.add(typeParameterReference.getBoundingType());
				}
				for (ReferenceBinding superInterface : b.superInterfaces) {
					bounds.add(getTypeReference(superInterface));
				}
				((CtTypeParameterReference) ref).setBoundingType(this.jdtTreeBuilder.getFactory().Type().createIntersectionTypeReferenceWithBounds(bounds));
			}
			if (binding instanceof CaptureBinding) {
				bounds = false;
			}
		} else if (binding instanceof BaseTypeBinding) {
			String name = new String(binding.sourceName());
			//always create new TypeReference, because clonning from a cache clones invalid SourcePosition
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(name);
		} else if (binding instanceof WildcardBinding) {
			WildcardBinding wildcardBinding = (WildcardBinding) binding;
			ref = this.jdtTreeBuilder.getFactory().Core().createWildcardReference();

			if (wildcardBinding.boundKind == Wildcard.SUPER && ref instanceof CtTypeParameterReference) {
				((CtTypeParameterReference) ref).setUpper(false);
			}

			if (wildcardBinding.bound != null && ref instanceof CtTypeParameterReference) {
				if (bindingCache.containsKey(wildcardBinding.bound)) {
					((CtTypeParameterReference) ref).setBoundingType(getCtCircularTypeReference(wildcardBinding.bound));
				} else {


					((CtTypeParameterReference) ref).setBoundingType(getTypeReference(((WildcardBinding) binding).bound));
				}
			}
		} else if (binding instanceof LocalTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			if (binding.isAnonymousType()) {
				ref.setSimpleName(JDTTreeBuilderHelper.computeAnonymousName(((SourceTypeBinding) binding).constantPoolName()));
				ref.setDeclaringType(getTypeReference((binding.enclosingType())));
			} else {
				ref.setSimpleName(new String(binding.sourceName()));
				if (((LocalTypeBinding) binding).enclosingMethod == null && binding.enclosingType() != null && binding.enclosingType() instanceof LocalTypeBinding) {
					ref.setDeclaringType(getTypeReference(binding.enclosingType()));
				} else if (binding.enclosingMethod() != null) {
					ref.setSimpleName(JDTTreeBuilderHelper.computeAnonymousName(((SourceTypeBinding) binding).constantPoolName()));
					ref.setDeclaringType(getTypeReference(binding.enclosingType()));
				}
			}
		} else if (binding instanceof SourceTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			if (binding.isAnonymousType()) {
				ref.setSimpleName(JDTTreeBuilderHelper.computeAnonymousName(((SourceTypeBinding) binding).constantPoolName()));
				ref.setDeclaringType(getTypeReference((binding.enclosingType())));
			} else {
				ref.setSimpleName(new String(binding.sourceName()));
				if (binding.enclosingType() != null) {
					ref.setDeclaringType(getTypeReference(binding.enclosingType()));
				} else {
					ref.setPackage(getPackageReference(binding.getPackage()));
				}
				// if(((SourceTypeBinding) binding).typeVariables!=null &&
				// ((SourceTypeBinding) binding).typeVariables.length>0){
				// for (TypeBinding b : ((SourceTypeBinding)
				// binding).typeVariables) {
				// ref.getActualTypeArguments().add(getTypeReference(b));
				// }
				// }
			}
		} else if (binding instanceof ArrayBinding) {
			CtArrayTypeReference<Object> arrayref;
			arrayref = this.jdtTreeBuilder.getFactory().Core().createArrayTypeReference();
			ref = arrayref;
			for (int i = 1; i < binding.dimensions(); i++) {
				CtArrayTypeReference<Object> tmp = this.jdtTreeBuilder.getFactory().Core().createArrayTypeReference();
				arrayref.setComponentType(tmp);
				arrayref = tmp;
			}
			arrayref.setComponentType(getTypeReference(binding.leafComponentType()));
		} else if (binding instanceof PolyTypeBinding) {
			// JDT can't resolve the type of this binding and we only have a string.
			// In this case, we return a type Object because we can't know more about it.
			ref = this.jdtTreeBuilder.getFactory().Type().objectType();
		} else if (binding instanceof ProblemReferenceBinding) {
			// Spoon is able to analyze also without the classpath
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(new String(binding.readableName()));
			final CtReference declaring = this.getDeclaringReferenceFromImports(binding.sourceName());
			setPackageOrDeclaringType(ref, declaring);
		} else if (binding instanceof JDTTreeBuilder.SpoonReferenceBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(new String(binding.sourceName()));
			ref.setDeclaringType(getTypeReference(binding.enclosingType()));
		} else if (binding instanceof IntersectionTypeBinding18) {
			List<CtTypeReference<?>> bounds = new ArrayList<>();
			for (ReferenceBinding superInterface : binding.getIntersectingTypes()) {
				bounds.add(getTypeReference(superInterface));
			}
			ref = this.jdtTreeBuilder.getFactory().Type().createIntersectionTypeReferenceWithBounds(bounds);
		} else {
			throw new RuntimeException("Unknown TypeBinding: " + binding.getClass() + " " + binding);
		}
		bindingCache.remove(binding);
		this.exploringParameterizedBindings.remove(binding);
		return (CtTypeReference<T>) ref;
	}
}]
> but was:<...port.compiler.jdt;

[
import java.util.ArrayList;
import java.util.List;
import org.eclipse.jdt.internal.compiler.ast.Wildcard;
import org.eclipse.jdt.internal.compiler.lookup.ArrayBinding;
import org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.Binding;
import org.eclipse.jdt.internal.compiler.lookup.CaptureBinding;
import org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18;
import org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding;
import org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;
import org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.TypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;
import org.eclipse.jdt.internal.compiler.lookup.WildcardBinding;
import spoon.reflect.reference.CtArrayTypeReference;
import spoon.reflect.reference.CtPackageReference;
import spoon.reflect.reference.CtReference;
import spoon.reflect.reference.CtTypeParameterReference;
import spoon.reflect.reference.CtTypeReference;


public class ReferenceBuilder {

	@SuppressWarnings("unchecked")
	<T> CtTypeReference<T> getTypeReference(TypeBinding binding) {
		if (binding == null) {
			return null;
		}

		CtTypeReference<?> ref = null;

		// When we define a nested class in a method and when the enclosing class of this method
// is a parameterized type binding, JDT give a ParameterizedTypeBinding for the nested class
// and hide the real class in actualType().
// if the type parameter has a super class other than java.lang.Object, we get it
// superClass.superclass() is null if it's java.lang.Object
// this case could happen with Enum<E extends Enum<E>> for example:
// in that case we only want to have E -> Enum -> E
// to conserve the same behavior as JavaReflectionTreeBuilder
// if the type parameter has a super interface, then we'll get it too, as a superclass
// type parameter can only extends an interface or a class, so we don't make the distinction
// in Spoon. Moreover we can only have one extends in a type parameter.
// if it's object we can ignore it
//always create new TypeReference, because clonning from a cache clones invalid SourcePosition
// if(((SourceTypeBinding) binding).typeVariables!=null &&
// ((SourceTypeBinding) binding).typeVariables.length>0){
// for (TypeBinding b : ((SourceTypeBinding)
// binding).typeVariables) {
// ref.getActualTypeArguments().add(getTypeReference(b));
// }
// }
// JDT can't resolve the type of this binding and we only have a string.
// In this case, we return a type Object because we can't know more about it.
// Spoon is able to analyze also without the classpath
if (binding instanceof RawTypeBinding) {
			ref = getTypeReference(((ParameterizedTypeBinding) binding).genericType());
		}// When we define a nested class in a method and when the enclosing class of this method
// is a parameterized type binding, JDT give a ParameterizedTypeBinding for the nested class
// and hide the real class in actualType().
// if the type parameter has a super class other than java.lang.Object, we get it
// superClass.superclass() is null if it's java.lang.Object
// this case could happen with Enum<E extends Enum<E>> for example:
// in that case we only want to have E -> Enum -> E
// to conserve the same behavior as JavaReflectionTreeBuilder
// if the type parameter has a super interface, then we'll get it too, as a superclass
// type parameter can only extends an interface or a class, so we don't make the distinction
// in Spoon. Moreover we can only have one extends in a type parameter.
// if it's object we can ignore it
//always create new TypeReference, because clonning from a cache clones invalid SourcePosition
// if(((SourceTypeBinding) binding).typeVariables!=null &&
// ((SourceTypeBinding) binding).typeVariables.length>0){
// for (TypeBinding b : ((SourceTypeBinding)
// binding).typeVariables) {
// ref.getActualTypeArguments().add(getTypeReference(b));
// }
// }
// JDT can't resolve the type of this binding and we only have a string.
// In this case, we return a type Object because we can't know more about it.
// Spoon is able to analyze also without the classpath
elseif (binding instanceof ParameterizedTypeBinding) {
			if (binding.actualType() != null && binding.actualType() instanceof LocalTypeBinding) {
				// When we define a nested class in a method and when the enclosing class of this method
				// is a parameterized type binding, JDT give a ParameterizedTypeBinding for the nested class
				// and hide the real class in actualType().
				ref = getTypeReference(binding.actualType());
			} else {
				ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
				this.exploringParameterizedBindings.put(binding, ref);
				if (binding.isAnonymousType()) {
					ref.setSimpleName("");
				} else {
					ref.setSimpleName(String.valueOf(binding.sourceName()));
					if (binding.enclosingType() != null) {
						ref.setDeclaringType(getTypeReference(binding.enclosingType()));
					} else {
						ref.setPackage(getPackageReference(binding.getPackage()));
					}
				}
			}
			if (binding.actualType() instanceof MissingTypeBinding) {
				ref = getTypeReference(binding.actualType());
			}

			if (((ParameterizedTypeBinding) binding).arguments != null) {
				for (TypeBinding b : ((ParameterizedTypeBinding) binding).arguments) {
					if (bindingCache.containsKey(b)) {
						ref.addActualTypeArgument(getCtCircularTypeReference(b));
					} else {
						if (!this.exploringParameterizedBindings.containsKey(b)) {
							this.exploringParameterizedBindings.put(b, null);
							CtTypeReference typeRefB = getTypeReference(b);
							this.exploringParameterizedBindings.put(b, typeRefB);
							ref.addActualTypeArgument(typeRefB);
						} else {
							CtTypeReference typeRefB = this.exploringParameterizedBindings.get(b);
							if (typeRefB != null) {
								ref.addActualTypeArgument(typeRefB.clone());
							}
						}
					}
				}
			}
		}elseif (binding instanceof MissingTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(new String(binding.sourceName()));
			ref.setPackage(getPackageReference(binding.getPackage()));
			if (!this.jdtTreeBuilder.getContextBuilder().ignoreComputeImports) {
				final CtReference declaring = this.getDeclaringReferenceFromImports(binding.sourceName());
				if (declaring instanceof CtPackageReference) {
					ref.setPackage((CtPackageReference) declaring);
				} else if (declaring instanceof CtTypeReference) {
					ref.setDeclaringType((CtTypeReference) declaring);
				}
			}
		}elseif (binding instanceof BinaryTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			if (binding.enclosingType() != null) {
				ref.setDeclaringType(getTypeReference(binding.enclosingType()));
			} else {
				ref.setPackage(getPackageReference(binding.getPackage()));
			}
			ref.setSimpleName(new String(binding.sourceName()));
		}elseif (binding instanceof TypeVariableBinding) {
			boolean oldBounds = bounds;

			if (binding instanceof CaptureBinding) {
				ref = this.jdtTreeBuilder.getFactory().Core().createWildcardReference();
				bounds = true;
			} else {
				TypeVariableBinding typeParamBinding = (TypeVariableBinding) binding;
				ReferenceBinding superClass = typeParamBinding.superclass;
				ReferenceBinding[] superInterfaces = typeParamBinding.superInterfaces();

				CtTypeReference refSuperClass = null;

				// if the type parameter has a super class other than java.lang.Object, we get it
				// superClass.superclass() is null if it's java.lang.Object
				if (superClass != null && !(superClass.superclass() == null)) {

					// this case could happen with Enum<E extends Enum<E>> for example:
					// in that case we only want to have E -> Enum -> E
					// to conserve the same behavior as JavaReflectionTreeBuilder
					if (!(superClass instanceof ParameterizedTypeBinding) || !this.exploringParameterizedBindings.containsKey(superClass)) {
						refSuperClass = this.getTypeReference(superClass);
					}

				// if the type parameter has a super interface, then we'll get it too, as a superclass
				// type parameter can only extends an interface or a class, so we don't make the distinction
				// in Spoon. Moreover we can only have one extends in a type parameter.
				} else if (superInterfaces != null && superInterfaces.length == 1) {
					refSuperClass = this.getTypeReference(superInterfaces[0]);
				}

				ref = this.jdtTreeBuilder.getFactory().Core().createTypeParameterReference();
				ref.setSimpleName(new String(binding.sourceName()));

				if (refSuperClass != null) {
					((CtTypeParameterReference) ref).addBound(refSuperClass);
				}
			}
			TypeVariableBinding b = (TypeVariableBinding) binding;
			if (bounds) {
				if (b instanceof CaptureBinding && ((CaptureBinding) b).wildcard != null) {
					bounds = oldBounds;
					return getTypeReference(((CaptureBinding) b).wildcard);
				} else if (b.superclass != null && b.firstBound == b.superclass) {
					bounds = false;
					bindingCache.put(binding, ref);
					((CtTypeParameterReference) ref).setBoundingType(getTypeReference(b.superclass));
					bounds = oldBounds;
				}
			}
			if (bounds && b.superInterfaces != null && b.superInterfaces != Binding.NO_SUPERINTERFACES) {
				bindingCache.put(binding, ref);
				List<CtTypeReference<?>> bounds = new ArrayList<>();
				CtTypeParameterReference typeParameterReference = (CtTypeParameterReference) ref;
				if (!(typeParameterReference.isDefaultBoundingType())) { // if it's object we can ignore it
					bounds.add(typeParameterReference.getBoundingType());
				}
				for (ReferenceBinding superInterface : b.superInterfaces) {
					bounds.add(getTypeReference(superInterface));
				}
				((CtTypeParameterReference) ref).setBoundingType(this.jdtTreeBuilder.getFactory().Type().createIntersectionTypeReferenceWithBounds(bounds));
			if (binding instanceof CaptureBinding) {
				bounds = false;
			}elseif (binding instanceof BaseTypeBinding) {
			String name = new String(binding.sourceName());
			//always create new TypeReference, because clonning from a cache clones invalid SourcePosition
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(name);
		} else if (binding instanceof WildcardBinding) {
			WildcardBinding wildcardBinding = (WildcardBinding) binding;
			ref = this.jdtTreeBuilder.getFactory().Core().createWildcardReference();

			if (wildcardBinding.boundKind == Wildcard.SUPER && ref instanceof CtTypeParameterReference) {
				((CtTypeParameterReference) ref).setUpper(false);
			}

			if (wildcardBinding.bound != null && ref instanceof CtTypeParameterReference) {
				if (bindingCache.containsKey(wildcardBinding.bound)) {
					((CtTypeParameterReference) ref).setBoundingType(getCtCircularTypeReference(wildcardBinding.bound));
				} else {


					((CtTypeParameterReference) ref).setBoundingType(getTypeReference(((WildcardBinding) binding).bound));
				}
			}
		} else if (binding instanceof LocalTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			if (binding.isAnonymousType()) {
				ref.setSimpleName(JDTTreeBuilderHelper.computeAnonymousName(((SourceTypeBinding) binding).constantPoolName()));
				ref.setDeclaringType(getTypeReference((binding.enclosingType())));
			} else {
				ref.setSimpleName(new String(binding.sourceName()));
				if (((LocalTypeBinding) binding).enclosingMethod == null && binding.enclosingType() != null && binding.enclosingType() instanceof LocalTypeBinding) {
					ref.setDeclaringType(getTypeReference(binding.enclosingType()));
				} else if (binding.enclosingMethod() != null) {
					ref.setSimpleName(JDTTreeBuilderHelper.computeAnonymousName(((SourceTypeBinding) binding).constantPoolName()));
					ref.setDeclaringType(getTypeReference(binding.enclosingType()));
				}
			}
		} else if (binding instanceof SourceTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			if (binding.isAnonymousType()) {
				ref.setSimpleName(JDTTreeBuilderHelper.computeAnonymousName(((SourceTypeBinding) binding).constantPoolName()));
				ref.setDeclaringType(getTypeReference((binding.enclosingType())));
			} else {
				ref.setSimpleName(new String(binding.sourceName()));
				if (binding.enclosingType() != null) {
					ref.setDeclaringType(getTypeReference(binding.enclosingType()));
				} else {
					ref.setPackage(getPackageReference(binding.getPackage()));
				}
				// if(((SourceTypeBinding) binding).typeVariables!=null &&
				// ((SourceTypeBinding) binding).typeVariables.length>0){
				// for (TypeBinding b : ((SourceTypeBinding)
				// binding).typeVariables) {
				// ref.getActualTypeArguments().add(getTypeReference(b));
				// }
				// }
			}
		} else if (binding instanceof ArrayBinding) {
			CtArrayTypeReference<Object> arrayref;
			arrayref = this.jdtTreeBuilder.getFactory().Core().createArrayTypeReference();
			ref = arrayref;
			for (int i = 1; i < binding.dimensions(); i++) {
				CtArrayTypeReference<Object> tmp = this.jdtTreeBuilder.getFactory().Core().createArrayTypeReference();
				arrayref.setComponentType(tmp);
				arrayref = tmp;
			}
			arrayref.setComponentType(getTypeReference(binding.leafComponentType()));
		} else if (binding instanceof PolyTypeBinding) {
			// JDT can't resolve the type of this binding and we only have a string.
			// In this case, we return a type Object because we can't know more about it.
			ref = this.jdtTreeBuilder.getFactory().Type().objectType();
		} else if (binding instanceof ProblemReferenceBinding) {
			// Spoon is able to analyze also without the classpath
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(new String(binding.readableName()));
			final CtReference declaring = this.getDeclaringReferenceFromImports(binding.sourceName());
			setPackageOrDeclaringType(ref, declaring);
		} else if (binding instanceof JDTTreeBuilder.SpoonReferenceBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(new String(binding.sourceName()));
			ref.setDeclaringType(getTypeReference(binding.enclosingType()));
		} else if (binding instanceof IntersectionTypeBinding18) {
			List<CtTypeReference<?>> bounds = new ArrayList<>();
			for (ReferenceBinding superInterface : binding.getIntersectingTypes()) {
				bounds.add(getTypeReference(superInterface));
			}
			ref = this.jdtTreeBuilder.getFactory().Type().createIntersectionTypeReferenceWithBounds(bounds);
		} else {
			throw new RuntimeException("Unknown TypeBinding: " + binding.getClass() + " " + binding);
		}
		bindingCache.remove(binding);
		this.exploringParameterizedBindings.remove(binding);
		return (CtTypeReference<T>) ref;
}
]
>
	at spoon.test.prettyprinter.PrintChangesTest.testPrintChangedReferenceBuilder(PrintChangesTest.java:91)

[ERROR] testPrintChanged(spoon.test.prettyprinter.PrintChangesTest)  Time elapsed: 0.136 s  <<< FAILURE!
org.junit.ComparisonFailure: 
expected:<...inter.testclasses;

[import java.util.ArrayList;
import java.util.List;

/**
 * The content of this file 
 * 

 * 		should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
	extends ArrayList<T /* let's confuse > it */ > implements List<T>,
	Cloneable
{
	
	
	/**/
	final
	//
	private String string = "a"
			+ "b" + "c"+"d";
	
	//and spaces here are wanted too
	
	
	public <T, K> void andSomeOtherMethod(
			int param1,
			String param2         , List<?>[][] ... twoDArrayOfLists)
	{/**/
		System.out.println("aaa"
				+ "xyz");
	/*x*/}
	List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

//and what about this comment? ]> but was:<...inter.testclasses;

[
import java.util.ArrayList;
import java.util.List;


/**
 * The content of this file 
 * 

 * 		should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
	extends ArrayList<T /* let's confuse > it */ > implements List<T>,
	Cloneable
{
	
	
	/**/
	final
	//
	private String modified = "a"
			+ "b" + "c"+"d";
	
	//and spaces here are wanted too
	
	
	public <T, K> void andSomeOtherMethod(
			int param1,
			String param2         , List<?>[][] ... twoDArrayOfLists)
	{/**/
		System.out.println("aaa"
				+ "xyz");
	/*x*/}
	List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

//and what about this comment? 
]>
	at spoon.test.prettyprinter.PrintChangesTest.testPrintChanged(PrintChangesTest.java:63)

[INFO] Running spoon.test.prettyprinter.QualifiedThisRefTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.508 s - in spoon.test.prettyprinter.QualifiedThisRefTest
[INFO] Running spoon.test.prettyprinter.LinesTest
2018-07-09 22:35:04,782 ERROR spoon.Launcher - ChangeCollector was not attached to the Environment
spoon.SpoonException: ChangeCollector was not attached to the Environment
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.getChangeCollector(ChangesAwareDefaultJavaPrettyPrinter.java:61)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scanInternal(ChangesAwareDefaultJavaPrettyPrinter.java:194)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:179)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:38)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.calculate(DefaultJavaPrettyPrinter.java:1954)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.getCompilationUnitInputStream(JDTBasedSpoonCompiler.java:677)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFilesUsingCUs(JDTBasedSpoonCompiler.java:581)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:214)
	at spoon.Launcher.prettyprint(Launcher.java:786)
	at spoon.Launcher.run(Launcher.java:724)
	at spoon.test.prettyprinter.LinesTest.testIdenticalPrettyPrinter(LinesTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:35:04,784 ERROR spoon.Launcher - ChangeCollector was not attached to the Environment
spoon.SpoonException: ChangeCollector was not attached to the Environment
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.getChangeCollector(ChangesAwareDefaultJavaPrettyPrinter.java:61)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scanInternal(ChangesAwareDefaultJavaPrettyPrinter.java:194)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:179)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:38)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.calculate(DefaultJavaPrettyPrinter.java:1954)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.getCompilationUnitInputStream(JDTBasedSpoonCompiler.java:677)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFilesUsingCUs(JDTBasedSpoonCompiler.java:581)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:214)
	at spoon.Launcher.prettyprint(Launcher.java:786)
	at spoon.Launcher.run(Launcher.java:724)
	at spoon.test.prettyprinter.LinesTest.testIdenticalPrettyPrinter(LinesTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
[ERROR] Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.923 s <<< FAILURE! - in spoon.test.prettyprinter.LinesTest
[ERROR] testIdenticalPrettyPrinter(spoon.test.prettyprinter.LinesTest)  Time elapsed: 0.451 s  <<< ERROR!
java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
	at spoon.test.prettyprinter.LinesTest.testIdenticalPrettyPrinter(LinesTest.java:102)

[INFO] Running spoon.test.prettyprinter.DefaultPrettyPrinterTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.398 s - in spoon.test.prettyprinter.DefaultPrettyPrinterTest
[INFO] Running spoon.test.varargs.VarArgsTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.082 s - in spoon.test.varargs.VarArgsTest
[INFO] Running spoon.test.targeted.TargetedExpressionTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.644 s - in spoon.test.targeted.TargetedExpressionTest
[INFO] Running spoon.test.logging.LogTest
2018-07-09 22:35:08,402 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:35:08,402 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:35:08,402 DEBUG spoon.Launcher - destination: /root/workspace/INRIA/spoon/401928806/spooned-classes
2018-07-09 22:35:08,402 DEBUG spoon.Launcher - source classpath: null
2018-07-09 22:35:08,402 DEBUG spoon.Launcher - template classpath: []
2018-07-09 22:35:08,403 INFO spoon.Launcher - Log info
2018-07-09 22:35:08,403 WARN spoon.Launcher - Log warn
2018-07-09 22:35:08,403 ERROR spoon.Launcher - Log error
2018-07-09 22:35:08,403 DEBUG spoon.Launcher - Log debug
2018-07-09 22:35:08,404 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:35:08,404 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:35:08,404 DEBUG spoon.Launcher - destination: /root/workspace/INRIA/spoon/401928806/spooned-classes
2018-07-09 22:35:08,404 DEBUG spoon.Launcher - source classpath: null
2018-07-09 22:35:08,404 DEBUG spoon.Launcher - template classpath: []
2018-07-09 22:35:08,405 INFO spoon.Launcher - Log info
2018-07-09 22:35:08,405 WARN spoon.Launcher - Log warn
2018-07-09 22:35:08,405 ERROR spoon.Launcher - Log error
2018-07-09 22:35:08,405 DEBUG spoon.Launcher - Log debug
2018-07-09 22:35:08,405 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:35:08,405 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:35:08,406 INFO spoon.Launcher - Log info
2018-07-09 22:35:08,406 WARN spoon.Launcher - Log warn
2018-07-09 22:35:08,406 ERROR spoon.Launcher - Log error
2018-07-09 22:35:08,413 WARN spoon.Launcher - Spoon is now using the 'no classpath mode' by default. If you want to ensure using Spoon in full classpath mode, please use the new flag: --cpmode fullclasspath.
2018-07-09 22:35:08,413 WARN spoon.Launcher - Spoon now parse by default the comments. Consider using the option --disable-comments if you want the old behaviour.
2018-07-09 22:35:08,414 WARN spoon.Launcher - Log warn
2018-07-09 22:35:08,414 ERROR spoon.Launcher - Log error
2018-07-09 22:35:08,415 ERROR spoon.Launcher - Log error
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 s - in spoon.test.logging.LogTest
[INFO] Running spoon.test.architecture.SpoonArchitectureEnforcerTest
2018-07-09 22:35:45,995 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - /* c2 */ is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:14)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.Launcher.buildModel(Launcher.java:769)
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.testGoodTestClassNames(SpoonArchitectureEnforcerTest.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:35:45,997 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - // c5 is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:17)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.Launcher.buildModel(Launcher.java:769)
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.testGoodTestClassNames(SpoonArchitectureEnforcerTest.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:35:45,998 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - /* c6 */ is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:18)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.Launcher.buildModel(Launcher.java:769)
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.testGoodTestClassNames(SpoonArchitectureEnforcerTest.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-07-09 22:35:45,999 ERROR spoon.support.compiler.jdt.JDTCommentBuilder - // c7 is not added into the AST
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtCommentImpl (/root/workspace/INRIA/spoon/401928806/src/test/java/spoon/test/position/testclasses/Expressions.java:19)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:365)
	at spoon.support.compiler.jdt.JDTCommentBuilder.insertCommentInAST(JDTCommentBuilder.java:485)
	at spoon.support.compiler.jdt.JDTCommentBuilder.buildComment(JDTCommentBuilder.java:156)
	at spoon.support.compiler.jdt.JDTCommentBuilder.build(JDTCommentBuilder.java:112)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel(JDTBasedSpoonCompiler.java:480)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:391)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:340)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:129)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:113)
	at spoon.Launcher.buildModel(Launcher.java:769)
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.testGoodTestClassNames(SpoonArchitectureEnforcerTest.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 48.411 s - in spoon.test.architecture.SpoonArchitectureEnforcerTest
[INFO] Running spoon.test.signature.SignatureTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.962 s - in spoon.test.signature.SignatureTest
[INFO] Running spoon.test.compilationunit.TestCompilationUnit
2018-07-09 22:35:57,853 ERROR spoon.Launcher - ChangeCollector was not attached to the Environment
spoon.SpoonException: ChangeCollector was not attached to the Environment
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.getChangeCollector(ChangesAwareDefaultJavaPrettyPrinter.java:61)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scanInternal(ChangesAwareDefaultJavaPrettyPrinter.java:194)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:179)
	at spoon.reflect.visitor.printer.change.ChangesAwareDefaultJavaPrettyPrinter.scan(ChangesAwareDefaultJavaPrettyPrinter.java:38)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.calculate(DefaultJavaPrettyPrinter.java:1954)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.getCompilationUnitInputStream(JDTBasedSpoonCompiler.java:677)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFilesUsingCUs(JDTBasedSpoonCompiler.java:581)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:214)
	at spoon.Launcher.prettyprint(Launcher.java:786)
	at spoon.test.compilationunit.TestCompilationUnit.testAddDeclaredTypeInCU(TestCompilationUnit.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
[ERROR] Tests run: 7, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.378 s <<< FAILURE! - in spoon.test.compilationunit.TestCompilationUnit
[ERROR] testAddDeclaredTypeInCU(spoon.test.compilationunit.TestCompilationUnit)  Time elapsed: 0.06 s  <<< FAILURE!
java.lang.AssertionError
	at spoon.test.compilationunit.TestCompilationUnit.testAddDeclaredTypeInCU(TestCompilationUnit.java:129)

[INFO] Running spoon.test.compilationunit.GetBinaryFilesTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.575 s - in spoon.test.compilationunit.GetBinaryFilesTest
[INFO] Running spoon.test.refactoring.RefactoringTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.038 s - in spoon.test.refactoring.RefactoringTest
[INFO] Running spoon.test.refactoring.CtRenameLocalVariableRefactoringTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 29.33 s - in spoon.test.refactoring.CtRenameLocalVariableRefactoringTest
[INFO] Running spoon.test.refactoring.MethodsRefactoringTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.99 s - in spoon.test.refactoring.MethodsRefactoringTest
[INFO] Running spoon.test.template.TemplateArrayAccessTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.371 s - in spoon.test.template.TemplateArrayAccessTest
[INFO] Running spoon.test.template.core.ParameterInfoTest
[INFO] Tests run: 21, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.054 s - in spoon.test.template.core.ParameterInfoTest
[INFO] Running spoon.test.template.TemplateEnumAccessTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.263 s - in spoon.test.template.TemplateEnumAccessTest
[INFO] Running spoon.test.template.PatternTest
[INFO] Tests run: 31, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.159 s - in spoon.test.template.PatternTest
[INFO] Running spoon.test.template.TemplateReplaceReturnTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.311 s - in spoon.test.template.TemplateReplaceReturnTest
[INFO] Running spoon.test.template.TemplateTest
0
[INFO] Tests run: 24, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.774 s - in spoon.test.template.TemplateTest
[INFO] Running spoon.test.template.TemplateClassAccessTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.208 s - in spoon.test.template.TemplateClassAccessTest
[INFO] Running spoon.test.template.TemplateInvocationSubstitutionTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.435 s - in spoon.test.template.TemplateInvocationSubstitutionTest
[INFO] Running spoon.test.pkg.PackageTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.376 s - in spoon.test.pkg.PackageTest
[INFO] Running spoon.test.method_overriding.MethodOverriddingTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.295 s - in spoon.test.method_overriding.MethodOverriddingTest
[INFO] Running spoon.LauncherTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.42 s - in spoon.LauncherTest
[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   MavenLauncherTest.mavenLauncherTestMultiModulesAndVariables:76 Content of classpath: 
[ERROR]   MavenLauncherTest.spoonMavenLauncherTest:20 expected:<23> but was:<0>
[ERROR]   TestCompilationUnit.testAddDeclaredTypeInCU:129
[ERROR]   ImportTest.testmportInCu:1010
[ERROR]   PrintChangesTest.testPrintChanged:63 expected:<...inter.testclasses;

[import java.util.ArrayList;
import java.util.List;

/**
 * The content of this file 
 * 

 * 		should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
	extends ArrayList<T /* let's confuse > it */ > implements List<T>,
	Cloneable
{
	
	
	/**/
	final
	//
	private String string = "a"
			+ "b" + "c"+"d";
	
	//and spaces here are wanted too
	
	
	public <T, K> void andSomeOtherMethod(
			int param1,
			String param2         , List<?>[][] ... twoDArrayOfLists)
	{/**/
		System.out.println("aaa"
				+ "xyz");
	/*x*/}
	List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

//and what about this comment? ]> but was:<...inter.testclasses;

[
import java.util.ArrayList;
import java.util.List;


/**
 * The content of this file 
 * 

 * 		should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
	extends ArrayList<T /* let's confuse > it */ > implements List<T>,
	Cloneable
{
	
	
	/**/
	final
	//
	private String modified = "a"
			+ "b" + "c"+"d";
	
	//and spaces here are wanted too
	
	
	public <T, K> void andSomeOtherMethod(
			int param1,
			String param2         , List<?>[][] ... twoDArrayOfLists)
	{/**/
		System.out.println("aaa"
				+ "xyz");
	/*x*/}
	List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

//and what about this comment? 
]>
[ERROR]   PrintChangesTest.testPrintChangedReferenceBuilder:91 expected:<...port.compiler.jdt;

[import org.eclipse.jdt.core.compiler.CharOperation;
import org.eclipse.jdt.internal.compiler.ast.ASTNode;
import org.eclipse.jdt.internal.compiler.ast.AllocationExpression;
import org.eclipse.jdt.internal.compiler.ast.Annotation;
import org.eclipse.jdt.internal.compiler.ast.Argument;
import org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;
import org.eclipse.jdt.internal.compiler.ast.Expression;
import org.eclipse.jdt.internal.compiler.ast.ImportReference;
import org.eclipse.jdt.internal.compiler.ast.LambdaExpression;
import org.eclipse.jdt.internal.compiler.ast.MessageSend;
import org.eclipse.jdt.internal.compiler.ast.ModuleReference;
import org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;
import org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;
import org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;
import org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;
import org.eclipse.jdt.internal.compiler.ast.SingleNameReference;
import org.eclipse.jdt.internal.compiler.ast.TypeReference;
import org.eclipse.jdt.internal.compiler.ast.Wildcard;
import org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants;
import org.eclipse.jdt.internal.compiler.impl.ReferenceContext;
import org.eclipse.jdt.internal.compiler.lookup.ArrayBinding;
import org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.Binding;
import org.eclipse.jdt.internal.compiler.lookup.BlockScope;
import org.eclipse.jdt.internal.compiler.lookup.CaptureBinding;
import org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding;
import org.eclipse.jdt.internal.compiler.lookup.ClassScope;
import org.eclipse.jdt.internal.compiler.lookup.FieldBinding;
import org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18;
import org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;
import org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment;
import org.eclipse.jdt.internal.compiler.lookup.MethodBinding;
import org.eclipse.jdt.internal.compiler.lookup.MethodScope;
import org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.PackageBinding;
import org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.ProblemBinding;
import org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding;
import org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding;
import org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding;
import org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;
import org.eclipse.jdt.internal.compiler.lookup.Scope;
import org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.TypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;
import org.eclipse.jdt.internal.compiler.lookup.VariableBinding;
import org.eclipse.jdt.internal.compiler.lookup.VoidTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.WildcardBinding;
import spoon.reflect.code.CtLambda;
import spoon.reflect.declaration.CtModule;
import spoon.reflect.declaration.CtPackage;
import spoon.reflect.declaration.CtParameter;
import spoon.reflect.declaration.ModifierKind;
import spoon.reflect.factory.PackageFactory;
import spoon.reflect.reference.CtArrayTypeReference;
import spoon.reflect.reference.CtCatchVariableReference;
import spoon.reflect.reference.CtExecutableReference;
import spoon.reflect.reference.CtFieldReference;
import spoon.reflect.reference.CtLocalVariableReference;
import spoon.reflect.reference.CtModuleReference;
import spoon.reflect.reference.CtPackageReference;
import spoon.reflect.reference.CtParameterReference;
import spoon.reflect.reference.CtReference;
import spoon.reflect.reference.CtTypeParameterReference;
import spoon.reflect.reference.CtTypeReference;
import spoon.reflect.reference.CtVariableReference;
import spoon.support.reflect.CtExtendedModifier;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchPackage;
import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchType;
import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchTypeBinding;

public class ReferenceBuilder {

	@SuppressWarnings("unchecked")
	<T> CtTypeReference<T> getTypeReference(TypeBinding binding) {
		if (binding == null) {
			return null;
		}

		CtTypeReference<?> ref = null;

		if (binding instanceof RawTypeBinding) {
			ref = getTypeReference(((ParameterizedTypeBinding) binding).genericType());
		} else if (binding instanceof ParameterizedTypeBinding) {
			if (binding.actualType() != null && binding.actualType() instanceof LocalTypeBinding) {
				// When we define a nested class in a method and when the enclosing class of this method
				// is a parameterized type binding, JDT give a ParameterizedTypeBinding for the nested class
				// and hide the real class in actualType().
				ref = getTypeReference(binding.actualType());
			} else {
				ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
				this.exploringParameterizedBindings.put(binding, ref);
				if (binding.isAnonymousType()) {
					ref.setSimpleName("");
				} else {
					ref.setSimpleName(String.valueOf(binding.sourceName()));
					if (binding.enclosingType() != null) {
						ref.setDeclaringType(getTypeReference(binding.enclosingType()));
					} else {
						ref.setPackage(getPackageReference(binding.getPackage()));
					}
				}
			}
			if (binding.actualType() instanceof MissingTypeBinding) {
				ref = getTypeReference(binding.actualType());
			}

			if (((ParameterizedTypeBinding) binding).arguments != null) {
				for (TypeBinding b : ((ParameterizedTypeBinding) binding).arguments) {
					if (bindingCache.containsKey(b)) {
						ref.addActualTypeArgument(getCtCircularTypeReference(b));
					} else {
						if (!this.exploringParameterizedBindings.containsKey(b)) {
							this.exploringParameterizedBindings.put(b, null);
							CtTypeReference typeRefB = getTypeReference(b);
							this.exploringParameterizedBindings.put(b, typeRefB);
							ref.addActualTypeArgument(typeRefB);
						} else {
							CtTypeReference typeRefB = this.exploringParameterizedBindings.get(b);
							if (typeRefB != null) {
								ref.addActualTypeArgument(typeRefB.clone());
							}
						}
					}
				}
			}
		} else if (binding instanceof MissingTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(new String(binding.sourceName()));
			ref.setPackage(getPackageReference(binding.getPackage()));
			if (!this.jdtTreeBuilder.getContextBuilder().ignoreComputeImports) {
				final CtReference declaring = this.getDeclaringReferenceFromImports(binding.sourceName());
				if (declaring instanceof CtPackageReference) {
					ref.setPackage((CtPackageReference) declaring);
				} else if (declaring instanceof CtTypeReference) {
					ref.setDeclaringType((CtTypeReference) declaring);
				}
			}
		} else if (binding instanceof BinaryTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			if (binding.enclosingType() != null) {
				ref.setDeclaringType(getTypeReference(binding.enclosingType()));
			} else {
				ref.setPackage(getPackageReference(binding.getPackage()));
			}
			ref.setSimpleName(new String(binding.sourceName()));
		} else if (binding instanceof TypeVariableBinding) {
			boolean oldBounds = bounds;

			if (binding instanceof CaptureBinding) {
				ref = this.jdtTreeBuilder.getFactory().Core().createWildcardReference();
				bounds = true;
			} else {
				TypeVariableBinding typeParamBinding = (TypeVariableBinding) binding;
				ReferenceBinding superClass = typeParamBinding.superclass;
				ReferenceBinding[] superInterfaces = typeParamBinding.superInterfaces();

				CtTypeReference refSuperClass = null;

				// if the type parameter has a super class other than java.lang.Object, we get it
				// superClass.superclass() is null if it's java.lang.Object
				if (superClass != null && !(superClass.superclass() == null)) {

					// this case could happen with Enum<E extends Enum<E>> for example:
					// in that case we only want to have E -> Enum -> E
					// to conserve the same behavior as JavaReflectionTreeBuilder
					if (!(superClass instanceof ParameterizedTypeBinding) || !this.exploringParameterizedBindings.containsKey(superClass)) {
						refSuperClass = this.getTypeReference(superClass);
					}

				// if the type parameter has a super interface, then we'll get it too, as a superclass
				// type parameter can only extends an interface or a class, so we don't make the distinction
				// in Spoon. Moreover we can only have one extends in a type parameter.
				} else if (superInterfaces != null && superInterfaces.length == 1) {
					refSuperClass = this.getTypeReference(superInterfaces[0]);
				}

				ref = this.jdtTreeBuilder.getFactory().Core().createTypeParameterReference();
				ref.setSimpleName(new String(binding.sourceName()));

				if (refSuperClass != null) {
					((CtTypeParameterReference) ref).addBound(refSuperClass);
				}
			}
			TypeVariableBinding b = (TypeVariableBinding) binding;
			if (bounds) {
				if (b instanceof CaptureBinding && ((CaptureBinding) b).wildcard != null) {
					bounds = oldBounds;
					return getTypeReference(((CaptureBinding) b).wildcard);
				} else if (b.superclass != null && b.firstBound == b.superclass) {
					bounds = false;
					bindingCache.put(binding, ref);
					((CtTypeParameterReference) ref).setBoundingType(getTypeReference(b.superclass));
					bounds = oldBounds;
				}
			}
			if (bounds && b.superInterfaces != null && b.superInterfaces != Binding.NO_SUPERINTERFACES) {
				bounds = false;
				bindingCache.put(binding, ref);
				List<CtTypeReference<?>> bounds = new ArrayList<>();
				CtTypeParameterReference typeParameterReference = (CtTypeParameterReference) ref;
				if (!(typeParameterReference.isDefaultBoundingType())) { // if it's object we can ignore it
					bounds.add(typeParameterReference.getBoundingType());
				}
				for (ReferenceBinding superInterface : b.superInterfaces) {
					bounds.add(getTypeReference(superInterface));
				}
				((CtTypeParameterReference) ref).setBoundingType(this.jdtTreeBuilder.getFactory().Type().createIntersectionTypeReferenceWithBounds(bounds));
			}
			if (binding instanceof CaptureBinding) {
				bounds = false;
			}
		} else if (binding instanceof BaseTypeBinding) {
			String name = new String(binding.sourceName());
			//always create new TypeReference, because clonning from a cache clones invalid SourcePosition
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(name);
		} else if (binding instanceof WildcardBinding) {
			WildcardBinding wildcardBinding = (WildcardBinding) binding;
			ref = this.jdtTreeBuilder.getFactory().Core().createWildcardReference();

			if (wildcardBinding.boundKind == Wildcard.SUPER && ref instanceof CtTypeParameterReference) {
				((CtTypeParameterReference) ref).setUpper(false);
			}

			if (wildcardBinding.bound != null && ref instanceof CtTypeParameterReference) {
				if (bindingCache.containsKey(wildcardBinding.bound)) {
					((CtTypeParameterReference) ref).setBoundingType(getCtCircularTypeReference(wildcardBinding.bound));
				} else {


					((CtTypeParameterReference) ref).setBoundingType(getTypeReference(((WildcardBinding) binding).bound));
				}
			}
		} else if (binding instanceof LocalTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			if (binding.isAnonymousType()) {
				ref.setSimpleName(JDTTreeBuilderHelper.computeAnonymousName(((SourceTypeBinding) binding).constantPoolName()));
				ref.setDeclaringType(getTypeReference((binding.enclosingType())));
			} else {
				ref.setSimpleName(new String(binding.sourceName()));
				if (((LocalTypeBinding) binding).enclosingMethod == null && binding.enclosingType() != null && binding.enclosingType() instanceof LocalTypeBinding) {
					ref.setDeclaringType(getTypeReference(binding.enclosingType()));
				} else if (binding.enclosingMethod() != null) {
					ref.setSimpleName(JDTTreeBuilderHelper.computeAnonymousName(((SourceTypeBinding) binding).constantPoolName()));
					ref.setDeclaringType(getTypeReference(binding.enclosingType()));
				}
			}
		} else if (binding instanceof SourceTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			if (binding.isAnonymousType()) {
				ref.setSimpleName(JDTTreeBuilderHelper.computeAnonymousName(((SourceTypeBinding) binding).constantPoolName()));
				ref.setDeclaringType(getTypeReference((binding.enclosingType())));
			} else {
				ref.setSimpleName(new String(binding.sourceName()));
				if (binding.enclosingType() != null) {
					ref.setDeclaringType(getTypeReference(binding.enclosingType()));
				} else {
					ref.setPackage(getPackageReference(binding.getPackage()));
				}
				// if(((SourceTypeBinding) binding).typeVariables!=null &&
				// ((SourceTypeBinding) binding).typeVariables.length>0){
				// for (TypeBinding b : ((SourceTypeBinding)
				// binding).typeVariables) {
				// ref.getActualTypeArguments().add(getTypeReference(b));
				// }
				// }
			}
		} else if (binding instanceof ArrayBinding) {
			CtArrayTypeReference<Object> arrayref;
			arrayref = this.jdtTreeBuilder.getFactory().Core().createArrayTypeReference();
			ref = arrayref;
			for (int i = 1; i < binding.dimensions(); i++) {
				CtArrayTypeReference<Object> tmp = this.jdtTreeBuilder.getFactory().Core().createArrayTypeReference();
				arrayref.setComponentType(tmp);
				arrayref = tmp;
			}
			arrayref.setComponentType(getTypeReference(binding.leafComponentType()));
		} else if (binding instanceof PolyTypeBinding) {
			// JDT can't resolve the type of this binding and we only have a string.
			// In this case, we return a type Object because we can't know more about it.
			ref = this.jdtTreeBuilder.getFactory().Type().objectType();
		} else if (binding instanceof ProblemReferenceBinding) {
			// Spoon is able to analyze also without the classpath
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(new String(binding.readableName()));
			final CtReference declaring = this.getDeclaringReferenceFromImports(binding.sourceName());
			setPackageOrDeclaringType(ref, declaring);
		} else if (binding instanceof JDTTreeBuilder.SpoonReferenceBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(new String(binding.sourceName()));
			ref.setDeclaringType(getTypeReference(binding.enclosingType()));
		} else if (binding instanceof IntersectionTypeBinding18) {
			List<CtTypeReference<?>> bounds = new ArrayList<>();
			for (ReferenceBinding superInterface : binding.getIntersectingTypes()) {
				bounds.add(getTypeReference(superInterface));
			}
			ref = this.jdtTreeBuilder.getFactory().Type().createIntersectionTypeReferenceWithBounds(bounds);
		} else {
			throw new RuntimeException("Unknown TypeBinding: " + binding.getClass() + " " + binding);
		}
		bindingCache.remove(binding);
		this.exploringParameterizedBindings.remove(binding);
		return (CtTypeReference<T>) ref;
	}
}]
> but was:<...port.compiler.jdt;

[
import java.util.ArrayList;
import java.util.List;
import org.eclipse.jdt.internal.compiler.ast.Wildcard;
import org.eclipse.jdt.internal.compiler.lookup.ArrayBinding;
import org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.Binding;
import org.eclipse.jdt.internal.compiler.lookup.CaptureBinding;
import org.eclipse.jdt.internal.compiler.lookup.IntersectionTypeBinding18;
import org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding;
import org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;
import org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.TypeBinding;
import org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;
import org.eclipse.jdt.internal.compiler.lookup.WildcardBinding;
import spoon.reflect.reference.CtArrayTypeReference;
import spoon.reflect.reference.CtPackageReference;
import spoon.reflect.reference.CtReference;
import spoon.reflect.reference.CtTypeParameterReference;
import spoon.reflect.reference.CtTypeReference;


public class ReferenceBuilder {

	@SuppressWarnings("unchecked")
	<T> CtTypeReference<T> getTypeReference(TypeBinding binding) {
		if (binding == null) {
			return null;
		}

		CtTypeReference<?> ref = null;

		// When we define a nested class in a method and when the enclosing class of this method
// is a parameterized type binding, JDT give a ParameterizedTypeBinding for the nested class
// and hide the real class in actualType().
// if the type parameter has a super class other than java.lang.Object, we get it
// superClass.superclass() is null if it's java.lang.Object
// this case could happen with Enum<E extends Enum<E>> for example:
// in that case we only want to have E -> Enum -> E
// to conserve the same behavior as JavaReflectionTreeBuilder
// if the type parameter has a super interface, then we'll get it too, as a superclass
// type parameter can only extends an interface or a class, so we don't make the distinction
// in Spoon. Moreover we can only have one extends in a type parameter.
// if it's object we can ignore it
//always create new TypeReference, because clonning from a cache clones invalid SourcePosition
// if(((SourceTypeBinding) binding).typeVariables!=null &&
// ((SourceTypeBinding) binding).typeVariables.length>0){
// for (TypeBinding b : ((SourceTypeBinding)
// binding).typeVariables) {
// ref.getActualTypeArguments().add(getTypeReference(b));
// }
// }
// JDT can't resolve the type of this binding and we only have a string.
// In this case, we return a type Object because we can't know more about it.
// Spoon is able to analyze also without the classpath
if (binding instanceof RawTypeBinding) {
			ref = getTypeReference(((ParameterizedTypeBinding) binding).genericType());
		}// When we define a nested class in a method and when the enclosing class of this method
// is a parameterized type binding, JDT give a ParameterizedTypeBinding for the nested class
// and hide the real class in actualType().
// if the type parameter has a super class other than java.lang.Object, we get it
// superClass.superclass() is null if it's java.lang.Object
// this case could happen with Enum<E extends Enum<E>> for example:
// in that case we only want to have E -> Enum -> E
// to conserve the same behavior as JavaReflectionTreeBuilder
// if the type parameter has a super interface, then we'll get it too, as a superclass
// type parameter can only extends an interface or a class, so we don't make the distinction
// in Spoon. Moreover we can only have one extends in a type parameter.
// if it's object we can ignore it
//always create new TypeReference, because clonning from a cache clones invalid SourcePosition
// if(((SourceTypeBinding) binding).typeVariables!=null &&
// ((SourceTypeBinding) binding).typeVariables.length>0){
// for (TypeBinding b : ((SourceTypeBinding)
// binding).typeVariables) {
// ref.getActualTypeArguments().add(getTypeReference(b));
// }
// }
// JDT can't resolve the type of this binding and we only have a string.
// In this case, we return a type Object because we can't know more about it.
// Spoon is able to analyze also without the classpath
elseif (binding instanceof ParameterizedTypeBinding) {
			if (binding.actualType() != null && binding.actualType() instanceof LocalTypeBinding) {
				// When we define a nested class in a method and when the enclosing class of this method
				// is a parameterized type binding, JDT give a ParameterizedTypeBinding for the nested class
				// and hide the real class in actualType().
				ref = getTypeReference(binding.actualType());
			} else {
				ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
				this.exploringParameterizedBindings.put(binding, ref);
				if (binding.isAnonymousType()) {
					ref.setSimpleName("");
				} else {
					ref.setSimpleName(String.valueOf(binding.sourceName()));
					if (binding.enclosingType() != null) {
						ref.setDeclaringType(getTypeReference(binding.enclosingType()));
					} else {
						ref.setPackage(getPackageReference(binding.getPackage()));
					}
				}
			}
			if (binding.actualType() instanceof MissingTypeBinding) {
				ref = getTypeReference(binding.actualType());
			}

			if (((ParameterizedTypeBinding) binding).arguments != null) {
				for (TypeBinding b : ((ParameterizedTypeBinding) binding).arguments) {
					if (bindingCache.containsKey(b)) {
						ref.addActualTypeArgument(getCtCircularTypeReference(b));
					} else {
						if (!this.exploringParameterizedBindings.containsKey(b)) {
							this.exploringParameterizedBindings.put(b, null);
							CtTypeReference typeRefB = getTypeReference(b);
							this.exploringParameterizedBindings.put(b, typeRefB);
							ref.addActualTypeArgument(typeRefB);
						} else {
							CtTypeReference typeRefB = this.exploringParameterizedBindings.get(b);
							if (typeRefB != null) {
								ref.addActualTypeArgument(typeRefB.clone());
							}
						}
					}
				}
			}
		}elseif (binding instanceof MissingTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(new String(binding.sourceName()));
			ref.setPackage(getPackageReference(binding.getPackage()));
			if (!this.jdtTreeBuilder.getContextBuilder().ignoreComputeImports) {
				final CtReference declaring = this.getDeclaringReferenceFromImports(binding.sourceName());
				if (declaring instanceof CtPackageReference) {
					ref.setPackage((CtPackageReference) declaring);
				} else if (declaring instanceof CtTypeReference) {
					ref.setDeclaringType((CtTypeReference) declaring);
				}
			}
		}elseif (binding instanceof BinaryTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			if (binding.enclosingType() != null) {
				ref.setDeclaringType(getTypeReference(binding.enclosingType()));
			} else {
				ref.setPackage(getPackageReference(binding.getPackage()));
			}
			ref.setSimpleName(new String(binding.sourceName()));
		}elseif (binding instanceof TypeVariableBinding) {
			boolean oldBounds = bounds;

			if (binding instanceof CaptureBinding) {
				ref = this.jdtTreeBuilder.getFactory().Core().createWildcardReference();
				bounds = true;
			} else {
				TypeVariableBinding typeParamBinding = (TypeVariableBinding) binding;
				ReferenceBinding superClass = typeParamBinding.superclass;
				ReferenceBinding[] superInterfaces = typeParamBinding.superInterfaces();

				CtTypeReference refSuperClass = null;

				// if the type parameter has a super class other than java.lang.Object, we get it
				// superClass.superclass() is null if it's java.lang.Object
				if (superClass != null && !(superClass.superclass() == null)) {

					// this case could happen with Enum<E extends Enum<E>> for example:
					// in that case we only want to have E -> Enum -> E
					// to conserve the same behavior as JavaReflectionTreeBuilder
					if (!(superClass instanceof ParameterizedTypeBinding) || !this.exploringParameterizedBindings.containsKey(superClass)) {
						refSuperClass = this.getTypeReference(superClass);
					}

				// if the type parameter has a super interface, then we'll get it too, as a superclass
				// type parameter can only extends an interface or a class, so we don't make the distinction
				// in Spoon. Moreover we can only have one extends in a type parameter.
				} else if (superInterfaces != null && superInterfaces.length == 1) {
					refSuperClass = this.getTypeReference(superInterfaces[0]);
				}

				ref = this.jdtTreeBuilder.getFactory().Core().createTypeParameterReference();
				ref.setSimpleName(new String(binding.sourceName()));

				if (refSuperClass != null) {
					((CtTypeParameterReference) ref).addBound(refSuperClass);
				}
			}
			TypeVariableBinding b = (TypeVariableBinding) binding;
			if (bounds) {
				if (b instanceof CaptureBinding && ((CaptureBinding) b).wildcard != null) {
					bounds = oldBounds;
					return getTypeReference(((CaptureBinding) b).wildcard);
				} else if (b.superclass != null && b.firstBound == b.superclass) {
					bounds = false;
					bindingCache.put(binding, ref);
					((CtTypeParameterReference) ref).setBoundingType(getTypeReference(b.superclass));
					bounds = oldBounds;
				}
			}
			if (bounds && b.superInterfaces != null && b.superInterfaces != Binding.NO_SUPERINTERFACES) {
				bindingCache.put(binding, ref);
				List<CtTypeReference<?>> bounds = new ArrayList<>();
				CtTypeParameterReference typeParameterReference = (CtTypeParameterReference) ref;
				if (!(typeParameterReference.isDefaultBoundingType())) { // if it's object we can ignore it
					bounds.add(typeParameterReference.getBoundingType());
				}
				for (ReferenceBinding superInterface : b.superInterfaces) {
					bounds.add(getTypeReference(superInterface));
				}
				((CtTypeParameterReference) ref).setBoundingType(this.jdtTreeBuilder.getFactory().Type().createIntersectionTypeReferenceWithBounds(bounds));
			if (binding instanceof CaptureBinding) {
				bounds = false;
			}elseif (binding instanceof BaseTypeBinding) {
			String name = new String(binding.sourceName());
			//always create new TypeReference, because clonning from a cache clones invalid SourcePosition
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(name);
		} else if (binding instanceof WildcardBinding) {
			WildcardBinding wildcardBinding = (WildcardBinding) binding;
			ref = this.jdtTreeBuilder.getFactory().Core().createWildcardReference();

			if (wildcardBinding.boundKind == Wildcard.SUPER && ref instanceof CtTypeParameterReference) {
				((CtTypeParameterReference) ref).setUpper(false);
			}

			if (wildcardBinding.bound != null && ref instanceof CtTypeParameterReference) {
				if (bindingCache.containsKey(wildcardBinding.bound)) {
					((CtTypeParameterReference) ref).setBoundingType(getCtCircularTypeReference(wildcardBinding.bound));
				} else {


					((CtTypeParameterReference) ref).setBoundingType(getTypeReference(((WildcardBinding) binding).bound));
				}
			}
		} else if (binding instanceof LocalTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			if (binding.isAnonymousType()) {
				ref.setSimpleName(JDTTreeBuilderHelper.computeAnonymousName(((SourceTypeBinding) binding).constantPoolName()));
				ref.setDeclaringType(getTypeReference((binding.enclosingType())));
			} else {
				ref.setSimpleName(new String(binding.sourceName()));
				if (((LocalTypeBinding) binding).enclosingMethod == null && binding.enclosingType() != null && binding.enclosingType() instanceof LocalTypeBinding) {
					ref.setDeclaringType(getTypeReference(binding.enclosingType()));
				} else if (binding.enclosingMethod() != null) {
					ref.setSimpleName(JDTTreeBuilderHelper.computeAnonymousName(((SourceTypeBinding) binding).constantPoolName()));
					ref.setDeclaringType(getTypeReference(binding.enclosingType()));
				}
			}
		} else if (binding instanceof SourceTypeBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			if (binding.isAnonymousType()) {
				ref.setSimpleName(JDTTreeBuilderHelper.computeAnonymousName(((SourceTypeBinding) binding).constantPoolName()));
				ref.setDeclaringType(getTypeReference((binding.enclosingType())));
			} else {
				ref.setSimpleName(new String(binding.sourceName()));
				if (binding.enclosingType() != null) {
					ref.setDeclaringType(getTypeReference(binding.enclosingType()));
				} else {
					ref.setPackage(getPackageReference(binding.getPackage()));
				}
				// if(((SourceTypeBinding) binding).typeVariables!=null &&
				// ((SourceTypeBinding) binding).typeVariables.length>0){
				// for (TypeBinding b : ((SourceTypeBinding)
				// binding).typeVariables) {
				// ref.getActualTypeArguments().add(getTypeReference(b));
				// }
				// }
			}
		} else if (binding instanceof ArrayBinding) {
			CtArrayTypeReference<Object> arrayref;
			arrayref = this.jdtTreeBuilder.getFactory().Core().createArrayTypeReference();
			ref = arrayref;
			for (int i = 1; i < binding.dimensions(); i++) {
				CtArrayTypeReference<Object> tmp = this.jdtTreeBuilder.getFactory().Core().createArrayTypeReference();
				arrayref.setComponentType(tmp);
				arrayref = tmp;
			}
			arrayref.setComponentType(getTypeReference(binding.leafComponentType()));
		} else if (binding instanceof PolyTypeBinding) {
			// JDT can't resolve the type of this binding and we only have a string.
			// In this case, we return a type Object because we can't know more about it.
			ref = this.jdtTreeBuilder.getFactory().Type().objectType();
		} else if (binding instanceof ProblemReferenceBinding) {
			// Spoon is able to analyze also without the classpath
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(new String(binding.readableName()));
			final CtReference declaring = this.getDeclaringReferenceFromImports(binding.sourceName());
			setPackageOrDeclaringType(ref, declaring);
		} else if (binding instanceof JDTTreeBuilder.SpoonReferenceBinding) {
			ref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();
			ref.setSimpleName(new String(binding.sourceName()));
			ref.setDeclaringType(getTypeReference(binding.enclosingType()));
		} else if (binding instanceof IntersectionTypeBinding18) {
			List<CtTypeReference<?>> bounds = new ArrayList<>();
			for (ReferenceBinding superInterface : binding.getIntersectingTypes()) {
				bounds.add(getTypeReference(superInterface));
			}
			ref = this.jdtTreeBuilder.getFactory().Type().createIntersectionTypeReferenceWithBounds(bounds);
		} else {
			throw new RuntimeException("Unknown TypeBinding: " + binding.getClass() + " " + binding);
		}
		bindingCache.remove(binding);
		this.exploringParameterizedBindings.remove(binding);
		return (CtTypeReference<T>) ref;
}
]
>
[ERROR]   PrintChangesTest.testPrintUnchaged:38 expected:<...inter.testclasses;

[import java.util.ArrayList;
import java.util.List;

/**
 * The content of this file 
 * 

 * 		should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
	extends ArrayList<T /* let's confuse > it */ > implements List<T>,
	Cloneable
{
	
	
	/**/
	final
	//
	private String string = "a"
			+ "b" + "c"+"d";
	
	//and spaces here are wanted too
	
	
	public <T, K> void andSomeOtherMethod(
			int param1,
			String param2         , List<?>[][] ... twoDArrayOfLists)
	{/**/
		System.out.println("aaa"
				+ "xyz");
	/*x*/}
	List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

//and what about this comment? ]> but was:<...inter.testclasses;

[
/**
 * The content of this file 
 * 

 * 		should not be changed
 * Because DJPP should print only modified content again 
 */
public
@Deprecated
abstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged<T, K> /*before extends*/ 
	extends ArrayList<T /* let's confuse > it */ > implements List<T>,
	Cloneable
{
	
	
	/**/
	final
	//
	private String string = "a"
			+ "b" + "c"+"d";
	
	//and spaces here are wanted too
	
	
	public <T, K> void andSomeOtherMethod(
			int param1,
			String param2         , List<?>[][] ... twoDArrayOfLists)
	{/**/
		System.out.println("aaa"
				+ "xyz");
	/*x*/}
	List<?>[][] twoDArrayOfLists = new List<?>[7][];
}

]>
[ERROR] Errors: 
[ERROR]   SourceFragmentTest.testBodyHolderSourcePositionFragment:73 » Spoon Mandatory p...
[ERROR]   SourceFragmentTest.testDeclarationSourcePositionFragment:40 » Spoon Mandatory ...
[ERROR]   SourceFragmentTest.testLocalizationOfSourceFragment:178->createFragment:192 » Spoon
[ERROR]   SourceFragmentTest.testSourceFragmentAddChild:112->createFragment:192 » Spoon ...
[ERROR]   SourceFragmentTest.testSourceFragmentWrapChild:143->createFragment:192 » Spoon
[ERROR]   SourceFragmentTest.testSourceFragmentWrapChildrenAndSiblings:155->createFragment:192 » Spoon
[ERROR]   SourceFragmentTest.testSourcePositionFragment:29 » Spoon Mandatory parameter c...
[ERROR]   LinesTest.testIdenticalPrettyPrinter:102 » IndexOutOfBounds Index: 2, Size: 2
[INFO] 
[ERROR] Tests run: 1547, Failures: 7, Errors: 8, Skipped: 4
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 15:51 min
[INFO] Finished at: 2018-07-09T22:36:47+02:00
[INFO] Final Memory: 24M/529M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.21.0:test (default-test) on project spoon-core: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/INRIA/spoon/401928806/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
