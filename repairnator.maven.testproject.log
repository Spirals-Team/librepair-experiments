[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Mix-them 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] >>> maven-pmd-plugin:3.7:check (default) > :pmd @ MixThem >>>
[INFO] 
[INFO] --- maven-pmd-plugin:3.7:pmd (pmd) @ MixThem ---
[WARNING] Unable to locate Source XRef to link to - DISABLED
[INFO] 
[INFO] <<< maven-pmd-plugin:3.7:check (default) < :pmd @ MixThem <<<
[INFO] 
[INFO] --- maven-pmd-plugin:3.7:check (default) @ MixThem ---
[INFO] 
[INFO] 
[INFO] >>> maven-pmd-plugin:3.7:cpd-check (default) > :cpd @ MixThem >>>
[INFO] 
[INFO] --- maven-pmd-plugin:3.7:cpd (cpd) @ MixThem ---
[WARNING] Unable to locate Source XRef to link to - DISABLED
[INFO] 
[INFO] <<< maven-pmd-plugin:3.7:cpd-check (default) < :cpd @ MixThem <<<
[INFO] 
[INFO] --- maven-pmd-plugin:3.7:cpd-check (default) @ MixThem ---
[INFO] 
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.1:prepare-agent (default) @ MixThem ---
[INFO] argLine set to -javaagent:/root/./workspace/Innovimax-SARL/mix-them/389650136/.m2/org/jacoco/org.jacoco.agent/0.8.1/org.jacoco.agent-0.8.1-runtime.jar=destfile=/root/workspace/Innovimax-SARL/mix-them/389650136/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ MixThem ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /root/workspace/Innovimax-SARL/mix-them/389650136/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:compile (default-compile) @ MixThem ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ MixThem ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 139 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:testCompile (default-testCompile) @ MixThem ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ MixThem ---
[INFO] Surefire report directory: /root/workspace/Innovimax-SARL/mix-them/389650136/target/surefire-reports
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.pom (3 KB at 4.5 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.12.4/surefire-providers-2.12.4.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.12.4/surefire-providers-2.12.4.pom (3 KB at 60.3 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.jar
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.jar (37 KB at 487.3 KB/sec)

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running innovimax.mixthem.BasicTest
testZipOneFile: Second input entry missing.
testEmptyArgs: First input file argument missing.
  
Usage:
  
  mix-them [char|byte] <file1> <file2>[ <file3>... <fileN>]
  (will generate on standard out any file based on file1 to fileN)
  (by default it assumes that all files are character based, not binary)
  
  mix-them [char|byte] <rule> <file1> <file2>[ <file3>... <fileN>]
  (will generate on standard out a file based on the rule)
  
  mix-them [char|byte] <index1> <index2>[ <index3>...] <rule> <file1> <file2>[ <file3>... <fileN>]
  (will generate on standard out a file based on the rule and a selection of files designed by their index)
  
  mix-them --zip <zipfile>
  mix-them --jar <jarfile>
  (will generate on standard out any file based on entry1 to entryN of zip/jar file)
  (by default it assumes zip/jar entries are character based, not binary)
  
  mix-them <rule> --zip <zipFile>
  mix-them <rule> --jar <jarFile>
  (will generate on standard out a file based on the rule)
  
  mix-them <index1> <index2>[ <index3>...] <rule> --zip <zipFile>
  mix-them <index1> <index2>[ <index3>...] <rule> --jar <jarFile>
  (will generate on standard out a file based on the rule and a selection of entries designed by their index)
  
Here are the list of rules:
  -+: will output all files in order or a selection of files designed by a list of index
  -alt-line: will output one line of each starting with first line of file1
  -alt-char: will output one char of each starting with first char of file1
  -alt-byte: will output one byte of each starting with first byte of file1
  -random-alt-line [#seed]: will output one line of each code randomly based on a seed for reproducability
    (#seed is an integer value)
  -random-alt-char [#seed]: will output one char of each code randomly based on a seed for reproducability
    (#seed is an integer value)
  -random-alt-byte [#seed]: will output one byte of each code randomly based on a seed for reproducability
    (#seed is an integer value)
  -join [#cols]: will output merging of lines that have common occurrence determined by a column index or first column by default
    (#cols is a list of integer separated by a comma; starting by a comma or 2 consecutives commas mean a default value)
  -zip-line [#sep]: will output zip of line from file1 and file2 to fileN
    (#sep is a string value)
  -zip-char [#sep]: will output zip of char from file1 and file2 to fileN
    (#sep is a string value)
  -zip-cell [#sep]: will output zip of cell from file1 and file2 to fileN
    (#sep is a string value)
  
testZipEmptyArgs: Zip/Jar argument missing.
testJarEmpty: First input entry missing.
testWrongArgs: Input file not found: ghost1
testWrongSeedParam: #seed parameter is incorrect: val
testZipWrongArgs: Zip/Jar file not found: zip/ghost1
testUnknownRule: Rule argument is incorrect: -x
testUnexpectedParam: Input file not found: alt-line
testNotAParam: Input file not found: 1789
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.449 sec
Running innovimax.mixthem.MainTest
RANGE=[1, 1]
CHANNEL=0 LINE=1
RANGE=[2, 2]
CHANNEL=1 LINE=2
RANGE=[3, 3]
CHANNEL=0 LINE=3
RANGE=[4, 4]
CHANNEL=1 LINE=4
RANGE=[5, 5]
CHANNEL=0 LINE=5
RANGE=[6, 6]
CHANNEL=1 LINE=6
RANGE=[7, 7]
CHANNEL=0 LINE=7
RANGE=[8, 8]
CHANNEL=1 LINE=8
RANGE=[9, 9]
CHANNEL=0 LINE=9
RANGE=[10, 10]
CHANNEL=1 LINE=10
12345678910  
Usage:
  
  mix-them [char|byte] <file1> <file2>[ <file3>... <fileN>]
  (will generate on standard out any file based on file1 to fileN)
  (by default it assumes that all files are character based, not binary)
  
  mix-them [char|byte] <rule> <file1> <file2>[ <file3>... <fileN>]
  (will generate on standard out a file based on the rule)
  
  mix-them [char|byte] <index1> <index2>[ <index3>...] <rule> <file1> <file2>[ <file3>... <fileN>]
  (will generate on standard out a file based on the rule and a selection of files designed by their index)
  
  mix-them --zip <zipfile>
  mix-them --jar <jarfile>
  (will generate on standard out any file based on entry1 to entryN of zip/jar file)
  (by default it assumes zip/jar entries are character based, not binary)
  
  mix-them <rule> --zip <zipFile>
  mix-them <rule> --jar <jarFile>
  (will generate on standard out a file based on the rule)
  
  mix-them <index1> <index2>[ <index3>...] <rule> --zip <zipFile>
  mix-them <index1> <index2>[ <index3>...] <rule> --jar <jarFile>
  (will generate on standard out a file based on the rule and a selection of entries designed by their index)
  
Here are the list of rules:
  -+: will output all files in order or a selection of files designed by a list of index
  -alt-line: will output one line of each starting with first line of file1
  -alt-char: will output one char of each starting with first char of file1
  -alt-byte: will output one byte of each starting with first byte of file1
  -random-alt-line [#seed]: will output one line of each code randomly based on a seed for reproducability
    (#seed is an integer value)
  -random-alt-char [#seed]: will output one char of each code randomly based on a seed for reproducability
    (#seed is an integer value)
  -random-alt-byte [#seed]: will output one byte of each code randomly based on a seed for reproducability
    (#seed is an integer value)
  -join [#cols]: will output merging of lines that have common occurrence determined by a column index or first column by default
    (#cols is a list of integer separated by a comma; starting by a comma or 2 consecutives commas mean a default value)
  -zip-line [#sep]: will output zip of line from file1 and file2 to fileN
    (#sep is a string value)
  -zip-char [#sep]: will output zip of char from file1 and file2 to fileN
    (#sep is a string value)
  -zip-cell [#sep]: will output zip of cell from file1 and file2 to fileN
    (#sep is a string value)
  
1
2
3
4
5
6
7
8
9
10
A
B
C
D
E
F
G
H
I
J
K
L
M
N
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.131 sec
Running innovimax.mixthem.GenericTest
1
2
3
4
5
6
7
8
9
10
A
B
C
D
E
F
G
H
I
J
K
L
M
N
1
2
3
4
5
6
7
8
9
10
A
B
C
D
E
F
G
H
I
J
K
L
M
N
RANGE=[1, A]
CHANNEL=0 LINE=1
RANGE=[2, B]
CHANNEL=1 LINE=B
RANGE=[3, C]
CHANNEL=0 LINE=3
RANGE=[4, D]
CHANNEL=1 LINE=D
RANGE=[5, E]
CHANNEL=0 LINE=5
RANGE=[6, F]
CHANNEL=1 LINE=F
RANGE=[7, G]
CHANNEL=0 LINE=7
RANGE=[8, H]
CHANNEL=1 LINE=H
RANGE=[9, I]
CHANNEL=0 LINE=9
RANGE=[10, J]
CHANNEL=1 LINE=J
RANGE=[null, K]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=K
RANGE=[null, L]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=L
RANGE=[null, M]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=M
RANGE=[null, N]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=N
RANGE=[1, A]
CHANNEL=0 LINE=1
RANGE=[2, B]
CHANNEL=1 LINE=B
RANGE=[3, C]
CHANNEL=0 LINE=3
RANGE=[4, D]
CHANNEL=1 LINE=D
RANGE=[5, E]
CHANNEL=0 LINE=5
RANGE=[6, F]
CHANNEL=1 LINE=F
RANGE=[7, G]
CHANNEL=0 LINE=7
RANGE=[8, H]
CHANNEL=1 LINE=H
RANGE=[9, I]
CHANNEL=0 LINE=9
RANGE=[10, J]
CHANNEL=1 LINE=J
RANGE=[null, K]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=K
RANGE=[null, L]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=L
RANGE=[null, M]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=M
RANGE=[null, N]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=N
1B3D5F7H9JKLMNRANGE=[1, A]
CHANNEL=1 LINE=A
RANGE=[2, B]
CHANNEL=1 LINE=B
RANGE=[3, C]
CHANNEL=1 LINE=C
RANGE=[4, D]
CHANNEL=0 LINE=4
RANGE=[5, E]
CHANNEL=1 LINE=E
RANGE=[6, F]
CHANNEL=1 LINE=F
RANGE=[7, G]
CHANNEL=1 LINE=G
RANGE=[8, H]
CHANNEL=0 LINE=8
RANGE=[9, I]
CHANNEL=0 LINE=9
RANGE=[10, J]
CHANNEL=1 LINE=J
RANGE=[null, K]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=K
RANGE=[null, L]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=L
RANGE=[null, M]
CHANNEL=1 LINE=M
RANGE=[null, N]
CHANNEL=1 LINE=N
RANGE=[1, A]
CHANNEL=1 LINE=A
RANGE=[2, B]
CHANNEL=1 LINE=B
RANGE=[3, C]
CHANNEL=1 LINE=C
RANGE=[4, D]
CHANNEL=0 LINE=4
RANGE=[5, E]
CHANNEL=1 LINE=E
RANGE=[6, F]
CHANNEL=1 LINE=F
RANGE=[7, G]
CHANNEL=1 LINE=G
RANGE=[8, H]
CHANNEL=0 LINE=8
RANGE=[9, I]
CHANNEL=0 LINE=9
RANGE=[10, J]
CHANNEL=1 LINE=J
RANGE=[null, K]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=K
RANGE=[null, L]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=L
RANGE=[null, M]
CHANNEL=1 LINE=M
RANGE=[null, N]
CHANNEL=1 LINE=N
ABC4EFG89JKLMNRANGE=[1, A]
CHANNEL=1 LINE=A
RANGE=[2, B]
CHANNEL=1 LINE=B
RANGE=[3, C]
CHANNEL=1 LINE=C
RANGE=[4, D]
CHANNEL=0 LINE=4
RANGE=[5, E]
CHANNEL=1 LINE=E
RANGE=[6, F]
CHANNEL=1 LINE=F
RANGE=[7, G]
CHANNEL=1 LINE=G
RANGE=[8, H]
CHANNEL=0 LINE=8
RANGE=[9, I]
CHANNEL=0 LINE=9
RANGE=[10, J]
CHANNEL=1 LINE=J
RANGE=[null, K]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=K
RANGE=[null, L]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=L
RANGE=[null, M]
CHANNEL=1 LINE=M
RANGE=[null, N]
CHANNEL=1 LINE=N
RANGE=[1, A]
CHANNEL=1 LINE=A
RANGE=[2, B]
CHANNEL=1 LINE=B
RANGE=[3, C]
CHANNEL=1 LINE=C
RANGE=[4, D]
CHANNEL=0 LINE=4
RANGE=[5, E]
CHANNEL=1 LINE=E
RANGE=[6, F]
CHANNEL=1 LINE=F
RANGE=[7, G]
CHANNEL=1 LINE=G
RANGE=[8, H]
CHANNEL=0 LINE=8
RANGE=[9, I]
CHANNEL=0 LINE=9
RANGE=[10, J]
CHANNEL=1 LINE=J
RANGE=[null, K]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=K
RANGE=[null, L]
CHANNEL=0 LINE=null
NEW_CHANNEL=1 LINE=L
RANGE=[null, M]
CHANNEL=1 LINE=M
RANGE=[null, N]
CHANNEL=1 LINE=N
ABC4EFG89JKLMN1B3D5F7H9JKLMN
ABC4EFG89JKLMN
ABC4EFG89JKLMN
1 25.00 Red Beaunes France 25.00 Beaunes Great!
2 15.50 White Reisling Germany 15.50 Reisling Terrible!
3 8.90 Red Riocha Spain 8.90 Riocha Meh
25.00 1 Red Beaunes France 1 Beaunes Great!
15.50 2 White Reisling Germany 2 Reisling Terrible!
8.90 3 Red Riocha Spain 3 Riocha Meh
Beaunes 1 25.00 Red France 1 25.00 Great!
Reisling 2 15.50 White Germany 2 15.50 Terrible!
Riocha 3 8.90 Red Spain 3 8.90 Meh
apple orangered blue gold
bananagreen purple
cherry lemon peachsilver yellow
apple orange,red blue gold
banana,green purple
cherry lemon peach,silver yellow
applered orangeblue
bananagreen
cherrysilver lemonyellow
apple,red orange,blue
banana,green
cherry,silver lemon,yellow
1 25.00 Red Beaunes France 25.00 Beaunes Great!
2 15.50 White Reisling Germany 15.50 Reisling Terrible!
RANGE=[A, 1]
CHANNEL=0 LINE=A
RANGE=[B, 2]
CHANNEL=1 LINE=2
RANGE=[C, 3]
CHANNEL=0 LINE=C
RANGE=[D, 4]
CHANNEL=1 LINE=4
RANGE=[E, 5]
CHANNEL=0 LINE=E
RANGE=[F, 6]
CHANNEL=1 LINE=6
RANGE=[G, 7]
CHANNEL=0 LINE=G
RANGE=[H, 8]
CHANNEL=1 LINE=8
RANGE=[I, 9]
CHANNEL=0 LINE=I
RANGE=[J, 10]
CHANNEL=1 LINE=10
RANGE=[K, null]
CHANNEL=0 LINE=K
RANGE=[L, null]
CHANNEL=1 LINE=null
NEW_CHANNEL=0 LINE=L
RANGE=[M, null]
CHANNEL=1 LINE=null
NEW_CHANNEL=0 LINE=M
RANGE=[N, null]
CHANNEL=1 LINE=null
NEW_CHANNEL=0 LINE=N
RANGE=[A, 1]
CHANNEL=0 LINE=A
RANGE=[B, 2]
CHANNEL=1 LINE=2
RANGE=[C, 3]
CHANNEL=0 LINE=C
RANGE=[D, 4]
CHANNEL=1 LINE=4
RANGE=[E, 5]
CHANNEL=0 LINE=E
RANGE=[F, 6]
CHANNEL=1 LINE=6
RANGE=[G, 7]
CHANNEL=0 LINE=G
RANGE=[H, 8]
CHANNEL=1 LINE=8
RANGE=[I, 9]
CHANNEL=0 LINE=I
RANGE=[J, 10]
CHANNEL=1 LINE=10
RANGE=[K, null]
CHANNEL=0 LINE=K
RANGE=[L, null]
CHANNEL=1 LINE=null
NEW_CHANNEL=0 LINE=L
RANGE=[M, null]
CHANNEL=1 LINE=null
NEW_CHANNEL=0 LINE=M
RANGE=[N, null]
CHANNEL=1 LINE=null
NEW_CHANNEL=0 LINE=N
A2C4E6G8I10KLMNA2C4E6G8I
KLMN
1 25.00 Red Beaunes France 25.00 Beaunes Great!
4 8.90 Red Riocha Spain 8.90 Riocha Meh
apple orangered blue gold
bananagreen purple
applered orangeblue
bananagreen
agprpeleen  orreadn gbel ubea
a,gp,rp,el,ee,n , o,rr,ea,dn, g,be,l ,ub,ea,
garpepelne  roerda nbgleu eb
a1 red apple france apple
2 yellow lemon italy
3 green indonesia papaye
apple 1 red 1 france
251308 30000 Preeti
251311 25000 Joseph
251315 10000 Abishek
251321 12255 Ankita
251308 30000 Preeti
251311 25000 Joseph
251315 10000 Abishek
251321 12255 Ankita
251308 30000 Preeti
251311 25000 Joseph
251315 10000 Abishek
251321 12255 Ankita
251308 30000 Preeti
251311 25000 Joseph
251315 10000 Abishek
251321 12255 Ankita
b 2 B bb 22
d 4 D dd 44
1B3d5f78ijk
1Aa2Bb3Cc4Dd5
e1XYZAXYZa2XYZBXYZb3XYZCXYZc4XYZDXYZd5XYZ
XYZe123456789
ABCD
abcdef
ZYXWVUTSRQP
zyx
ABCD
ZYXWVUTSRQP
123456789
abcdef
zyx
1YxW
f
S9QP
1AaZz2BbYy3CcXx4DdW
2 b B bb BB bbb BBB bbbb BBBB
4 d D dd DD ddd DDD dddd DDDD
2 b B bb BB bbb BBB bbbb BBBB
4 d D dd DD ddd DDD dddd DDDD
aBcDeFgH
1tU4wX7z
1 A AA
2 B BB
3 C CC
4 D DD
5 E EE
1 a aa 10
2 b bb 20
3 c cc 30
4 d dd 40
5 e ee 50
1
2
3
4
5
6
7
8
9
10
A
B
C
D
E
F
G
H
I
J
K
L
M
N
1
2
3
4
5
6
7
8
9
10
A
B
C
D
E
F
G
H
I
J
K
L
M
N
1B3D5F7H9JKLMN
ABC4EFG89JKLMN
ABC4EFG89JKLMN
1B3D5F7H
JKM
NOP
1Bc4
f7h9jk
1B3d5f78ijk
123456789
ABCD
abcdef
ZYXWVUTSRQP
zyx
ABCD
ZYXWVUTSRQP
123456789
abcdef
zyx
1BcW5fT8R
P
1YxW
f
S9QP
Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 1.626 sec <<< FAILURE!
testCharRules(innovimax.mixthem.GenericTest)  Time elapsed: 1.478 sec  <<< FAILURE!
java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at innovimax.mixthem.GenericTest.testRules(GenericTest.java:115)
	at innovimax.mixthem.GenericTest.testCharRules(GenericTest.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)


Results :

Failed tests:   testCharRules(innovimax.mixthem.GenericTest)

Tests run: 22, Failures: 1, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 8.356 s
[INFO] Finished at: 2018-06-08T12:33:02+02:00
[INFO] Final Memory: 41M/811M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test (default-test) on project MixThem: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/Innovimax-SARL/mix-them/389650136/target/surefire-reports for the individual test results.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
