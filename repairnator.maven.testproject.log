[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Voting for restaurants 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ votingforrestaurants ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 11 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ votingforrestaurants ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ votingforrestaurants ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ votingforrestaurants ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ votingforrestaurants ---
Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.pom
3/4 KB   
4/4 KB   
         
Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.pom (4 KB at 8.5 KB/sec)
Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.20.1/surefire-providers-2.20.1.pom
3/3 KB   
3/3 KB   
         
Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.20.1/surefire-providers-2.20.1.pom (3 KB at 123.0 KB/sec)
Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.jar
3/81 KB   
5/81 KB   
8/81 KB   
11/81 KB   
13/81 KB   
16/81 KB   
19/81 KB   
21/81 KB   
24/81 KB   
27/81 KB   
29/81 KB   
32/81 KB   
36/81 KB   
40/81 KB   
44/81 KB   
48/81 KB   
52/81 KB   
56/81 KB   
60/81 KB   
64/81 KB   
68/81 KB   
72/81 KB   
76/81 KB   
80/81 KB   
81/81 KB   
           
Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.jar (81 KB at 2008.7 KB/sec)
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running ru.neustupov.votingforrestaurants.web.vote.AdminVoteRestControllerTest
11:22:59.079 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithVotesAndMenus
11:22:59.212 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method delete
11:22:59.220 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithVotes
11:22:59.223 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithMenus
11:22:59.252 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getByUserIdAndDate
11:22:59.260 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAll
11:22:59.264 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getByUserIdAndRestId
11:22:59.270 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithRestaurantAndUser
11:22:59.277 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAllByUserId
11:22:59.291 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithUser
11:22:59.294 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAllByRestaurantId
11:22:59.299 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method delete
11:22:59.306 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAllForCurrentDate
11:22:59.314 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithRestaurant
11:22:59.351 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithVotes
11:22:59.355 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method delete
11:22:59.362 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAll
11:22:59.372 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getByEmail
11:22:59.373 DEBUG o.s.data.jpa.repository.query.NamedQuery.lookupFrom:122 - Looking up named query User.getByEmail
11:22:59.375 DEBUG o.s.data.jpa.repository.query.NamedQuery.hasNamedQuery:104 - Did not find named query User.getByEmail
11:22:59.434 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithRestaurant
11:22:59.438 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method delete
11:22:59.444 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithRestaurantAndMeals
11:22:59.447 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAll
11:22:59.452 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method findByRestaurantIdAndAddDate
11:22:59.471 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAll
11:22:59.475 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithMenu
11:22:59.479 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method delete
11:22:59.510 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.doGetConnection:114 - Fetching JDBC Connection from DataSource
11:22:59.513 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/initDB_hsql.sql]
11:22:59.523 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP TABLE user_roles IF EXISTS
11:22:59.524 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP TABLE votes IF EXISTS
11:22:59.524 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP TABLE users IF EXISTS
11:22:59.525 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP TABLE meals IF EXISTS
11:22:59.525 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP TABLE menus IF EXISTS
11:22:59.526 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP TABLE restaurants IF EXISTS
11:22:59.526 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP SEQUENCE global_seq IF EXISTS
11:22:59.527 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000
11:22:59.530 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE TABLE USERS ( id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY, name VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, registered TIMESTAMP DEFAULT now() NOT NULL, enabled BOOLEAN DEFAULT TRUE NOT NULL, CONSTRAINT users_unique_email_idx UNIQUE (email) )
11:22:59.531 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE TABLE USER_ROLES ( user_id INTEGER NOT NULL, role VARCHAR(255), CONSTRAINT user_roles_idx UNIQUE (user_id, role), FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE )
11:22:59.532 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE TABLE RESTAURANTS ( id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY, name VARCHAR(255) NOT NULL, CONSTRAINT restaurant_name_idx UNIQUE (name) )
11:22:59.534 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE TABLE VOTES ( id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ NOT NULL, user_id INTEGER NOT NULL, date DATE DEFAULT CURRENT_DATE NOT NULL, restaurant INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE, FOREIGN KEY (restaurant) REFERENCES restaurants (id) ON DELETE CASCADE, CONSTRAINT votes_unique_user_date_idx UNIQUE (user_id, date) )
11:22:59.536 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE TABLE MENUS ( id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY, id_rest INTEGER NOT NULL, add_date DATE DEFAULT CURRENT_DATE NOT NULL, FOREIGN KEY (id_rest) REFERENCES RESTAURANTS (id) ON DELETE CASCADE, CONSTRAINT menus_unique_id_datetime_idx UNIQUE (id_rest, add_date) )
11:22:59.537 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE TABLE MEALS ( id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ, id_menu INTEGER NOT NULL, name VARCHAR(255) NOT NULL, price INT NOT NULL, FOREIGN KEY (id_menu) REFERENCES MENUS (id) ON DELETE CASCADE )
11:22:59.538 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/initDB_hsql.sql] in 24 ms.
11:22:59.538 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:22:59.544 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DELETE FROM user_roles
11:22:59.544 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:477 - SQLWarning ignored: SQL state '02000', error code '-1100', message [no data]
11:22:59.546 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DELETE FROM votes
11:22:59.546 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:477 - SQLWarning ignored: SQL state '02000', error code '-1100', message [no data]
11:22:59.547 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DELETE FROM users
11:22:59.547 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:477 - SQLWarning ignored: SQL state '02000', error code '-1100', message [no data]
11:22:59.548 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DELETE FROM meals
11:22:59.548 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:477 - SQLWarning ignored: SQL state '02000', error code '-1100', message [no data]
11:22:59.549 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DELETE FROM menus
11:22:59.549 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:477 - SQLWarning ignored: SQL state '02000', error code '-1100', message [no data]
11:22:59.550 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DELETE FROM restaurants
11:22:59.551 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:477 - SQLWarning ignored: SQL state '02000', error code '-1100', message [no data]
11:22:59.551 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:22:59.553 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:22:59.554 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:22:59.555 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:22:59.557 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:22:59.558 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:22:59.559 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:22:59.560 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 22 ms.
11:22:59.560 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection:340 - Returning JDBC Connection to DataSource
11:23:01.946 INFO  r.n.v.web.vote.AbstractVoteController.get:27 - get vote 100021 for user 100000
Hibernate: 
    select
        vote0_.id as id1_5_0_,
        vote0_.date as date2_5_0_,
        vote0_.restaurant as restaura3_5_0_,
        vote0_.user_id as user_id4_5_0_ 
    from
        votes vote0_ 
    where
        vote0_.id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /rest/admin/votes/100021
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.vote.AdminVoteRestController
           Method = public ru.neustupov.votingforrestaurants.model.Vote ru.neustupov.votingforrestaurants.web.vote.AdminVoteRestController.get(int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":100021,"user":null,"date":"2015-04-30T22:00:00.000+0000","restaurant":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
11:23:02.354 INFO  r.n.v.web.vote.AbstractVoteController.create:50 - create AbstractBaseEntity{id=null} for user 100000
Hibernate: 
    call next value for global_seq
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.Vote
        */ insert 
        into
            votes
            (date, restaurant, user_id, id) 
        values
            (?, ?, ?, ?)
Hibernate: 
    /* SELECT
        v 
    FROM
        Vote v */ select
            vote0_.id as id1_5_0_,
            restaurant1_.id as id1_2_1_,
            user2_.id as id1_4_2_,
            vote0_.date as date2_5_0_,
            vote0_.restaurant as restaura3_5_0_,
            vote0_.user_id as user_id4_5_0_,
            restaurant1_.name as name2_2_1_,
            user2_.name as name2_4_2_,
            user2_.email as email3_4_2_,
            user2_.enabled as enabled4_4_2_,
            user2_.password as password5_4_2_,
            user2_.registered as register6_4_2_ 
        from
            votes vote0_ 
        left outer join
            restaurants restaurant1_ 
                on vote0_.restaurant=restaurant1_.id 
        left outer join
            users user2_ 
                on vote0_.user_id=user2_.id
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
11:23:02.489 INFO  r.n.v.web.vote.AbstractVoteController.delete:33 - delete vote 100021 for user 100000
Hibernate: 
    /* DELETE 
    FROM
        Vote v 
    WHERE
        v.id=:id 
        AND v.user.id=:userId */ delete 
        from
            votes 
        where
            id=? 
            and user_id=?

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /rest/admin/votes/100021
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.vote.AdminVoteRestController
           Method = public void ru.neustupov.votingforrestaurants.web.vote.AdminVoteRestController.delete(int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 204
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* SELECT
        v 
    FROM
        Vote v */ select
            vote0_.id as id1_5_0_,
            restaurant1_.id as id1_2_1_,
            user2_.id as id1_4_2_,
            vote0_.date as date2_5_0_,
            vote0_.restaurant as restaura3_5_0_,
            vote0_.user_id as user_id4_5_0_,
            restaurant1_.name as name2_2_1_,
            user2_.name as name2_4_2_,
            user2_.email as email3_4_2_,
            user2_.enabled as enabled4_4_2_,
            user2_.password as password5_4_2_,
            user2_.registered as register6_4_2_ 
        from
            votes vote0_ 
        left outer join
            restaurants restaurant1_ 
                on vote0_.restaurant=restaurant1_.id 
        left outer join
            users user2_ 
                on vote0_.user_id=user2_.id
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
11:23:02.517 INFO  r.n.v.web.vote.AbstractVoteController.getAll:38 - getAll votes
Hibernate: 
    /* SELECT
        v 
    FROM
        Vote v */ select
            vote0_.id as id1_5_0_,
            restaurant1_.id as id1_2_1_,
            user2_.id as id1_4_2_,
            vote0_.date as date2_5_0_,
            vote0_.restaurant as restaura3_5_0_,
            vote0_.user_id as user_id4_5_0_,
            restaurant1_.name as name2_2_1_,
            user2_.name as name2_4_2_,
            user2_.email as email3_4_2_,
            user2_.enabled as enabled4_4_2_,
            user2_.password as password5_4_2_,
            user2_.registered as register6_4_2_ 
        from
            votes vote0_ 
        left outer join
            restaurants restaurant1_ 
                on vote0_.restaurant=restaurant1_.id 
        left outer join
            users user2_ 
                on vote0_.user_id=user2_.id
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
[{"id":100021,"user":{"id":100000,"name":"User","email":"user@yandex.ru","password":"password","registered":"2018-04-26T09:22:59.552+0000","enabled":true,"roles":["ROLE_USER"],"votes":null},"date":"2015-04-30T22:00:00.000+0000","restaurant":{"id":100002,"name":"Russia","menus":null,"votes":null}},{"id":100022,"user":{"id":100000,"name":"User","email":"user@yandex.ru","password":"password","registered":"2018-04-26T09:22:59.552+0000","enabled":true,"roles":["ROLE_USER"],"votes":null},"date":"2015-05-01T22:00:00.000+0000","restaurant":{"id":100003,"name":"Ukraine","menus":null,"votes":null}},{"id":100023,"user":{"id":100000,"name":"User","email":"user@yandex.ru","password":"password","registered":"2018-04-26T09:22:59.552+0000","enabled":true,"roles":["ROLE_USER"],"votes":null},"date":"2015-05-02T22:00:00.000+0000","restaurant":{"id":100004,"name":"U Kolyana","menus":null,"votes":null}},{"id":100024,"user":{"id":100001,"name":"Admin","email":"admin@yandex.ru","password":"admin","registered":"2018-04-26T09:22:59.552+0000","enabled":true,"roles":["ROLE_ADMIN","ROLE_USER"],"votes":null},"date":"2015-04-30T22:00:00.000+0000","restaurant":{"id":100005,"name":"Almaz","menus":null,"votes":null}},{"id":100025,"user":{"id":100001,"name":"Admin","email":"admin@yandex.ru","password":"admin","registered":"2018-04-26T09:22:59.552+0000","enabled":true,"roles":["ROLE_ADMIN","ROLE_USER"],"votes":null},"date":"2015-05-01T22:00:00.000+0000","restaurant":{"id":100006,"name":"Fart","menus":null,"votes":null}},{"id":100026,"user":{"id":100001,"name":"Admin","email":"admin@yandex.ru","password":"admin","registered":"2018-04-26T09:22:59.552+0000","enabled":true,"roles":["ROLE_ADMIN","ROLE_USER"],"votes":null},"date":"2015-05-02T22:00:00.000+0000","restaurant":{"id":100002,"name":"Russia","menus":null,"votes":null}}]
[WARNING] Tests run: 5, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 7.747 s - in ru.neustupov.votingforrestaurants.web.vote.AdminVoteRestControllerTest
[INFO] Running ru.neustupov.votingforrestaurants.web.InMemoryAdminRestControllerSpringTest
11:23:02.722 INFO  r.n.v.web.user.AbstractUserController.delete:39 - delete 10
11:23:02.724 INFO  r.n.v.web.user.AbstractUserController.delete:39 - delete 100000
11:23:02.724 INFO  r.n.v.web.user.AbstractUserController.getAll:23 - getAll
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.162 s - in ru.neustupov.votingforrestaurants.web.InMemoryAdminRestControllerSpringTest
[INFO] Running ru.neustupov.votingforrestaurants.web.meal.AdminMealRestControllerTest
11:23:02.758 INFO  r.n.v.web.meal.AbstractMealController.get:33 - get meal 100014 for menu 100007
Hibernate: 
    select
        meal0_.id as id1_0_0_,
        meal0_.name as name2_0_0_,
        meal0_.id_menu as id_menu4_0_0_,
        meal0_.price as price3_0_0_,
        menu1_.id as id1_1_1_,
        menu1_.add_date as add_date2_1_1_,
        menu1_.id_rest as id_rest3_1_1_,
        restaurant2_.id as id1_2_2_,
        restaurant2_.name as name2_2_2_ 
    from
        meals meal0_ 
    inner join
        menus menu1_ 
            on meal0_.id_menu=menu1_.id 
    inner join
        restaurants restaurant2_ 
            on menu1_.id_rest=restaurant2_.id 
    where
        meal0_.id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /rest/admin/meals/100014
       Parameters = {menuId=[100007]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.meal.AdminMealRestController
           Method = public ru.neustupov.votingforrestaurants.model.Meal ru.neustupov.votingforrestaurants.web.meal.AdminMealRestController.get(int,int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":100014,"name":"Apple","price":5,"menu":{"id":100007,"addDate":"2015-05-01","restaurant":{"id":100002,"name":"Russia","menus":null,"votes":null}}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
11:23:02.776 INFO  r.n.v.web.meal.AbstractMealController.create:23 - create Entity ru.neustupov.votingforrestaurants.model.Meal (null, 'Potatoes') for menu 100007
Hibernate: 
    call next value for global_seq
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.Meal
        */ insert 
        into
            meals
            (name, id_menu, price, id) 
        values
            (?, ?, ?, ?)
Hibernate: 
    /* SELECT
        m 
    FROM
        Meal m 
    WHERE
        m.menu.id=:menuId */ select
            meal0_.id as id1_0_,
            meal0_.name as name2_0_,
            meal0_.id_menu as id_menu4_0_,
            meal0_.price as price3_0_ 
        from
            meals meal0_ 
        where
            meal0_.id_menu=?
Hibernate: 
    select
        menu0_.id as id1_1_0_,
        menu0_.add_date as add_date2_1_0_,
        menu0_.id_rest as id_rest3_1_0_,
        restaurant1_.id as id1_2_1_,
        restaurant1_.name as name2_2_1_ 
    from
        menus menu0_ 
    inner join
        restaurants restaurant1_ 
            on menu0_.id_rest=restaurant1_.id 
    where
        menu0_.id=?
11:23:02.803 INFO  r.n.v.web.meal.AbstractMealController.delete:28 - delete meal 100014 for menu 100007
Hibernate: 
    /* DELETE 
    FROM
        Meal m 
    WHERE
        m.id=:id 
        AND m.menu.id=:menuId */ delete 
        from
            meals 
        where
            id=? 
            and id_menu=?

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /rest/admin/meals/100014
       Parameters = {menuId=[100007]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.meal.AdminMealRestController
           Method = public void ru.neustupov.votingforrestaurants.web.meal.AdminMealRestController.delete(int,int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 204
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* SELECT
        m 
    FROM
        Meal m 
    WHERE
        m.menu.id=:menuId */ select
            meal0_.id as id1_0_,
            meal0_.name as name2_0_,
            meal0_.id_menu as id_menu4_0_,
            meal0_.price as price3_0_ 
        from
            meals meal0_ 
        where
            meal0_.id_menu=?
Hibernate: 
    select
        menu0_.id as id1_1_0_,
        menu0_.add_date as add_date2_1_0_,
        menu0_.id_rest as id_rest3_1_0_,
        restaurant1_.id as id1_2_1_,
        restaurant1_.name as name2_2_1_ 
    from
        menus menu0_ 
    inner join
        restaurants restaurant1_ 
            on menu0_.id_rest=restaurant1_.id 
    where
        menu0_.id=?
11:23:02.822 INFO  r.n.v.web.meal.AbstractMealController.getAll:50 - getAll meals for menu 100007
Hibernate: 
    /* SELECT
        m 
    FROM
        Meal m 
    WHERE
        m.menu.id=:menuId */ select
            meal0_.id as id1_0_,
            meal0_.name as name2_0_,
            meal0_.id_menu as id_menu4_0_,
            meal0_.price as price3_0_ 
        from
            meals meal0_ 
        where
            meal0_.id_menu=?
Hibernate: 
    select
        menu0_.id as id1_1_0_,
        menu0_.add_date as add_date2_1_0_,
        menu0_.id_rest as id_rest3_1_0_,
        restaurant1_.id as id1_2_1_,
        restaurant1_.name as name2_2_1_ 
    from
        menus menu0_ 
    inner join
        restaurants restaurant1_ 
            on menu0_.id_rest=restaurant1_.id 
    where
        menu0_.id=?
[{"id":100014,"name":"Apple","price":5,"menu":{"id":100007,"addDate":"2015-05-01","restaurant":{"id":100002,"name":"Russia","menus":null,"votes":null}}},{"id":100019,"name":"Bottle of water","price":50,"menu":{"id":100007,"addDate":"2015-05-01","restaurant":{"id":100002,"name":"Russia","menus":null,"votes":null}}}]
11:23:02.838 INFO  r.n.v.web.meal.AbstractMealController.update:39 - update Entity ru.neustupov.votingforrestaurants.model.Meal (100014, 'UpdatedName') with id = 100014 for menu 100007
Hibernate: 
    select
        meal0_.id as id1_0_0_,
        meal0_.name as name2_0_0_,
        meal0_.id_menu as id_menu4_0_0_,
        meal0_.price as price3_0_0_,
        menu1_.id as id1_1_1_,
        menu1_.add_date as add_date2_1_1_,
        menu1_.id_rest as id_rest3_1_1_,
        restaurant2_.id as id1_2_2_,
        restaurant2_.name as name2_2_2_ 
    from
        meals meal0_ 
    inner join
        menus menu1_ 
            on meal0_.id_menu=menu1_.id 
    inner join
        restaurants restaurant2_ 
            on menu1_.id_rest=restaurant2_.id 
    where
        meal0_.id=?
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.093 s - in ru.neustupov.votingforrestaurants.web.meal.AdminMealRestControllerTest
[INFO] Running ru.neustupov.votingforrestaurants.web.menu.AdminMenuRestControllerTest
11:23:02.877 INFO  r.n.v.web.menu.AbstractMenuController.get:22 - get menu 100007 for restaurant 100002
Hibernate: 
    select
        menu0_.id as id1_1_0_,
        menu0_.add_date as add_date2_1_0_,
        menu0_.id_rest as id_rest3_1_0_,
        restaurant1_.id as id1_2_1_,
        restaurant1_.name as name2_2_1_ 
    from
        menus menu0_ 
    inner join
        restaurants restaurant1_ 
            on menu0_.id_rest=restaurant1_.id 
    where
        menu0_.id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /rest/admin/menus/100007
       Parameters = {restId=[100002]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.menu.AdminMenuRestController
           Method = public ru.neustupov.votingforrestaurants.model.Menu ru.neustupov.votingforrestaurants.web.menu.AdminMenuRestController.get(int,int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":100007,"addDate":"2015-05-01","meals":null,"restaurant":{"id":100002,"name":"Russia","menus":null,"votes":null}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
11:23:02.903 INFO  r.n.v.web.menu.AbstractMenuController.create:43 - create AbstractBaseEntity{id=null} for restaurant 100002
Hibernate: 
    call next value for global_seq
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.Menu
        */ insert 
        into
            menus
            (add_date, id_rest, id) 
        values
            (?, ?, ?)
Hibernate: 
    /* SELECT
        m 
    FROM
        Menu m 
    WHERE
        m.restaurant.id=:restId 
    ORDER BY
        m.id */ select
            menu0_.id as id1_1_,
            menu0_.add_date as add_date2_1_,
            menu0_.id_rest as id_rest3_1_ 
        from
            menus menu0_ 
        where
            menu0_.id_rest=? 
        order by
            menu0_.id
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?
11:23:02.920 INFO  r.n.v.web.menu.AbstractMenuController.delete:27 - delete menu 100007 for restaurant 100002
Hibernate: 
    /* DELETE 
    FROM
        Menu m 
    WHERE
        m.id=:id 
        AND m.restaurant.id=:restId */ delete 
        from
            menus 
        where
            id=? 
            and id_rest=?

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /rest/admin/menus/100007
       Parameters = {restId=[100002]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.menu.AdminMenuRestController
           Method = public void ru.neustupov.votingforrestaurants.web.menu.AdminMenuRestController.delete(int,int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 204
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* SELECT
        m 
    FROM
        Menu m 
    WHERE
        m.restaurant.id=:restId 
    ORDER BY
        m.id */ select
            menu0_.id as id1_1_,
            menu0_.add_date as add_date2_1_,
            menu0_.id_rest as id_rest3_1_ 
        from
            menus menu0_ 
        where
            menu0_.id_rest=? 
        order by
            menu0_.id
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?
11:23:02.932 INFO  r.n.v.web.menu.AbstractMenuController.getAll:32 - getAll menus for restaurant 100002
Hibernate: 
    /* SELECT
        m 
    FROM
        Menu m 
    WHERE
        m.restaurant.id=:restId 
    ORDER BY
        m.id */ select
            menu0_.id as id1_1_,
            menu0_.add_date as add_date2_1_,
            menu0_.id_rest as id_rest3_1_ 
        from
            menus menu0_ 
        where
            menu0_.id_rest=? 
        order by
            menu0_.id
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?
[{"id":100007,"addDate":"2015-05-01","meals":null,"restaurant":{"id":100002,"name":"Russia","menus":null,"votes":null}},{"id":100012,"addDate":"2015-05-02","meals":null,"restaurant":{"id":100002,"name":"Russia","menus":null,"votes":null}},{"id":100013,"addDate":"2018-04-26","meals":null,"restaurant":{"id":100002,"name":"Russia","menus":null,"votes":null}}]
11:23:02.943 INFO  r.n.v.web.menu.AbstractMenuController.update:49 - update AbstractBaseEntity{id=100007} with id = 100007 for restaurant 100002
Hibernate: 
    select
        menu0_.id as id1_1_0_,
        menu0_.add_date as add_date2_1_0_,
        menu0_.id_rest as id_rest3_1_0_,
        restaurant1_.id as id1_2_1_,
        restaurant1_.name as name2_2_1_ 
    from
        menus menu0_ 
    inner join
        restaurants restaurant1_ 
            on menu0_.id_rest=restaurant1_.id 
    where
        menu0_.id=?
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.094 s - in ru.neustupov.votingforrestaurants.web.menu.AdminMenuRestControllerTest
[INFO] Running ru.neustupov.votingforrestaurants.web.json.JsonUtilTest
{"id":100014,"name":"Apple","price":5}
[{"id":100014,"name":"Apple","price":5},{"id":100015,"name":"Juice","price":10},{"id":100016,"name":"Potato","price":20},{"id":100017,"name":"Bananas","price":30},{"id":100018,"name":"Bread","price":40},{"id":100019,"name":"Bottle of water","price":50}]
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in ru.neustupov.votingforrestaurants.web.json.JsonUtilTest
[INFO] Running ru.neustupov.votingforrestaurants.web.MenuControllerTest

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /menus
       Parameters = {restId=[100002]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.RootController
           Method = public java.lang.String ru.neustupov.votingforrestaurants.web.RootController.menus(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = menus
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Accept-Language=[en]}
     Content type = null
             Body = 
    Forwarded URL = /WEB-INF/jsp/menus.jsp
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* SELECT
        DISTINCT m 
    FROM
        Menu m 
    WHERE
        m.restaurant.id=:restId 
        AND m.addDate=:currDate */ select
            distinct menu0_.id as id1_1_0_,
            meals1_.id as id1_0_1_,
            menu0_.add_date as add_date2_1_0_,
            menu0_.id_rest as id_rest3_1_0_,
            meals1_.name as name2_0_1_,
            meals1_.id_menu as id_menu4_0_1_,
            meals1_.price as price3_0_1_,
            meals1_.id_menu as id_menu4_0_0__,
            meals1_.id as id1_0_0__ 
        from
            menus menu0_ 
        left outer join
            meals meals1_ 
                on menu0_.id=meals1_.id_menu 
        where
            menu0_.id_rest=? 
            and menu0_.add_date=?
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /getTodaysMenuWithMeals
       Parameters = {restId=[100002]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.RootController
           Method = public java.lang.String ru.neustupov.votingforrestaurants.web.RootController.getTodaysMenuWithMeals(javax.servlet.http.HttpServletRequest,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = todays
             View = null
        Attribute = menuId
            value = 100013
        Attribute = mealsList
            value = [Entity ru.neustupov.votingforrestaurants.model.Meal (100020, 'Mango')]
        Attribute = restId
            value = 100002

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Accept-Language=[en]}
     Content type = null
             Body = 
    Forwarded URL = /WEB-INF/jsp/todays.jsp
   Redirected URL = null
          Cookies = []
11:23:03.034 INFO  r.n.v.web.menu.AbstractMenuController.getAll:32 - getAll menus for restaurant 100002
Hibernate: 
    /* SELECT
        m 
    FROM
        Menu m 
    WHERE
        m.restaurant.id=:restId 
    ORDER BY
        m.id */ select
            menu0_.id as id1_1_,
            menu0_.add_date as add_date2_1_,
            menu0_.id_rest as id_rest3_1_ 
        from
            menus menu0_ 
        where
            menu0_.id_rest=? 
        order by
            menu0_.id
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /ajax/admin/menus
       Parameters = {restId=[100002]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.menu.AdminMenuAjaxController
           Method = public java.util.List<ru.neustupov.votingforrestaurants.model.Menu> ru.neustupov.votingforrestaurants.web.menu.AdminMenuAjaxController.getAll(int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":100007,"addDate":"2015-05-01","meals":null,"restaurant":{"id":100002,"name":"Russia","menus":null,"votes":null}},{"id":100012,"addDate":"2015-05-02","meals":null,"restaurant":{"id":100002,"name":"Russia","menus":null,"votes":null}},{"id":100013,"addDate":"2018-04-26","meals":null,"restaurant":{"id":100002,"name":"Russia","menus":null,"votes":null}}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
11:23:03.046 INFO  r.n.v.web.menu.AbstractMenuController.delete:27 - delete menu 100007 for restaurant 100002
Hibernate: 
    /* DELETE 
    FROM
        Menu m 
    WHERE
        m.id=:id 
        AND m.restaurant.id=:restId */ delete 
        from
            menus 
        where
            id=? 
            and id_rest=?

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /ajax/admin/menus/100007
       Parameters = {restId=[100002]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.menu.AdminMenuAjaxController
           Method = public void ru.neustupov.votingforrestaurants.web.menu.AdminMenuAjaxController.delete(int,int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* SELECT
        m 
    FROM
        Menu m 
    WHERE
        m.restaurant.id=:restId 
    ORDER BY
        m.id */ select
            menu0_.id as id1_1_,
            menu0_.add_date as add_date2_1_,
            menu0_.id_rest as id_rest3_1_ 
        from
            menus menu0_ 
        where
            menu0_.id_rest=? 
        order by
            menu0_.id
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?
[ERROR] Tests run: 4, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.092 s <<< FAILURE! - in ru.neustupov.votingforrestaurants.web.MenuControllerTest
[ERROR] testMenus(ru.neustupov.votingforrestaurants.web.MenuControllerTest)  Time elapsed: 0.044 s  <<< FAILURE!
java.lang.AssertionError: 
Model attribute 'menusList'
Expected: a collection with size <3>
     but: was null
	at ru.neustupov.votingforrestaurants.web.MenuControllerTest.testMenus(MenuControllerTest.java:29)

[INFO] Running ru.neustupov.votingforrestaurants.web.RestaurantControllerTest
11:23:03.088 INFO  r.n.v.web.restaurant.AbstractRestaurantController.update:50 - update restaurant 100002
Hibernate: 
    /* load ru.neustupov.votingforrestaurants.model.Restaurant */ select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /ajax/admin/restaurants/
       Parameters = {name=[RussiaNew], id=[100002]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantAjaxController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantAjaxController.createOrUpdate(ru.neustupov.votingforrestaurants.model.Restaurant,org.springframework.validation.BindingResult)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* update
        ru.neustupov.votingforrestaurants.model.Restaurant */ update
            restaurants 
        set
            name=? 
        where
            id=?
Hibernate: 
    /* select
        generatedAlias0 
    from
        Restaurant as generatedAlias0 */ select
            restaurant0_.id as id1_2_,
            restaurant0_.name as name2_2_ 
        from
            restaurants restaurant0_

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /restaurants
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.RootController
           Method = public java.lang.String ru.neustupov.votingforrestaurants.web.RootController.restaurants()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = restaurants
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Accept-Language=[en]}
     Content type = null
             Body = 
    Forwarded URL = /WEB-INF/jsp/restaurants.jsp
   Redirected URL = null
          Cookies = []
11:23:03.130 INFO  r.n.v.web.restaurant.AbstractRestaurantController.create:44 - create restaurant newRest
Hibernate: 
    call next value for global_seq

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /ajax/admin/restaurants
       Parameters = {name=[newRest], id=[]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantAjaxController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantAjaxController.createOrUpdate(ru.neustupov.votingforrestaurants.model.Restaurant,org.springframework.validation.BindingResult)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
11:23:03.137 INFO  r.n.v.web.restaurant.AbstractRestaurantController.delete:33 - delete restaurant 100002
Hibernate: 
    /* DELETE 
    FROM
        Restaurant r 
    WHERE
        r.id=:id */ delete 
        from
            restaurants 
        where
            id=?

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /ajax/admin/restaurants/100002
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantAjaxController
           Method = public void ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantAjaxController.delete(int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* select
        generatedAlias0 
    from
        Restaurant as generatedAlias0 */ select
            restaurant0_.id as id1_2_,
            restaurant0_.name as name2_2_ 
        from
            restaurants restaurant0_
11:23:03.145 INFO  r.n.v.web.restaurant.AbstractRestaurantController.create:44 - create restaurant Russia1
Hibernate: 
    call next value for global_seq

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /ajax/admin/restaurants
       Parameters = {name=[Russia1], id=[]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantAjaxController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantAjaxController.createOrUpdate(ru.neustupov.votingforrestaurants.model.Restaurant,org.springframework.validation.BindingResult)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.Restaurant
        */ insert 
        into
            restaurants
            (name, id) 
        values
            (?, ?)
Hibernate: 
    /* select
        generatedAlias0 
    from
        Restaurant as generatedAlias0 */ select
            restaurant0_.id as id1_2_,
            restaurant0_.name as name2_2_ 
        from
            restaurants restaurant0_
[WARNING] Tests run: 6, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.091 s - in ru.neustupov.votingforrestaurants.web.RestaurantControllerTest
[INFO] Running ru.neustupov.votingforrestaurants.web.user.ProfileRestControllerTest
11:23:03.169 INFO  r.n.v.web.user.AbstractUserController.get:28 - get 100000
Hibernate: 
    select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_,
        roles1_.user_id as user_id1_3_1_,
        roles1_.role as role2_3_1_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    where
        user0_.id=?
{"id":100000,"name":"User","email":"user@yandex.ru","password":"password","registered":"2018-04-26T09:22:59.552+0000","enabled":true,"roles":["ROLE_USER"],"votes":null}
11:23:03.179 INFO  r.n.v.web.user.AbstractUserController.delete:39 - delete 100000
Hibernate: 
    /* DELETE 
    FROM
        User u 
    WHERE
        u.id=:id */ delete 
        from
            users 
        where
            id=?
Hibernate: 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    LEFT JOIN
        FETCH u.roles 
    ORDER BY
        u.name */ select
            distinct user0_.id as id1_4_,
            user0_.name as name2_4_,
            user0_.email as email3_4_,
            user0_.enabled as enabled4_4_,
            user0_.password as password5_4_,
            user0_.registered as register6_4_,
            roles1_.user_id as user_id1_3_0__,
            roles1_.role as role2_3_0__ 
        from
            users user0_ 
        left outer join
            user_roles roles1_ 
                on user0_.id=roles1_.user_id 
        order by
            user0_.name
11:23:03.191 INFO  r.n.v.web.user.AbstractUserController.update:50 - update UserTo{id=null, name='newName', email='user@yandex.ru'} with id=100000
Hibernate: 
    select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_,
        roles1_.user_id as user_id1_3_1_,
        roles1_.role as role2_3_1_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    where
        user0_.id=?

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /rest/profile
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"name":"newName","email":"user@yandex.ru","password":"newPassword"}
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.user.ProfileRestController
           Method = public void ru.neustupov.votingforrestaurants.web.user.ProfileRestController.update(ru.neustupov.votingforrestaurants.to.UserTo)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* update
        ru.neustupov.votingforrestaurants.model.User */ update
            users 
        set
            name=?,
            email=?,
            enabled=?,
            password=?,
            registered=? 
        where
            id=?
Hibernate: 
    /* select
        generatedAlias0 
    from
        User as generatedAlias0 
    where
        generatedAlias0.email=:param0 */ select
            user0_.id as id1_4_,
            user0_.name as name2_4_,
            user0_.email as email3_4_,
            user0_.enabled as enabled4_4_,
            user0_.password as password5_4_,
            user0_.registered as register6_4_ 
        from
            users user0_ 
        where
            user0_.email=?
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 s - in ru.neustupov.votingforrestaurants.web.user.ProfileRestControllerTest
[INFO] Running ru.neustupov.votingforrestaurants.web.user.AdminRestControllerTest
11:23:03.241 INFO  r.n.v.web.user.AbstractUserController.get:28 - get 100001
Hibernate: 
    select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_,
        roles1_.user_id as user_id1_3_1_,
        roles1_.role as role2_3_1_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    where
        user0_.id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /rest/admin/users/100001
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.user.AdminRestController
           Method = public ru.neustupov.votingforrestaurants.model.User ru.neustupov.votingforrestaurants.web.user.AdminRestController.get(int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":100001,"name":"Admin","email":"admin@yandex.ru","password":"admin","registered":"2018-04-26T09:22:59.552+0000","enabled":true,"roles":["ROLE_ADMIN","ROLE_USER"],"votes":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
11:23:03.251 INFO  r.n.v.web.user.AbstractUserController.getByMail:61 - getByEmail user@yandex.ru
Hibernate: 
    /* select
        generatedAlias0 
    from
        User as generatedAlias0 
    where
        generatedAlias0.email=:param0 */ select
            user0_.id as id1_4_,
            user0_.name as name2_4_,
            user0_.email as email3_4_,
            user0_.enabled as enabled4_4_,
            user0_.password as password5_4_,
            user0_.registered as register6_4_ 
        from
            users user0_ 
        where
            user0_.email=?
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
11:23:03.261 INFO  r.n.v.web.user.AbstractUserController.create:33 - create Entity ru.neustupov.votingforrestaurants.model.User (null, 'New')
Hibernate: 
    call next value for global_seq
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.User
        */ insert 
        into
            users
            (name, email, enabled, password, registered, id) 
        values
            (?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row ru.neustupov.votingforrestaurants.model.User.roles */ insert 
        into
            user_roles
            (user_id, role) 
        values
            (?, ?)
Hibernate: 
    /* insert collection
        row ru.neustupov.votingforrestaurants.model.User.roles */ insert 
        into
            user_roles
            (user_id, role) 
        values
            (?, ?)
Hibernate: 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    LEFT JOIN
        FETCH u.roles 
    ORDER BY
        u.name */ select
            distinct user0_.id as id1_4_,
            user0_.name as name2_4_,
            user0_.email as email3_4_,
            user0_.enabled as enabled4_4_,
            user0_.password as password5_4_,
            user0_.registered as register6_4_,
            roles1_.user_id as user_id1_3_0__,
            roles1_.role as role2_3_0__ 
        from
            users user0_ 
        left outer join
            user_roles roles1_ 
                on user0_.id=roles1_.user_id 
        order by
            user0_.name
11:23:03.277 INFO  r.n.v.web.user.AbstractUserController.delete:39 - delete 100000
Hibernate: 
    /* DELETE 
    FROM
        User u 
    WHERE
        u.id=:id */ delete 
        from
            users 
        where
            id=?

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /rest/admin/users/100000
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.user.AdminRestController
           Method = public void ru.neustupov.votingforrestaurants.web.user.AdminRestController.delete(int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 204
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    LEFT JOIN
        FETCH u.roles 
    ORDER BY
        u.name */ select
            distinct user0_.id as id1_4_,
            user0_.name as name2_4_,
            user0_.email as email3_4_,
            user0_.enabled as enabled4_4_,
            user0_.password as password5_4_,
            user0_.registered as register6_4_,
            roles1_.user_id as user_id1_3_0__,
            roles1_.role as role2_3_0__ 
        from
            users user0_ 
        left outer join
            user_roles roles1_ 
                on user0_.id=roles1_.user_id 
        order by
            user0_.name
11:23:03.290 INFO  r.n.v.web.user.AbstractUserController.getAll:23 - getAll
Hibernate: 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    LEFT JOIN
        FETCH u.roles 
    ORDER BY
        u.name */ select
            distinct user0_.id as id1_4_,
            user0_.name as name2_4_,
            user0_.email as email3_4_,
            user0_.enabled as enabled4_4_,
            user0_.password as password5_4_,
            user0_.registered as register6_4_,
            roles1_.user_id as user_id1_3_0__,
            roles1_.role as role2_3_0__ 
        from
            users user0_ 
        left outer join
            user_roles roles1_ 
                on user0_.id=roles1_.user_id 
        order by
            user0_.name
[{"id":100001,"name":"Admin","email":"admin@yandex.ru","password":"admin","registered":"2018-04-26T09:22:59.552+0000","enabled":true,"roles":["ROLE_ADMIN","ROLE_USER"],"votes":null},{"id":100000,"name":"User","email":"user@yandex.ru","password":"password","registered":"2018-04-26T09:22:59.552+0000","enabled":true,"roles":["ROLE_USER"],"votes":null}]
11:23:03.305 INFO  r.n.v.web.user.AbstractUserController.update:44 - update Entity ru.neustupov.votingforrestaurants.model.User (100000, 'UpdatedName') with id=100000
Hibernate: 
    /* load ru.neustupov.votingforrestaurants.model.User */ select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_ 
    from
        users user0_ 
    where
        user0_.id=?
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.085 s - in ru.neustupov.votingforrestaurants.web.user.AdminRestControllerTest
[INFO] Running ru.neustupov.votingforrestaurants.web.VoteControllerTest

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /votes
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.RootController
           Method = public java.lang.String ru.neustupov.votingforrestaurants.web.RootController.votes()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = votes
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Accept-Language=[en]}
     Content type = null
             Body = 
    Forwarded URL = /WEB-INF/jsp/votes.jsp
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* SELECT
        v 
    FROM
        Vote v 
    WHERE
        v.user.id=:userId 
        AND v.date=CURRENT_DATE  */ select
            vote0_.id as id1_5_,
            vote0_.date as date2_5_,
            vote0_.restaurant as restaura3_5_,
            vote0_.user_id as user_id4_5_ 
        from
            votes vote0_ 
        where
            vote0_.user_id=? 
            and vote0_.date=CURRENT_DATE
11:23:03.334 INFO  r.n.v.web.vote.AbstractVoteController.create:50 - create AbstractBaseEntity{id=null} for user 100000
Hibernate: 
    call next value for global_seq

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /ajax/admin/votes
       Parameters = {restId=[100002]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.vote.AdminVoteAjaxController
           Method = public void ru.neustupov.votingforrestaurants.web.vote.AdminVoteAjaxController.createOrUpdate(java.lang.Integer)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
[ERROR] Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.022 s <<< FAILURE! - in ru.neustupov.votingforrestaurants.web.VoteControllerTest
[ERROR] testVotes(ru.neustupov.votingforrestaurants.web.VoteControllerTest)  Time elapsed: 0.004 s  <<< FAILURE!
java.lang.AssertionError: 
Model attribute 'votesList'
Expected: a collection with size <6>
     but: was null
	at ru.neustupov.votingforrestaurants.web.VoteControllerTest.testVotes(VoteControllerTest.java:26)

[INFO] Running ru.neustupov.votingforrestaurants.web.RootControllerTest

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /users
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.RootController
           Method = public java.lang.String ru.neustupov.votingforrestaurants.web.RootController.users()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = users
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Accept-Language=[en]}
     Content type = null
             Body = 
    Forwarded URL = /WEB-INF/jsp/users.jsp
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /users
       Parameters = {userId=[100000]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.RootController
           Method = public java.lang.String ru.neustupov.votingforrestaurants.web.RootController.setUser(javax.servlet.http.HttpServletRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = redirect:/restaurants
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 302
    Error message = null
          Headers = {Accept-Language=[en], Location=[/restaurants]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = /restaurants
          Cookies = []
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 s - in ru.neustupov.votingforrestaurants.web.RootControllerTest
[INFO] Running ru.neustupov.votingforrestaurants.web.ResourceControllerTest

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /resources/css/style.css
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = org.springframework.web.servlet.resource.ResourceHttpRequestHandler

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Last-Modified=[Thu, 26 Apr 2018 09:22:27 GMT], Content-Length=[107], Content-Type=[text/css;charset=UTF-8], Accept-Ranges=[bytes]}
     Content type = text/css
             Body = .disabled {
    opacity: 0.3;
}

.footer {
    padding-bottom: 15px;
}

.glyphicon {
    cursor: pointer;
}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 s - in ru.neustupov.votingforrestaurants.web.ResourceControllerTest
[INFO] Running ru.neustupov.votingforrestaurants.web.MealControllerTest
11:23:03.418 INFO  r.n.v.web.meal.AbstractMealController.update:45 - update MealTo{name='AppleNew', price=15, menuId=100007} with id = 100014 for menu 100007
Hibernate: 
    select
        meal0_.id as id1_0_0_,
        meal0_.name as name2_0_0_,
        meal0_.id_menu as id_menu4_0_0_,
        meal0_.price as price3_0_0_,
        menu1_.id as id1_1_1_,
        menu1_.add_date as add_date2_1_1_,
        menu1_.id_rest as id_rest3_1_1_,
        restaurant2_.id as id1_2_2_,
        restaurant2_.name as name2_2_2_ 
    from
        meals meal0_ 
    inner join
        menus menu1_ 
            on meal0_.id_menu=menu1_.id 
    inner join
        restaurants restaurant2_ 
            on menu1_.id_rest=restaurant2_.id 
    where
        meal0_.id=?

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /ajax/admin/meals/
       Parameters = {id=[100014], name=[AppleNew], price=[15], mealId=[100014], menuId=[100007], restId=[100002]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.meal.AdminMealAjaxController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> ru.neustupov.votingforrestaurants.web.meal.AdminMealAjaxController.createOrUpdate(ru.neustupov.votingforrestaurants.to.MealTo,org.springframework.validation.BindingResult)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* update
        ru.neustupov.votingforrestaurants.model.Meal */ update
            meals 
        set
            name=?,
            id_menu=?,
            price=? 
        where
            id=?
Hibernate: 
    /* SELECT
        m 
    FROM
        Meal m 
    WHERE
        m.menu.id=:menuId */ select
            meal0_.id as id1_0_,
            meal0_.name as name2_0_,
            meal0_.id_menu as id_menu4_0_,
            meal0_.price as price3_0_ 
        from
            meals meal0_ 
        where
            meal0_.id_menu=?
Hibernate: 
    /* SELECT
        m 
    FROM
        Meal m 
    WHERE
        m.menu.id=:menuId */ select
            meal0_.id as id1_0_,
            meal0_.name as name2_0_,
            meal0_.id_menu as id_menu4_0_,
            meal0_.price as price3_0_ 
        from
            meals meal0_ 
        where
            meal0_.id_menu=?
Hibernate: 
    /* SELECT
        m 
    FROM
        Meal m 
    WHERE
        m.menu.id=:menuId */ select
            meal0_.id as id1_0_,
            meal0_.name as name2_0_,
            meal0_.id_menu as id_menu4_0_,
            meal0_.price as price3_0_ 
        from
            meals meal0_ 
        where
            meal0_.id_menu=?
Hibernate: 
    select
        menu0_.id as id1_1_0_,
        menu0_.add_date as add_date2_1_0_,
        menu0_.id_rest as id_rest3_1_0_,
        restaurant1_.id as id1_2_1_,
        restaurant1_.name as name2_2_1_ 
    from
        menus menu0_ 
    inner join
        restaurants restaurant1_ 
            on menu0_.id_rest=restaurant1_.id 
    where
        menu0_.id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /meals
       Parameters = {menuId=[100007]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.RootController
           Method = public java.lang.String ru.neustupov.votingforrestaurants.web.RootController.meals(javax.servlet.http.HttpServletRequest,org.springframework.ui.Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = meals
             View = null
        Attribute = mealsList
            value = [Entity ru.neustupov.votingforrestaurants.model.Meal (100014, 'Apple'), Entity ru.neustupov.votingforrestaurants.model.Meal (100019, 'Bottle of water')]
        Attribute = menuId
            value = 100007
        Attribute = restId
            value = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Accept-Language=[en]}
     Content type = null
             Body = 
    Forwarded URL = /WEB-INF/jsp/meals.jsp
   Redirected URL = null
          Cookies = []
11:23:03.444 INFO  r.n.v.web.meal.AbstractMealController.create:23 - create Entity ru.neustupov.votingforrestaurants.model.Meal (null, 'NewMeal') for menu 100007
Hibernate: 
    call next value for global_seq

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /ajax/admin/meals
       Parameters = {menuId=[100007], name=[NewMeal], price=[100]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.meal.AdminMealAjaxController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> ru.neustupov.votingforrestaurants.web.meal.AdminMealAjaxController.createOrUpdate(ru.neustupov.votingforrestaurants.to.MealTo,org.springframework.validation.BindingResult)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
11:23:03.450 INFO  r.n.v.web.meal.AbstractMealController.delete:28 - delete meal 100014 for menu 100007
Hibernate: 
    /* DELETE 
    FROM
        Meal m 
    WHERE
        m.id=:id 
        AND m.menu.id=:menuId */ delete 
        from
            meals 
        where
            id=? 
            and id_menu=?

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /ajax/admin/meals/100014
       Parameters = {menuId=[100007]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.meal.AdminMealAjaxController
           Method = public void ru.neustupov.votingforrestaurants.web.meal.AdminMealAjaxController.delete(int,int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* SELECT
        m 
    FROM
        Meal m 
    WHERE
        m.menu.id=:menuId */ select
            meal0_.id as id1_0_,
            meal0_.name as name2_0_,
            meal0_.id_menu as id_menu4_0_,
            meal0_.price as price3_0_ 
        from
            meals meal0_ 
        where
            meal0_.id_menu=?
Hibernate: 
    select
        menu0_.id as id1_1_0_,
        menu0_.add_date as add_date2_1_0_,
        menu0_.id_rest as id_rest3_1_0_,
        restaurant1_.id as id1_2_1_,
        restaurant1_.name as name2_2_1_ 
    from
        menus menu0_ 
    inner join
        restaurants restaurant1_ 
            on menu0_.id_rest=restaurant1_.id 
    where
        menu0_.id=?
11:23:03.457 INFO  r.n.v.web.meal.AbstractMealController.create:23 - create Entity ru.neustupov.votingforrestaurants.model.Meal (null, 'AppleNew') for menu 100007
Hibernate: 
    call next value for global_seq

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /ajax/admin/meals
       Parameters = {name=[AppleNew], price=[15], id=[], menuId=[100007]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.meal.AdminMealAjaxController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> ru.neustupov.votingforrestaurants.web.meal.AdminMealAjaxController.createOrUpdate(ru.neustupov.votingforrestaurants.to.MealTo,org.springframework.validation.BindingResult)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.Meal
        */ insert 
        into
            meals
            (name, id_menu, price, id) 
        values
            (?, ?, ?, ?)
Hibernate: 
    /* SELECT
        m 
    FROM
        Meal m 
    WHERE
        m.menu.id=:menuId */ select
            meal0_.id as id1_0_,
            meal0_.name as name2_0_,
            meal0_.id_menu as id_menu4_0_,
            meal0_.price as price3_0_ 
        from
            meals meal0_ 
        where
            meal0_.id_menu=?
Hibernate: 
    select
        menu0_.id as id1_1_0_,
        menu0_.add_date as add_date2_1_0_,
        menu0_.id_rest as id_rest3_1_0_,
        restaurant1_.id as id1_2_1_,
        restaurant1_.name as name2_2_1_ 
    from
        menus menu0_ 
    inner join
        restaurants restaurant1_ 
            on menu0_.id_rest=restaurant1_.id 
    where
        menu0_.id=?
Hibernate: 
    /* SELECT
        m 
    FROM
        Meal m 
    WHERE
        m.menu.id=:menuId */ select
            meal0_.id as id1_0_,
            meal0_.name as name2_0_,
            meal0_.id_menu as id_menu4_0_,
            meal0_.price as price3_0_ 
        from
            meals meal0_ 
        where
            meal0_.id_menu=?
[WARNING] Tests run: 6, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.068 s - in ru.neustupov.votingforrestaurants.web.MealControllerTest
[INFO] Running ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantRestControllerTest
11:23:03.476 INFO  r.n.v.web.restaurant.AbstractRestaurantController.get:28 - get restaurant 100002
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /rest/admin/restaurants/100002
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantRestController
           Method = public ru.neustupov.votingforrestaurants.model.Restaurant ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantRestController.get(int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":100002,"name":"Russia","menus":null,"votes":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
11:23:03.482 INFO  r.n.v.web.restaurant.AbstractRestaurantController.create:44 - create restaurant Rostov
Hibernate: 
    call next value for global_seq
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.Restaurant
        */ insert 
        into
            restaurants
            (name, id) 
        values
            (?, ?)
Hibernate: 
    /* select
        generatedAlias0 
    from
        Restaurant as generatedAlias0 */ select
            restaurant0_.id as id1_2_,
            restaurant0_.name as name2_2_ 
        from
            restaurants restaurant0_
11:23:03.490 INFO  r.n.v.web.restaurant.AbstractRestaurantController.delete:33 - delete restaurant 100002
Hibernate: 
    /* DELETE 
    FROM
        Restaurant r 
    WHERE
        r.id=:id */ delete 
        from
            restaurants 
        where
            id=?

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /rest/admin/restaurants/100002
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantRestController
           Method = public void ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantRestController.delete(int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 204
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* select
        generatedAlias0 
    from
        Restaurant as generatedAlias0 */ select
            restaurant0_.id as id1_2_,
            restaurant0_.name as name2_2_ 
        from
            restaurants restaurant0_
11:23:03.497 INFO  r.n.v.web.restaurant.AbstractRestaurantController.getAll:38 - getAll restaurants {}
Hibernate: 
    /* select
        generatedAlias0 
    from
        Restaurant as generatedAlias0 */ select
            restaurant0_.id as id1_2_,
            restaurant0_.name as name2_2_ 
        from
            restaurants restaurant0_
Hibernate: 
    /* SELECT
        v 
    FROM
        Vote v 
    WHERE
        v.date=CURRENT_DATE  */ select
            vote0_.id as id1_5_,
            vote0_.date as date2_5_,
            vote0_.restaurant as restaura3_5_,
            vote0_.user_id as user_id4_5_ 
        from
            votes vote0_ 
        where
            vote0_.date=CURRENT_DATE
[{"id":100002,"name":"Russia","numberOfVotes":0},{"id":100003,"name":"Ukraine","numberOfVotes":0},{"id":100004,"name":"U Kolyana","numberOfVotes":0},{"id":100005,"name":"Almaz","numberOfVotes":0},{"id":100006,"name":"Fart","numberOfVotes":0}]
11:23:03.506 INFO  r.n.v.web.restaurant.AbstractRestaurantController.update:50 - update restaurant 100002
Hibernate: 
    /* load ru.neustupov.votingforrestaurants.model.Restaurant */ select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.041 s - in ru.neustupov.votingforrestaurants.web.restaurant.AdminRestaurantRestControllerTest
[INFO] Running ru.neustupov.votingforrestaurants.service.VoteServiceTest
11:23:03.860 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAll
11:23:03.863 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithMenu
11:23:03.865 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method delete
11:23:03.878 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getByUserIdAndDate
11:23:03.882 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAll
11:23:03.884 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getByUserIdAndRestId
11:23:03.886 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithRestaurantAndUser
11:23:03.888 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAllByUserId
11:23:03.889 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithUser
11:23:03.890 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAllByRestaurantId
11:23:03.892 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method delete
11:23:03.894 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAllForCurrentDate
11:23:03.897 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithRestaurant
11:23:03.903 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithVotesAndMenus
11:23:03.904 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method delete
11:23:03.906 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithVotes
11:23:03.907 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithMenus
11:23:03.913 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithVotes
11:23:03.915 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method delete
11:23:03.916 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAll
11:23:03.919 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getByEmail
11:23:03.920 DEBUG o.s.data.jpa.repository.query.NamedQuery.lookupFrom:122 - Looking up named query User.getByEmail
11:23:03.920 DEBUG o.s.data.jpa.repository.query.NamedQuery.hasNamedQuery:104 - Did not find named query User.getByEmail
11:23:03.926 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithRestaurant
11:23:03.928 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method delete
11:23:03.930 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getWithRestaurantAndMeals
11:23:03.931 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method getAll
11:23:03.933 DEBUG o.s.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation:55 - Looking up query for method findByRestaurantIdAndAddDate
11:23:03.944 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.doGetConnection:114 - Fetching JDBC Connection from DataSource
11:23:03.944 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/initDB_hsql.sql]
11:23:03.947 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP TABLE user_roles IF EXISTS
11:23:03.948 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP TABLE votes IF EXISTS
11:23:03.948 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP TABLE users IF EXISTS
11:23:03.949 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP TABLE meals IF EXISTS
11:23:03.950 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP TABLE menus IF EXISTS
11:23:03.950 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP TABLE restaurants IF EXISTS
11:23:03.951 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DROP SEQUENCE global_seq IF EXISTS
11:23:03.951 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000
11:23:03.952 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE TABLE USERS ( id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY, name VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, registered TIMESTAMP DEFAULT now() NOT NULL, enabled BOOLEAN DEFAULT TRUE NOT NULL, CONSTRAINT users_unique_email_idx UNIQUE (email) )
11:23:03.953 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE TABLE USER_ROLES ( user_id INTEGER NOT NULL, role VARCHAR(255), CONSTRAINT user_roles_idx UNIQUE (user_id, role), FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE )
11:23:03.953 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE TABLE RESTAURANTS ( id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY, name VARCHAR(255) NOT NULL, CONSTRAINT restaurant_name_idx UNIQUE (name) )
11:23:03.954 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE TABLE VOTES ( id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ NOT NULL, user_id INTEGER NOT NULL, date DATE DEFAULT CURRENT_DATE NOT NULL, restaurant INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE, FOREIGN KEY (restaurant) REFERENCES restaurants (id) ON DELETE CASCADE, CONSTRAINT votes_unique_user_date_idx UNIQUE (user_id, date) )
11:23:03.955 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE TABLE MENUS ( id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY, id_rest INTEGER NOT NULL, add_date DATE DEFAULT CURRENT_DATE NOT NULL, FOREIGN KEY (id_rest) REFERENCES RESTAURANTS (id) ON DELETE CASCADE, CONSTRAINT menus_unique_id_datetime_idx UNIQUE (id_rest, add_date) )
11:23:03.956 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: CREATE TABLE MEALS ( id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ, id_menu INTEGER NOT NULL, name VARCHAR(255) NOT NULL, price INT NOT NULL, FOREIGN KEY (id_menu) REFERENCES MENUS (id) ON DELETE CASCADE )
11:23:03.956 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/initDB_hsql.sql] in 12 ms.
11:23:03.956 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:03.957 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DELETE FROM user_roles
11:23:03.957 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:477 - SQLWarning ignored: SQL state '02000', error code '-1100', message [no data]
11:23:03.957 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DELETE FROM votes
11:23:03.957 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:477 - SQLWarning ignored: SQL state '02000', error code '-1100', message [no data]
11:23:03.958 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DELETE FROM users
11:23:03.958 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:477 - SQLWarning ignored: SQL state '02000', error code '-1100', message [no data]
11:23:03.958 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DELETE FROM meals
11:23:03.958 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:477 - SQLWarning ignored: SQL state '02000', error code '-1100', message [no data]
11:23:03.959 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DELETE FROM menus
11:23:03.959 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:477 - SQLWarning ignored: SQL state '02000', error code '-1100', message [no data]
11:23:03.959 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: DELETE FROM restaurants
11:23:03.959 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:477 - SQLWarning ignored: SQL state '02000', error code '-1100', message [no data]
11:23:03.959 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:03.960 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:03.961 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:03.961 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:03.962 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:03.963 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:03.964 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:03.964 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 8 ms.
11:23:03.964 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection:340 - Returning JDBC Connection to DataSource
11:23:04.194 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.195 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.195 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.195 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.196 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.196 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.196 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.198 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.199 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.200 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.200 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.202 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.203 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.204 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.204 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 10 ms.
11:23:04.206 WARN  o.h.e.j.s.SqlExceptionHelper$StandardWarningHandler.logWarning:217 - SQL Warning Code: -1100, SQLState: 02000
11:23:04.207 WARN  o.h.e.j.s.SqlExceptionHelper$StandardWarningHandler.logWarning:218 - no data
Hibernate: 
    call next value for global_seq
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.Vote
        */ insert 
        into
            votes
            (date, restaurant, user_id, id) 
        values
            (?, ?, ?, ?)
11:23:04.217 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        v 
    FROM
        Vote v */ select
            vote0_.id as id1_5_0_,
            restaurant1_.id as id1_2_1_,
            user2_.id as id1_4_2_,
            vote0_.date as date2_5_0_,
            vote0_.restaurant as restaura3_5_0_,
            vote0_.user_id as user_id4_5_0_,
            restaurant1_.name as name2_2_1_,
            user2_.name as name2_4_2_,
            user2_.email as email3_4_2_,
            user2_.enabled as enabled4_4_2_,
            user2_.password as password5_4_2_,
            user2_.registered as register6_4_2_ 
        from
            votes vote0_ 
        left outer join
            restaurants restaurant1_ 
                on vote0_.restaurant=restaurant1_.id 
        left outer join
            users user2_ 
                on vote0_.user_id=user2_.id
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
11:23:04.225 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.227 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.229 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.229 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM votes
11:23:04.229 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.230 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.230 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.231 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.232 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.232 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.233 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.233 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.235 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.235 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.237 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.237 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 10 ms.
Hibernate: 
    /* DELETE 
    FROM
        Vote v 
    WHERE
        v.id=:id 
        AND v.user.id=:userId */ delete 
        from
            votes 
        where
            id=? 
            and user_id=?
11:23:04.241 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        v 
    FROM
        Vote v */ select
            vote0_.id as id1_5_0_,
            restaurant1_.id as id1_2_1_,
            user2_.id as id1_4_2_,
            vote0_.date as date2_5_0_,
            vote0_.restaurant as restaura3_5_0_,
            vote0_.user_id as user_id4_5_0_,
            restaurant1_.name as name2_2_1_,
            user2_.name as name2_4_2_,
            user2_.email as email3_4_2_,
            user2_.enabled as enabled4_4_2_,
            user2_.password as password5_4_2_,
            user2_.registered as register6_4_2_ 
        from
            votes vote0_ 
        left outer join
            restaurants restaurant1_ 
                on vote0_.restaurant=restaurant1_.id 
        left outer join
            users user2_ 
                on vote0_.user_id=user2_.id
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
11:23:04.248 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.251 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.252 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.252 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM votes
11:23:04.253 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.253 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.253 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.254 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.255 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.255 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.255 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.256 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.257 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.257 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.258 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.258 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 7 ms.
11:23:04.260 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        v 
    FROM
        Vote v */ select
            vote0_.id as id1_5_0_,
            restaurant1_.id as id1_2_1_,
            user2_.id as id1_4_2_,
            vote0_.date as date2_5_0_,
            vote0_.restaurant as restaura3_5_0_,
            vote0_.user_id as user_id4_5_0_,
            restaurant1_.name as name2_2_1_,
            user2_.name as name2_4_2_,
            user2_.email as email3_4_2_,
            user2_.enabled as enabled4_4_2_,
            user2_.password as password5_4_2_,
            user2_.registered as register6_4_2_ 
        from
            votes vote0_ 
        left outer join
            restaurants restaurant1_ 
                on vote0_.restaurant=restaurant1_.id 
        left outer join
            users user2_ 
                on vote0_.user_id=user2_.id
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
11:23:04.268 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.270 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.271 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.271 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.271 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.272 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.272 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.273 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.273 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.274 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.275 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.275 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.276 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.276 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.277 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.277 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 7 ms.
11:23:04.279 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        vote0_.id as id1_5_0_,
        vote0_.date as date2_5_0_,
        vote0_.restaurant as restaura3_5_0_,
        vote0_.user_id as user_id4_5_0_ 
    from
        votes vote0_ 
    where
        vote0_.id=?
11:23:04.281 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.283 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.284 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.284 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.284 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.285 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.285 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.285 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.286 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.286 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.287 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.287 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.289 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.289 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.291 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.291 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 8 ms.
Hibernate: 
    /* DELETE 
    FROM
        Vote v 
    WHERE
        v.id=:id 
        AND v.user.id=:userId */ delete 
        from
            votes 
        where
            id=? 
            and user_id=?
11:23:04.294 WARN  o.h.e.j.s.SqlExceptionHelper$StandardWarningHandler.logWarning:217 - SQL Warning Code: -1100, SQLState: 02000
11:23:04.295 WARN  o.h.e.j.s.SqlExceptionHelper$StandardWarningHandler.logWarning:218 - no data
11:23:04.298 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.299 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.299 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.300 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.300 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.300 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.300 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.301 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.301 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.302 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.302 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.303 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.303 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.304 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.304 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 6 ms.
11:23:04.305 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        v 
    FROM
        Vote v 
    WHERE
        v.user.id=:userId 
        AND v.date=CURRENT_DATE  */ select
            vote0_.id as id1_5_,
            vote0_.date as date2_5_,
            vote0_.restaurant as restaura3_5_,
            vote0_.user_id as user_id4_5_ 
        from
            votes vote0_ 
        where
            vote0_.user_id=? 
            and vote0_.date=CURRENT_DATE
11:23:04.307 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.308 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.309 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.309 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.310 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.310 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.310 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.310 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.311 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.312 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.312 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.313 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.313 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.314 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.315 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.315 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 7 ms.
11:23:04.316 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        vote0_.id as id1_5_0_,
        vote0_.date as date2_5_0_,
        vote0_.restaurant as restaura3_5_0_,
        vote0_.user_id as user_id4_5_0_ 
    from
        votes vote0_ 
    where
        vote0_.id=?
11:23:04.319 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.320 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.321 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.321 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.322 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.322 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.322 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.323 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.323 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.324 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.325 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.325 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.326 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.326 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.327 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.327 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 7 ms.
Hibernate: 
    call next value for global_seq
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.Vote
        */ insert 
        into
            votes
            (date, restaurant, user_id, id) 
        values
            (?, ?, ?, ?)
11:23:04.330 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        v 
    FROM
        Vote v 
    WHERE
        v.user.id=:userId 
        AND v.date=CURRENT_DATE  */ select
            vote0_.id as id1_5_,
            vote0_.date as date2_5_,
            vote0_.restaurant as restaura3_5_,
            vote0_.user_id as user_id4_5_ 
        from
            votes vote0_ 
        where
            vote0_.user_id=? 
            and vote0_.date=CURRENT_DATE
11:23:04.332 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.823 s - in ru.neustupov.votingforrestaurants.service.VoteServiceTest
[INFO] Running ru.neustupov.votingforrestaurants.service.RestaurantServiceTest
11:23:04.339 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.340 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.340 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM votes
11:23:04.341 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.341 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.341 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.341 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.342 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.342 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.342 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.342 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.343 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.343 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.344 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.344 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 5 ms.
Hibernate: 
    call next value for global_seq
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.Restaurant
        */ insert 
        into
            restaurants
            (name, id) 
        values
            (?, ?)
11:23:04.351 WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions:129 - SQL Error: -104, SQLState: 23505
11:23:04.351 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions:131 - integrity constraint violation: unique constraint or index violation; RESTAURANT_NAME_IDX table: RESTAURANTS
11:23:04.354 ERROR org.hibernate.internal.ExceptionMapperStandardImpl.mapManagedFlushFailure:39 - HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
11:23:04.357 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.358 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.358 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.358 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.359 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.359 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.359 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.359 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.360 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.360 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.360 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.363 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.363 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.364 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.364 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 7 ms.
Hibernate: 
    call next value for global_seq
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.Restaurant
        */ insert 
        into
            restaurants
            (name, id) 
        values
            (?, ?)
11:23:04.367 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* select
        generatedAlias0 
    from
        Restaurant as generatedAlias0 */ select
            restaurant0_.id as id1_2_,
            restaurant0_.name as name2_2_ 
        from
            restaurants restaurant0_
11:23:04.370 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.373 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.374 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.374 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.374 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.374 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.375 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.375 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM restaurants
11:23:04.375 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.376 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.376 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.376 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.377 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.377 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.378 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.378 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 5 ms.
Hibernate: 
    /* DELETE 
    FROM
        Restaurant r 
    WHERE
        r.id=:id */ delete 
        from
            restaurants 
        where
            id=?
11:23:04.381 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* select
        generatedAlias0 
    from
        Restaurant as generatedAlias0 */ select
            restaurant0_.id as id1_2_,
            restaurant0_.name as name2_2_ 
        from
            restaurants restaurant0_
11:23:04.383 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.384 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.386 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.386 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 4 returned as update count for SQL: DELETE FROM votes
11:23:04.386 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.386 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 4 returned as update count for SQL: DELETE FROM meals
11:23:04.387 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 4 returned as update count for SQL: DELETE FROM menus
11:23:04.387 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 4 returned as update count for SQL: DELETE FROM restaurants
11:23:04.388 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.388 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.388 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.389 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.389 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.389 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.390 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.390 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 5 ms.
11:23:04.391 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* select
        generatedAlias0 
    from
        Restaurant as generatedAlias0 */ select
            restaurant0_.id as id1_2_,
            restaurant0_.name as name2_2_ 
        from
            restaurants restaurant0_
11:23:04.393 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.395 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.397 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.397 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.397 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.397 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.398 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.398 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.399 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.399 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.399 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.400 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.400 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.400 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.401 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.401 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 5 ms.
Hibernate: 
    /* load ru.neustupov.votingforrestaurants.model.Restaurant */ select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?
Hibernate: 
    /* update
        ru.neustupov.votingforrestaurants.model.Restaurant */ update
            restaurants 
        set
            name=? 
        where
            id=?
11:23:04.405 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?
11:23:04.406 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.408 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.409 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.409 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.409 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.409 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.409 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.410 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.410 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.410 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.411 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.411 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.411 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.412 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.412 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.412 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 4 ms.
Hibernate: 
    call next value for global_seq
11:23:04.425 ERROR org.hibernate.internal.ExceptionMapperStandardImpl.mapManagedFlushFailure:39 - HHH000346: Error during managed flush [Validation failed for classes [ru.neustupov.votingforrestaurants.model.Restaurant] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be blank', propertyPath=name, rootBeanClass=class ru.neustupov.votingforrestaurants.model.Restaurant, messageTemplate='{javax.validation.constraints.NotBlank.message}'}
]]
11:23:04.429 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.430 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.430 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.430 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.430 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.431 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.431 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.431 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.432 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.432 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.432 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.433 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.433 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.433 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.434 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 5 ms.
11:23:04.435 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?
11:23:04.436 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.440 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.441 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.441 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.441 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.441 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.442 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.442 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.442 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.443 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.444 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.444 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.445 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.445 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.445 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.446 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 6 ms.
11:23:04.446 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?
11:23:04.448 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.449 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.450 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.450 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.451 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.451 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.451 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.451 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.451 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.452 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.452 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.452 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.453 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.453 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.454 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.454 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 4 ms.
Hibernate: 
    /* DELETE 
    FROM
        Restaurant r 
    WHERE
        r.id=:id */ delete 
        from
            restaurants 
        where
            id=?
11:23:04.456 WARN  o.h.e.j.s.SqlExceptionHelper$StandardWarningHandler.logWarning:217 - SQL Warning Code: -1100, SQLState: 02000
11:23:04.456 WARN  o.h.e.j.s.SqlExceptionHelper$StandardWarningHandler.logWarning:218 - no data
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.119 s - in ru.neustupov.votingforrestaurants.service.RestaurantServiceTest
[INFO] Running ru.neustupov.votingforrestaurants.service.UserServiceTest
11:23:04.465 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.466 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.466 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.466 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.466 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.467 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.467 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.467 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.467 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.468 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.468 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.468 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.468 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.469 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.469 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 4 ms.
Hibernate: 
    call next value for global_seq
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.User
        */ insert 
        into
            users
            (name, email, enabled, password, registered, id) 
        values
            (?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row ru.neustupov.votingforrestaurants.model.User.roles */ insert 
        into
            user_roles
            (user_id, role) 
        values
            (?, ?)
11:23:04.474 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    LEFT JOIN
        FETCH u.roles 
    ORDER BY
        u.name */ select
            distinct user0_.id as id1_4_,
            user0_.name as name2_4_,
            user0_.email as email3_4_,
            user0_.enabled as enabled4_4_,
            user0_.password as password5_4_,
            user0_.registered as register6_4_,
            roles1_.user_id as user_id1_3_0__,
            roles1_.role as role2_3_0__ 
        from
            users user0_ 
        left outer join
            user_roles roles1_ 
                on user0_.id=roles1_.user_id 
        order by
            user0_.name
11:23:04.476 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.478 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.479 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 4 returned as update count for SQL: DELETE FROM user_roles
11:23:04.479 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.479 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM users
11:23:04.479 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.480 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.480 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.480 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.480 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.481 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.481 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.481 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.481 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.482 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.482 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 4 ms.
Hibernate: 
    /* DELETE 
    FROM
        User u 
    WHERE
        u.id=:id */ delete 
        from
            users 
        where
            id=?
11:23:04.485 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    LEFT JOIN
        FETCH u.roles 
    ORDER BY
        u.name */ select
            distinct user0_.id as id1_4_,
            user0_.name as name2_4_,
            user0_.email as email3_4_,
            user0_.enabled as enabled4_4_,
            user0_.password as password5_4_,
            user0_.registered as register6_4_,
            roles1_.user_id as user_id1_3_0__,
            roles1_.role as role2_3_0__ 
        from
            users user0_ 
        left outer join
            user_roles roles1_ 
                on user0_.id=roles1_.user_id 
        order by
            user0_.name
11:23:04.486 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.488 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.489 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM user_roles
11:23:04.489 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM votes
11:23:04.489 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 1 returned as update count for SQL: DELETE FROM users
11:23:04.490 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.490 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.490 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.490 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.490 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.491 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.491 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.491 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.492 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.492 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.492 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 4 ms.
11:23:04.493 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    LEFT JOIN
        FETCH u.roles 
    ORDER BY
        u.name */ select
            distinct user0_.id as id1_4_,
            user0_.name as name2_4_,
            user0_.email as email3_4_,
            user0_.enabled as enabled4_4_,
            user0_.password as password5_4_,
            user0_.registered as register6_4_,
            roles1_.user_id as user_id1_3_0__,
            roles1_.role as role2_3_0__ 
        from
            users user0_ 
        left outer join
            user_roles roles1_ 
                on user0_.id=roles1_.user_id 
        order by
            user0_.name
11:23:04.495 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.497 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.497 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.498 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.498 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.498 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.498 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.498 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.498 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.499 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.499 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.499 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.499 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.500 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.500 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.500 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
Hibernate: 
    /* load ru.neustupov.votingforrestaurants.model.User */ select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_ 
    from
        users user0_ 
    where
        user0_.id=?
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
Hibernate: 
    /* update
        ru.neustupov.votingforrestaurants.model.User */ update
            users 
        set
            name=?,
            email=?,
            enabled=?,
            password=?,
            registered=? 
        where
            id=?
Hibernate: 
    /* delete collection row ru.neustupov.votingforrestaurants.model.User.roles */ delete 
        from
            user_roles 
        where
            user_id=? 
            and role=?
Hibernate: 
    /* insert collection
        row ru.neustupov.votingforrestaurants.model.User.roles */ insert 
        into
            user_roles
            (user_id, role) 
        values
            (?, ?)
11:23:04.505 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_,
        roles1_.user_id as user_id1_3_1_,
        roles1_.role as role2_3_1_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    where
        user0_.id=?
11:23:04.507 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.509 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.510 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.511 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.511 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.511 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.511 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.512 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.512 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.512 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.512 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.513 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.513 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.513 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.514 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.514 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 5 ms.
Hibernate: 
    /* load ru.neustupov.votingforrestaurants.model.User */ select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_ 
    from
        users user0_ 
    where
        user0_.id=?
Hibernate: 
    call next value for global_seq
11:23:04.517 ERROR org.hibernate.internal.ExceptionMapperStandardImpl.mapManagedFlushFailure:39 - HHH000346: Error during managed flush [Validation failed for classes [ru.neustupov.votingforrestaurants.model.User] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be blank', propertyPath=name, rootBeanClass=class ru.neustupov.votingforrestaurants.model.User, messageTemplate='{javax.validation.constraints.NotBlank.message}'}
]]
Hibernate: 
    /* load ru.neustupov.votingforrestaurants.model.User */ select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_ 
    from
        users user0_ 
    where
        user0_.id=?
Hibernate: 
    call next value for global_seq
11:23:04.521 ERROR org.hibernate.internal.ExceptionMapperStandardImpl.mapManagedFlushFailure:39 - HHH000346: Error during managed flush [Validation failed for classes [ru.neustupov.votingforrestaurants.model.User] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must be a well-formed email address', propertyPath=email, rootBeanClass=class ru.neustupov.votingforrestaurants.model.User, messageTemplate='{javax.validation.constraints.Email.message}'}
]]
Hibernate: 
    /* load ru.neustupov.votingforrestaurants.model.User */ select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_ 
    from
        users user0_ 
    where
        user0_.id=?
Hibernate: 
    call next value for global_seq
11:23:04.525 ERROR org.hibernate.internal.ExceptionMapperStandardImpl.mapManagedFlushFailure:39 - HHH000346: Error during managed flush [Validation failed for classes [ru.neustupov.votingforrestaurants.model.User] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be blank', propertyPath=password, rootBeanClass=class ru.neustupov.votingforrestaurants.model.User, messageTemplate='{javax.validation.constraints.NotBlank.message}'}
	ConstraintViolationImpl{interpolatedMessage='size must be between 5 and 64', propertyPath=password, rootBeanClass=class ru.neustupov.votingforrestaurants.model.User, messageTemplate='{javax.validation.constraints.Size.message}'}
]]
Hibernate: 
    /* load ru.neustupov.votingforrestaurants.model.User */ select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_ 
    from
        users user0_ 
    where
        user0_.id=?
Hibernate: 
    call next value for global_seq
11:23:04.528 ERROR org.hibernate.internal.ExceptionMapperStandardImpl.mapManagedFlushFailure:39 - HHH000346: Error during managed flush [Validation failed for classes [ru.neustupov.votingforrestaurants.model.User] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='size must be between 5 and 64', propertyPath=password, rootBeanClass=class ru.neustupov.votingforrestaurants.model.User, messageTemplate='{javax.validation.constraints.Size.message}'}
]]
Hibernate: 
    /* load ru.neustupov.votingforrestaurants.model.User */ select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_ 
    from
        users user0_ 
    where
        user0_.id=?
Hibernate: 
    call next value for global_seq
11:23:04.531 ERROR org.hibernate.internal.ExceptionMapperStandardImpl.mapManagedFlushFailure:39 - HHH000346: Error during managed flush [Validation failed for classes [ru.neustupov.votingforrestaurants.model.User] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='size must be between 5 and 64', propertyPath=password, rootBeanClass=class ru.neustupov.votingforrestaurants.model.User, messageTemplate='{javax.validation.constraints.Size.message}'}
]]
Hibernate: 
    /* load ru.neustupov.votingforrestaurants.model.User */ select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_ 
    from
        users user0_ 
    where
        user0_.id=?
Hibernate: 
    call next value for global_seq
11:23:04.535 ERROR org.hibernate.internal.ExceptionMapperStandardImpl.mapManagedFlushFailure:39 - HHH000346: Error during managed flush [Validation failed for classes [ru.neustupov.votingforrestaurants.model.User] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=registered, rootBeanClass=class ru.neustupov.votingforrestaurants.model.User, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]]
11:23:04.537 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.538 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.538 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.538 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.538 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.538 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.538 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.539 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.539 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.539 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.539 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.540 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.540 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.540 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.540 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
11:23:04.541 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_,
        roles1_.user_id as user_id1_3_1_,
        roles1_.role as role2_3_1_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    where
        user0_.id=?
11:23:04.542 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.543 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.544 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.544 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.544 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.544 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.545 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.545 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.545 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.545 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.545 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.546 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.546 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.546 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.546 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.547 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
11:23:04.547 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_,
        roles1_.user_id as user_id1_3_1_,
        roles1_.role as role2_3_1_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    where
        user0_.id=?
11:23:04.548 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.550 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.551 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.551 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.552 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.552 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.552 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.552 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.552 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.553 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.553 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.553 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.553 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.554 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.554 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.554 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 4 ms.
Hibernate: 
    /* DELETE 
    FROM
        User u 
    WHERE
        u.id=:id */ delete 
        from
            users 
        where
            id=?
11:23:04.556 WARN  o.h.e.j.s.SqlExceptionHelper$StandardWarningHandler.logWarning:217 - SQL Warning Code: -1100, SQLState: 02000
11:23:04.556 WARN  o.h.e.j.s.SqlExceptionHelper$StandardWarningHandler.logWarning:218 - no data
11:23:04.557 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.558 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.558 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.558 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.558 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.559 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.559 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.559 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.559 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.560 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.560 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.561 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.561 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.561 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.562 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 5 ms.
Hibernate: 
    call next value for global_seq
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.User
        */ insert 
        into
            users
            (name, email, enabled, password, registered, id) 
        values
            (?, ?, ?, ?, ?, ?)
11:23:04.565 WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions:129 - SQL Error: -104, SQLState: 23505
11:23:04.566 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions:131 - integrity constraint violation: unique constraint or index violation; USERS_UNIQUE_EMAIL_IDX table: USERS
11:23:04.566 ERROR org.hibernate.internal.ExceptionMapperStandardImpl.mapManagedFlushFailure:39 - HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
11:23:04.568 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.570 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.570 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.570 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.570 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.570 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.571 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.571 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.571 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.572 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.572 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.573 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.573 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.573 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.574 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 5 ms.
Hibernate: 
    select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_,
        roles1_.user_id as user_id1_3_1_,
        roles1_.role as role2_3_1_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    where
        user0_.id=?
Hibernate: 
    /* update
        ru.neustupov.votingforrestaurants.model.User */ update
            users 
        set
            name=?,
            email=?,
            enabled=?,
            password=?,
            registered=? 
        where
            id=?
11:23:04.579 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_,
        roles1_.user_id as user_id1_3_1_,
        roles1_.role as role2_3_1_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    where
        user0_.id=?
11:23:04.582 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
Hibernate: 
    select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_,
        roles1_.user_id as user_id1_3_1_,
        roles1_.role as role2_3_1_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    where
        user0_.id=?
Hibernate: 
    /* update
        ru.neustupov.votingforrestaurants.model.User */ update
            users 
        set
            name=?,
            email=?,
            enabled=?,
            password=?,
            registered=? 
        where
            id=?
11:23:04.586 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        user0_.id as id1_4_0_,
        user0_.name as name2_4_0_,
        user0_.email as email3_4_0_,
        user0_.enabled as enabled4_4_0_,
        user0_.password as password5_4_0_,
        user0_.registered as register6_4_0_,
        roles1_.user_id as user_id1_3_1_,
        roles1_.role as role2_3_1_ 
    from
        users user0_ 
    left outer join
        user_roles roles1_ 
            on user0_.id=roles1_.user_id 
    where
        user0_.id=?
11:23:04.587 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.589 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.589 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.590 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.590 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.590 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.590 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.590 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.590 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.591 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.591 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.591 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.592 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.592 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.592 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.592 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
11:23:04.593 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* select
        generatedAlias0 
    from
        User as generatedAlias0 
    where
        generatedAlias0.email=:param0 */ select
            user0_.id as id1_4_,
            user0_.name as name2_4_,
            user0_.email as email3_4_,
            user0_.enabled as enabled4_4_,
            user0_.password as password5_4_,
            user0_.registered as register6_4_ 
        from
            users user0_ 
        where
            user0_.email=?
Hibernate: 
    select
        roles0_.user_id as user_id1_3_0_,
        roles0_.role as role2_3_0_ 
    from
        user_roles roles0_ 
    where
        roles0_.user_id=?
11:23:04.596 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.138 s - in ru.neustupov.votingforrestaurants.service.UserServiceTest
[INFO] Running ru.neustupov.votingforrestaurants.service.MealServiceTest
11:23:04.603 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.604 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.604 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.605 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.605 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.605 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.605 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.605 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.606 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.606 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.606 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.606 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.607 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.607 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.607 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 4 ms.
Hibernate: 
    select
        meal0_.id as id1_0_0_,
        meal0_.name as name2_0_0_,
        meal0_.id_menu as id_menu4_0_0_,
        meal0_.price as price3_0_0_,
        menu1_.id as id1_1_1_,
        menu1_.add_date as add_date2_1_1_,
        menu1_.id_rest as id_rest3_1_1_,
        restaurant2_.id as id1_2_2_,
        restaurant2_.name as name2_2_2_ 
    from
        meals meal0_ 
    inner join
        menus menu1_ 
            on meal0_.id_menu=menu1_.id 
    inner join
        restaurants restaurant2_ 
            on menu1_.id_rest=restaurant2_.id 
    where
        meal0_.id=?
11:23:04.611 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.612 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.612 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.612 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.612 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.612 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.613 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.613 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.613 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.613 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.613 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.614 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.614 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.615 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.615 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 4 ms.
Hibernate: 
    call next value for global_seq
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.Meal
        */ insert 
        into
            meals
            (name, id_menu, price, id) 
        values
            (?, ?, ?, ?)
11:23:04.620 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        m 
    FROM
        Meal m 
    WHERE
        m.menu.id=:menuId */ select
            meal0_.id as id1_0_,
            meal0_.name as name2_0_,
            meal0_.id_menu as id_menu4_0_,
            meal0_.price as price3_0_ 
        from
            meals meal0_ 
        where
            meal0_.id_menu=?
Hibernate: 
    select
        menu0_.id as id1_1_0_,
        menu0_.add_date as add_date2_1_0_,
        menu0_.id_rest as id_rest3_1_0_,
        restaurant1_.id as id1_2_1_,
        restaurant1_.name as name2_2_1_ 
    from
        menus menu0_ 
    inner join
        restaurants restaurant1_ 
            on menu0_.id_rest=restaurant1_.id 
    where
        menu0_.id=?
11:23:04.622 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.624 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.624 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.624 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.625 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.625 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 8 returned as update count for SQL: DELETE FROM meals
11:23:04.625 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.625 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.625 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.626 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.626 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.626 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.626 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.626 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.627 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.627 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
Hibernate: 
    /* DELETE 
    FROM
        Meal m 
    WHERE
        m.id=:id 
        AND m.menu.id=:menuId */ delete 
        from
            meals 
        where
            id=? 
            and id_menu=?
11:23:04.629 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        m 
    FROM
        Meal m 
    WHERE
        m.menu.id=:menuId */ select
            meal0_.id as id1_0_,
            meal0_.name as name2_0_,
            meal0_.id_menu as id_menu4_0_,
            meal0_.price as price3_0_ 
        from
            meals meal0_ 
        where
            meal0_.id_menu=?
Hibernate: 
    select
        menu0_.id as id1_1_0_,
        menu0_.add_date as add_date2_1_0_,
        menu0_.id_rest as id_rest3_1_0_,
        restaurant1_.id as id1_2_1_,
        restaurant1_.name as name2_2_1_ 
    from
        menus menu0_ 
    inner join
        restaurants restaurant1_ 
            on menu0_.id_rest=restaurant1_.id 
    where
        menu0_.id=?
11:23:04.631 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.633 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.634 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.634 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.634 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.634 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM meals
11:23:04.634 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.635 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.635 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.635 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.635 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.635 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.636 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.636 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.636 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.637 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
11:23:04.637 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        m 
    FROM
        Meal m 
    WHERE
        m.menu.id=:menuId */ select
            meal0_.id as id1_0_,
            meal0_.name as name2_0_,
            meal0_.id_menu as id_menu4_0_,
            meal0_.price as price3_0_ 
        from
            meals meal0_ 
        where
            meal0_.id_menu=?
Hibernate: 
    select
        menu0_.id as id1_1_0_,
        menu0_.add_date as add_date2_1_0_,
        menu0_.id_rest as id_rest3_1_0_,
        restaurant1_.id as id1_2_1_,
        restaurant1_.name as name2_2_1_ 
    from
        menus menu0_ 
    inner join
        restaurants restaurant1_ 
            on menu0_.id_rest=restaurant1_.id 
    where
        menu0_.id=?
11:23:04.639 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.641 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.642 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.643 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.643 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.643 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.643 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.643 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.643 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.644 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.644 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.644 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.644 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.645 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.645 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.645 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 4 ms.
Hibernate: 
    select
        meal0_.id as id1_0_0_,
        meal0_.name as name2_0_0_,
        meal0_.id_menu as id_menu4_0_0_,
        meal0_.price as price3_0_0_,
        menu1_.id as id1_1_1_,
        menu1_.add_date as add_date2_1_1_,
        menu1_.id_rest as id_rest3_1_1_,
        restaurant2_.id as id1_2_2_,
        restaurant2_.name as name2_2_2_ 
    from
        meals meal0_ 
    inner join
        menus menu1_ 
            on meal0_.id_menu=menu1_.id 
    inner join
        restaurants restaurant2_ 
            on menu1_.id_rest=restaurant2_.id 
    where
        meal0_.id=?
Hibernate: 
    /* update
        ru.neustupov.votingforrestaurants.model.Meal */ update
            meals 
        set
            name=?,
            id_menu=?,
            price=? 
        where
            id=?
11:23:04.649 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        meal0_.id as id1_0_0_,
        meal0_.name as name2_0_0_,
        meal0_.id_menu as id_menu4_0_0_,
        meal0_.price as price3_0_0_,
        menu1_.id as id1_1_1_,
        menu1_.add_date as add_date2_1_1_,
        menu1_.id_rest as id_rest3_1_1_,
        restaurant2_.id as id1_2_2_,
        restaurant2_.name as name2_2_2_ 
    from
        meals meal0_ 
    inner join
        menus menu1_ 
            on meal0_.id_menu=menu1_.id 
    inner join
        restaurants restaurant2_ 
            on menu1_.id_rest=restaurant2_.id 
    where
        meal0_.id=?
11:23:04.651 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.652 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.653 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.653 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.653 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.654 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.654 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.654 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.654 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.654 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.655 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.655 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.655 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.655 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.656 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.656 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 4 ms.
Hibernate: 
    call next value for global_seq
11:23:04.658 ERROR org.hibernate.internal.ExceptionMapperStandardImpl.mapManagedFlushFailure:39 - HHH000346: Error during managed flush [Validation failed for classes [ru.neustupov.votingforrestaurants.model.Meal] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be blank', propertyPath=name, rootBeanClass=class ru.neustupov.votingforrestaurants.model.Meal, messageTemplate='{javax.validation.constraints.NotBlank.message}'}
]]
Hibernate: 
    call next value for global_seq
11:23:04.660 ERROR org.hibernate.internal.ExceptionMapperStandardImpl.mapManagedFlushFailure:39 - HHH000346: Error during managed flush [Validation failed for classes [ru.neustupov.votingforrestaurants.model.Meal] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=price, rootBeanClass=class ru.neustupov.votingforrestaurants.model.Meal, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]]
11:23:04.661 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.662 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.662 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.662 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.663 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.663 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.663 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.663 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.663 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.663 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.664 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.664 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.664 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.664 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.665 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
11:23:04.665 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        meal0_.id as id1_0_0_,
        meal0_.name as name2_0_0_,
        meal0_.id_menu as id_menu4_0_0_,
        meal0_.price as price3_0_0_,
        menu1_.id as id1_1_1_,
        menu1_.add_date as add_date2_1_1_,
        menu1_.id_rest as id_rest3_1_1_,
        restaurant2_.id as id1_2_2_,
        restaurant2_.name as name2_2_2_ 
    from
        meals meal0_ 
    inner join
        menus menu1_ 
            on meal0_.id_menu=menu1_.id 
    inner join
        restaurants restaurant2_ 
            on menu1_.id_rest=restaurant2_.id 
    where
        meal0_.id=?
11:23:04.667 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.668 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.669 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.669 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.669 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.669 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.670 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.670 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.670 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.670 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.671 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.671 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.671 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.671 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.672 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.672 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 4 ms.
Hibernate: 
    /* DELETE 
    FROM
        Meal m 
    WHERE
        m.id=:id 
        AND m.menu.id=:menuId */ delete 
        from
            meals 
        where
            id=? 
            and id_menu=?
11:23:04.673 WARN  o.h.e.j.s.SqlExceptionHelper$StandardWarningHandler.logWarning:217 - SQL Warning Code: -1100, SQLState: 02000
11:23:04.674 WARN  o.h.e.j.s.SqlExceptionHelper$StandardWarningHandler.logWarning:218 - no data
11:23:04.675 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.676 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.676 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.676 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.676 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.676 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.677 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.677 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.677 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.677 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.677 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.678 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.678 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.678 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.678 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
11:23:04.679 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        meal0_.id as id1_0_0_,
        meal0_.name as name2_0_0_,
        meal0_.id_menu as id_menu4_0_0_,
        meal0_.price as price3_0_0_,
        menu1_.id as id1_1_1_,
        menu1_.add_date as add_date2_1_1_,
        menu1_.id_rest as id_rest3_1_1_,
        restaurant2_.id as id1_2_2_,
        restaurant2_.name as name2_2_2_ 
    from
        meals meal0_ 
    inner join
        menus menu1_ 
            on meal0_.id_menu=menu1_.id 
    inner join
        restaurants restaurant2_ 
            on menu1_.id_rest=restaurant2_.id 
    where
        meal0_.id=?
11:23:04.681 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.082 s - in ru.neustupov.votingforrestaurants.service.MealServiceTest
[INFO] Running ru.neustupov.votingforrestaurants.service.MenuServiceTest
11:23:04.686 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.686 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.687 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.687 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.687 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.687 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.687 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.687 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.688 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.688 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.688 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.688 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.689 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.689 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.689 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
Hibernate: 
    call next value for global_seq
Hibernate: 
    /* insert ru.neustupov.votingforrestaurants.model.Menu
        */ insert 
        into
            menus
            (add_date, id_rest, id) 
        values
            (?, ?, ?)
11:23:04.694 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        m 
    FROM
        Menu m 
    WHERE
        m.restaurant.id=:restId 
    ORDER BY
        m.id */ select
            menu0_.id as id1_1_,
            menu0_.add_date as add_date2_1_,
            menu0_.id_rest as id_rest3_1_ 
        from
            menus menu0_ 
        where
            menu0_.id_rest=? 
        order by
            menu0_.id
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?
11:23:04.696 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.697 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.698 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.698 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.699 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.699 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.699 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 8 returned as update count for SQL: DELETE FROM menus
11:23:04.699 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.700 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.700 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.700 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.700 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.701 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.701 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.701 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.701 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
Hibernate: 
    /* DELETE 
    FROM
        Menu m 
    WHERE
        m.id=:id 
        AND m.restaurant.id=:restId */ delete 
        from
            menus 
        where
            id=? 
            and id_rest=?
11:23:04.703 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        m 
    FROM
        Menu m 
    WHERE
        m.restaurant.id=:restId 
    ORDER BY
        m.id */ select
            menu0_.id as id1_1_,
            menu0_.add_date as add_date2_1_,
            menu0_.id_rest as id_rest3_1_ 
        from
            menus menu0_ 
        where
            menu0_.id_rest=? 
        order by
            menu0_.id
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?
11:23:04.705 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.706 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.707 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.707 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.707 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.707 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM meals
11:23:04.707 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM menus
11:23:04.708 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.708 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.708 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.708 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.708 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.709 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.709 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.709 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.709 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
11:23:04.710 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        m 
    FROM
        Menu m 
    WHERE
        m.restaurant.id=:restId 
    ORDER BY
        m.id */ select
            menu0_.id as id1_1_,
            menu0_.add_date as add_date2_1_,
            menu0_.id_rest as id_rest3_1_ 
        from
            menus menu0_ 
        where
            menu0_.id_rest=? 
        order by
            menu0_.id
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?
11:23:04.713 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.715 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.716 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.716 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.716 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.716 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.716 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.716 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.717 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.717 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.717 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.717 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.717 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.718 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.718 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.718 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
11:23:04.719 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    /* SELECT
        DISTINCT m 
    FROM
        Menu m 
    WHERE
        m.restaurant.id=:restId 
        AND m.addDate=:currDate */ select
            distinct menu0_.id as id1_1_0_,
            meals1_.id as id1_0_1_,
            menu0_.add_date as add_date2_1_0_,
            menu0_.id_rest as id_rest3_1_0_,
            meals1_.name as name2_0_1_,
            meals1_.id_menu as id_menu4_0_1_,
            meals1_.price as price3_0_1_,
            meals1_.id_menu as id_menu4_0_0__,
            meals1_.id as id1_0_0__ 
        from
            menus menu0_ 
        left outer join
            meals meals1_ 
                on menu0_.id=meals1_.id_menu 
        where
            menu0_.id_rest=? 
            and menu0_.add_date=?
Hibernate: 
    select
        restaurant0_.id as id1_2_0_,
        restaurant0_.name as name2_2_0_ 
    from
        restaurants restaurant0_ 
    where
        restaurant0_.id=?
11:23:04.725 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.726 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.727 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.727 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.727 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.727 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.727 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.728 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.728 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.728 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.728 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.728 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.729 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.729 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.729 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.729 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
11:23:04.730 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        menu0_.id as id1_1_0_,
        menu0_.add_date as add_date2_1_0_,
        menu0_.id_rest as id_rest3_1_0_,
        restaurant1_.id as id1_2_1_,
        restaurant1_.name as name2_2_1_ 
    from
        menus menu0_ 
    inner join
        restaurants restaurant1_ 
            on menu0_.id_rest=restaurant1_.id 
    where
        menu0_.id=?
11:23:04.731 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
11:23:04.733 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.733 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.734 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.734 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.734 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.734 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.734 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.734 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.735 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.735 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.735 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.735 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.735 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.736 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.736 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 3 ms.
Hibernate: 
    /* DELETE 
    FROM
        Menu m 
    WHERE
        m.id=:id 
        AND m.restaurant.id=:restId */ delete 
        from
            menus 
        where
            id=? 
            and id_rest=?
11:23:04.737 WARN  o.h.e.j.s.SqlExceptionHelper$StandardWarningHandler.logWarning:217 - SQL Warning Code: -1100, SQLState: 02000
11:23:04.738 WARN  o.h.e.j.s.SqlExceptionHelper$StandardWarningHandler.logWarning:218 - no data
11:23:04.739 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:442 - Executing SQL script from class path resource [db/populateDB.sql]
11:23:04.740 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: DELETE FROM user_roles
11:23:04.740 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: DELETE FROM votes
11:23:04.740 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: DELETE FROM users
11:23:04.740 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM meals
11:23:04.741 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: DELETE FROM menus
11:23:04.741 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: DELETE FROM restaurants
11:23:04.741 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 0 returned as update count for SQL: ALTER SEQUENCE global_seq RESTART WITH 100000
11:23:04.741 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 2 returned as update count for SQL: INSERT INTO USERS (name, email, password) VALUES ('User', 'user@yandex.ru', 'password'), ('Admin', 'admin@yandex.ru','admin')
11:23:04.742 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 3 returned as update count for SQL: INSERT INTO USER_ROLES (role, user_id) VALUES ('ROLE_USER', 100000), ('ROLE_ADMIN', 100001), ('ROLE_USER', 100001)
11:23:04.742 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 5 returned as update count for SQL: INSERT INTO RESTAURANTS (NAME) VALUES ('Russia'), ('Ukraine'), ('U Kolyana'), ('Almaz'), ('Fart')
11:23:04.742 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MENUS (ID_REST, ADD_DATE) VALUES (100002, '2015-05-01'), (100003, '2015-05-02'), (100004, '2015-05-03'), (100005, '2015-05-01'), (100006, '2015-05-02'), (100002, '2015-05-02'), (100002, CURRENT_DATE)
11:23:04.742 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 7 returned as update count for SQL: INSERT INTO MEALS (ID_MENU, NAME, PRICE) VALUES (100007, 'Apple', 5), (100008, 'Juice', 10), (100009, 'Potato', 20), (100010, 'Bananas', 30), (100011, 'Bread', 40), (100007, 'Bottle of water', 50), (100013, 'Mango', 100)
11:23:04.743 DEBUG o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:474 - 6 returned as update count for SQL: INSERT INTO VOTES (USER_ID, DATE, RESTAURANT) VALUES (100000, '2015-05-01', 100002), (100000, '2015-05-02', 100003), (100000, '2015-05-03', 100004), (100001, '2015-05-01', 100005), (100001, '2015-05-02', 100006), (100001, '2015-05-03', 100002)
11:23:04.743 INFO  o.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript:508 - Executed SQL script from class path resource [db/populateDB.sql] in 4 ms.
11:23:04.743 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction:176 - Setting JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]] read-only
Hibernate: 
    select
        menu0_.id as id1_1_0_,
        menu0_.add_date as add_date2_1_0_,
        menu0_.id_rest as id_rest3_1_0_,
        restaurant1_.id as id1_2_1_,
        restaurant1_.name as name2_2_1_ 
    from
        menus menu0_ 
    inner join
        restaurants restaurant1_ 
            on menu0_.id_rest=restaurant1_.id 
    where
        menu0_.id=?
11:23:04.745 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction:233 - Resetting read-only flag of JDBC Connection [ProxyConnection[PooledConnection[org.hsqldb.jdbc.JDBCConnection@5790cbcb]]]
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.063 s - in ru.neustupov.votingforrestaurants.service.MenuServiceTest
11:23:04.757 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.doGetConnection:114 - Fetching JDBC Connection from DataSource
11:23:04.757 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection:340 - Returning JDBC Connection to DataSource
11:23:04.762 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.doGetConnection:114 - Fetching JDBC Connection from DataSource
11:23:04.762 DEBUG o.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection:340 - Returning JDBC Connection to DataSource
[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   MenuControllerTest.testMenus:29 Model attribute 'menusList'
Expected: a collection with size <3>
     but: was null
[ERROR]   VoteControllerTest.testVotes:26 Model attribute 'votesList'
Expected: a collection with size <6>
     but: was null
[INFO] 
[ERROR] Tests run: 98, Failures: 2, Errors: 0, Skipped: 3
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 12.682 s
[INFO] Finished at: 2018-04-26T11:23:05+02:00
[INFO] Final Memory: 22M/914M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.20.1:test (default-test) on project votingforrestaurants: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/neustupov/votingForRestaurants/371465468/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
