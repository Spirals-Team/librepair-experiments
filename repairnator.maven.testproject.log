[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for fr.inria.gforge.spoon:spoon-core:jar:6.3.0-SNAPSHOT
[WARNING] 'build.plugins.plugin.version' for org.pitest:pitest-maven is missing. @ line 492, column 15
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] Inspecting build with total of 1 modules...
[INFO] Installing Nexus Staging features:
[INFO]   ... total of 1 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Spoon Core 6.3.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @ spoon-core ---
[INFO] Skipping Rule Enforcement.
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ spoon-core ---
[INFO] argLine set to -javaagent:/root/./workspace/INRIA/spoon/388836284/.m2/org/jacoco/org.jacoco.agent/0.7.9/org.jacoco.agent-0.7.9-runtime.jar=destfile=/root/workspace/INRIA/spoon/388836284/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ spoon-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 3 resources
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ spoon-core ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ spoon-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 166 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ spoon-core ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ spoon-core ---
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.pom (4 KB at 8.7 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.20.1/surefire-providers-2.20.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.20.1/surefire-providers-2.20.1.pom (3 KB at 68.0 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.jar
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.jar (81 KB at 992.0 KB/sec)
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running spoon.test.api.MetamodelTest
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 12.004 s - in spoon.test.api.MetamodelTest
[INFO] Running spoon.test.api.NoClasspathTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.391 s - in spoon.test.api.NoClasspathTest
[INFO] Running spoon.test.api.FileSystemFolderTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.api.FileSystemFolderTest
[INFO] Running spoon.test.api.APITest
./target/nooutput_41320d21-9cdd-4fab-93cf-de369e83dbbb
[INFO] Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 11.193 s - in spoon.test.api.APITest
[INFO] Running spoon.test.exceptions.ExceptionTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.286 s - in spoon.test.exceptions.ExceptionTest
[INFO] Running spoon.test.module.TestModule
[WARNING] Tests run: 8, Failures: 0, Errors: 0, Skipped: 2, Time elapsed: 0.091 s - in spoon.test.module.TestModule
[INFO] Running spoon.test.imports.ImportScannerTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.475 s - in spoon.test.imports.ImportScannerTest
[INFO] Running spoon.test.imports.ImportAndExtendWithPackageNameTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 s - in spoon.test.imports.ImportAndExtendWithPackageNameTest
[INFO] Running spoon.test.imports.ImportTest
[INFO] Tests run: 44, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.284 s - in spoon.test.imports.ImportTest
[INFO] Running spoon.test.prettyprinter.DefaultPrettyPrinterTest
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.562 s - in spoon.test.prettyprinter.DefaultPrettyPrinterTest
[INFO] Running spoon.test.prettyprinter.LinesTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.339 s - in spoon.test.prettyprinter.LinesTest
[INFO] Running spoon.test.prettyprinter.PrinterTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.466 s - in spoon.test.prettyprinter.PrinterTest
[INFO] Running spoon.test.prettyprinter.QualifiedThisRefTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.224 s - in spoon.test.prettyprinter.QualifiedThisRefTest
[INFO] Running spoon.test.visitor.VisitorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 s - in spoon.test.visitor.VisitorTest
[INFO] Running spoon.test.visitor.AssignmentsEqualsTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 s - in spoon.test.visitor.AssignmentsEqualsTest
[INFO] Running spoon.test.loop.LoopTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.078 s - in spoon.test.loop.LoopTest
[INFO] Running spoon.test.intercession.insertBefore.InsertMethodsTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.867 s - in spoon.test.intercession.insertBefore.InsertMethodsTest
[INFO] Running spoon.test.intercession.OneCanCallSetterWithNullParameterizedTest
[INFO] Tests run: 113, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.358 s - in spoon.test.intercession.OneCanCallSetterWithNullParameterizedTest
[INFO] Running spoon.test.intercession.IntercessionTest
[WARNING] Tests run: 8, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 4.056 s - in spoon.test.intercession.IntercessionTest
[INFO] Running spoon.test.intercession.RemoveTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.041 s - in spoon.test.intercession.RemoveTest
[INFO] Running spoon.test.variable.AccessFullyQualifiedFieldTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.804 s - in spoon.test.variable.AccessFullyQualifiedFieldTest
[INFO] Running spoon.test.variable.AccessTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.364 s - in spoon.test.variable.AccessTest
[INFO] Running spoon.test.comment.CommentTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 22.322 s - in spoon.test.comment.CommentTest
[INFO] Running spoon.test.pkg.PackageTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.641 s - in spoon.test.pkg.PackageTest
[INFO] Running spoon.test.annotation.AnnotationValuesTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.127 s - in spoon.test.annotation.AnnotationValuesTest
[INFO] Running spoon.test.annotation.AnnotationLoopTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 s - in spoon.test.annotation.AnnotationLoopTest
[INFO] Running spoon.test.annotation.AnnotationTest
[INFO] Tests run: 52, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.188 s - in spoon.test.annotation.AnnotationTest
[INFO] Running spoon.test.replace.ReplaceTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.01 s - in spoon.test.replace.ReplaceTest
[INFO] Running spoon.test.replace.ReplaceParametrizedTest
[ERROR] Tests run: 80, Failures: 75, Errors: 0, Skipped: 0, Time elapsed: 0.146 s <<< FAILURE! - in spoon.test.replace.ReplaceParametrizedTest
[ERROR] testContract[CtConditional](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.013 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtConditional have problems:
UnsettableProperty CtConditional#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtConditional#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtConditional#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtConditional#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtProvidedService](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtProvidedService have problems:
UnsettableProperty CtProvidedService#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtProvidedService#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtParameter](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtParameter have problems:
UnsettableProperty CtParameter#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtParameter#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtWhile](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtWhile have problems:
UnsettableProperty CtWhile#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtWhile#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtWhile#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtCatchVariableReference](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtCatchVariableReference have problems:
UnsettableProperty CtCatchVariableReference#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtCatchVariableReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtContinue](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtContinue have problems:
UnsettableProperty CtContinue#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtContinue#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtInterface](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.003 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtInterface have problems:
UnsettableProperty CtInterface#typeMember<java.util.List<spoon.reflect.declaration.CtTypeMember>> sets the value
UnsettableProperty CtInterface#interface<java.util.Set<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtInterface#typeParameter<java.util.List<spoon.reflect.declaration.CtTypeParameter>> sets the value
UnsettableProperty CtInterface#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtInterface#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtAssignment](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtAssignment have problems:
UnsettableProperty CtAssignment#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtAssignment#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtBinaryOperator](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtBinaryOperator have problems:
UnsettableProperty CtBinaryOperator#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtBinaryOperator#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtBinaryOperator#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtBinaryOperator#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtEnumValue](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtEnumValue have problems:
UnsettableProperty CtEnumValue#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtEnumValue#defaultExpression<spoon.reflect.code.CtExpression<T>> sets the value
UnsettableProperty CtEnumValue#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtEnumValue#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtModuleRequirement](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtModuleRequirement have problems:
UnsettableProperty CtModuleRequirement#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtModuleRequirement#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtForEach](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtForEach have problems:
UnsettableProperty CtForEach#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtForEach#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtForEach#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtConstructor](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.003 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtConstructor have problems:
UnsettableProperty CtConstructor#parameter<java.util.List<spoon.reflect.declaration.CtParameter<?>>> sets the value
UnsettableProperty CtConstructor#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtConstructor#thrown<java.util.Set<spoon.reflect.reference.CtTypeReference<? extends java.lang.Throwable>>> sets the value
UnsettableProperty CtConstructor#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtConstructor#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtSuperAccess](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtSuperAccess have problems:
UnsettableProperty CtSuperAccess#variable<spoon.reflect.reference.CtVariableReference<T>> sets the value
UnsettableProperty CtSuperAccess#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtSuperAccess#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtSuperAccess#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtSuperAccess#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtAnonymousExecutable](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
Settable field CtAnonymousExecutable#thrown<java.util.Set<spoon.reflect.reference.CtTypeReference<? extends java.lang.Throwable>>> should set value.

	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:151)

[ERROR] testContract[CtComment](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtComment have problems:
UnsettableProperty CtComment#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtComment#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtThisAccess](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtThisAccess have problems:
UnsettableProperty CtThisAccess#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtThisAccess#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtThisAccess#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtThisAccess#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtThisAccess#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtArrayWrite](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtArrayWrite have problems:
UnsettableProperty CtArrayWrite#expression<spoon.reflect.code.CtExpression<java.lang.Integer>> sets the value
UnsettableProperty CtArrayWrite#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtArrayWrite#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtArrayWrite#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtArrayWrite#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtArrayWrite#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtPackageReference](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtPackageReference have problems:
UnsettableProperty CtPackageReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtJavaDoc](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtJavaDoc have problems:
UnsettableProperty CtJavaDoc#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtJavaDoc#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtArrayRead](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtArrayRead have problems:
UnsettableProperty CtArrayRead#expression<spoon.reflect.code.CtExpression<java.lang.Integer>> sets the value
UnsettableProperty CtArrayRead#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtArrayRead#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtArrayRead#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtArrayRead#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtArrayRead#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtStatementList](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtStatementList have problems:
UnsettableProperty CtStatementList#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtStatementList#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtVariableWrite](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtVariableWrite have problems:
UnsettableProperty CtVariableWrite#variable<spoon.reflect.reference.CtVariableReference<T>> sets the value
UnsettableProperty CtVariableWrite#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtVariableWrite#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtVariableWrite#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtVariableWrite#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtParameterReference](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtParameterReference have problems:
UnsettableProperty CtParameterReference#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtParameterReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtOperatorAssignment](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtOperatorAssignment have problems:
UnsettableProperty CtOperatorAssignment#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtOperatorAssignment#assignment<spoon.reflect.code.CtExpression<A>> sets the value
UnsettableProperty CtOperatorAssignment#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtOperatorAssignment#assigned<spoon.reflect.code.CtExpression<T>> sets the value
UnsettableProperty CtOperatorAssignment#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtOperatorAssignment#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtAnnotationFieldAccess](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtAnnotationFieldAccess have problems:
UnsettableProperty CtAnnotationFieldAccess#variable<spoon.reflect.reference.CtFieldReference<T>> sets the value
UnsettableProperty CtAnnotationFieldAccess#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtAnnotationFieldAccess#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtAnnotationFieldAccess#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtAnnotationFieldAccess#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtAnnotationFieldAccess#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtUnboundVariableReference](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtUnboundVariableReference have problems:
UnsettableProperty CtUnboundVariableReference#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtAnnotationMethod](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtAnnotationMethod have problems:
UnsettableProperty CtAnnotationMethod#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtAnnotationMethod#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtAnnotationMethod#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtClass](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.004 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtClass have problems:
UnsettableProperty CtClass#typeMember<java.util.List<spoon.reflect.declaration.CtTypeMember>> sets the value
UnsettableProperty CtClass#interface<java.util.Set<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtClass#typeParameter<java.util.List<spoon.reflect.declaration.CtTypeParameter>> sets the value
UnsettableProperty CtClass#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtClass#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtBlock](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtBlock have problems:
UnsettableProperty CtBlock#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtBlock#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtPackage](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtPackage have problems:
UnsettableProperty CtPackage#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtPackage#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtTryWithResource](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtTryWithResource have problems:
UnsettableProperty CtTryWithResource#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtTryWithResource#finalizer<spoon.reflect.code.CtBlock<?>> sets the value
UnsettableProperty CtTryWithResource#catch<java.util.List<spoon.reflect.code.CtCatch>> sets the value
UnsettableProperty CtTryWithResource#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtTryWithResource#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtAssert](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtAssert have problems:
UnsettableProperty CtAssert#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtAssert#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtSwitch](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtSwitch have problems:
UnsettableProperty CtSwitch#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtSwitch#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtTry](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtTry have problems:
UnsettableProperty CtTry#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtTry#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtSynchronized](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtSynchronized have problems:
UnsettableProperty CtSynchronized#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtSynchronized#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtImport](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtImport have problems:
UnsettableProperty CtImport#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtImport#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtInvocation](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.003 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtInvocation have problems:
UnsettableProperty CtInvocation#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtInvocation#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtInvocation#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtInvocation#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtCodeSnippetExpression](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtCodeSnippetExpression have problems:
UnsettableProperty CtCodeSnippetExpression#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtCodeSnippetExpression#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtCodeSnippetExpression#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtCodeSnippetExpression#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtFieldWrite](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtFieldWrite have problems:
UnsettableProperty CtFieldWrite#variable<spoon.reflect.reference.CtFieldReference<T>> sets the value
UnsettableProperty CtFieldWrite#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtFieldWrite#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtFieldWrite#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtFieldWrite#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtFieldWrite#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtUnaryOperator](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtUnaryOperator have problems:
UnsettableProperty CtUnaryOperator#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtUnaryOperator#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtUnaryOperator#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtUnaryOperator#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtExecutableReference](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtExecutableReference have problems:
UnsettableProperty CtExecutableReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtFor](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtFor have problems:
UnsettableProperty CtFor#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtFor#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtFor#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtVariableRead](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtVariableRead have problems:
UnsettableProperty CtVariableRead#variable<spoon.reflect.reference.CtVariableReference<T>> sets the value
UnsettableProperty CtVariableRead#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtVariableRead#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtVariableRead#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtVariableRead#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtTypeParameter](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtTypeParameter have problems:
UnsettableProperty CtTypeParameter#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtTypeParameter#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtLocalVariable](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtLocalVariable have problems:
UnsettableProperty CtLocalVariable#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtLocalVariable#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtIf](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtIf have problems:
UnsettableProperty CtIf#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtIf#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtModule](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.003 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtModule have problems:
UnsettableProperty CtModule#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtModule#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtPackageExport](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtPackageExport have problems:
UnsettableProperty CtPackageExport#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtPackageExport#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtConstructorCall](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtConstructorCall have problems:
UnsettableProperty CtConstructorCall#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtConstructorCall#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtConstructorCall#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtConstructorCall#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtCase](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtCase have problems:
UnsettableProperty CtCase#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtCase#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtModuleReference](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtModuleReference have problems:
UnsettableProperty CtModuleReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtCatch](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtCatch have problems:
UnsettableProperty CtCatch#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtCatch#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtMethod](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtMethod have problems:
UnsettableProperty CtMethod#parameter<java.util.List<spoon.reflect.declaration.CtParameter<?>>> sets the value
UnsettableProperty CtMethod#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtMethod#thrown<java.util.Set<spoon.reflect.reference.CtTypeReference<? extends java.lang.Throwable>>> sets the value
UnsettableProperty CtMethod#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtMethod#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtLambda](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtLambda have problems:
UnsettableProperty CtLambda#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtLambda#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtLambda#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtLambda#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtNewArray](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtNewArray have problems:
UnsettableProperty CtNewArray#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtNewArray#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtNewArray#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtNewArray#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtUsedService](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtUsedService have problems:
UnsettableProperty CtUsedService#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtUsedService#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtThrow](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtThrow have problems:
UnsettableProperty CtThrow#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtThrow#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtLiteral](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtLiteral have problems:
UnsettableProperty CtLiteral#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtLiteral#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtLiteral#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtLiteral#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtReturn](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtReturn have problems:
UnsettableProperty CtReturn#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtReturn#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtField](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtField have problems:
UnsettableProperty CtField#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtField#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtJavaDocTag](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtJavaDocTag have problems:
UnsettableProperty CtJavaDocTag#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtJavaDocTag#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtTypeAccess](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtTypeAccess have problems:
UnsettableProperty CtTypeAccess#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtTypeAccess#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtTypeAccess#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtCodeSnippetStatement](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtCodeSnippetStatement have problems:
UnsettableProperty CtCodeSnippetStatement#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtCodeSnippetStatement#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtDo](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtDo have problems:
UnsettableProperty CtDo#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtDo#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtDo#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtAnnotation](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.003 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtAnnotation have problems:
UnsettableProperty CtAnnotation#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtAnnotation#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtAnnotation#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtFieldRead](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtFieldRead have problems:
UnsettableProperty CtFieldRead#variable<spoon.reflect.reference.CtFieldReference<T>> sets the value
UnsettableProperty CtFieldRead#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtFieldRead#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtFieldRead#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtFieldRead#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtFieldRead#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtBreak](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtBreak have problems:
UnsettableProperty CtBreak#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtBreak#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtFieldReference](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtFieldReference have problems:
UnsettableProperty CtFieldReference#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtFieldReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtEnum](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.003 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtEnum have problems:
UnsettableProperty CtEnum#typeMember<java.util.List<spoon.reflect.declaration.CtTypeMember>> sets the value
UnsettableProperty CtEnum#interface<java.util.Set<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtEnum#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtEnum#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtNewClass](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtNewClass have problems:
UnsettableProperty CtNewClass#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtNewClass#executableRef<spoon.reflect.reference.CtExecutableReference<T>> sets the value
UnsettableProperty CtNewClass#argument<java.util.List<spoon.reflect.code.CtExpression<?>>> sets the value
UnsettableProperty CtNewClass#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtNewClass#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtNewClass#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtNewClass#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtLocalVariableReference](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtLocalVariableReference have problems:
UnsettableProperty CtLocalVariableReference#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtLocalVariableReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtAnnotationType](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtAnnotationType have problems:
UnsettableProperty CtAnnotationType#typeMember<java.util.List<spoon.reflect.declaration.CtTypeMember>> sets the value
UnsettableProperty CtAnnotationType#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtAnnotationType#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtCatchVariable](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtCatchVariable have problems:
UnsettableProperty CtCatchVariable#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtCatchVariable#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[ERROR] testContract[CtExecutableReferenceExpression](spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: 
The accessors of CtExecutableReferenceExpression have problems:
UnsettableProperty CtExecutableReferenceExpression#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtExecutableReferenceExpression#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtExecutableReferenceExpression#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtExecutableReferenceExpression#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtExecutableReferenceExpression#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
	at spoon.test.replace.ReplaceParametrizedTest.testContract(ReplaceParametrizedTest.java:171)

[INFO] Running spoon.test.fieldaccesses.FieldAccessTest
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.831 s - in spoon.test.fieldaccesses.FieldAccessTest
[INFO] Running spoon.test.refactoring.MethodsRefactoringTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.884 s - in spoon.test.refactoring.MethodsRefactoringTest
[INFO] Running spoon.test.refactoring.CtRenameLocalVariableRefactoringTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.746 s - in spoon.test.refactoring.CtRenameLocalVariableRefactoringTest
[INFO] Running spoon.test.refactoring.RefactoringTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.407 s - in spoon.test.refactoring.RefactoringTest
[INFO] Running spoon.test.position.PositionTest
[INFO] Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.832 s - in spoon.test.position.PositionTest
[INFO] Running spoon.test.ctCase.SwitchCaseTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.078 s - in spoon.test.ctCase.SwitchCaseTest
[INFO] Running spoon.test.staticFieldAccess.StaticAccessTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.134 s - in spoon.test.staticFieldAccess.StaticAccessTest
[INFO] Running spoon.test.template.TemplateTest
0
[INFO] Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.174 s - in spoon.test.template.TemplateTest
[INFO] Running spoon.test.template.TemplateArrayAccessTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.081 s - in spoon.test.template.TemplateArrayAccessTest
[INFO] Running spoon.test.template.TemplateInvocationSubstitutionTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.188 s - in spoon.test.template.TemplateInvocationSubstitutionTest
[INFO] Running spoon.test.template.TemplateEnumAccessTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.092 s - in spoon.test.template.TemplateEnumAccessTest
[INFO] Running spoon.test.template.TemplateClassAccessTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.077 s - in spoon.test.template.TemplateClassAccessTest
[INFO] Running spoon.test.template.TemplateReplaceReturnTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.179 s - in spoon.test.template.TemplateReplaceReturnTest
[INFO] Running spoon.test.condition.ConditionalTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.166 s - in spoon.test.condition.ConditionalTest
[INFO] Running spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.472 s - in spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest
[INFO] Running spoon.test.processing.ProcessingTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.327 s - in spoon.test.processing.ProcessingTest
[INFO] Running spoon.test.secondaryclasses.ClassesTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.23 s - in spoon.test.secondaryclasses.ClassesTest
[INFO] Running spoon.test.reference.ElasticsearchStackoverflowTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.062 s - in spoon.test.reference.ElasticsearchStackoverflowTest
[INFO] Running spoon.test.reference.AnnotationFieldReferenceTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 s - in spoon.test.reference.AnnotationFieldReferenceTest
[INFO] Running spoon.test.reference.VariableAccessTest
2018-06-06 18:01:08,670 ERROR spoon.support.compiler.jdt.JDTTreeBuilder - Could not find declaration for variable e at (/root/workspace/INRIA/spoon/388836284/src/test/resources/noclasspath/org/elasticsearch/indices/analysis/HunspellService.java:100)
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.456 s - in spoon.test.reference.VariableAccessTest
[INFO] Running spoon.test.reference.CloneReferenceTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.08 s - in spoon.test.reference.CloneReferenceTest
[INFO] Running spoon.test.reference.ExecutableReferenceTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.313 s - in spoon.test.reference.ExecutableReferenceTest
[INFO] Running spoon.test.reference.TypeReferenceTest
[INFO] Tests run: 28, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.296 s - in spoon.test.reference.TypeReferenceTest
[INFO] Running spoon.test.reference.ExecutableReferenceGenericTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.457 s - in spoon.test.reference.ExecutableReferenceGenericTest
[INFO] Running spoon.test.filters.FilterTest
2018-06-06 18:01:11,022 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:11,022 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:11,022 INFO spoon.Launcher - start processing...
2018-06-06 18:01:11,064 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:11,064 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:11,229 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:11,229 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:11,229 INFO spoon.Launcher - start processing...
2018-06-06 18:01:11,270 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:11,270 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:11,413 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:11,413 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:11,413 INFO spoon.Launcher - start processing...
2018-06-06 18:01:11,454 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:11,455 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:11,720 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:11,720 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:11,720 INFO spoon.Launcher - start processing...
2018-06-06 18:01:11,761 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:11,762 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:11,839 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:11,840 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:11,840 INFO spoon.Launcher - start processing...
2018-06-06 18:01:11,881 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:11,881 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:12,261 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:12,261 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:12,261 INFO spoon.Launcher - start processing...
2018-06-06 18:01:12,302 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:12,303 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:12,540 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:12,541 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:12,541 INFO spoon.Launcher - start processing...
2018-06-06 18:01:12,582 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:12,582 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:12,771 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:12,771 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:12,771 INFO spoon.Launcher - start processing...
2018-06-06 18:01:12,812 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:12,813 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:12,851 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:12,851 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:12,852 INFO spoon.Launcher - start processing...
2018-06-06 18:01:12,893 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:12,893 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:13,002 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:13,003 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:13,003 INFO spoon.Launcher - start processing...
2018-06-06 18:01:13,044 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:13,044 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:13,156 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:13,156 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:13,156 INFO spoon.Launcher - start processing...
2018-06-06 18:01:13,198 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:13,198 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:13,237 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:13,237 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:13,237 INFO spoon.Launcher - start processing...
2018-06-06 18:01:13,279 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:13,279 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:13,592 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:13,593 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:13,593 INFO spoon.Launcher - start processing...
2018-06-06 18:01:13,635 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:13,635 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:13,672 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:13,672 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:13,672 INFO spoon.Launcher - start processing...
2018-06-06 18:01:13,714 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:13,714 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:13,985 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:13,985 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:13,985 INFO spoon.Launcher - start processing...
2018-06-06 18:01:14,029 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:14,029 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:14,034 INFO spoon.Launcher - Step filter CtClass only) spoon.reflect.CtModelImpl$CtRootPackage cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtRootPackage: unnamed package
2018-06-06 18:01:14,034 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtPackageImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageImpl: spoon
2018-06-06 18:01:14,035 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtPackageImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageImpl: spoon.test
2018-06-06 18:01:14,035 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtPackageImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageImpl: spoon.test.filters
2018-06-06 18:01:14,035 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtPackageImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,036 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-06-06 18:01:14,036 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,037 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: AbstractTostada() {
}
2018-06-06 18:01:14,040 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-06-06 18:01:14,040 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-06-06 18:01:14,040 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: java.lang.Object()
2018-06-06 18:01:14,040 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-06-06 18:01:14,040 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,041 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-06-06 18:01:14,041 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,041 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public spoon.test.filters.testclasses.ITostada make() {
    return new spoon.test.filters.testclasses.Tostada() {
        @java.lang.Override
        public void prepare() {
            super.prepare();
        }

        @java.lang.Override
        public spoon.test.filters.testclasses.ITostada make() {
            return super.make();
        }
    };
}
2018-06-06 18:01:14,041 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-06-06 18:01:14,042 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,042 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,042 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,042 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,042 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-06-06 18:01:14,042 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,043 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return new spoon.test.filters.testclasses.Tostada() {
        @java.lang.Override
        public void prepare() {
            super.prepare();
        }

        @java.lang.Override
        public spoon.test.filters.testclasses.ITostada make() {
            return super.make();
        }
    };
}
2018-06-06 18:01:14,043 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return new spoon.test.filters.testclasses.Tostada() {
    @java.lang.Override
    public void prepare() {
        super.prepare();
    }

    @java.lang.Override
    public spoon.test.filters.testclasses.ITostada make() {
        return super.make();
    }
}
2018-06-06 18:01:14,044 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtNewClassImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtNewClassImpl: new spoon.test.filters.testclasses.Tostada() {
    @java.lang.Override
    public void prepare() {
        super.prepare();
    }

    @java.lang.Override
    public spoon.test.filters.testclasses.ITostada make() {
        return super.make();
    }
}
2018-06-06 18:01:14,044 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.AbstractTostada$1()
2018-06-06 18:01:14,045 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada.1
2018-06-06 18:01:14,046 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-06-06 18:01:14,046 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,046 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,046 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,046 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,046 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,047 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: 1() {
}
2018-06-06 18:01:14,047 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-06-06 18:01:14,047 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-06-06 18:01:14,047 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.Tostada()
2018-06-06 18:01:14,047 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,048 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,048 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,048 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,048 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
    super.prepare();
}
2018-06-06 18:01:14,048 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-06-06 18:01:14,049 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,049 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,049 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,049 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,049 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,050 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    super.prepare();
}
2018-06-06 18:01:14,050 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.prepare()
2018-06-06 18:01:14,050 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-06-06 18:01:14,050 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-06-06 18:01:14,050 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,050 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,051 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: prepare()
2018-06-06 18:01:14,051 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,051 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,051 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,051 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public spoon.test.filters.testclasses.ITostada make() {
    return super.make();
}
2018-06-06 18:01:14,052 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-06-06 18:01:14,054 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,054 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,055 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,055 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,055 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-06-06 18:01:14,055 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,056 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return super.make();
}
2018-06-06 18:01:14,056 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return super.make()
2018-06-06 18:01:14,056 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.make()
2018-06-06 18:01:14,056 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-06-06 18:01:14,056 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-06-06 18:01:14,056 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,057 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,057 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: make()
2018-06-06 18:01:14,057 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,057 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,057 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-06-06 18:01:14,058 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,058 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public abstract void prepare();
2018-06-06 18:01:14,058 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,058 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void honey() {
}
2018-06-06 18:01:14,058 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,058 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-06-06 18:01:14,059 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-06-06 18:01:14,059 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,059 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: Antojito() {
}
2018-06-06 18:01:14,059 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-06-06 18:01:14,059 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-06-06 18:01:14,060 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.AbstractTostada()
2018-06-06 18:01:14,060 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-06-06 18:01:14,060 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,060 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-06-06 18:01:14,060 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,061 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
    java.lang.System.out.println("Antojito");
}
2018-06-06 18:01:14,061 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-06-06 18:01:14,061 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,061 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,061 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,062 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,062 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,062 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    java.lang.System.out.println("Antojito");
}
2018-06-06 18:01:14,062 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: java.lang.System.out.println("Antojito")
2018-06-06 18:01:14,063 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldReadImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReadImpl: java.lang.System.out
2018-06-06 18:01:14,063 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: java.lang.System
2018-06-06 18:01:14,063 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.System
2018-06-06 18:01:14,063 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,063 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: java.lang.System.out
2018-06-06 18:01:14,063 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.System
2018-06-06 18:01:14,064 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,064 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.io.PrintStream
2018-06-06 18:01:14,064 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.io
2018-06-06 18:01:14,064 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: println(java.lang.String)
2018-06-06 18:01:14,064 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.io.PrintStream
2018-06-06 18:01:14,065 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.io
2018-06-06 18:01:14,065 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,065 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-06-06 18:01:14,065 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,065 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: "Antojito"
2018-06-06 18:01:14,065 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-06-06 18:01:14,066 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,066 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void prepare(java.lang.String ingredient) {
}
2018-06-06 18:01:14,066 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,066 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtParameterImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtParameterImpl: java.lang.String ingredient
2018-06-06 18:01:14,066 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-06-06 18:01:14,067 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,067 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-06-06 18:01:14,067 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-06-06 18:01:14,067 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-06-06 18:01:14,067 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtFieldImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldImpl: private int myfield = 0;
2018-06-06 18:01:14,067 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-06-06 18:01:14,068 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: 0
2018-06-06 18:01:14,068 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-06-06 18:01:14,068 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: FieldAccessFilterTacos() {
    super();
    this.myfield = 0;
}
2018-06-06 18:01:14,068 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    super();
    this.myfield = 0;
}
2018-06-06 18:01:14,068 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-06-06 18:01:14,069 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: java.util.ArrayList()
2018-06-06 18:01:14,069 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-06-06 18:01:14,069 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-06-06 18:01:14,069 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-06-06 18:01:14,069 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-06-06 18:01:14,069 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtAssignmentImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAssignmentImpl: this.myfield = 0
2018-06-06 18:01:14,070 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-06-06 18:01:14,070 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldWriteImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldWriteImpl: this.myfield
2018-06-06 18:01:14,070 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtThisAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtThisAccessImpl: this
2018-06-06 18:01:14,070 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-06-06 18:01:14,070 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,070 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-06-06 18:01:14,071 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-06-06 18:01:14,071 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,071 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: myfield
2018-06-06 18:01:14,071 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-06-06 18:01:14,071 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,071 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-06-06 18:01:14,072 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: 0
2018-06-06 18:01:14,072 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-06-06 18:01:14,072 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void m() {
    myfield = super.size();
    java.lang.Object o = super.get(myfield);
}
2018-06-06 18:01:14,073 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,073 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    myfield = super.size();
    java.lang.Object o = super.get(myfield);
}
2018-06-06 18:01:14,073 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtAssignmentImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAssignmentImpl: myfield = super.size()
2018-06-06 18:01:14,073 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-06-06 18:01:14,074 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldWriteImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldWriteImpl: myfield
2018-06-06 18:01:14,074 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtThisAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtThisAccessImpl: 
2018-06-06 18:01:14,074 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-06-06 18:01:14,075 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,075 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-06-06 18:01:14,075 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-06-06 18:01:14,075 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,075 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: myfield
2018-06-06 18:01:14,075 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-06-06 18:01:14,076 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,076 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-06-06 18:01:14,076 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.size()
2018-06-06 18:01:14,076 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-06-06 18:01:14,076 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-06-06 18:01:14,076 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-06-06 18:01:14,077 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-06-06 18:01:14,077 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: size()
2018-06-06 18:01:14,077 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-06-06 18:01:14,077 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-06-06 18:01:14,077 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-06-06 18:01:14,078 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLocalVariableImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableImpl: java.lang.Object o = super.get(myfield)
2018-06-06 18:01:14,078 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-06-06 18:01:14,078 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,078 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.get(myfield)
2018-06-06 18:01:14,078 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-06-06 18:01:14,079 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-06-06 18:01:14,079 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-06-06 18:01:14,079 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-06-06 18:01:14,079 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: get(int)
2018-06-06 18:01:14,079 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-06-06 18:01:14,079 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-06-06 18:01:14,080 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-06-06 18:01:14,080 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,080 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-06-06 18:01:14,080 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldReadImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReadImpl: myfield
2018-06-06 18:01:14,080 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtThisAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtThisAccessImpl: 
2018-06-06 18:01:14,080 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-06-06 18:01:14,081 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,081 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-06-06 18:01:14,081 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-06-06 18:01:14,081 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,081 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: myfield
2018-06-06 18:01:14,081 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.FieldAccessFilterTacos
2018-06-06 18:01:14,081 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,081 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-06-06 18:01:14,082 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtInterfaceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInterfaceImpl: interface Foo {}
2018-06-06 18:01:14,082 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtInterfaceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInterfaceImpl: interface Honey {
    void honey();
}
2018-06-06 18:01:14,082 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: void honey();
2018-06-06 18:01:14,082 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,082 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtInterfaceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInterfaceImpl: public interface ITostada extends spoon.test.filters.testclasses.Foo {
    spoon.test.filters.testclasses.ITostada make();
}
2018-06-06 18:01:14,083 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Foo
2018-06-06 18:01:14,083 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,083 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: spoon.test.filters.testclasses.ITostada make();
2018-06-06 18:01:14,083 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-06-06 18:01:14,083 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,083 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,083 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,084 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: SubTostada() {
}
2018-06-06 18:01:14,084 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-06-06 18:01:14,084 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-06-06 18:01:14,084 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.Tostada()
2018-06-06 18:01:14,084 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,084 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,085 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,085 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,085 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
    java.lang.System.out.println("SubTostada");
    super.prepare();
}
2018-06-06 18:01:14,085 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-06-06 18:01:14,086 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,086 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,086 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,086 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,086 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,086 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    java.lang.System.out.println("SubTostada");
    super.prepare();
}
2018-06-06 18:01:14,087 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: java.lang.System.out.println("SubTostada")
2018-06-06 18:01:14,087 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtFieldReadImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReadImpl: java.lang.System.out
2018-06-06 18:01:14,087 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtTypeAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeAccessImpl: java.lang.System
2018-06-06 18:01:14,087 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.System
2018-06-06 18:01:14,087 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,087 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtFieldReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtFieldReferenceImpl: java.lang.System.out
2018-06-06 18:01:14,088 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.System
2018-06-06 18:01:14,088 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,088 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.io.PrintStream
2018-06-06 18:01:14,088 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.io
2018-06-06 18:01:14,088 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: println(java.lang.String)
2018-06-06 18:01:14,088 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.io.PrintStream
2018-06-06 18:01:14,088 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.io
2018-06-06 18:01:14,089 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,089 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-06-06 18:01:14,089 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,089 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: "SubTostada"
2018-06-06 18:01:14,089 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-06-06 18:01:14,089 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,089 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.prepare()
2018-06-06 18:01:14,089 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-06-06 18:01:14,090 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-06-06 18:01:14,090 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,090 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,090 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: prepare()
2018-06-06 18:01:14,090 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,090 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,090 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,091 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-06-06 18:01:14,091 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,091 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: Tacos() {
}
2018-06-06 18:01:14,091 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-06-06 18:01:14,091 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-06-06 18:01:14,091 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: java.lang.Object()
2018-06-06 18:01:14,091 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-06-06 18:01:14,092 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,092 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Object
2018-06-06 18:01:14,092 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,092 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public spoon.test.filters.testclasses.ITostada make() {
    return null;
}
2018-06-06 18:01:14,092 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-06-06 18:01:14,092 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,092 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,093 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,093 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,093 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-06-06 18:01:14,093 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,093 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return null;
}
2018-06-06 18:01:14,093 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return null
2018-06-06 18:01:14,093 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: null
2018-06-06 18:01:14,094 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: <nulltype>
2018-06-06 18:01:14,094 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void prepare() {
    final java.util.ArrayList<java.lang.String> strings = new java.util.ArrayList<java.lang.String>();
    strings.size();
}
2018-06-06 18:01:14,094 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,094 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    final java.util.ArrayList<java.lang.String> strings = new java.util.ArrayList<java.lang.String>();
    strings.size();
}
2018-06-06 18:01:14,094 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLocalVariableImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableImpl: final java.util.ArrayList<java.lang.String> strings = new java.util.ArrayList<java.lang.String>()
2018-06-06 18:01:14,094 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList<java.lang.String>
2018-06-06 18:01:14,095 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-06-06 18:01:14,095 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-06-06 18:01:14,095 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,095 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtConstructorCallImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorCallImpl: new java.util.ArrayList<java.lang.String>()
2018-06-06 18:01:14,095 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: java.util.ArrayList()
2018-06-06 18:01:14,095 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-06-06 18:01:14,095 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-06-06 18:01:14,096 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList<java.lang.String>
2018-06-06 18:01:14,096 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-06-06 18:01:14,096 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-06-06 18:01:14,096 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,096 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: strings.size()
2018-06-06 18:01:14,096 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtVariableReadImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtVariableReadImpl: strings
2018-06-06 18:01:14,096 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: strings
2018-06-06 18:01:14,097 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList<java.lang.String>
2018-06-06 18:01:14,097 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-06-06 18:01:14,097 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-06-06 18:01:14,097 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,097 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: size()
2018-06-06 18:01:14,097 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.util.ArrayList
2018-06-06 18:01:14,097 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.util
2018-06-06 18:01:14,097 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-06-06 18:01:14,098 INFO spoon.Launcher - Step 6) Skipped element, because CtFunction#accept(input) returned false
Parameter 1) CtMethodImpl: void honey();
2018-06-06 18:01:14,098 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-06-06 18:01:14,098 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,098 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Honey
2018-06-06 18:01:14,098 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,098 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: Tostada() {
}
2018-06-06 18:01:14,098 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-06-06 18:01:14,099 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-06-06 18:01:14,099 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.AbstractTostada()
2018-06-06 18:01:14,099 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-06-06 18:01:14,099 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,099 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.AbstractTostada
2018-06-06 18:01:14,099 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,099 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public spoon.test.filters.testclasses.ITostada make() {
    return new spoon.test.filters.testclasses.Tostada() {
        @java.lang.Override
        public void prepare() {
            int a = 3;
            super.prepare();
        }
    };
}
2018-06-06 18:01:14,100 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-06-06 18:01:14,100 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,100 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,100 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,100 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,100 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.ITostada
2018-06-06 18:01:14,100 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,101 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return new spoon.test.filters.testclasses.Tostada() {
        @java.lang.Override
        public void prepare() {
            int a = 3;
            super.prepare();
        }
    };
}
2018-06-06 18:01:14,101 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return new spoon.test.filters.testclasses.Tostada() {
    @java.lang.Override
    public void prepare() {
        int a = 3;
        super.prepare();
    }
}
2018-06-06 18:01:14,101 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtNewClassImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtNewClassImpl: new spoon.test.filters.testclasses.Tostada() {
    @java.lang.Override
    public void prepare() {
        int a = 3;
        super.prepare();
    }
}
2018-06-06 18:01:14,101 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.Tostada$1()
2018-06-06 18:01:14,102 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada.1
2018-06-06 18:01:14,102 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,102 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,102 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,103 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,103 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,103 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,103 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtConstructorImpl: 1() {
}
2018-06-06 18:01:14,103 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-06-06 18:01:14,103 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super()
2018-06-06 18:01:14,103 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: spoon.test.filters.testclasses.Tostada()
2018-06-06 18:01:14,103 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,103 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,104 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,104 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,104 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
    int a = 3;
    super.prepare();
}
2018-06-06 18:01:14,104 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-06-06 18:01:14,104 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,104 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,104 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,104 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,104 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,105 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    int a = 3;
    super.prepare();
}
2018-06-06 18:01:14,105 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLocalVariableImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableImpl: int a = 3
2018-06-06 18:01:14,105 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-06-06 18:01:14,105 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: 3
2018-06-06 18:01:14,105 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: int
2018-06-06 18:01:14,105 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtInvocationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtInvocationImpl: super.prepare()
2018-06-06 18:01:14,105 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtSuperAccessImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtSuperAccessImpl: super
2018-06-06 18:01:14,105 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtLocalVariableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLocalVariableReferenceImpl: 
2018-06-06 18:01:14,105 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,106 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,106 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtExecutableReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtExecutableReferenceImpl: prepare()
2018-06-06 18:01:14,106 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: spoon.test.filters.testclasses.Tostada
2018-06-06 18:01:14,106 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: spoon.test.filters.testclasses
2018-06-06 18:01:14,106 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,106 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void prepare() {
}
2018-06-06 18:01:14,106 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-06-06 18:01:14,106 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,106 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,106 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public java.lang.String toString() {
    return "";
}
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
    return "";
}
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtReturnImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtReturnImpl: return ""
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtLiteralImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtLiteralImpl: ""
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.String
2018-06-06 18:01:14,107 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,108 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: @java.lang.Override
public void honey() {
}
2018-06-06 18:01:14,108 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtAnnotationImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtAnnotationImpl: @java.lang.Override
2018-06-06 18:01:14,108 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,108 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,108 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: java.lang.Override
2018-06-06 18:01:14,108 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtPackageReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtPackageReferenceImpl: java.lang
2018-06-06 18:01:14,108 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,108 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
2018-06-06 18:01:14,108 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.declaration.CtMethodImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtMethodImpl: public void foo() {
}
2018-06-06 18:01:14,108 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.reference.CtTypeReferenceImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtTypeReferenceImpl: void
2018-06-06 18:01:14,108 INFO spoon.Launcher - Step filter CtClass only) spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.declaration.CtClass
Parameter 1) CtBlockImpl: {
}
[INFO] Tests run: 43, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.239 s - in spoon.test.filters.FilterTest
[INFO] Running spoon.test.filters.CUFilterTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.103 s - in spoon.test.filters.CUFilterTest
[INFO] Running spoon.test.generics.GenericsTest
[INFO] Tests run: 45, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.77 s - in spoon.test.generics.GenericsTest
[INFO] Running spoon.test.visibility.VisibilityTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.496 s - in spoon.test.visibility.VisibilityTest
[INFO] Running spoon.test.factory.CodeFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.factory.CodeFactoryTest
[INFO] Running spoon.test.factory.FactoryTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.176 s - in spoon.test.factory.FactoryTest
[INFO] Running spoon.test.factory.FieldFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.154 s - in spoon.test.factory.FieldFactoryTest
[INFO] Running spoon.test.factory.AnnotationFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.041 s - in spoon.test.factory.AnnotationFactoryTest
[INFO] Running spoon.test.factory.ConstructorFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.041 s - in spoon.test.factory.ConstructorFactoryTest
[INFO] Running spoon.test.factory.ExecutableFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in spoon.test.factory.ExecutableFactoryTest
[INFO] Running spoon.test.factory.ClassFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.factory.ClassFactoryTest
[INFO] Running spoon.test.factory.TypeFactoryTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.157 s - in spoon.test.factory.TypeFactoryTest
[INFO] Running spoon.test.jdtimportbuilder.ImportBuilderTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.511 s - in spoon.test.jdtimportbuilder.ImportBuilderTest
[INFO] Running spoon.test.limits.utils.InternalTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.068 s - in spoon.test.limits.utils.InternalTest
[INFO] Running spoon.test.enums.EnumsTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.184 s - in spoon.test.enums.EnumsTest
[INFO] Running spoon.test.enums.EnumsTypeTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.052 s - in spoon.test.enums.EnumsTypeTest
[INFO] Running spoon.test.trycatch.TryCatchTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.578 s - in spoon.test.trycatch.TryCatchTest
[INFO] Running spoon.test.invocations.InvocationTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.134 s - in spoon.test.invocations.InvocationTest
[INFO] Running spoon.test.ctBodyHolder.CtBodyHolderTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.279 s - in spoon.test.ctBodyHolder.CtBodyHolderTest
[INFO] Running spoon.test.compilation.CompilationTest
>> Hello: Bar <<
>> Hello: FooEx <<
>> Hello: IBar <<
>> Hello: SimpleProcessor <<
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.89 s - in spoon.test.compilation.CompilationTest
[INFO] Running spoon.test.type.TypeTest
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.601 s - in spoon.test.type.TypeTest
[INFO] Running spoon.test.model.TypeTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.322 s - in spoon.test.model.TypeTest
[INFO] Running spoon.test.model.SwitchCaseTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.069 s - in spoon.test.model.SwitchCaseTest
[INFO] Running spoon.test.model.BlockTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.07 s - in spoon.test.model.BlockTest
[INFO] Running spoon.test.model.AnonymousExecutableTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 s - in spoon.test.model.AnonymousExecutableTest
[INFO] Running spoon.test.initializers.InitializerTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 s - in spoon.test.initializers.InitializerTest
[INFO] Running spoon.test.constructor.ConstructorTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.402 s - in spoon.test.constructor.ConstructorTest
[INFO] Running spoon.test.logging.LogTest
2018-06-06 18:01:25,472 DEBUG spoon.Launcher - destination: /root/workspace/INRIA/spoon/388836284/spooned-classes
2018-06-06 18:01:25,472 DEBUG spoon.Launcher - source classpath: null
2018-06-06 18:01:25,472 DEBUG spoon.Launcher - template classpath: []
2018-06-06 18:01:25,472 INFO spoon.Launcher - Log info
2018-06-06 18:01:25,472 WARN spoon.Launcher - Log warn
2018-06-06 18:01:25,473 ERROR spoon.Launcher - Log error
2018-06-06 18:01:25,473 DEBUG spoon.Launcher - Log debug
2018-06-06 18:01:25,473 DEBUG spoon.Launcher - destination: /root/workspace/INRIA/spoon/388836284/spooned-classes
2018-06-06 18:01:25,473 DEBUG spoon.Launcher - source classpath: null
2018-06-06 18:01:25,473 DEBUG spoon.Launcher - template classpath: []
2018-06-06 18:01:25,473 INFO spoon.Launcher - Log info
2018-06-06 18:01:25,473 WARN spoon.Launcher - Log warn
2018-06-06 18:01:25,473 ERROR spoon.Launcher - Log error
2018-06-06 18:01:25,474 DEBUG spoon.Launcher - Log debug
2018-06-06 18:01:25,474 INFO spoon.Launcher - Log info
2018-06-06 18:01:25,474 WARN spoon.Launcher - Log warn
2018-06-06 18:01:25,474 ERROR spoon.Launcher - Log error
2018-06-06 18:01:25,475 WARN spoon.Launcher - Log warn
2018-06-06 18:01:25,475 ERROR spoon.Launcher - Log error
2018-06-06 18:01:25,475 ERROR spoon.Launcher - Log error
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in spoon.test.logging.LogTest
[INFO] Running spoon.test.properties.PropertiesTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 s - in spoon.test.properties.PropertiesTest
[INFO] Running spoon.test.lambda.LambdaTest
2018-06-06 18:01:26,627 ERROR spoon.support.compiler.jdt.JDTTreeBuilder - Could not find declaration for variable Strings at (/root/workspace/INRIA/spoon/388836284/src/test/resources/noclasspath/lambdas/TypeAccessInLambda.java:6)
[INFO] Tests run: 23, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.575 s - in spoon.test.lambda.LambdaTest
[INFO] Running spoon.test.parent.ContractOnSettersParametrizedTest
[INFO] Tests run: 67, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.357 s - in spoon.test.parent.ContractOnSettersParametrizedTest
[INFO] Running spoon.test.parent.ParentTest
[WARNING] Tests run: 11, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.807 s - in spoon.test.parent.ParentTest
[INFO] Running spoon.test.parent.TopLevelTypeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 s - in spoon.test.parent.TopLevelTypeTest
[INFO] Running spoon.test.parent.NullParentTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.29 s - in spoon.test.parent.NullParentTest
[INFO] Running spoon.test.parent.SetParentTest
[INFO] Tests run: 67, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 s - in spoon.test.parent.SetParentTest
[INFO] Running spoon.test.field.FieldTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.152 s - in spoon.test.field.FieldTest
[INFO] Running spoon.test.ctType.CtTypeParameterTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.088 s - in spoon.test.ctType.CtTypeParameterTest
[INFO] Running spoon.test.ctType.CtTypeTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.394 s - in spoon.test.ctType.CtTypeTest
[INFO] Running spoon.test.jar.JarTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.12 s - in spoon.test.jar.JarTest
[INFO] Running spoon.test.methodreference.MethodReferenceTest
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.356 s - in spoon.test.methodreference.MethodReferenceTest
[INFO] Running spoon.test.arrays.ArraysTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.361 s - in spoon.test.arrays.ArraysTest
[INFO] Running spoon.test.interfaces.InterfaceTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.232 s - in spoon.test.interfaces.InterfaceTest
[INFO] Running spoon.test.interfaces.TestInterfaceWithoutSetup
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.111 s - in spoon.test.interfaces.TestInterfaceWithoutSetup
[INFO] Running spoon.test.targeted.TargetedExpressionTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.663 s - in spoon.test.targeted.TargetedExpressionTest
[INFO] Running spoon.test.constructorcallnewclass.ConstructorCallTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.27 s - in spoon.test.constructorcallnewclass.ConstructorCallTest
[INFO] Running spoon.test.constructorcallnewclass.NewClassTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.461 s - in spoon.test.constructorcallnewclass.NewClassTest
[INFO] Running spoon.test.ctClass.CtClassTest
2018-06-06 18:01:34,309 ERROR spoon.Launcher - cannot load class: daikon.Runtime
spoon.support.SpoonClassNotFoundException: cannot load class: daikon.Runtime
	at spoon.support.reflect.reference.CtTypeReferenceImpl.findClass(CtTypeReferenceImpl.java:160)
	at spoon.support.reflect.reference.CtTypeReferenceImpl.getActualClass(CtTypeReferenceImpl.java:142)
	at spoon.support.reflect.reference.CtFieldReferenceImpl.getActualField(CtFieldReferenceImpl.java:65)
	at spoon.support.reflect.reference.CtFieldReferenceImpl.getModifiers(CtFieldReferenceImpl.java:223)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.isInitializeStaticFinalField(DefaultJavaPrettyPrinter.java:889)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.printCtFieldAccess(DefaultJavaPrettyPrinter.java:836)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtFieldWrite(DefaultJavaPrettyPrinter.java:795)
	at spoon.support.reflect.code.CtFieldWriteImpl.accept(CtFieldWriteImpl.java:27)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:343)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtAssignment(DefaultJavaPrettyPrinter.java:491)
	at spoon.support.reflect.code.CtAssignmentImpl.accept(CtAssignmentImpl.java:55)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:343)
	at spoon.reflect.visitor.ElementPrinterHelper.writeStatement(ElementPrinterHelper.java:180)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:523)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:67)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:343)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtAnonymousExecutable(DefaultJavaPrettyPrinter.java:442)
	at spoon.support.reflect.declaration.CtAnonymousExecutableImpl.accept(CtAnonymousExecutableImpl.java:46)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:343)
	at spoon.reflect.visitor.ElementPrinterHelper.writeElementList(ElementPrinterHelper.java:194)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:615)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:68)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:343)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.calculate(DefaultJavaPrettyPrinter.java:1950)
	at spoon.support.JavaOutputProcessor.createJavaFile(JavaOutputProcessor.java:133)
	at spoon.support.JavaOutputProcessor.process(JavaOutputProcessor.java:171)
	at spoon.support.JavaOutputProcessor.process(JavaOutputProcessor.java:45)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:74)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:148)
	at spoon.reflect.visitor.CtScanner.visitCtPackage(CtScanner.java:650)
	at spoon.support.reflect.declaration.CtPackageImpl.accept(CtPackageImpl.java:102)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:182)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:148)
	at spoon.reflect.visitor.CtScanner.visitCtPackage(CtScanner.java:649)
	at spoon.support.reflect.declaration.CtPackageImpl.accept(CtPackageImpl.java:102)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:182)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)
	at spoon.reflect.visitor.CtScanner.visitCtModule(CtScanner.java:925)
	at spoon.reflect.factory.ModuleFactory$CtUnnamedModule.accept(ModuleFactory.java:105)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:182)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.support.QueueProcessingManager.process(QueueProcessingManager.java:119)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFilesUsingTypes(JDTBasedSpoonCompiler.java:497)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:208)
	at spoon.Launcher.prettyprint(Launcher.java:725)
	at spoon.Launcher.run(Launcher.java:663)
	at spoon.test.ctClass.CtClassTest.testParentOfTheEnclosingClassOfStaticClass(CtClassTest.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:369)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:275)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:239)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:160)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
Caused by: java.lang.ClassNotFoundException: daikon.Runtime
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at spoon.support.reflect.reference.CtTypeReferenceImpl.findClass(CtTypeReferenceImpl.java:158)
	... 75 more
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.619 s - in spoon.test.ctClass.CtClassTest
[INFO] Running spoon.test.strings.StringTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 s - in spoon.test.strings.StringTest
[INFO] Running spoon.test.strings.StringLiteralTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 s - in spoon.test.strings.StringLiteralTest
[INFO] Running spoon.test.query_function.testclasses.VariableReferencesModelTest
[INFO] Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in spoon.test.query_function.testclasses.VariableReferencesModelTest
[INFO] Running spoon.test.query_function.VariableReferencesTest
2018-06-06 18:01:36,591 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:36,591 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:36,591 INFO spoon.Launcher - start processing...
2018-06-06 18:01:36,637 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:36,637 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:36,666 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:36,666 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:36,666 INFO spoon.Launcher - start processing...
2018-06-06 18:01:36,710 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:36,710 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:36,740 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:36,740 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:36,740 INFO spoon.Launcher - start processing...
2018-06-06 18:01:36,783 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:36,784 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:36,787 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:36,787 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:36,787 INFO spoon.Launcher - start processing...
2018-06-06 18:01:36,831 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:36,831 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:36,857 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:36,857 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:36,857 INFO spoon.Launcher - start processing...
2018-06-06 18:01:36,901 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:36,901 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:36,908 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:36,909 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:36,909 INFO spoon.Launcher - start processing...
2018-06-06 18:01:36,953 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:36,953 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:36,958 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:36,958 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:36,958 INFO spoon.Launcher - start processing...
2018-06-06 18:01:37,002 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:37,002 INFO spoon.Launcher - no errors, no warnings
2018-06-06 18:01:37,039 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-06-06 18:01:37,039 INFO spoon.Launcher - running Spoon...
2018-06-06 18:01:37,039 INFO spoon.Launcher - start processing...
2018-06-06 18:01:37,082 INFO spoon.Launcher - end of processing: 
2018-06-06 18:01:37,082 INFO spoon.Launcher - no errors, no warnings
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.55 s - in spoon.test.query_function.VariableReferencesTest
[INFO] Running spoon.test.method_overriding.MethodOverriddingTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.128 s - in spoon.test.method_overriding.MethodOverriddingTest
[INFO] Running spoon.test.executable.ExecutableTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.102 s - in spoon.test.executable.ExecutableTest
[INFO] Running spoon.test.executable.ExecutableRefTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.22 s - in spoon.test.executable.ExecutableRefTest
[INFO] Running spoon.test.literal.LiteralTest
2018-06-06 18:01:37,737 ERROR spoon.support.compiler.jdt.JDTTreeBuilder - Could not find declaration for variable Longs at (/root/workspace/INRIA/spoon/388836284/src/test/resources/noclasspath/SecondaryIndexManager.java:611)
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.489 s - in spoon.test.literal.LiteralTest
[INFO] Running spoon.test.eval.EvalTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.561 s - in spoon.test.eval.EvalTest
[INFO] Running spoon.test.ctElement.ElementTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.ctElement.ElementTest
[INFO] Running spoon.test.ctElement.MetadataTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 s - in spoon.test.ctElement.MetadataTest
[INFO] Running spoon.test.support.ResourceTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.156 s - in spoon.test.support.ResourceTest
[INFO] Running spoon.test.modifiers.TestModifiers
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.319 s - in spoon.test.modifiers.TestModifiers
[INFO] Running spoon.test.delete.DeleteTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.494 s - in spoon.test.delete.DeleteTest
[INFO] Running spoon.test.snippets.SnippetTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.284 s - in spoon.test.snippets.SnippetTest
[INFO] Running spoon.test.signature.SignatureTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.587 s - in spoon.test.signature.SignatureTest
[INFO] Running spoon.test.path.PathTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.418 s - in spoon.test.path.PathTest
[INFO] Running spoon.test.main.MainTest
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 163.06 s - in spoon.test.main.MainTest
[INFO] Running spoon.test.javadoc.JavaDocTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.101 s - in spoon.test.javadoc.JavaDocTest
[INFO] Running spoon.test.parameters.ParameterTest
2018-06-06 18:04:24,298 ERROR spoon.support.compiler.jdt.JDTTreeBuilder - Could not find declaration for variable typeRatingFilters at (/root/workspace/INRIA/spoon/388836284/src/test/resources/noclasspath/Tacos.java:4)
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.16 s - in spoon.test.parameters.ParameterTest
[INFO] Running spoon.test.compilationunit.GetBinaryFilesTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.427 s - in spoon.test.compilationunit.GetBinaryFilesTest
[INFO] Running spoon.test.compilationunit.TestCompilationUnit
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.213 s - in spoon.test.compilationunit.TestCompilationUnit
[INFO] Running spoon.test.control.ControlTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.07 s - in spoon.test.control.ControlTest
[INFO] Running spoon.test.ctBlock.TestCtBlock
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.105 s - in spoon.test.ctBlock.TestCtBlock
[INFO] Running spoon.test.labels.TestLabels
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 s - in spoon.test.labels.TestLabels
[INFO] Running spoon.test.method.MethodTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.233 s - in spoon.test.method.MethodTest
[INFO] Running spoon.test.serializable.SourcePositionTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.069 s - in spoon.test.serializable.SourcePositionTest
[INFO] Running spoon.test.serializable.SerializableTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.13 s - in spoon.test.serializable.SerializableTest
[INFO] Running spoon.test.casts.CastTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.185 s - in spoon.test.casts.CastTest
[INFO] Running spoon.test.role.TestCtRole
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.role.TestCtRole
[INFO] Running spoon.test.varargs.VarArgsTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 s - in spoon.test.varargs.VarArgsTest
[INFO] Running spoon.test.OutputTypeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.OutputTypeTest
[INFO] Running spoon.test.sourcePosition.SourcePositionTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.105 s - in spoon.test.sourcePosition.SourcePositionTest
[INFO] Running spoon.test.reflect.visitor.ReferenceQueryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 s - in spoon.test.reflect.visitor.ReferenceQueryTest
[INFO] Running spoon.test.architecture.SpoonArchitectureEnforcerTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 22.52 s - in spoon.test.architecture.SpoonArchitectureEnforcerTest
[INFO] Running spoon.test.change.ChangeCollectorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 s - in spoon.test.change.ChangeCollectorTest
[INFO] Running spoon.test.comparison.EqualTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.214 s - in spoon.test.comparison.EqualTest
[INFO] Running spoon.reflect.ast.AstCheckerTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.24 s - in spoon.reflect.ast.AstCheckerTest
[INFO] Running spoon.reflect.ast.CloneTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.316 s - in spoon.reflect.ast.CloneTest
[INFO] Running spoon.reflect.visitor.CtIteratorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.136 s - in spoon.reflect.visitor.CtIteratorTest
[INFO] Running spoon.reflect.visitor.CtInheritanceScannerMethodsTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.812 s - in spoon.reflect.visitor.CtInheritanceScannerMethodsTest
[INFO] Running spoon.reflect.visitor.CtInheritanceScannerTest
[INFO] Tests run: 81, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.384 s - in spoon.reflect.visitor.CtInheritanceScannerTest
[INFO] Running spoon.reflect.visitor.CtVisitorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.787 s - in spoon.reflect.visitor.CtVisitorTest
[INFO] Running spoon.reflect.visitor.CtScannerTest
[ERROR] Tests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 5.093 s <<< FAILURE! - in spoon.reflect.visitor.CtScannerTest
[ERROR] testScannerCallsAllProperties(spoon.reflect.visitor.CtScannerTest)  Time elapsed: 4.215 s  <<< FAILURE!
java.lang.AssertionError: 
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:353) calls unexpected methods: [getAnnotations(), getType()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:956) calls unexpected methods: [getComments()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:661) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:821) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:278) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:289) calls unexpected methods: [getTypeCasts(), getAnnotations(), getType()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:947) calls unexpected methods: [getComments()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:472) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:365) calls unexpected methods: [getParameters(), getAnnotations(), getThrownTypes()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:875) calls unexpected methods: [getTypeCasts(), getComments(), getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:894) calls unexpected methods: [getComments(), getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:684) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:566) calls unexpected methods: [getAnnotations(), getType()]
no getAnonymousExecutables() in public <T> void visitCtClass(final spoon.reflect.declaration.CtClass<T> ctClass) {
    enter(ctClass);
    scan(spoon.reflect.path.CtRole.ANNOTATION, ctClass.getAnnotations());
    scan(spoon.reflect.path.CtRole.SUPER_TYPE, ctClass.getSuperclass());
    scan(spoon.reflect.path.CtRole.INTERFACE, ctClass.getSuperInterfaces());
    scan(spoon.reflect.path.CtRole.TYPE_PARAMETER, ctClass.getFormalCtTypeParameters());
    scan(spoon.reflect.path.CtRole.TYPE_MEMBER, ctClass.getTypeMembers());
    scan(spoon.reflect.path.CtRole.COMMENT, ctClass.getComments());
    exit(ctClass);
}
no getConstructors() in public <T> void visitCtClass(final spoon.reflect.declaration.CtClass<T> ctClass) {
    enter(ctClass);
    scan(spoon.reflect.path.CtRole.ANNOTATION, ctClass.getAnnotations());
    scan(spoon.reflect.path.CtRole.SUPER_TYPE, ctClass.getSuperclass());
    scan(spoon.reflect.path.CtRole.INTERFACE, ctClass.getSuperInterfaces());
    scan(spoon.reflect.path.CtRole.TYPE_PARAMETER, ctClass.getFormalCtTypeParameters());
    scan(spoon.reflect.path.CtRole.TYPE_MEMBER, ctClass.getTypeMembers());
    scan(spoon.reflect.path.CtRole.COMMENT, ctClass.getComments());
    exit(ctClass);
}
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:333) calls unexpected methods: [getFormalCtTypeParameters(), getSuperInterfaces(), getComments(), getAnnotations(), getTypeMembers()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:300) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:646) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:729) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:269) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:692) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:718) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:701) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:740) calls unexpected methods: [getAnnotations(), getDeclaringType(), getPackage()]
no getActualTypeArguments() in public <T> void visitCtInvocation(final spoon.reflect.code.CtInvocation<T> invocation) {
    enter(invocation);
    scan(spoon.reflect.path.CtRole.ANNOTATION, invocation.getAnnotations());
    scan(spoon.reflect.path.CtRole.CAST, invocation.getTypeCasts());
    scan(spoon.reflect.path.CtRole.TARGET, invocation.getTarget());
    scan(spoon.reflect.path.CtRole.EXECUTABLE_REF, invocation.getExecutable());
    scan(spoon.reflect.path.CtRole.ARGUMENT, invocation.getArguments());
    scan(spoon.reflect.path.CtRole.COMMENT, invocation.getComments());
    exit(invocation);
}
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:502) calls unexpected methods: [getTypeCasts(), getComments(), getAnnotations(), getTarget()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:791) calls unexpected methods: [getTypeCasts(), getAnnotations(), getType()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:461) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:345) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:522) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:482) calls unexpected methods: [getAnnotations()]
no getRequiredModules() in @java.lang.Override
public void visitCtModule(spoon.reflect.declaration.CtModule module) {
    enter(module);
    scan(spoon.reflect.path.CtRole.COMMENT, module.getComments());
    scan(spoon.reflect.path.CtRole.ANNOTATION, module.getAnnotations());
    scan(spoon.reflect.path.CtRole.MODULE_DIRECTIVE, module.getModuleDirectives());
    scan(spoon.reflect.path.CtRole.SUB_PACKAGE, module.getRootPackage());
    exit(module);
}
no getExportedPackages() in @java.lang.Override
public void visitCtModule(spoon.reflect.declaration.CtModule module) {
    enter(module);
    scan(spoon.reflect.path.CtRole.COMMENT, module.getComments());
    scan(spoon.reflect.path.CtRole.ANNOTATION, module.getAnnotations());
    scan(spoon.reflect.path.CtRole.MODULE_DIRECTIVE, module.getModuleDirectives());
    scan(spoon.reflect.path.CtRole.SUB_PACKAGE, module.getRootPackage());
    exit(module);
}
no getOpenedPackages() in @java.lang.Override
public void visitCtModule(spoon.reflect.declaration.CtModule module) {
    enter(module);
    scan(spoon.reflect.path.CtRole.COMMENT, module.getComments());
    scan(spoon.reflect.path.CtRole.ANNOTATION, module.getAnnotations());
    scan(spoon.reflect.path.CtRole.MODULE_DIRECTIVE, module.getModuleDirectives());
    scan(spoon.reflect.path.CtRole.SUB_PACKAGE, module.getRootPackage());
    exit(module);
}
no getUsedServices() in @java.lang.Override
public void visitCtModule(spoon.reflect.declaration.CtModule module) {
    enter(module);
    scan(spoon.reflect.path.CtRole.COMMENT, module.getComments());
    scan(spoon.reflect.path.CtRole.ANNOTATION, module.getAnnotations());
    scan(spoon.reflect.path.CtRole.MODULE_DIRECTIVE, module.getModuleDirectives());
    scan(spoon.reflect.path.CtRole.SUB_PACKAGE, module.getRootPackage());
    exit(module);
}
no getProvidedServices() in @java.lang.Override
public void visitCtModule(spoon.reflect.declaration.CtModule module) {
    enter(module);
    scan(spoon.reflect.path.CtRole.COMMENT, module.getComments());
    scan(spoon.reflect.path.CtRole.ANNOTATION, module.getAnnotations());
    scan(spoon.reflect.path.CtRole.MODULE_DIRECTIVE, module.getModuleDirectives());
    scan(spoon.reflect.path.CtRole.SUB_PACKAGE, module.getRootPackage());
    exit(module);
}
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:920) calls unexpected methods: [getComments(), getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:937) calls unexpected methods: [getComments()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:587) calls unexpected methods: [getTypeCasts(), getAnnotations(), getTarget()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:315) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:324) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:259) calls unexpected methods: [getDeclaringType(), getPackage()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:553) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:611) calls unexpected methods: [getTypeCasts(), getAnnotations(), getType()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:575) calls unexpected methods: [getTypeCasts(), getAnnotations(), getType()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:760) calls unexpected methods: [getAnnotations(), getDeclaringType(), getPackage(), getActualTypeArguments()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:966) calls unexpected methods: [getComments()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:710) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:676) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:413) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:782) calls unexpected methods: [getTypeCasts(), getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:383) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:186) calls unexpected methods: [getComments(), getAnnotations(), getType()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:392) calls unexpected methods: [getSuperInterfaces(), getAnnotations(), getTypeMembers()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:598) calls unexpected methods: [getTypeCasts(), getAnnotations(), getExecutable(), getArguments(), getTarget()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:538) calls unexpected methods: [getComments(), getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:624) calls unexpected methods: [getTypeCasts(), getComments(), getAnnotations(), getType()]
	at spoon.reflect.visitor.CtScannerTest.testScannerCallsAllProperties(CtScannerTest.java:216)

[INFO] Running spoon.reflect.declaration.UnknownDeclarationTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 s - in spoon.reflect.declaration.UnknownDeclarationTest
[INFO] Running spoon.reflect.declaration.CtTypeInformationTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.514 s - in spoon.reflect.declaration.CtTypeInformationTest
[INFO] Running spoon.testing.FileAssertTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.157 s - in spoon.testing.FileAssertTest
[INFO] Running spoon.testing.CtElementAssertTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.218 s - in spoon.testing.CtElementAssertTest
[INFO] Running spoon.testing.AbstractAssertTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.291 s - in spoon.testing.AbstractAssertTest
[INFO] Running spoon.testing.CtPackageAssertTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.121 s - in spoon.testing.CtPackageAssertTest
[INFO] Running spoon.support.compiler.jdt.JDTBatchCompilerTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.08 s - in spoon.support.compiler.jdt.JDTBatchCompilerTest
[INFO] Running spoon.support.compiler.jdt.JDTBasedSpoonCompilerTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.449 s - in spoon.support.compiler.jdt.JDTBasedSpoonCompilerTest
[INFO] Running spoon.support.compiler.jdt.ExtendedStringLiteralTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.054 s - in spoon.support.compiler.jdt.ExtendedStringLiteralTest
[INFO] Running spoon.support.compiler.jdt.JDTBuilderTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.support.compiler.jdt.JDTBuilderTest
[INFO] Running spoon.support.compiler.classpath.ComputeClasspathTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.support.compiler.classpath.ComputeClasspathTest
[INFO] Running spoon.support.visitor.java.JavaReflectionTreeBuilderTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.685 s - in spoon.support.visitor.java.JavaReflectionTreeBuilderTest
[INFO] Running spoon.processing.ProcessingTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.054 s - in spoon.processing.ProcessingTest
[INFO] Running spoon.processing.CtGenerationTest
[ERROR] Tests run: 4, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 39.66 s <<< FAILURE! - in spoon.processing.CtGenerationTest
[ERROR] testGenerateRoleHandler(spoon.processing.CtGenerationTest)  Time elapsed: 6.271 s  <<< FAILURE!
org.junit.ComparisonFailure: 
ModelRoleHandlers different expected:<...
    static class Ct[VariableAccess_VARIABLE_RoleHandler extends spoon.reflect.meta.impl.SingleHandler<spoon.reflect.code.CtVariableAccess, spoon.reflect.reference.CtVariableReference<?>> {
        private CtVariableAccess_VARIABLE_RoleHandler() {
            super(spoon.reflect.path.CtRole.VARIABLE, spoon.reflect.code.CtVariableAccess.class, spoon.reflect.reference.CtVariableReference.class);
        }

        @java.lang.SuppressWarnings("unchecked")
        @java.lang.Override
        public <T, U> U getValue(T element) {
            return ((U) ((java.lang.Object) (castTarget(element).getVariable())));
        }

        @java.lang.Override
        public <T, U> void setValue(T element, U value) {
            castTarget(element).setVariable(castValue(value));
        }
    }

    private ModelRoleHandlers() {
    }

    static final spoon.reflect.meta.RoleHandler[] roleHandlers = new spoon.reflect.meta.RoleHandler[]{ new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeAccess_ACCESSED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtClass_ANNONYMOUS_EXECUTABLE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_ANNOTATION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAnnotation_ANNOTATION_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAbstractInvocation_ARGUMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_ARGUMENT_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAssignment_ASSIGNED_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtRHSReceiver_ASSIGNMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBodyHolder_BODY_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSynchronized_BODY_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIntersectionTypeReference_BOUND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeParameterReference_BOUNDING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSwitch_CASE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExpression_CAST_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTry_CATCH_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_COMMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtComment_COMMENT_CONTENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDocTag_COMMENT_CONTENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDoc_COMMENT_TAG_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtComment_COMMENT_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAssert_CONDITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtConditional_CONDITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIf_CONDITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtClass_CONSTRUCTOR_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackage_CONTAINED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_DECLARING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldReference_DECLARING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeReference_DECLARING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAnnotationMethod_DEFAULT_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtVariable_DEFAULT_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNewArray_DIMENSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDocTag_DOCUMENTATION_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtConditional_ELSE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIf_ELSE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAbstractInvocation_EXECUTABLE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReferenceExpression_EXECUTABLE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_EXPORTED_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtArrayAccess_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAssert_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtCase_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtDo_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFor_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtForEach_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtLambda_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNewArray_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtReturn_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSwitch_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSynchronized_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtThrow_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtUnaryOperator_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtWhile_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_FIELD_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTry_FINALIZER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtForEach_FOREACH_VARIABLE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFor_FOR_INIT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFor_FOR_UPDATE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtProvidedService_IMPLEMENTATION_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtImport_IMPORT_REFERENCE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_INTERFACE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeInformation_INTERFACE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtMethod_IS_DEFAULT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldReference_IS_FINAL_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_IS_IMPLICIT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtShadowable_IS_SHADOW_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_IS_STATIC_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldReference_IS_STATIC_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeParameterReference_IS_UPPER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtParameter_IS_VARARGS_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDocTag_JAVADOC_TAG_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtStatement_LABEL_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBinaryOperator_LEFT_OPERAND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_METHOD_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModifiable_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModuleRequirement_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeInformation_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_MODULE_DIRECTIVE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModuleRequirement_MODULE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackageExport_MODULE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtMultiTypedElement_MULTI_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNamedElement_NAME_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtReference_NAME_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNewClass_NESTED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_NESTED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_OPENED_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackageExport_OPENED_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBinaryOperator_OPERATOR_KIND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtOperatorAssignment_OPERATOR_KIND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtUnaryOperator_OPERATOR_KIND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackageExport_PACKAGE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeReference_PACKAGE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtCatch_PARAMETER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutable_PARAMETER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_POSITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_PROVIDED_SERVICE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_REQUIRED_MODULE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBinaryOperator_RIGHT_OPERAND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_SERVICE_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtProvidedService_SERVICE_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtUsedService_SERVICE_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtCodeSnippet_SNIPPET_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtStatementList_STATEMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_SUB_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackage_SUB_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_SUPER_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeInformation_SUPER_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTargetedExpression_TARGET_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtLabelledFlowBreak_TARGET_LABEL_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtConditional_THEN_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIf_THEN_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutable_THROWN_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTryWithResource_TRY_RESOURCE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtArrayTypeReference_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypedElement_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtVariableReference_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtActualTypeContainer_TYPE_ARGUMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_TYPE_MEMBER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFormalTypeDeclarer_TYPE_PARAMETER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAnnotation_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtEnum_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtLiteral_VALU]E_RoleHandler(), new...> but was:<...
    static class Ct[FieldAccess_VARIABLE_RoleHandler extends spoon.reflect.meta.impl.SingleHandler<spoon.reflect.code.CtFieldAccess, spoon.reflect.reference.CtFieldReference<?>> {
        private CtFieldAccess_VARIABLE_RoleHandler() {
            super(spoon.reflect.path.CtRole.VARIABLE, spoon.reflect.code.CtFieldAccess.class, spoon.reflect.reference.CtFieldReference.class);
        }

        @java.lang.SuppressWarnings("unchecked")
        @java.lang.Override
        public <T, U> U getValue(T element) {
            return ((U) ((java.lang.Object) (castTarget(element).getVariable())));
        }
    }

    static class CtVariableAccess_VARIABLE_RoleHandler extends spoon.reflect.meta.impl.SingleHandler<spoon.reflect.code.CtVariableAccess, spoon.reflect.reference.CtVariableReference<?>> {
        private CtVariableAccess_VARIABLE_RoleHandler() {
            super(spoon.reflect.path.CtRole.VARIABLE, spoon.reflect.code.CtVariableAccess.class, spoon.reflect.reference.CtVariableReference.class);
        }

        @java.lang.SuppressWarnings("unchecked")
        @java.lang.Override
        public <T, U> U getValue(T element) {
            return ((U) ((java.lang.Object) (castTarget(element).getVariable())));
        }

        @java.lang.Override
        public <T, U> void setValue(T element, U value) {
            castTarget(element).setVariable(castValue(value));
        }
    }

    private ModelRoleHandlers() {
    }

    static final spoon.reflect.meta.RoleHandler[] roleHandlers = new spoon.reflect.meta.RoleHandler[]{ new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeAccess_ACCESSED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtClass_ANNONYMOUS_EXECUTABLE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_ANNOTATION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAnnotation_ANNOTATION_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAbstractInvocation_ARGUMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_ARGUMENT_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAssignment_ASSIGNED_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtRHSReceiver_ASSIGNMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBodyHolder_BODY_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSynchronized_BODY_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIntersectionTypeReference_BOUND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeParameterReference_BOUNDING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSwitch_CASE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExpression_CAST_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTry_CATCH_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_COMMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtComment_COMMENT_CONTENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDocTag_COMMENT_CONTENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDoc_COMMENT_TAG_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtComment_COMMENT_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAssert_CONDITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtConditional_CONDITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIf_CONDITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtClass_CONSTRUCTOR_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackage_CONTAINED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_DECLARING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldReference_DECLARING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeReference_DECLARING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAnnotationMethod_DEFAULT_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtVariable_DEFAULT_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNewArray_DIMENSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDocTag_DOCUMENTATION_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtConditional_ELSE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIf_ELSE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAbstractInvocation_EXECUTABLE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReferenceExpression_EXECUTABLE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_EXPORTED_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtArrayAccess_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAssert_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtCase_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtDo_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFor_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtForEach_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtLambda_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNewArray_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtReturn_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSwitch_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSynchronized_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtThrow_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtUnaryOperator_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtWhile_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_FIELD_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTry_FINALIZER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtForEach_FOREACH_VARIABLE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFor_FOR_INIT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFor_FOR_UPDATE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtProvidedService_IMPLEMENTATION_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtImport_IMPORT_REFERENCE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_INTERFACE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeInformation_INTERFACE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtMethod_IS_DEFAULT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldReference_IS_FINAL_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_IS_IMPLICIT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtShadowable_IS_SHADOW_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_IS_STATIC_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldReference_IS_STATIC_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeParameterReference_IS_UPPER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtParameter_IS_VARARGS_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDocTag_JAVADOC_TAG_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtStatement_LABEL_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBinaryOperator_LEFT_OPERAND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_METHOD_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModifiable_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModuleRequirement_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeInformation_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_MODULE_DIRECTIVE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModuleRequirement_MODULE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackageExport_MODULE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtMultiTypedElement_MULTI_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNamedElement_NAME_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtReference_NAME_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNewClass_NESTED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_NESTED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_OPENED_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackageExport_OPENED_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBinaryOperator_OPERATOR_KIND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtOperatorAssignment_OPERATOR_KIND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtUnaryOperator_OPERATOR_KIND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackageExport_PACKAGE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeReference_PACKAGE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtCatch_PARAMETER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutable_PARAMETER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_POSITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_PROVIDED_SERVICE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_REQUIRED_MODULE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBinaryOperator_RIGHT_OPERAND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_SERVICE_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtProvidedService_SERVICE_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtUsedService_SERVICE_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtCodeSnippet_SNIPPET_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtStatementList_STATEMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_SUB_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackage_SUB_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_SUPER_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeInformation_SUPER_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTargetedExpression_TARGET_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtLabelledFlowBreak_TARGET_LABEL_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtConditional_THEN_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIf_THEN_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutable_THROWN_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTryWithResource_TRY_RESOURCE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtArrayTypeReference_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypedElement_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtVariableReference_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtActualTypeContainer_TYPE_ARGUMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_TYPE_MEMBER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFormalTypeDeclarer_TYPE_PARAMETER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAnnotation_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtEnum_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtLiteral_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldAccess_VARIABL]E_RoleHandler(), new...>
	at spoon.processing.CtGenerationTest.testGenerateRoleHandler(CtGenerationTest.java:184)

[INFO] Running spoon.LauncherTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.159 s - in spoon.LauncherTest
[INFO] Running spoon.MavenLauncherTest
[ERROR] Tests run: 6, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 0.083 s <<< FAILURE! - in spoon.MavenLauncherTest
[ERROR] mavenLauncherTestMultiModulesAndVariables(spoon.MavenLauncherTest)  Time elapsed: 0.037 s  <<< FAILURE!
java.lang.AssertionError: Content of classpath: 
	at spoon.MavenLauncherTest.mavenLauncherTestMultiModulesAndVariables(MavenLauncherTest.java:70)

[ERROR] spoonMavenLauncherTest(spoon.MavenLauncherTest)  Time elapsed: 0.036 s  <<< FAILURE!
java.lang.AssertionError: expected:<7> but was:<0>
	at spoon.MavenLauncherTest.spoonMavenLauncherTest(MavenLauncherTest.java:19)

[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   MavenLauncherTest.mavenLauncherTestMultiModulesAndVariables:70 Content of classpath: 
[ERROR]   MavenLauncherTest.spoonMavenLauncherTest:19 expected:<7> but was:<0>
[ERROR]   CtGenerationTest.testGenerateRoleHandler:184 ModelRoleHandlers different expected:<...
    static class Ct[VariableAccess_VARIABLE_RoleHandler extends spoon.reflect.meta.impl.SingleHandler<spoon.reflect.code.CtVariableAccess, spoon.reflect.reference.CtVariableReference<?>> {
        private CtVariableAccess_VARIABLE_RoleHandler() {
            super(spoon.reflect.path.CtRole.VARIABLE, spoon.reflect.code.CtVariableAccess.class, spoon.reflect.reference.CtVariableReference.class);
        }

        @java.lang.SuppressWarnings("unchecked")
        @java.lang.Override
        public <T, U> U getValue(T element) {
            return ((U) ((java.lang.Object) (castTarget(element).getVariable())));
        }

        @java.lang.Override
        public <T, U> void setValue(T element, U value) {
            castTarget(element).setVariable(castValue(value));
        }
    }

    private ModelRoleHandlers() {
    }

    static final spoon.reflect.meta.RoleHandler[] roleHandlers = new spoon.reflect.meta.RoleHandler[]{ new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeAccess_ACCESSED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtClass_ANNONYMOUS_EXECUTABLE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_ANNOTATION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAnnotation_ANNOTATION_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAbstractInvocation_ARGUMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_ARGUMENT_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAssignment_ASSIGNED_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtRHSReceiver_ASSIGNMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBodyHolder_BODY_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSynchronized_BODY_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIntersectionTypeReference_BOUND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeParameterReference_BOUNDING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSwitch_CASE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExpression_CAST_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTry_CATCH_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_COMMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtComment_COMMENT_CONTENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDocTag_COMMENT_CONTENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDoc_COMMENT_TAG_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtComment_COMMENT_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAssert_CONDITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtConditional_CONDITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIf_CONDITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtClass_CONSTRUCTOR_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackage_CONTAINED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_DECLARING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldReference_DECLARING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeReference_DECLARING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAnnotationMethod_DEFAULT_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtVariable_DEFAULT_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNewArray_DIMENSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDocTag_DOCUMENTATION_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtConditional_ELSE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIf_ELSE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAbstractInvocation_EXECUTABLE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReferenceExpression_EXECUTABLE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_EXPORTED_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtArrayAccess_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAssert_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtCase_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtDo_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFor_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtForEach_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtLambda_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNewArray_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtReturn_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSwitch_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSynchronized_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtThrow_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtUnaryOperator_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtWhile_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_FIELD_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTry_FINALIZER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtForEach_FOREACH_VARIABLE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFor_FOR_INIT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFor_FOR_UPDATE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtProvidedService_IMPLEMENTATION_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtImport_IMPORT_REFERENCE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_INTERFACE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeInformation_INTERFACE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtMethod_IS_DEFAULT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldReference_IS_FINAL_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_IS_IMPLICIT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtShadowable_IS_SHADOW_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_IS_STATIC_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldReference_IS_STATIC_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeParameterReference_IS_UPPER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtParameter_IS_VARARGS_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDocTag_JAVADOC_TAG_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtStatement_LABEL_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBinaryOperator_LEFT_OPERAND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_METHOD_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModifiable_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModuleRequirement_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeInformation_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_MODULE_DIRECTIVE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModuleRequirement_MODULE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackageExport_MODULE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtMultiTypedElement_MULTI_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNamedElement_NAME_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtReference_NAME_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNewClass_NESTED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_NESTED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_OPENED_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackageExport_OPENED_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBinaryOperator_OPERATOR_KIND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtOperatorAssignment_OPERATOR_KIND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtUnaryOperator_OPERATOR_KIND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackageExport_PACKAGE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeReference_PACKAGE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtCatch_PARAMETER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutable_PARAMETER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_POSITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_PROVIDED_SERVICE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_REQUIRED_MODULE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBinaryOperator_RIGHT_OPERAND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_SERVICE_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtProvidedService_SERVICE_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtUsedService_SERVICE_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtCodeSnippet_SNIPPET_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtStatementList_STATEMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_SUB_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackage_SUB_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_SUPER_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeInformation_SUPER_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTargetedExpression_TARGET_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtLabelledFlowBreak_TARGET_LABEL_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtConditional_THEN_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIf_THEN_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutable_THROWN_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTryWithResource_TRY_RESOURCE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtArrayTypeReference_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypedElement_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtVariableReference_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtActualTypeContainer_TYPE_ARGUMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_TYPE_MEMBER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFormalTypeDeclarer_TYPE_PARAMETER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAnnotation_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtEnum_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtLiteral_VALU]E_RoleHandler(), new...> but was:<...
    static class Ct[FieldAccess_VARIABLE_RoleHandler extends spoon.reflect.meta.impl.SingleHandler<spoon.reflect.code.CtFieldAccess, spoon.reflect.reference.CtFieldReference<?>> {
        private CtFieldAccess_VARIABLE_RoleHandler() {
            super(spoon.reflect.path.CtRole.VARIABLE, spoon.reflect.code.CtFieldAccess.class, spoon.reflect.reference.CtFieldReference.class);
        }

        @java.lang.SuppressWarnings("unchecked")
        @java.lang.Override
        public <T, U> U getValue(T element) {
            return ((U) ((java.lang.Object) (castTarget(element).getVariable())));
        }
    }

    static class CtVariableAccess_VARIABLE_RoleHandler extends spoon.reflect.meta.impl.SingleHandler<spoon.reflect.code.CtVariableAccess, spoon.reflect.reference.CtVariableReference<?>> {
        private CtVariableAccess_VARIABLE_RoleHandler() {
            super(spoon.reflect.path.CtRole.VARIABLE, spoon.reflect.code.CtVariableAccess.class, spoon.reflect.reference.CtVariableReference.class);
        }

        @java.lang.SuppressWarnings("unchecked")
        @java.lang.Override
        public <T, U> U getValue(T element) {
            return ((U) ((java.lang.Object) (castTarget(element).getVariable())));
        }

        @java.lang.Override
        public <T, U> void setValue(T element, U value) {
            castTarget(element).setVariable(castValue(value));
        }
    }

    private ModelRoleHandlers() {
    }

    static final spoon.reflect.meta.RoleHandler[] roleHandlers = new spoon.reflect.meta.RoleHandler[]{ new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeAccess_ACCESSED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtClass_ANNONYMOUS_EXECUTABLE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_ANNOTATION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAnnotation_ANNOTATION_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAbstractInvocation_ARGUMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_ARGUMENT_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAssignment_ASSIGNED_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtRHSReceiver_ASSIGNMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBodyHolder_BODY_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSynchronized_BODY_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIntersectionTypeReference_BOUND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeParameterReference_BOUNDING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSwitch_CASE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExpression_CAST_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTry_CATCH_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_COMMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtComment_COMMENT_CONTENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDocTag_COMMENT_CONTENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDoc_COMMENT_TAG_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtComment_COMMENT_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAssert_CONDITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtConditional_CONDITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIf_CONDITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtClass_CONSTRUCTOR_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackage_CONTAINED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_DECLARING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldReference_DECLARING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeReference_DECLARING_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAnnotationMethod_DEFAULT_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtVariable_DEFAULT_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNewArray_DIMENSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDocTag_DOCUMENTATION_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtConditional_ELSE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIf_ELSE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAbstractInvocation_EXECUTABLE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReferenceExpression_EXECUTABLE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_EXPORTED_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtArrayAccess_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAssert_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtCase_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtDo_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFor_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtForEach_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtLambda_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNewArray_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtReturn_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSwitch_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtSynchronized_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtThrow_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtUnaryOperator_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtWhile_EXPRESSION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_FIELD_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTry_FINALIZER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtForEach_FOREACH_VARIABLE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFor_FOR_INIT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFor_FOR_UPDATE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtProvidedService_IMPLEMENTATION_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtImport_IMPORT_REFERENCE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_INTERFACE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeInformation_INTERFACE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtMethod_IS_DEFAULT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldReference_IS_FINAL_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_IS_IMPLICIT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtShadowable_IS_SHADOW_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_IS_STATIC_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldReference_IS_STATIC_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeParameterReference_IS_UPPER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtParameter_IS_VARARGS_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtJavaDocTag_JAVADOC_TAG_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtStatement_LABEL_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBinaryOperator_LEFT_OPERAND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_METHOD_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModifiable_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModuleRequirement_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeInformation_MODIFIER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_MODULE_DIRECTIVE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModuleRequirement_MODULE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackageExport_MODULE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtMultiTypedElement_MULTI_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNamedElement_NAME_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtReference_NAME_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtNewClass_NESTED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_NESTED_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_OPENED_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackageExport_OPENED_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBinaryOperator_OPERATOR_KIND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtOperatorAssignment_OPERATOR_KIND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtUnaryOperator_OPERATOR_KIND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackageExport_PACKAGE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeReference_PACKAGE_REF_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtCatch_PARAMETER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutable_PARAMETER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtElement_POSITION_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_PROVIDED_SERVICE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_REQUIRED_MODULE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtBinaryOperator_RIGHT_OPERAND_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_SERVICE_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtProvidedService_SERVICE_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtUsedService_SERVICE_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtCodeSnippet_SNIPPET_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtStatementList_STATEMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtModule_SUB_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtPackage_SUB_PACKAGE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_SUPER_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypeInformation_SUPER_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTargetedExpression_TARGET_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtLabelledFlowBreak_TARGET_LABEL_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtConditional_THEN_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtIf_THEN_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutable_THROWN_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTryWithResource_TRY_RESOURCE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtArrayTypeReference_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtExecutableReference_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtTypedElement_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtVariableReference_TYPE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtActualTypeContainer_TYPE_ARGUMENT_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtType_TYPE_MEMBER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFormalTypeDeclarer_TYPE_PARAMETER_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtAnnotation_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtEnum_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtLiteral_VALUE_RoleHandler(), new spoon.reflect.meta.impl.ModelRoleHandlers.CtFieldAccess_VARIABL]E_RoleHandler(), new...>
[ERROR]   CtScannerTest.testScannerCallsAllProperties:216 CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:353) calls unexpected methods: [getAnnotations(), getType()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:956) calls unexpected methods: [getComments()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:661) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:821) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:278) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:289) calls unexpected methods: [getTypeCasts(), getAnnotations(), getType()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:947) calls unexpected methods: [getComments()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:472) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:365) calls unexpected methods: [getParameters(), getAnnotations(), getThrownTypes()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:875) calls unexpected methods: [getTypeCasts(), getComments(), getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:894) calls unexpected methods: [getComments(), getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:684) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:566) calls unexpected methods: [getAnnotations(), getType()]
no getAnonymousExecutables() in public <T> void visitCtClass(final spoon.reflect.declaration.CtClass<T> ctClass) {
    enter(ctClass);
    scan(spoon.reflect.path.CtRole.ANNOTATION, ctClass.getAnnotations());
    scan(spoon.reflect.path.CtRole.SUPER_TYPE, ctClass.getSuperclass());
    scan(spoon.reflect.path.CtRole.INTERFACE, ctClass.getSuperInterfaces());
    scan(spoon.reflect.path.CtRole.TYPE_PARAMETER, ctClass.getFormalCtTypeParameters());
    scan(spoon.reflect.path.CtRole.TYPE_MEMBER, ctClass.getTypeMembers());
    scan(spoon.reflect.path.CtRole.COMMENT, ctClass.getComments());
    exit(ctClass);
}
no getConstructors() in public <T> void visitCtClass(final spoon.reflect.declaration.CtClass<T> ctClass) {
    enter(ctClass);
    scan(spoon.reflect.path.CtRole.ANNOTATION, ctClass.getAnnotations());
    scan(spoon.reflect.path.CtRole.SUPER_TYPE, ctClass.getSuperclass());
    scan(spoon.reflect.path.CtRole.INTERFACE, ctClass.getSuperInterfaces());
    scan(spoon.reflect.path.CtRole.TYPE_PARAMETER, ctClass.getFormalCtTypeParameters());
    scan(spoon.reflect.path.CtRole.TYPE_MEMBER, ctClass.getTypeMembers());
    scan(spoon.reflect.path.CtRole.COMMENT, ctClass.getComments());
    exit(ctClass);
}
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:333) calls unexpected methods: [getFormalCtTypeParameters(), getSuperInterfaces(), getComments(), getAnnotations(), getTypeMembers()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:300) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:646) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:729) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:269) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:692) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:718) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:701) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:740) calls unexpected methods: [getAnnotations(), getDeclaringType(), getPackage()]
no getActualTypeArguments() in public <T> void visitCtInvocation(final spoon.reflect.code.CtInvocation<T> invocation) {
    enter(invocation);
    scan(spoon.reflect.path.CtRole.ANNOTATION, invocation.getAnnotations());
    scan(spoon.reflect.path.CtRole.CAST, invocation.getTypeCasts());
    scan(spoon.reflect.path.CtRole.TARGET, invocation.getTarget());
    scan(spoon.reflect.path.CtRole.EXECUTABLE_REF, invocation.getExecutable());
    scan(spoon.reflect.path.CtRole.ARGUMENT, invocation.getArguments());
    scan(spoon.reflect.path.CtRole.COMMENT, invocation.getComments());
    exit(invocation);
}
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:502) calls unexpected methods: [getTypeCasts(), getComments(), getAnnotations(), getTarget()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:791) calls unexpected methods: [getTypeCasts(), getAnnotations(), getType()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:461) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:345) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:522) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:482) calls unexpected methods: [getAnnotations()]
no getRequiredModules() in @java.lang.Override
public void visitCtModule(spoon.reflect.declaration.CtModule module) {
    enter(module);
    scan(spoon.reflect.path.CtRole.COMMENT, module.getComments());
    scan(spoon.reflect.path.CtRole.ANNOTATION, module.getAnnotations());
    scan(spoon.reflect.path.CtRole.MODULE_DIRECTIVE, module.getModuleDirectives());
    scan(spoon.reflect.path.CtRole.SUB_PACKAGE, module.getRootPackage());
    exit(module);
}
no getExportedPackages() in @java.lang.Override
public void visitCtModule(spoon.reflect.declaration.CtModule module) {
    enter(module);
    scan(spoon.reflect.path.CtRole.COMMENT, module.getComments());
    scan(spoon.reflect.path.CtRole.ANNOTATION, module.getAnnotations());
    scan(spoon.reflect.path.CtRole.MODULE_DIRECTIVE, module.getModuleDirectives());
    scan(spoon.reflect.path.CtRole.SUB_PACKAGE, module.getRootPackage());
    exit(module);
}
no getOpenedPackages() in @java.lang.Override
public void visitCtModule(spoon.reflect.declaration.CtModule module) {
    enter(module);
    scan(spoon.reflect.path.CtRole.COMMENT, module.getComments());
    scan(spoon.reflect.path.CtRole.ANNOTATION, module.getAnnotations());
    scan(spoon.reflect.path.CtRole.MODULE_DIRECTIVE, module.getModuleDirectives());
    scan(spoon.reflect.path.CtRole.SUB_PACKAGE, module.getRootPackage());
    exit(module);
}
no getUsedServices() in @java.lang.Override
public void visitCtModule(spoon.reflect.declaration.CtModule module) {
    enter(module);
    scan(spoon.reflect.path.CtRole.COMMENT, module.getComments());
    scan(spoon.reflect.path.CtRole.ANNOTATION, module.getAnnotations());
    scan(spoon.reflect.path.CtRole.MODULE_DIRECTIVE, module.getModuleDirectives());
    scan(spoon.reflect.path.CtRole.SUB_PACKAGE, module.getRootPackage());
    exit(module);
}
no getProvidedServices() in @java.lang.Override
public void visitCtModule(spoon.reflect.declaration.CtModule module) {
    enter(module);
    scan(spoon.reflect.path.CtRole.COMMENT, module.getComments());
    scan(spoon.reflect.path.CtRole.ANNOTATION, module.getAnnotations());
    scan(spoon.reflect.path.CtRole.MODULE_DIRECTIVE, module.getModuleDirectives());
    scan(spoon.reflect.path.CtRole.SUB_PACKAGE, module.getRootPackage());
    exit(module);
}
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:920) calls unexpected methods: [getComments(), getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:937) calls unexpected methods: [getComments()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:587) calls unexpected methods: [getTypeCasts(), getAnnotations(), getTarget()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:315) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:324) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:259) calls unexpected methods: [getDeclaringType(), getPackage()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:553) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:611) calls unexpected methods: [getTypeCasts(), getAnnotations(), getType()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:575) calls unexpected methods: [getTypeCasts(), getAnnotations(), getType()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:760) calls unexpected methods: [getAnnotations(), getDeclaringType(), getPackage(), getActualTypeArguments()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:966) calls unexpected methods: [getComments()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:710) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:676) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:413) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:782) calls unexpected methods: [getTypeCasts(), getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:383) calls unexpected methods: [getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:186) calls unexpected methods: [getComments(), getAnnotations(), getType()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:392) calls unexpected methods: [getSuperInterfaces(), getAnnotations(), getTypeMembers()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:598) calls unexpected methods: [getTypeCasts(), getAnnotations(), getExecutable(), getArguments(), getTarget()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:538) calls unexpected methods: [getComments(), getAnnotations()]
CtScanner (/root/workspace/INRIA/spoon/388836284/src/main/java/spoon/reflect/visitor/CtScanner.java:624) calls unexpected methods: [getTypeCasts(), getComments(), getAnnotations(), getType()]
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtAnnotationFieldAccess have problems:
UnsettableProperty CtAnnotationFieldAccess#variable<spoon.reflect.reference.CtFieldReference<T>> sets the value
UnsettableProperty CtAnnotationFieldAccess#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtAnnotationFieldAccess#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtAnnotationFieldAccess#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtAnnotationFieldAccess#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtAnnotationFieldAccess#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtAnnotationMethod have problems:
UnsettableProperty CtAnnotationMethod#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtAnnotationMethod#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtAnnotationMethod#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtAnnotationType have problems:
UnsettableProperty CtAnnotationType#typeMember<java.util.List<spoon.reflect.declaration.CtTypeMember>> sets the value
UnsettableProperty CtAnnotationType#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtAnnotationType#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtAnnotation have problems:
UnsettableProperty CtAnnotation#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtAnnotation#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtAnnotation#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:151 Settable field CtAnonymousExecutable#thrown<java.util.Set<spoon.reflect.reference.CtTypeReference<? extends java.lang.Throwable>>> should set value.

[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtArrayRead have problems:
UnsettableProperty CtArrayRead#expression<spoon.reflect.code.CtExpression<java.lang.Integer>> sets the value
UnsettableProperty CtArrayRead#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtArrayRead#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtArrayRead#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtArrayRead#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtArrayRead#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtArrayWrite have problems:
UnsettableProperty CtArrayWrite#expression<spoon.reflect.code.CtExpression<java.lang.Integer>> sets the value
UnsettableProperty CtArrayWrite#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtArrayWrite#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtArrayWrite#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtArrayWrite#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtArrayWrite#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtAssert have problems:
UnsettableProperty CtAssert#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtAssert#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtAssignment have problems:
UnsettableProperty CtAssignment#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtAssignment#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtBinaryOperator have problems:
UnsettableProperty CtBinaryOperator#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtBinaryOperator#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtBinaryOperator#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtBinaryOperator#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtBlock have problems:
UnsettableProperty CtBlock#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtBlock#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtBreak have problems:
UnsettableProperty CtBreak#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtBreak#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtCase have problems:
UnsettableProperty CtCase#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtCase#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtCatchVariableReference have problems:
UnsettableProperty CtCatchVariableReference#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtCatchVariableReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtCatchVariable have problems:
UnsettableProperty CtCatchVariable#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtCatchVariable#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtCatch have problems:
UnsettableProperty CtCatch#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtCatch#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtClass have problems:
UnsettableProperty CtClass#typeMember<java.util.List<spoon.reflect.declaration.CtTypeMember>> sets the value
UnsettableProperty CtClass#interface<java.util.Set<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtClass#typeParameter<java.util.List<spoon.reflect.declaration.CtTypeParameter>> sets the value
UnsettableProperty CtClass#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtClass#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtCodeSnippetExpression have problems:
UnsettableProperty CtCodeSnippetExpression#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtCodeSnippetExpression#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtCodeSnippetExpression#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtCodeSnippetExpression#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtCodeSnippetStatement have problems:
UnsettableProperty CtCodeSnippetStatement#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtCodeSnippetStatement#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtComment have problems:
UnsettableProperty CtComment#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtComment#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtConditional have problems:
UnsettableProperty CtConditional#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtConditional#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtConditional#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtConditional#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtConstructorCall have problems:
UnsettableProperty CtConstructorCall#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtConstructorCall#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtConstructorCall#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtConstructorCall#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtConstructor have problems:
UnsettableProperty CtConstructor#parameter<java.util.List<spoon.reflect.declaration.CtParameter<?>>> sets the value
UnsettableProperty CtConstructor#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtConstructor#thrown<java.util.Set<spoon.reflect.reference.CtTypeReference<? extends java.lang.Throwable>>> sets the value
UnsettableProperty CtConstructor#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtConstructor#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtContinue have problems:
UnsettableProperty CtContinue#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtContinue#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtDo have problems:
UnsettableProperty CtDo#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtDo#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtDo#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtEnumValue have problems:
UnsettableProperty CtEnumValue#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtEnumValue#defaultExpression<spoon.reflect.code.CtExpression<T>> sets the value
UnsettableProperty CtEnumValue#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtEnumValue#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtEnum have problems:
UnsettableProperty CtEnum#typeMember<java.util.List<spoon.reflect.declaration.CtTypeMember>> sets the value
UnsettableProperty CtEnum#interface<java.util.Set<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtEnum#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtEnum#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtExecutableReferenceExpression have problems:
UnsettableProperty CtExecutableReferenceExpression#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtExecutableReferenceExpression#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtExecutableReferenceExpression#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtExecutableReferenceExpression#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtExecutableReferenceExpression#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtExecutableReference have problems:
UnsettableProperty CtExecutableReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtFieldRead have problems:
UnsettableProperty CtFieldRead#variable<spoon.reflect.reference.CtFieldReference<T>> sets the value
UnsettableProperty CtFieldRead#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtFieldRead#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtFieldRead#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtFieldRead#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtFieldRead#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtFieldReference have problems:
UnsettableProperty CtFieldReference#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtFieldReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtFieldWrite have problems:
UnsettableProperty CtFieldWrite#variable<spoon.reflect.reference.CtFieldReference<T>> sets the value
UnsettableProperty CtFieldWrite#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtFieldWrite#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtFieldWrite#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtFieldWrite#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtFieldWrite#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtField have problems:
UnsettableProperty CtField#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtField#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtForEach have problems:
UnsettableProperty CtForEach#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtForEach#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtForEach#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtFor have problems:
UnsettableProperty CtFor#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtFor#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtFor#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtIf have problems:
UnsettableProperty CtIf#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtIf#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtImport have problems:
UnsettableProperty CtImport#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtImport#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtInterface have problems:
UnsettableProperty CtInterface#typeMember<java.util.List<spoon.reflect.declaration.CtTypeMember>> sets the value
UnsettableProperty CtInterface#interface<java.util.Set<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtInterface#typeParameter<java.util.List<spoon.reflect.declaration.CtTypeParameter>> sets the value
UnsettableProperty CtInterface#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtInterface#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtInvocation have problems:
UnsettableProperty CtInvocation#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtInvocation#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtInvocation#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtInvocation#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtJavaDocTag have problems:
UnsettableProperty CtJavaDocTag#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtJavaDocTag#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtJavaDoc have problems:
UnsettableProperty CtJavaDoc#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtJavaDoc#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtLambda have problems:
UnsettableProperty CtLambda#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtLambda#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtLambda#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtLambda#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtLiteral have problems:
UnsettableProperty CtLiteral#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtLiteral#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtLiteral#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtLiteral#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtLocalVariableReference have problems:
UnsettableProperty CtLocalVariableReference#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtLocalVariableReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtLocalVariable have problems:
UnsettableProperty CtLocalVariable#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtLocalVariable#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtMethod have problems:
UnsettableProperty CtMethod#parameter<java.util.List<spoon.reflect.declaration.CtParameter<?>>> sets the value
UnsettableProperty CtMethod#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtMethod#thrown<java.util.Set<spoon.reflect.reference.CtTypeReference<? extends java.lang.Throwable>>> sets the value
UnsettableProperty CtMethod#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtMethod#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtModuleReference have problems:
UnsettableProperty CtModuleReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtModuleRequirement have problems:
UnsettableProperty CtModuleRequirement#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtModuleRequirement#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtModule have problems:
UnsettableProperty CtModule#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtModule#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtNewArray have problems:
UnsettableProperty CtNewArray#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtNewArray#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtNewArray#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtNewArray#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtNewClass have problems:
UnsettableProperty CtNewClass#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtNewClass#executableRef<spoon.reflect.reference.CtExecutableReference<T>> sets the value
UnsettableProperty CtNewClass#argument<java.util.List<spoon.reflect.code.CtExpression<?>>> sets the value
UnsettableProperty CtNewClass#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtNewClass#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtNewClass#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtNewClass#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtOperatorAssignment have problems:
UnsettableProperty CtOperatorAssignment#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtOperatorAssignment#assignment<spoon.reflect.code.CtExpression<A>> sets the value
UnsettableProperty CtOperatorAssignment#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtOperatorAssignment#assigned<spoon.reflect.code.CtExpression<T>> sets the value
UnsettableProperty CtOperatorAssignment#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtOperatorAssignment#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtPackageExport have problems:
UnsettableProperty CtPackageExport#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtPackageExport#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtPackageReference have problems:
UnsettableProperty CtPackageReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtPackage have problems:
UnsettableProperty CtPackage#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtPackage#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtParameterReference have problems:
UnsettableProperty CtParameterReference#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtParameterReference#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtParameter have problems:
UnsettableProperty CtParameter#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtParameter#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtProvidedService have problems:
UnsettableProperty CtProvidedService#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtProvidedService#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtReturn have problems:
UnsettableProperty CtReturn#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtReturn#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtStatementList have problems:
UnsettableProperty CtStatementList#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtStatementList#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtSuperAccess have problems:
UnsettableProperty CtSuperAccess#variable<spoon.reflect.reference.CtVariableReference<T>> sets the value
UnsettableProperty CtSuperAccess#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtSuperAccess#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtSuperAccess#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtSuperAccess#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtSwitch have problems:
UnsettableProperty CtSwitch#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtSwitch#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtSynchronized have problems:
UnsettableProperty CtSynchronized#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtSynchronized#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtThisAccess have problems:
UnsettableProperty CtThisAccess#target<spoon.reflect.code.CtExpression<?>> sets the value
UnsettableProperty CtThisAccess#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtThisAccess#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtThisAccess#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtThisAccess#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtThrow have problems:
UnsettableProperty CtThrow#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtThrow#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtTryWithResource have problems:
UnsettableProperty CtTryWithResource#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtTryWithResource#finalizer<spoon.reflect.code.CtBlock<?>> sets the value
UnsettableProperty CtTryWithResource#catch<java.util.List<spoon.reflect.code.CtCatch>> sets the value
UnsettableProperty CtTryWithResource#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtTryWithResource#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtTry have problems:
UnsettableProperty CtTry#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtTry#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtTypeAccess have problems:
UnsettableProperty CtTypeAccess#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtTypeAccess#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtTypeAccess#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtTypeParameter have problems:
UnsettableProperty CtTypeParameter#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtTypeParameter#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtUnaryOperator have problems:
UnsettableProperty CtUnaryOperator#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtUnaryOperator#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtUnaryOperator#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtUnaryOperator#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtUnboundVariableReference have problems:
UnsettableProperty CtUnboundVariableReference#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtUsedService have problems:
UnsettableProperty CtUsedService#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtUsedService#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtVariableRead have problems:
UnsettableProperty CtVariableRead#variable<spoon.reflect.reference.CtVariableReference<T>> sets the value
UnsettableProperty CtVariableRead#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtVariableRead#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtVariableRead#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtVariableRead#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtVariableWrite have problems:
UnsettableProperty CtVariableWrite#variable<spoon.reflect.reference.CtVariableReference<T>> sets the value
UnsettableProperty CtVariableWrite#type<spoon.reflect.reference.CtTypeReference<T>> sets the value
UnsettableProperty CtVariableWrite#cast<java.util.List<spoon.reflect.reference.CtTypeReference<?>>> sets the value
UnsettableProperty CtVariableWrite#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtVariableWrite#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[ERROR]   ReplaceParametrizedTest.testContract:171 The accessors of CtWhile have problems:
UnsettableProperty CtWhile#body<spoon.reflect.code.CtStatement> sets the value
UnsettableProperty CtWhile#annotation<java.util.List<spoon.reflect.declaration.CtAnnotation<? extends java.lang.annotation.Annotation>>> sets the value
UnsettableProperty CtWhile#comment<java.util.List<spoon.reflect.code.CtComment>> sets the value
[INFO] 
[ERROR] Tests run: 1444, Failures: 79, Errors: 0, Skipped: 4
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 06:15 min
[INFO] Finished at: 2018-06-06T18:05:56+02:00
[INFO] Final Memory: 26M/946M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.20.1:test (default-test) on project spoon-core: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/INRIA/spoon/388836284/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
