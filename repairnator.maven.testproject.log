[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for com.telefonica.iot:cygnus-common:jar:1.8.0_SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 14
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building cygnus-common 1.8.0_SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ cygnus-common ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:compile (default-compile) @ cygnus-common ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ cygnus-common ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:testCompile (default-testCompile) @ cygnus-common ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ cygnus-common ---
[INFO] Surefire report directory: /root/workspace/telefonicaid/fiware-cygnus/373056628/cygnus-common/target/surefire-reports
Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.pom
3/3 KB   
3/3 KB   
         
Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.pom (3 KB at 6.4 KB/sec)
Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.12.4/surefire-providers-2.12.4.pom
3/3 KB   
3/3 KB   
         
Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.12.4/surefire-providers-2.12.4.pom (3 KB at 120.7 KB/sec)
Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.jar
3/37 KB   
5/37 KB   
8/37 KB   
11/37 KB   
13/37 KB   
16/37 KB   
19/37 KB   
21/37 KB   
24/37 KB   
27/37 KB   
29/37 KB   
32/37 KB   
35/37 KB   
37/37 KB   
           
Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.jar (37 KB at 819.5 KB/sec)

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.telefonica.iot.cygnus.backends.hdfs.HDFSBackendImplBinaryTest
Testing HDFSBackendImpl.createFile
Testing HDFSBackendImpl.append
Testing HDFSBackendImplBinary.createDir
Testing HDFSBackendImpl.exists
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.39 sec
Running com.telefonica.iot.cygnus.backends.hdfs.HDFSBackendImplRESTTest
Testing HDFSBackendImplREST.createFile
Testing HDFSBackendImplREST.append
Testing HDFSBackendImplREST.createDir
Testing HDFSBackendImplREST.exists
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.192 sec
Running com.telefonica.iot.cygnus.backends.ckan.CKANCacheTest
Testing CKANCache.getOrgId
Testing CKANCache.getPkgId
Testing CKANCache.getResId
Testing CKANCache.isCachedOrg
Testing CKANCache.isCachedPkg
Testing CKANCache.isCachedRes
Testing CKANCache.setOrgId
Testing CKANCache.setPkgId
Testing CKANCache.setResId
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.057 sec
Running com.telefonica.iot.cygnus.backends.ckan.CKANBackendImplTest
Testing CKANBackendImpl.persist
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec
Running com.telefonica.iot.cygnus.backends.dynamo.DynamoDBBackendImplTest
Testing MySQLBackend.createTable (within first database
Testing DynamoDBBackendImpl.createTable (within first database
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.481 sec
Running com.telefonica.iot.cygnus.backends.mysql.MySQLCacheTest
[MySQLCache.isCachedTable] ------------------------------------------ A not cached table is checked
[MySQLCache.isCachedTable] -----------------------------------  OK  - The table was not cached
[MySQLCache.db_iteration_methods] ----------------------------------- Database iteration methods work
[MySQLCache.db_iteration_methods] ----------------------------  OK  - Database iteration methods work
[MySQLCache.addTable] ----------------------------------------------- A database is not added if already existing in the cache
[MySQLCache.addTable] ----------------------------------------  OK  - The table was not added
[MySQLCache.isCachedTable] ------------------------------------------ A cached table is checked
[MySQLCache.isCachedTable] -----------------------------------  OK  - The table was cached
[MySQLCache.addDb] -------------------------------------------------- A database is added if not existing in the cache
[MySQLCache.addDb] -------------------------------------------  OK  - The database was added
[MySQLCache.addTable] ----------------------------------------------- A table is added if not existing in the cache
[MySQLCache.addTable] ----------------------------------------  OK  - The table was added
[MySQLCache.addTable] ----------------------------------------------- A table is not added if the database does not exist in the cache
[MySQLCache.addTable] ----------------------------------------  OK  - The table was not added
[MySQLCache.addDb] -------------------------------------------------- A database is not added if already existing in the cache
[MySQLCache.addDb] -------------------------------------------  OK  - The database was not added
[MySQLCache.isCachedDb] --------------------------------------------- A not cached database is checked
[MySQLCache.isCachedDb] --------------------------------------  OK  - The database was not cached
[MySQLCache.isCachedDb] --------------------------------------------- A cached database is checked
[MySQLCache.isCachedDb] --------------------------------------  OK  - The database was cached
[MySQLCache.table_iteration_methods] -------------------------------- Table iteration methods work
[MySQLCache.table_iteration_methods] -------------------------  OK  - Table iteration methods work
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.telefonica.iot.cygnus.backends.mysql.MySQLBackendImplTest
Testing MySQLBackend.createTable (within first database
Testing MySQLBackend.createTable (within second database
Testing MySQLBackend.insertContextData
Testing MySQLBackend.createDatabase (first database creation
Testing MySQLBackend.createDatabase (second database creation
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running com.telefonica.iot.cygnus.backends.http.HttpBackendTest
[HttpBackend.finishTransaction] ------------------------------------- Once a transaction is finished, the byte counts are correct
[HttpBackend.finishTransaction] ------------------------------  OK  - Request bytes is equals to 0
[HttpBackend.finishTransaction] ------------------------------  OK  - Response bytes is equals to 79
[HttpBackend.createJsonResponse] ------------------------------------ A JsonResponse object is created if the content-type header contains 'application/json' but no location header
[HttpBackend.createJsonResponse] -----------------------------  OK  - The JsonResponse object was created with headers
[HttpBackend.startTransaction] -------------------------------------- Once a transaction is started, the byte counts are equals to 0
[HttpBackend.startTransaction] -------------------------------  OK  - Request bytes is equals to 0
[HttpBackend.startTransaction] -------------------------------  OK  - Response bytes is equals to 0
[HttpBackend.createJsonResponse] ------------------------------------ A JsonResponse object is created if the response content-type header is 'application/json' and the response contains a location header
[HttpBackend.createJsonResponse] -----------------------------  OK  - The JsonResponse object has a Json apyload
[HttpBackend.createJsonResponse] -----------------------------  OK  - The JsonResponse object has a Location header
[HttpBackend.createJsonResponse] ------------------------------------ A JsonResponse object is created if the content-type header contains 'application/json' but no location header
[HttpBackend.createJsonResponse] -----------------------------  OK  - The JsonResponse object was created with null location header
[HttpBackend.createJsonResponse] ------------------------------------ A JsonResponse object is not created if the content-type header does not contains 'application/json'
[HttpBackend.createJsonResponse] -----------------------------  OK  - The JsonResponse object could not be created with a 'text/html' content type header
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running com.telefonica.iot.cygnus.backends.http.JsonResponseTest
Testing JsonResponseTest.getReasonPhrase
Testing JsonResponseTest.getHeaders
Testing JsonResponseTest.getLocationHeader
Testing JsonResponseTest.getStatusCode
Testing JsonResponseTest.getJsonObject
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.telefonica.iot.cygnus.backends.mongo.MongoBackendImplTest
[MongoBackendImpl.getRange] ----------------------------------------- Given a resolution, its related range is correctly returned
[MongoBackendImpl.getRange] ----------------------------------  OK  - The related range for 'SECOND' resolution is 'minute'
[MongoBackendImpl.getRange] ----------------------------------  OK  - The related range for 'MINUTE' resolution is 'hour'
[MongoBackendImpl.getRange] ----------------------------------  OK  - The related range for 'HOUR' resolution is 'day'
[MongoBackendImpl.getRange] ----------------------------------  OK  - The related range for 'DAY' resolution is 'month'
[MongoBackendImpl.getRange] ----------------------------------  OK  - The related range for 'MONTH' resolution is 'year'
[MongoBackendImpl.buildUpdateForUpdate] ----------------------------- Given a calendar, an attribute type and pre-aggregated numerical values, an aggregation update is create
[MongoBackendImpl.buildUpdateForUpdate] ----------------------  OK  - The related update for '2017-04-05T11:46:13' and given preaggregation is '{ "$set" : { "attrType" : "someType"} , "$inc" : { "points.$.samples" : 2 , "points.$.sum" : 20.0 , "points.$.sum2" : 200.0} , "$min" : { "points.$.min" : 0.0} , "$max" : { "points.$.max" : 10.0}}'
[MongoBackendImpl.buildUpdateForUpdate] ----------------------------- Given a calendar, an attribute type and pre-aggregated string values, an aggregation update is create
[MongoBackendImpl.buildUpdateForUpdate] ----------------------  OK  - The related update for '2017-04-05T11:46:13', resolution 'SECOND' and given preaggregation is '{ "$set" : { "attrType" : "someType"} , "$inc" : { "points.13.samples" : 2 , "points.13.occur.someString" : 2}}'
[MongoBackendImpl.buildUpdateForUpdate] ----------------------  OK  - The related update for '2017-04-05T11:46:13', resolution 'MINUTE' and given preaggregation is '{ "$set" : { "attrType" : "someType"} , "$inc" : { "points.46.samples" : 2 , "points.46.occur.someString" : 2}}'
[MongoBackendImpl.buildUpdateForUpdate] ----------------------  OK  - The related update for '2017-04-05T11:46:13', resolution 'HOUR' and given preaggregation is '{ "$set" : { "attrType" : "someType"} , "$inc" : { "points.11.samples" : 2 , "points.11.occur.someString" : 2}}'
[MongoBackendImpl.buildUpdateForUpdate] ----------------------  OK  - The related update for '2017-04-05T11:46:13', resolution 'DAY' and given preaggregation is '{ "$set" : { "attrType" : "someType"} , "$inc" : { "points.4.samples" : 2 , "points.4.occur.someString" : 2}}'
[MongoBackendImpl.buildUpdateForUpdate] ----------------------  OK  - The related update for '2017-04-05T11:46:13', resolution 'MONTH' and given preaggregation is '{ "$set" : { "attrType" : "someType"} , "$inc" : { "points.3.samples" : 2 , "points.3.occur.someString" : 2}}'
[MongoBackendImpl.getOffset] ---------------------------------------- Given a calendar and a resolution, its related offset is correctly returned
[MongoBackendImpl.getOffset] ---------------------------------  OK  - The related offset for '2017-04-05T11:46:13' and 'SECOND' resolution is '13'
[MongoBackendImpl.getOffset] ---------------------------------  OK  - The related offset for '2017-04-05T11:46:13' and 'MINUTE' resolution is '46'
[MongoBackendImpl.getOffset] ---------------------------------  OK  - The related offset for '2017-04-05T11:46:13' and 'HOUR' resolution is '11'
[MongoBackendImpl.getOffset] ---------------------------------  OK  - The related offset for '2017-04-05T11:46:13' and 'DAY' resolution is '5'
[MongoBackendImpl.getOffset] ---------------------------------  OK  - The related offset for '2017-04-05T11:46:13' and 'MONTH' resolution is '4'
[MongoBackendImpl.getOrigin] ---------------------------------------- Given a calendar and a resolution, its related origin is correctly returned
[MongoBackendImpl.getOrigin] ---------------------------------  OK  - The related origin for '2017-04-05T11:46:13' and 'SECOND' resolution is '2017-04-05T11:46:00'
[MongoBackendImpl.getOrigin] ---------------------------------  OK  - The related origin for '2017-04-05T11:46:13' and 'MINUTE' resolution is '2017-04-05T11:00:00'
[MongoBackendImpl.getOrigin] ---------------------------------  OK  - The related origin for '2017-04-05T11:46:13' and 'HOUR' resolution is '2017-04-05T00:00:00'
[MongoBackendImpl.getOrigin] ---------------------------------  OK  - The related origin for '2017-04-05T11:46:13' and 'DAY' resolution is '2017-04-01T00:00:00'
[MongoBackendImpl.getOrigin] ---------------------------------  OK  - The related origin for '2017-04-05T11:46:13' and 'MONTH' resolution is '2017-01-01T00:00:00'
[MongoBackendImpl.buildQueryForInsertAggregated] -------------------- Given a calendar, a resolution, an entity ID and type and a attribute name, a query for insert if built
[MongoBackendImpl.buildQueryForInsertAggregated] -------------  OK  - The related query for '2017-04-05T11:46:13', 'SECOND' resolution and 'DMBYENTITY' data mode is '{ "_id" : { "entityId" : "someId" , "entityType" : "someType" , "attrName" : "someName" , "origin" : { "$date" : "2017-04-05T11:46:00.000Z"} , "resolution" : "second" , "range" : "minute"} , "points.offset" : 13}'
[MongoBackendImpl.buildQueryForInsertAggregated] -------------  OK  - The related query for '2017-04-05T11:46:13', 'MINUTE' resolution and 'DMBYENTITY' data mode is '{ "_id" : { "entityId" : "someId" , "entityType" : "someType" , "attrName" : "someName" , "origin" : { "$date" : "2017-04-05T11:00:00.000Z"} , "resolution" : "minute" , "range" : "hour"} , "points.offset" : 46}'
[MongoBackendImpl.buildQueryForInsertAggregated] -------------  OK  - The related query for '2017-04-05T11:46:13', 'HOUR' resolution and 'DMBYENTITY' data mode is '{ "_id" : { "entityId" : "someId" , "entityType" : "someType" , "attrName" : "someName" , "origin" : { "$date" : "2017-04-05T00:00:00.000Z"} , "resolution" : "hour" , "range" : "day"} , "points.offset" : 11}'
[MongoBackendImpl.buildQueryForInsertAggregated] -------------  OK  - The related query for '2017-04-05T11:46:13', 'DAY' resolution and 'DMBYENTITY' data mode is '{ "_id" : { "entityId" : "someId" , "entityType" : "someType" , "attrName" : "someName" , "origin" : { "$date" : "2017-04-01T00:00:00.000Z"} , "resolution" : "day" , "range" : "month"} , "points.offset" : 5}'
[MongoBackendImpl.buildQueryForInsertAggregated] -------------  OK  - The related query for '2017-04-05T11:46:13', 'MONTH' resolution and 'DMBYENTITY' data mode is '{ "_id" : { "entityId" : "someId" , "entityType" : "someType" , "attrName" : "someName" , "origin" : { "$date" : "2017-01-01T00:00:00.000Z"} , "resolution" : "month" , "range" : "year"} , "points.offset" : 4}'
[MongoBackendImpl.buildQueryForInsertAggregated] -------------  OK  - The related query for '2017-04-05T11:46:13', 'SECOND' resolution and 'DMBYENTITY' data mode is '{ "_id" : { "attrName" : "someName" , "origin" : { "$date" : "2017-04-05T11:46:00.000Z"} , "resolution" : "second" , "range" : "minute"} , "points.offset" : 13}'
[MongoBackendImpl.buildQueryForInsertAggregated] -------------  OK  - The related query for '2017-04-05T11:46:13', 'MINUTE' resolution and 'DMBYENTITY' data mode is '{ "_id" : { "attrName" : "someName" , "origin" : { "$date" : "2017-04-05T11:00:00.000Z"} , "resolution" : "minute" , "range" : "hour"} , "points.offset" : 46}'
[MongoBackendImpl.buildQueryForInsertAggregated] -------------  OK  - The related query for '2017-04-05T11:46:13', 'HOUR' resolution and 'DMBYENTITY' data mode is '{ "_id" : { "attrName" : "someName" , "origin" : { "$date" : "2017-04-05T00:00:00.000Z"} , "resolution" : "hour" , "range" : "day"} , "points.offset" : 11}'
[MongoBackendImpl.buildQueryForInsertAggregated] -------------  OK  - The related query for '2017-04-05T11:46:13', 'DAY' resolution and 'DMBYENTITY' data mode is '{ "_id" : { "attrName" : "someName" , "origin" : { "$date" : "2017-04-01T00:00:00.000Z"} , "resolution" : "day" , "range" : "month"} , "points.offset" : 5}'
[MongoBackendImpl.buildQueryForInsertAggregated] -------------  OK  - The related query for '2017-04-05T11:46:13', 'MONTH' resolution and 'DMBYENTITY' data mode is '{ "_id" : { "attrName" : "someName" , "origin" : { "$date" : "2017-01-01T00:00:00.000Z"} , "resolution" : "month" , "range" : "year"} , "points.offset" : 4}'
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 sec
Running com.telefonica.iot.cygnus.backends.postgresql.PostgreSQLBackendImplTest
Testing PostgreSQLBackend.createSchema (first schema creation
Testing PostgreSQLBackend.createSchema (second schema creation
Testing PostgreSQLBackend.createTable (within first schema
Testing PostgreSQLBackend.createTable (within second schema
Testing PostgreSQLBackend.insertContextData
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.telefonica.iot.cygnus.backends.postgresql.PostgreSQLCacheTest
[PostgreSQLCache.testSchemaAndTableWithSchemaCached] ---------------- Testing if a new tableName and a schemaName are in a cache with cached schemaName
[PostgreSQLCache.testSchemaAndTableWithSchemaCached] ---------  OK  - SchemaName was found in the cache but not TableName.
[PostgreSQLCache.testSchemaAndTableInEmptyCache] -------------------- Testing if a new tableName and new schemaName are in an empty cache
[PostgreSQLCache.testSchemaAndTableInEmptyCache] -------------  OK  - TableName and SchemaName weren't found in the empty Cache.
[PostgreSQLCache.testIfPersistDuplicateTableNames] ------------------ Persisting a tableName and schema into a cache with both values already cached.
[PostgreSQLCache.testIfPersistDuplicateTableNames] -----------  OK  - Values weren't duplicated.
[PostgreSQLCache.testSchemaAndTableWithBothValuesCached] ------------ Testing if a tableName and a schemaName are in a cache with both values cached
[PostgreSQLCache.testSchemaAndTableWithBothValuesCached] -----  OK  - TableName and SchemaName were found in the Cache.
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.telefonica.iot.cygnus.backends.kafka.KafkaBackendImplTest
[KafkaBackendImplTest.send] ----------------------------------------- The backend sends a message to Kafka
[KafkaBackendImpl.send] --------------------------------------  OK  - Added to be sent
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.063 sec
Running com.telefonica.iot.cygnus.interceptors.CygnusGroupingRuleTest
[GroupingRule.isValid] ---------------------------------------------- fiware-servicePath field in a grouping rule must start with '/'
[GroupingRule.isValid] ---------------------------------------  OK  - The fiware-servicePath field in the rule '{"regex":"room1","fiware_service_path":"\/rooms","destination":"all_rooms","fields":["entityId"]}' starts with '/'
[GroupingRule.getXXXX] ---------------------------------------------- Rule's attributes are not null
[GroupingRule.getPattern] ------------------------------------  OK  - Rule’s pattern is not null
[GroupingRule.getId] -----------------------------------------  OK  - Rule’s id is upper than 0
[GroupingRule.getFields] -------------------------------------  OK  - Rule’s fields are not null
[GroupingRule.getRegex] --------------------------------------  OK  - Rule’s regex is not null
[GroupingRule.getDestination] --------------------------------  OK  - Rule’s destination is not null
[GroupingRule.getNewFiwareServicePath] -----------------------  OK  - Rule’s newFiwareServicePath is not null
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.telefonica.iot.cygnus.interceptors.CygnusGroupingRulesTest
[CygnusGroupingRules.constructor] ----------------------------------- Unexistent/unreadable grouping rules file is detected
[CygnusGroupingRules.constructor] ----------------------------  OK  - An unexistent/unreadble file '/a/b/c/unexistent.txt' has been detected
[CygnusGroupingRules.addRule] --------------------------------------- Adding a new rule works
[CygnusGroupingRules.addRule] --------------------------------  OK  - New rule has been added
[CygnusGroupingRules.updateRule] ------------------------------------ Updating an existent rule works
[CygnusGroupingRules.updateRule] -----------------------------  OK  - Rule with ID 1 has been updated
[CygnusGroupingRules.constructor] ----------------------------------- Missing or empty fields in all the grouping rules are detected
[CygnusGroupingRules.constructor] ----------------------------  OK  - Missing or empty fields in all the grouping rules '{"grouping_rules":[{"fields":[],"destination":""}]}' have been detected
[CygnusGroupingRules.getMatchingRule] ------------------------------- Service path, entity ID and entity type based matching rules match
[CygnusGroupingRules.getMatchingRule] ------------------------  OK  - Matching rules '"grouping_rules": [{"regex":"\/someServicePathsomeIdsomeType","fiware_service_path":"\/new_svc_path","destination":"new_dest","id":1,"fields":["servicePath","entityId","entityType"]}]' match service path '/someServicePath', entity ID 'someId' and entity type 'someType'
[CygnusGroupingRules.deleteRule] ------------------------------------ Deleting an existent rule works
[CygnusGroupingRules.deleteRule] -----------------------------  OK  - Rule with ID 1 has been deleted
[CygnusGroupingRules.getMatchingRule] ------------------------------- Service path and entity ID based matching rules match
[CygnusGroupingRules.getMatchingRule] ------------------------  OK  - Matching rules '"grouping_rules": [{"regex":"\/someServicePathsomeId","fiware_service_path":"\/new_svc_path","destination":"new_dest","id":1,"fields":["servicePath","entityId"]}]' match service path '/someServicePath' and entity ID 'someId'
[CygnusGroupingRules.constructor] ----------------------------------- Syntax errors in the grouping rules are detected
[CygnusGroupingRules.constructor] ----------------------------  OK  - Syntax errors in the grouping rules '{"grouping_rules":[}' have been detected
[CygnusGroupingRules.addRule] --------------------------------------- When a rule is added, the index increases by 1
[CygnusGroupingRules.addRule] --------------------------------  OK  - Last index before adding a rule was '1', now it is '2'
[CygnusGroupingRules.getMatchingRule] ------------------------------- Service path based matching rules match
[CygnusGroupingRules.getMatchingRule] ------------------------  OK  - Matching rules '"grouping_rules": [{"regex":"\/someServicePath","fiware_service_path":"\/new_svc_path","destination":"new_dest","id":1,"fields":["servicePath"]}]' match service path '/someServicePath'
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running com.telefonica.iot.cygnus.utils.CommonUtilsTest
[CommonUtils.getTimeInstant] ---------------------------------------- When getting a time instant, it is properly obtained when passing a valid ISO 8601 timestamp with microseconds
[CommonUtils.getTimeInstant] ---------------------------------  OK  - Time instant obtained for '[{"name":"TimeInstant","type":"SQL timestamp","value":"2017-01-01T00:00:01.123456Z"}]' is '1483228801123'
[CommonUtils.getTimeInstant] ---------------------------------------- When getting a time instant, it is properly obtained when passing a valid SQL timestamp with miliseconds
[CommonUtils.getTimeInstant] ---------------------------------  OK  - Time instant obtained for '[{"name":"TimeInstant","type":"SQL timestamp","value":"2017-01-01 00:00:01.123"}]' is '1483228801123'
[CommonUtils.getTimeInstant] ---------------------------------------- When getting a time instant, it is properly obtained when passing a valid ISO 8601 timestamp without miliseconds
[CommonUtils.getTimeInstant] ---------------------------------  OK  - Time instant obtained for '[{"name":"TimeInstant","type":"SQL timestamp","value":"2017-01-01T00:00:01Z"}]' is '1483228801000'
[CommonUtils.getTimeInstant] ---------------------------------------- When getting a time instant, it is properly obtained when passing a valid ISO 8601 timestamp with miliseconds
[CommonUtils.getTimeInstant] ---------------------------------  OK  - Time instant obtained for '[{"name":"TimeInstant","type":"SQL timestamp","value":"2017-01-01T00:00:01.123Z"}]' is '1483228801123'
[CommonUtils.getTimeInstant] ---------------------------------------- When getting a time instant, it is properly obtained when passing a valid SQL timestamp without miliseconds
[CommonUtils.getTimeInstant] ---------------------------------  OK  - Time instant obtained for '[{"name":"TimeInstant","type":"SQL timestamp","value":"2017-01-01 00:00:01"}]' is '1483228801000'
[CommonUtils.getTimeInstant] ---------------------------------------- When getting a time instant, it is properly obtained when passing a valid SQL timestamp with microseconds
[CommonUtils.getTimeInstant] ---------------------------------  OK  - Time instant obtained for '[{"name":"TimeInstant","type":"SQL timestamp","value":"2017-01-01 00:00:01.123456"}]' is '1483228801123'
[CommonUtils.getMilliseconds] --------------------------------------- Milliseconds are obtained when passing a valid timestamp
[CommonUtils.getMilliseconds] --------------------------------  OK  - Milliseconds obtained
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.057 sec
Running com.telefonica.iot.cygnus.utils.auth.keystone.KeyStoneUtilsTest
Testing KeyStoneBackendImpl.serviceLevelToken
------ Setting token TTL to 1 minute 
------ Getign token for XXXXXXXXXXXX
CygnusPersistenceError (IOException). Request error (XXXXXX). 
Testing KeyStoneBackendImpl.serviceLevelToken
------ Setting token TTL to 1 minute 
------ Getign token for XXXXXXXXXXXX
CygnusPersistenceError (IOException). Request error (XXXXXX). 
Tests run: 3, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 0.116 sec <<< FAILURE!
testServiceLevelTokenOK(com.telefonica.iot.cygnus.utils.auth.keystone.KeyStoneUtilsTest)  Time elapsed: 0.107 sec  <<< FAILURE!
java.lang.AssertionError: CygnusPersistenceError (IOException). Request error (XXXXXX). 
	at org.junit.Assert.fail(Assert.java:88)
	at com.telefonica.iot.cygnus.utils.auth.keystone.KeyStoneUtilsTest.testServiceLevelTokenOK(KeyStoneUtilsTest.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testGetSessionToken(com.telefonica.iot.cygnus.utils.auth.keystone.KeyStoneUtilsTest)  Time elapsed: 0.004 sec  <<< FAILURE!
java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at com.telefonica.iot.cygnus.utils.auth.keystone.KeyStoneUtilsTest.testGetSessionToken(KeyStoneUtilsTest.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.telefonica.iot.cygnus.channelselectors.RoundRobinChannelSelectorTest
Testing RoundRobinChannelSelector.getRequiredChannels
Testing RoundRobinChannelSelector.configure
Testing RoundRobinChannelSelector.getOptionalChannels
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.telefonica.iot.cygnus.management.MetricsHandlersTest
[MetricsHandlers.mergeMetrics] ------------------------------ - Metrics from two sources are merged
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.105 sec
Running com.telefonica.iot.cygnus.management.ManagementInterfaceTest
[ManagementInterface.handleDeleteOneInstanceConfParam] ------ - DELETE method deletes one instance configuration parameter
[ManagementInterface.handleDeleteOneInstanceConfParam] ------ -  OK  - Instance configuration parameter deleted
[ManagementInterface.handleGetInstanceConfParams] ----------- - GET method gets all instance configuration parameters
[ManagementInterface.handleGetInstanceConfParams] ----------- -  OK  - All instance configuration parameters obtained
[ManagementInterface.handlePostOneAgentConfParam] ----------- - POST method post a single parameter in an agent configuration file
[ManagementInterface.handlePostOneAgentConfParam] ----------- -  OK  - Agent configuration parameter posted
[ManagementInterface.handlePostOneInstanceConfParam] -------- - POST method posts one instance configuration parameter
[ManagementInterface.handlePostOneInstanceConfParam] -------- -  OK  - Instance configuration parameter posted
[ManagementInterface.handleGetAdminLog] --------------------- - GET method gets Cygnus logging level
[ManagementInterface.handleGetAdminLog] --------------------- -  OK  - Cygnus logging level obtained
[ManagementInterface.handlePutOneAgentConfParam] ------------ - PUT method puts a single parameter in an agent configuration file
[ManagementInterface.handlePutOneAgentConfParam] ------------ -  OK  - Agent configuration parameter put
[ManagementInterface.handleDeleteOneAgentConfParam] --------- - DELETE method deletes a single parameter in an agent configuration file
[ManagementInterface.handleDeleteOneAgentConfParam] --------- -  OK  - Agent configuration parameter deleted
[ManagementInterface.handleAgentConfFileName] --------------- - Agent configuration doesn't start with 'agent_'
[ManagementInterface.handleAgentConfFileName] --------------- -  OK  - An agent configuration file not starting with 'agent_' has been detected
[ManagementInterface.handleGetAgentConfParams] -------------- - GET method gets all agent configuration parameters
[ManagementInterface.handleGetAgentConfParams] -------------- -  OK  - All agent configuration parameters obtained
[ManagementInterface.handleGetOneAgentConfParam] ------------ - GET method gets one agent configuration parameter
[ManagementInterface.handleGetOneAgentConfParam] ------------ -  OK  - Agent configuration parameter obtained
[ManagementInterface.handlePutAdminLog] --------------------- - PUT method puts an invalid logging level in a running Cygnus
[ManagementInterface.handlePutAdminLog] --------------------- -  OK  - Invalid Cygnus logging level detected
[ManagementInterface.handlePutAdminLog] --------------------- - PUT method puts a valid logging level in a running Cygnus
[ManagementInterface.handlePutAdminLog] --------------------- -  OK  - Cygnus logging level put
[ManagementInterface.handle] -------------------------------- - Testing ManagementInterface.handle
[ManagementInterface.handleGetOneInstanceConfParam] --------- - GET method gets one instance configuration parameter
[ManagementInterface.handleGetOneInstanceConfParam] --------- -  OK  - Instance configuration parameter obtained
[ManagementInterface.handlePutOneInstanceConfParam] --------- - PUT method puts one instance configuration parameter
[ManagementInterface.handlePutOneInstanceConfParam] --------- -  OK  - Instance configuration parameter put
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.163 sec
Running com.telefonica.iot.cygnus.metrics.CygnusMetricsTest
[CygnusMetrics.add] ----------------------------------------- - Values are added to the metrics
[CygnusMetrics.add] ----------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.add] ----------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.add] ----------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.add] ----------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.add] ----------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.add] ----------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.add] ----------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.add] ----------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.add] ----------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- - Two metrics are merged
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.merge] --------------------------------------- -  OK  - Metrics merge was correct
[CygnusMetrics.toJsonString] -------------------------------- - Metrics are printed as Json string
[CygnusMetrics.toJsonString] -------------------------------- - FAIL - Metrics were not successfully printed as Json string
Tests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec <<< FAILURE!
testToJsonString(com.telefonica.iot.cygnus.metrics.CygnusMetricsTest)  Time elapsed: 0.005 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...ice2":{"subservs":{"[subservice22":{"incomingTransactions":1500,"incomingTransactionRequestSize":10000,"incomingTransactionResponseSize":1000,"incomingTransactionErrors":10,"serviceTime":0.33413333333333334,"outgoingTransactions":1500,"outgoingTransactionRequestSize":230000,"outgoingTransactionResponseSize":100,"outgoingTransactionErrors":1},"subservice21":{"incomingTransactions":8000,"incomingTransactionRequestSize":340000,"incomingTransactionResponseSize":3700,"incomingTransactionErrors":90,"serviceTime":0.047788888888888895,"outgoingTransactions":9000,"outgoingTransactionRequestSize":234000,"outgoingTransactionResponseSize":1200,"outgoingTransactionErrors":10}},"sum":{"incomingTransactions":9500,"incomingTransactionRequestSize":350000,"incomingTransactionResponseSize":4700,"incomingTransactionErrors":100,"serviceTime":0.08869523809523809,"outgoingTransactions":10500,"outgoingTransactionRequestSize":464000,"outgoingTransactionResponseSize":1300,"outgoingTransactionErrors":11}},"service1":{"subservs":{"subservice11":{"incomingTransactions":1000,"incomingTransactionRequestSize":12000,"incomingTransactionResponseSize":500,"incomingTransactionErrors":5,"serviceTime":0.4003,"outgoingTransactions":1000,"outgoingTransactionRequestSize":25000,"outgoingTransactionResponseSize":0,"outgoingTransactionErrors":0}},"sum":{"incomingTransactions":1000,"incomingTransactionRequestSize":12000,"incomingTransactionResponseSize":500,"incomingTransactionErrors":5,"serviceTime":0.4003,"outgoingTransactions":1000,"outgoingTransactionRequestSize":25000,"outgoingTransactionResponseSize":0,"outgoingTransactionErrors":0}}},"sum": {"subservs":{"subservice11":{"incomingTransactions":1000,"incomingTransactionRequestSize":12000,"incomingTransactionResponseSize":500,"incomingTransactionErrors":5,"serviceTime":0.4003,"outgoingTransactions":1000,"outgoingTransactionRequestSize":25000,"outgoingTransactionResponseSize":0,"outgoingTransactionErrors":0},"subservice22":{"incomingTransactions":1500,"incomingTransactionRequestSize":10000,"incomingTransactionResponseSize":1000,"incomingTransactionErrors":10,"serviceTime":0.33413333333333334,"outgoingTransactions":1500,"outgoingTransactionRequestSize":230000,"outgoingTransactionResponseSize":100,"outgoingTransactionErrors":1},"s]ubservice21":{"incom...> but was:<...ice2":{"subservs":{"[ubservice22":{"incomingTransactions":1500,"incomingTransactionRequestSize":10000,"incomingTransactionResponseSize":1000,"incomingTransactionErrors":10,"serviceTime":0.33413333333333334,"outgoingTransactions":1500,"outgoingTransactionRequestSize":230000,"outgoingTransactionResponseSize":100,"outgoingTransactionErrors":1},"ubservice21":{"incomingTransactions":8000,"incomingTransactionRequestSize":340000,"incomingTransactionResponseSize":3700,"incomingTransactionErrors":90,"serviceTime":0.047788888888888895,"outgoingTransactions":9000,"outgoingTransactionRequestSize":234000,"outgoingTransactionResponseSize":1200,"outgoingTransactionErrors":10}},"sum":{"incomingTransactions":9500,"incomingTransactionRequestSize":350000,"incomingTransactionResponseSize":4700,"incomingTransactionErrors":100,"serviceTime":0.08869523809523809,"outgoingTransactions":10500,"outgoingTransactionRequestSize":464000,"outgoingTransactionResponseSize":1300,"outgoingTransactionErrors":11}},"service1":{"subservs":{"ubservice11":{"incomingTransactions":1000,"incomingTransactionRequestSize":12000,"incomingTransactionResponseSize":500,"incomingTransactionErrors":5,"serviceTime":0.4003,"outgoingTransactions":1000,"outgoingTransactionRequestSize":25000,"outgoingTransactionResponseSize":0,"outgoingTransactionErrors":0}},"sum":{"incomingTransactions":1000,"incomingTransactionRequestSize":12000,"incomingTransactionResponseSize":500,"incomingTransactionErrors":5,"serviceTime":0.4003,"outgoingTransactions":1000,"outgoingTransactionRequestSize":25000,"outgoingTransactionResponseSize":0,"outgoingTransactionErrors":0}}},"sum": {"subservs":{"ubservice11":{"incomingTransactions":1000,"incomingTransactionRequestSize":12000,"incomingTransactionResponseSize":500,"incomingTransactionErrors":5,"serviceTime":0.4003,"outgoingTransactions":1000,"outgoingTransactionRequestSize":25000,"outgoingTransactionResponseSize":0,"outgoingTransactionErrors":0},"ubservice22":{"incomingTransactions":1500,"incomingTransactionRequestSize":10000,"incomingTransactionResponseSize":1000,"incomingTransactionErrors":10,"serviceTime":0.33413333333333334,"outgoingTransactions":1500,"outgoingTransactionRequestSize":230000,"outgoingTransactionResponseSize":100,"outgoingTransactionErrors":1},"]ubservice21":{"incom...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.telefonica.iot.cygnus.metrics.CygnusMetricsTest.testToJsonString(CygnusMetricsTest.java:580)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.telefonica.iot.cygnus.handlers.CygnusHandlerTest
[CygnusHandler.setServiceMetrics] --------------------------- - Given metrics are set
[CygnusMetrics.setServiceMetrics] --------------------------- -  OK  - Metrics were set
[CygnusHandler.getServiceMetrics] --------------------------- - Not null metrics are retrieved
[CygnusMetrics.getServiceMetrics] --------------------------- -  OK  - Not null metrics were retrieved
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec

Results :

Failed tests:   testServiceLevelTokenOK(com.telefonica.iot.cygnus.utils.auth.keystone.KeyStoneUtilsTest): CygnusPersistenceError (IOException). Request error (XXXXXX). 
  testGetSessionToken(com.telefonica.iot.cygnus.utils.auth.keystone.KeyStoneUtilsTest)
  testToJsonString(com.telefonica.iot.cygnus.metrics.CygnusMetricsTest): expected:<...ice2":{"subservs":{"[subservice22":{"incomingTransactions":1500,"incomingTransactionRequestSize":10000,"incomingTransactionResponseSize":1000,"incomingTransactionErrors":10,"serviceTime":0.33413333333333334,"outgoingTransactions":1500,"outgoingTransactionRequestSize":230000,"outgoingTransactionResponseSize":100,"outgoingTransactionErrors":1},"subservice21":{"incomingTransactions":8000,"incomingTransactionRequestSize":340000,"incomingTransactionResponseSize":3700,"incomingTransactionErrors":90,"serviceTime":0.047788888888888895,"outgoingTransactions":9000,"outgoingTransactionRequestSize":234000,"outgoingTransactionResponseSize":1200,"outgoingTransactionErrors":10}},"sum":{"incomingTransactions":9500,"incomingTransactionRequestSize":350000,"incomingTransactionResponseSize":4700,"incomingTransactionErrors":100,"serviceTime":0.08869523809523809,"outgoingTransactions":10500,"outgoingTransactionRequestSize":464000,"outgoingTransactionResponseSize":1300,"outgoingTransactionErrors":11}},"service1":{"subservs":{"subservice11":{"incomingTransactions":1000,"incomingTransactionRequestSize":12000,"incomingTransactionResponseSize":500,"incomingTransactionErrors":5,"serviceTime":0.4003,"outgoingTransactions":1000,"outgoingTransactionRequestSize":25000,"outgoingTransactionResponseSize":0,"outgoingTransactionErrors":0}},"sum":{"incomingTransactions":1000,"incomingTransactionRequestSize":12000,"incomingTransactionResponseSize":500,"incomingTransactionErrors":5,"serviceTime":0.4003,"outgoingTransactions":1000,"outgoingTransactionRequestSize":25000,"outgoingTransactionResponseSize":0,"outgoingTransactionErrors":0}}},"sum": {"subservs":{"subservice11":{"incomingTransactions":1000,"incomingTransactionRequestSize":12000,"incomingTransactionResponseSize":500,"incomingTransactionErrors":5,"serviceTime":0.4003,"outgoingTransactions":1000,"outgoingTransactionRequestSize":25000,"outgoingTransactionResponseSize":0,"outgoingTransactionErrors":0},"subservice22":{"incomingTransactions":1500,"incomingTransactionRequestSize":10000,"incomingTransactionResponseSize":1000,"incomingTransactionErrors":10,"serviceTime":0.33413333333333334,"outgoingTransactions":1500,"outgoingTransactionRequestSize":230000,"outgoingTransactionResponseSize":100,"outgoingTransactionErrors":1},"s]ubservice21":{"incom...> but was:<...ice2":{"subservs":{"[ubservice22":{"incomingTransactions":1500,"incomingTransactionRequestSize":10000,"incomingTransactionResponseSize":1000,"incomingTransactionErrors":10,"serviceTime":0.33413333333333334,"outgoingTransactions":1500,"outgoingTransactionRequestSize":230000,"outgoingTransactionResponseSize":100,"outgoingTransactionErrors":1},"ubservice21":{"incomingTransactions":8000,"incomingTransactionRequestSize":340000,"incomingTransactionResponseSize":3700,"incomingTransactionErrors":90,"serviceTime":0.047788888888888895,"outgoingTransactions":9000,"outgoingTransactionRequestSize":234000,"outgoingTransactionResponseSize":1200,"outgoingTransactionErrors":10}},"sum":{"incomingTransactions":9500,"incomingTransactionRequestSize":350000,"incomingTransactionResponseSize":4700,"incomingTransactionErrors":100,"serviceTime":0.08869523809523809,"outgoingTransactions":10500,"outgoingTransactionRequestSize":464000,"outgoingTransactionResponseSize":1300,"outgoingTransactionErrors":11}},"service1":{"subservs":{"ubservice11":{"incomingTransactions":1000,"incomingTransactionRequestSize":12000,"incomingTransactionResponseSize":500,"incomingTransactionErrors":5,"serviceTime":0.4003,"outgoingTransactions":1000,"outgoingTransactionRequestSize":25000,"outgoingTransactionResponseSize":0,"outgoingTransactionErrors":0}},"sum":{"incomingTransactions":1000,"incomingTransactionRequestSize":12000,"incomingTransactionResponseSize":500,"incomingTransactionErrors":5,"serviceTime":0.4003,"outgoingTransactions":1000,"outgoingTransactionRequestSize":25000,"outgoingTransactionResponseSize":0,"outgoingTransactionErrors":0}}},"sum": {"subservs":{"ubservice11":{"incomingTransactions":1000,"incomingTransactionRequestSize":12000,"incomingTransactionResponseSize":500,"incomingTransactionErrors":5,"serviceTime":0.4003,"outgoingTransactions":1000,"outgoingTransactionRequestSize":25000,"outgoingTransactionResponseSize":0,"outgoingTransactionErrors":0},"ubservice22":{"incomingTransactions":1500,"incomingTransactionRequestSize":10000,"incomingTransactionResponseSize":1000,"incomingTransactionErrors":10,"serviceTime":0.33413333333333334,"outgoingTransactions":1500,"outgoingTransactionRequestSize":230000,"outgoingTransactionResponseSize":100,"outgoingTransactionErrors":1},"]ubservice21":{"incom...>

Tests run: 105, Failures: 3, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 4.755 s
[INFO] Finished at: 2018-04-30T16:26:19+02:00
[INFO] Final Memory: 24M/946M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test (default-test) on project cygnus-common: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/telefonicaid/fiware-cygnus/373056628/cygnus-common/target/surefire-reports for the individual test results.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
