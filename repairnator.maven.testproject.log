[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for fr.inria.gforge.spoon:spoon-core:jar:6.3.0-SNAPSHOT
[WARNING] 'build.plugins.plugin.version' for org.pitest:pitest-maven is missing. @ line 479, column 15
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] Inspecting build with total of 1 modules...
[INFO] Installing Nexus Staging features:
[INFO]   ... total of 1 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Spoon Core 6.3.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @ spoon-core ---
[INFO] Skipping Rule Enforcement.
[INFO] 
[INFO] --- jacoco-maven-plugin:0.7.9:prepare-agent (default) @ spoon-core ---
[INFO] argLine set to -javaagent:/root/./workspace/INRIA/spoon/361353762/.m2/org/jacoco/org.jacoco.agent/0.7.9/org.jacoco.agent-0.7.9-runtime.jar=destfile=/root/workspace/INRIA/spoon/361353762/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ spoon-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 3 resources
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ spoon-core ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ spoon-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 162 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ spoon-core ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ spoon-core ---
Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.pom
3/4 KB   
4/4 KB   
         
Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.pom (4 KB at 9.6 KB/sec)
Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.20.1/surefire-providers-2.20.1.pom
3/3 KB   
         
Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.20.1/surefire-providers-2.20.1.pom (3 KB at 123.0 KB/sec)
Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.jar
3/81 KB   
5/81 KB   
8/81 KB   
11/81 KB   
13/81 KB   
16/81 KB   
19/81 KB   
21/81 KB   
24/81 KB   
27/81 KB   
29/81 KB   
32/81 KB   
36/81 KB   
40/81 KB   
44/81 KB   
48/81 KB   
52/81 KB   
56/81 KB   
60/81 KB   
64/81 KB   
68/81 KB   
72/81 KB   
76/81 KB   
80/81 KB   
81/81 KB   
           
Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.jar (81 KB at 1409.6 KB/sec)
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running spoon.test.imports.ImportTest
[ERROR] Tests run: 43, Failures: 0, Errors: 31, Skipped: 0, Time elapsed: 7.035 s <<< FAILURE! - in spoon.test.imports.ImportTest
[ERROR] testJavaLangIsConsideredAsImported(spoon.test.imports.ImportTest)  Time elapsed: 1.468 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testJavaLangIsConsideredAsImported(ImportTest.java:976)

[ERROR] testAccessType(spoon.test.imports.ImportTest)  Time elapsed: 0.261 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testAccessType(ImportTest.java:462)

[ERROR] testStaticMethodWithDifferentClassSameNameJava3NoCollision(spoon.test.imports.ImportTest)  Time elapsed: 0.069 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testStaticMethodWithDifferentClassSameNameJava3NoCollision(ImportTest.java:1089)

[ERROR] testNewInnerClassDefinesInItsClassAndSuperClass(spoon.test.imports.ImportTest)  Time elapsed: 0.067 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testNewInnerClassDefinesInItsClassAndSuperClass(ImportTest.java:192)

[ERROR] testStaticMethodWithDifferentClassSameNameJava7NoCollision(spoon.test.imports.ImportTest)  Time elapsed: 0.101 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testStaticMethodWithDifferentClassSameNameJava7NoCollision(ImportTest.java:1059)

[ERROR] testDeepNestedStaticPathWithTypedParameter(spoon.test.imports.ImportTest)  Time elapsed: 0.079 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testDeepNestedStaticPathWithTypedParameter(ImportTest.java:655)

[ERROR] testImportOfAnInnerClassInASuperClassPackageFullQualified(spoon.test.imports.ImportTest)  Time elapsed: 0.07 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testImportOfAnInnerClassInASuperClassPackageFullQualified(ImportTest.java:123)

[ERROR] testImportOfAnInnerClassInASuperClassPackageAutoImport(spoon.test.imports.ImportTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testImportOfAnInnerClassInASuperClassPackageAutoImport(ImportTest.java:93)

[ERROR] testNestedStaticPathWithTypedParameter(spoon.test.imports.ImportTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testNestedStaticPathWithTypedParameter(ImportTest.java:619)

[ERROR] testNestedAccessPathWithTypedParameter(spoon.test.imports.ImportTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testNestedAccessPathWithTypedParameter(ImportTest.java:572)

[ERROR] testImportStaticAndFieldAccessWithImport(spoon.test.imports.ImportTest)  Time elapsed: 0.037 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testImportStaticAndFieldAccessWithImport(ImportTest.java:419)

[ERROR] testmportInCu(spoon.test.imports.ImportTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testmportInCu(ImportTest.java:1004)

[ERROR] testAnotherMissingImport(spoon.test.imports.ImportTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testAnotherMissingImport(ImportTest.java:234)

[ERROR] testNestedAccessPathWithTypedParameterWithImports(spoon.test.imports.ImportTest)  Time elapsed: 0.084 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testNestedAccessPathWithTypedParameterWithImports(ImportTest.java:595)

[ERROR] testSortImportPutStaticImportAfterTypeImport(spoon.test.imports.ImportTest)  Time elapsed: 0.063 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testSortImportPutStaticImportAfterTypeImport(ImportTest.java:1186)

[ERROR] testCanAccess(spoon.test.imports.ImportTest)  Time elapsed: 0.101 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testCanAccess(ImportTest.java:548)

[ERROR] testSpoonWithImports(spoon.test.imports.ImportTest)  Time elapsed: 0.132 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testSpoonWithImports(ImportTest.java:259)

[ERROR] testSortingOfImports(spoon.test.imports.ImportTest)  Time elapsed: 0.402 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testSortingOfImports(ImportTest.java:1144)

[ERROR] testDeepNestedStaticPathWithTypedParameterWithImports(spoon.test.imports.ImportTest)  Time elapsed: 0.064 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testDeepNestedStaticPathWithTypedParameterWithImports(ImportTest.java:672)

[ERROR] testAccessToNestedClass(spoon.test.imports.ImportTest)  Time elapsed: 0.106 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testAccessToNestedClass(ImportTest.java:446)

[ERROR] testJavaLangIsConsideredAsImportedButNotForSubPackages(spoon.test.imports.ImportTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testJavaLangIsConsideredAsImportedButNotForSubPackages(ImportTest.java:988)

[ERROR] testWithInnerEnumDoesNotImportStaticInnerMethods(spoon.test.imports.ImportTest)  Time elapsed: 0.063 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testWithInnerEnumDoesNotImportStaticInnerMethods(ImportTest.java:751)

[ERROR] testNotImportExecutableType(spoon.test.imports.ImportTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.getFactory(ImportTest.java:690)
	at spoon.test.imports.ImportTest.testNotImportExecutableType(ImportTest.java:364)

[ERROR] testImportOfAnInnerClassInAClassPackage(spoon.test.imports.ImportTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testImportOfAnInnerClassInAClassPackage(ImportTest.java:174)

[ERROR] testImportOfAnInnerClassInASuperClassAvailableInLibrary(spoon.test.imports.ImportTest)  Time elapsed: 0.094 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testImportOfAnInnerClassInASuperClassAvailableInLibrary(ImportTest.java:153)

[ERROR] testImportStarredPackageWithNonVisibleClass(spoon.test.imports.ImportTest)  Time elapsed: 0.06 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testImportStarredPackageWithNonVisibleClass(ImportTest.java:1236)

[ERROR] testImportStaticAndFieldAccess(spoon.test.imports.ImportTest)  Time elapsed: 0.09 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testImportStaticAndFieldAccess(ImportTest.java:404)

[ERROR] testImportOfInvocationOfPrivateClass(spoon.test.imports.ImportTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.getFactory(ImportTest.java:690)
	at spoon.test.imports.ImportTest.testImportOfInvocationOfPrivateClass(ImportTest.java:349)

[ERROR] testStaticMethodWithDifferentClassSameNameCollision(spoon.test.imports.ImportTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testStaticMethodWithDifferentClassSameNameCollision(ImportTest.java:1119)

[ERROR] testNestedStaticPathWithTypedParameterWithImports(spoon.test.imports.ImportTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testNestedStaticPathWithTypedParameterWithImports(ImportTest.java:637)

[ERROR] testStaticImportForInvocationInNoClasspath(spoon.test.imports.ImportTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportTest.testStaticImportForInvocationInNoClasspath(ImportTest.java:286)

[INFO] Running spoon.test.imports.ImportScannerTest
[ERROR] Tests run: 5, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.21 s <<< FAILURE! - in spoon.test.imports.ImportScannerTest
[ERROR] testComputeImportsInClass(spoon.test.imports.ImportScannerTest)  Time elapsed: 0.011 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportScannerTest.testComputeImportsInClass(ImportScannerTest.java:53)

[ERROR] testComputeMinimalImportsInClass(spoon.test.imports.ImportScannerTest)  Time elapsed: 0.06 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportScannerTest.testComputeMinimalImportsInClass(ImportScannerTest.java:37)

[ERROR] testMultiCatchImport(spoon.test.imports.ImportScannerTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportScannerTest.testMultiCatchImport(ImportScannerTest.java:94)

[ERROR] testComputeImportsInClassWithSameName(spoon.test.imports.ImportScannerTest)  Time elapsed: 0.076 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportScannerTest.testComputeImportsInClassWithSameName(ImportScannerTest.java:72)

[INFO] Running spoon.test.imports.ImportAndExtendWithPackageNameTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.038 s <<< FAILURE! - in spoon.test.imports.ImportAndExtendWithPackageNameTest
[ERROR] testBuildModel(spoon.test.imports.ImportAndExtendWithPackageNameTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.imports.ImportAndExtendWithPackageNameTest.testBuildModel(ImportAndExtendWithPackageNameTest.java:21)

[INFO] Running spoon.test.api.NoClasspathTest
[ERROR] Tests run: 5, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.202 s <<< FAILURE! - in spoon.test.api.NoClasspathTest
[ERROR] testInheritanceInNoClassPathWithClasses(spoon.test.api.NoClasspathTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.NoClasspathTest.testInheritanceInNoClassPathWithClasses(NoClasspathTest.java:167)

[ERROR] test(spoon.test.api.NoClasspathTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.NoClasspathTest.test(NoClasspathTest.java:42)

[ERROR] testIssue1747(spoon.test.api.NoClasspathTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.NoClasspathTest.testIssue1747(NoClasspathTest.java:153)

[INFO] Running spoon.test.api.FileSystemFolderTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.api.FileSystemFolderTest
[INFO] Running spoon.test.api.MetamodelTest
[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 2.129 s <<< FAILURE! - in spoon.test.api.MetamodelTest
[ERROR] testRoleOnField(spoon.test.api.MetamodelTest)  Time elapsed: 1.64 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.MetamodelTest.testRoleOnField(MetamodelTest.java:89)

[ERROR] testGetterSetterFroRole(spoon.test.api.MetamodelTest)  Time elapsed: 0.311 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.MetamodelTest.testGetterSetterFroRole(MetamodelTest.java:62)

[ERROR] testGetAllMetamodelInterfacess(spoon.test.api.MetamodelTest)  Time elapsed: 0.175 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.MetamodelTest.testGetAllMetamodelInterfacess(MetamodelTest.java:49)

[INFO] Running spoon.test.api.APITest
./target/nooutput_c750c8cd-19ab-48b5-9f53-8f3c1fbd5864
[ERROR] Tests run: 19, Failures: 0, Errors: 11, Skipped: 0, Time elapsed: 9.578 s <<< FAILURE! - in spoon.test.api.APITest
[ERROR] testOneLinerIntro(spoon.test.api.APITest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.api.APITest.testOneLinerIntro(APITest.java:422)

[ERROR] testPrintNotAllSourcesWithNames(spoon.test.api.APITest)  Time elapsed: 0.357 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.APITest.testPrintNotAllSourcesWithNames(APITest.java:242)

[ERROR] testDuplicateEntry(spoon.test.api.APITest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.APITest.testDuplicateEntry(APITest.java:117)

[ERROR] testPrintNotAllSourcesInCommandLine(spoon.test.api.APITest)  Time elapsed: 5.54 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.APITest.testPrintNotAllSourcesInCommandLine(APITest.java:256)

[ERROR] testOverrideOutputWriter(spoon.test.api.APITest)  Time elapsed: 0.063 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.APITest.testOverrideOutputWriter(APITest.java:99)

[ERROR] testDuplicateFolder(spoon.test.api.APITest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.APITest.testDuplicateFolder(APITest.java:134)

[ERROR] testOutputDestinationHandlerWithCUFactory(spoon.test.api.APITest)  Time elapsed: 0.003 s  <<< ERROR!
spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.api.APITest.testOutputDestinationHandlerWithCUFactory(APITest.java:527)

[ERROR] testPrintNotAllSourcesWithFilter(spoon.test.api.APITest)  Time elapsed: 0.183 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.APITest.testPrintNotAllSourcesWithFilter(APITest.java:223)

[ERROR] testSetterInNodes(spoon.test.api.APITest)  Time elapsed: 2.013 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.APITest.testSetterInNodes(APITest.java:399)

[ERROR] testDuplicateFilePlusFolder(spoon.test.api.APITest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.APITest.testDuplicateFilePlusFolder(APITest.java:148)

[ERROR] testBasicAPIUsage(spoon.test.api.APITest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.api.APITest.testBasicAPIUsage(APITest.java:68)

[INFO] Running spoon.test.exceptions.ExceptionTest
[ERROR] Tests run: 6, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.42 s <<< FAILURE! - in spoon.test.exceptions.ExceptionTest
[ERROR] testExceptionIfNotCompilable(spoon.test.exceptions.ExceptionTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.exceptions.ExceptionTest.testExceptionIfNotCompilable(ExceptionTest.java:33)

[ERROR] testUnionCatchExceptionInsideLambdaInNoClasspath(spoon.test.exceptions.ExceptionTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.exceptions.ExceptionTest.testUnionCatchExceptionInsideLambdaInNoClasspath(ExceptionTest.java:117)

[INFO] Running spoon.test.visitor.AssignmentsEqualsTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.03 s <<< FAILURE! - in spoon.test.visitor.AssignmentsEqualsTest
[ERROR] testEquals(spoon.test.visitor.AssignmentsEqualsTest)  Time elapsed: 0.03 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.visitor.AssignmentsEqualsTest.testEquals(AssignmentsEqualsTest.java:19)

[INFO] Running spoon.test.visitor.VisitorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.06 s - in spoon.test.visitor.VisitorTest
[INFO] Running spoon.test.module.TestModule
[WARNING] Tests run: 8, Failures: 0, Errors: 0, Skipped: 2, Time elapsed: 0.257 s - in spoon.test.module.TestModule
[INFO] Running spoon.test.prettyprinter.QualifiedThisRefTest
[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.12 s <<< FAILURE! - in spoon.test.prettyprinter.QualifiedThisRefTest
[ERROR] testCloneThisAccess(spoon.test.prettyprinter.QualifiedThisRefTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.QualifiedThisRefTest.setup(QualifiedThisRefTest.java:52)

[ERROR] testPrintCtFieldAccessWorkEvenWhenParentNotInitialized(spoon.test.prettyprinter.QualifiedThisRefTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.QualifiedThisRefTest.setup(QualifiedThisRefTest.java:52)

[ERROR] testQualifiedThisRef(spoon.test.prettyprinter.QualifiedThisRefTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.QualifiedThisRefTest.setup(QualifiedThisRefTest.java:52)

[INFO] Running spoon.test.prettyprinter.DefaultPrettyPrinterTest
[ERROR] Tests run: 11, Failures: 0, Errors: 10, Skipped: 0, Time elapsed: 0.742 s <<< FAILURE! - in spoon.test.prettyprinter.DefaultPrettyPrinterTest
[ERROR] testPrintAClassWithImports(spoon.test.prettyprinter.DefaultPrettyPrinterTest)  Time elapsed: 0.101 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.DefaultPrettyPrinterTest.testPrintAClassWithImports(DefaultPrettyPrinterTest.java:87)

[ERROR] superInvocationWithEnclosingInstance(spoon.test.prettyprinter.DefaultPrettyPrinterTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.DefaultPrettyPrinterTest.superInvocationWithEnclosingInstance(DefaultPrettyPrinterTest.java:72)

[ERROR] testPrintAMethodWithGeneric(spoon.test.prettyprinter.DefaultPrettyPrinterTest)  Time elapsed: 0.09 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.DefaultPrettyPrinterTest.testPrintAMethodWithGeneric(DefaultPrettyPrinterTest.java:145)

[ERROR] printerCanPrintInvocationWithoutException(spoon.test.prettyprinter.DefaultPrettyPrinterTest)  Time elapsed: 0.035 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.DefaultPrettyPrinterTest.printerCanPrintInvocationWithoutException(DefaultPrettyPrinterTest.java:49)

[ERROR] testTernaryParenthesesOnLocalVariable(spoon.test.prettyprinter.DefaultPrettyPrinterTest)  Time elapsed: 0.079 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        final int foo = (new Object() instanceof Object ? new Object().equals(null) : new Object().equals(new Object())) ? 0 : new Object().hashCode();;
    }
}
	at spoon.test.prettyprinter.DefaultPrettyPrinterTest.testTernaryParenthesesOnLocalVariable(DefaultPrettyPrinterTest.java:288)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.prettyprinter.DefaultPrettyPrinterTest.testTernaryParenthesesOnLocalVariable(DefaultPrettyPrinterTest.java:288)

[ERROR] testIssue1501(spoon.test.prettyprinter.DefaultPrettyPrinterTest)  Time elapsed: 0.091 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.DefaultPrettyPrinterTest.testIssue1501(DefaultPrettyPrinterTest.java:301)

[ERROR] printClassCreatedWithSpoon(spoon.test.prettyprinter.DefaultPrettyPrinterTest)  Time elapsed: 0.002 s  <<< ERROR!
spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.prettyprinter.DefaultPrettyPrinterTest.printClassCreatedWithSpoon(DefaultPrettyPrinterTest.java:257)

[ERROR] testPrintAMethodWithImports(spoon.test.prettyprinter.DefaultPrettyPrinterTest)  Time elapsed: 0.097 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.DefaultPrettyPrinterTest.testPrintAMethodWithImports(DefaultPrettyPrinterTest.java:118)

[ERROR] importsFromMultipleTypesSupported(spoon.test.prettyprinter.DefaultPrettyPrinterTest)  Time elapsed: 0.064 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.DefaultPrettyPrinterTest.importsFromMultipleTypesSupported(DefaultPrettyPrinterTest.java:271)

[ERROR] autoImportUsesFullyQualifiedNameWhenImportedNameAlreadyPresent(spoon.test.prettyprinter.DefaultPrettyPrinterTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.DefaultPrettyPrinterTest.autoImportUsesFullyQualifiedNameWhenImportedNameAlreadyPresent(DefaultPrettyPrinterTest.java:171)

[INFO] Running spoon.test.prettyprinter.PrinterTest
[ERROR] Tests run: 9, Failures: 0, Errors: 7, Skipped: 0, Time elapsed: 0.876 s <<< FAILURE! - in spoon.test.prettyprinter.PrinterTest
[ERROR] testAutoimportModeDontImportUselessStatic(spoon.test.prettyprinter.PrinterTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.PrinterTest.testAutoimportModeDontImportUselessStatic(PrinterTest.java:104)

[ERROR] testPrintingOfOrphanFieldReference(spoon.test.prettyprinter.PrinterTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.PrinterTest.testPrintingOfOrphanFieldReference(PrinterTest.java:161)

[ERROR] testPrettyPrinter(spoon.test.prettyprinter.PrinterTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.PrinterTest.testPrettyPrinter(PrinterTest.java:46)

[ERROR] testPrinterTokenListener(spoon.test.prettyprinter.PrinterTest)  Time elapsed: 0.269 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.PrinterTest.testPrinterTokenListener(PrinterTest.java:247)

[ERROR] testRuleCanBeBuild(spoon.test.prettyprinter.PrinterTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.PrinterTest.testRuleCanBeBuild(PrinterTest.java:127)

[ERROR] testFQNModeWriteFQNConstructorInCtVisitor(spoon.test.prettyprinter.PrinterTest)  Time elapsed: 0.202 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.PrinterTest.testFQNModeWriteFQNConstructorInCtVisitor(PrinterTest.java:86)

[ERROR] testJDTBatchCompilerCanBeBuild(spoon.test.prettyprinter.PrinterTest)  Time elapsed: 0.109 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.PrinterTest.testJDTBatchCompilerCanBeBuild(PrinterTest.java:147)

[INFO] Running spoon.test.prettyprinter.PrintChangesTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.19 s <<< FAILURE! - in spoon.test.prettyprinter.PrintChangesTest
[ERROR] testPrintUnchaged(spoon.test.prettyprinter.PrintChangesTest)  Time elapsed: 0.104 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.PrintChangesTest.testPrintUnchaged(PrintChangesTest.java:24)

[ERROR] testPrintChanged(spoon.test.prettyprinter.PrintChangesTest)  Time elapsed: 0.08 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.PrintChangesTest.testPrintChanged(PrintChangesTest.java:46)

[INFO] Running spoon.test.prettyprinter.LinesTest
[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.219 s <<< FAILURE! - in spoon.test.prettyprinter.LinesTest
[ERROR] testPrettyPrinterWithLines(spoon.test.prettyprinter.LinesTest)  Time elapsed: 0.11 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.LinesTest.setup(LinesTest.java:36)

[ERROR] testIdenticalPrettyPrinter(spoon.test.prettyprinter.LinesTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.LinesTest.setup(LinesTest.java:36)

[ERROR] testCompileWhenUsingLinesArgument(spoon.test.prettyprinter.LinesTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.prettyprinter.LinesTest.setup(LinesTest.java:36)

[INFO] Running spoon.test.variable.AccessTest
[ERROR] Tests run: 8, Failures: 0, Errors: 7, Skipped: 0, Time elapsed: 0.9 s <<< FAILURE! - in spoon.test.variable.AccessTest
[ERROR] testRHS(spoon.test.variable.AccessTest)  Time elapsed: 0.079 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessTest.testRHS(AccessTest.java:165)

[ERROR] testFieldWriteDeclaredInTheSuperclass(spoon.test.variable.AccessTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessTest.testFieldWriteDeclaredInTheSuperclass(AccessTest.java:172)

[ERROR] testCanVisitVariableAccessAndSubClasses(spoon.test.variable.AccessTest)  Time elapsed: 0.118 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessTest.testCanVisitVariableAccessAndSubClasses(AccessTest.java:42)

[ERROR] testStackedAssignments(spoon.test.variable.AccessTest)  Time elapsed: 0.084 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessTest.testStackedAssignments(AccessTest.java:158)

[ERROR] testVariableAccessInNoClasspath(spoon.test.variable.AccessTest)  Time elapsed: 0.141 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessTest.testVariableAccessInNoClasspath(AccessTest.java:189)

[ERROR] testAccessToStringOnPostIncrement(spoon.test.variable.AccessTest)  Time elapsed: 0.063 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { Integer i = 1; (i++).toString(); int k = 0; k++;}};;
    }
}
	at spoon.test.variable.AccessTest.testAccessToStringOnPostIncrement(AccessTest.java:213)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.variable.AccessTest.testAccessToStringOnPostIncrement(AccessTest.java:213)

[ERROR] testCanVisitArrayAccessAndSubClasses(spoon.test.variable.AccessTest)  Time elapsed: 0.117 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessTest.testCanVisitArrayAccessAndSubClasses(AccessTest.java:118)

[INFO] Running spoon.test.variable.AccessFullyQualifiedFieldTest
[ERROR] Tests run: 9, Failures: 0, Errors: 9, Skipped: 0, Time elapsed: 0.49 s <<< FAILURE! - in spoon.test.variable.AccessFullyQualifiedFieldTest
[ERROR] testNoFQNWhenShadowedByLocalVariable(spoon.test.variable.AccessFullyQualifiedFieldTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessFullyQualifiedFieldTest.buildResourceAndReturnResult(AccessFullyQualifiedFieldTest.java:31)
	at spoon.test.variable.AccessFullyQualifiedFieldTest.testNoFQNWhenShadowedByLocalVariable(AccessFullyQualifiedFieldTest.java:60)

[ERROR] testNoFQNWhenUsedInLoop(spoon.test.variable.AccessFullyQualifiedFieldTest)  Time elapsed: 0.06 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessFullyQualifiedFieldTest.buildResourceAndReturnResult(AccessFullyQualifiedFieldTest.java:31)
	at spoon.test.variable.AccessFullyQualifiedFieldTest.testNoFQNWhenUsedInLoop(AccessFullyQualifiedFieldTest.java:97)

[ERROR] testNoFQNAndStaticImport(spoon.test.variable.AccessFullyQualifiedFieldTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessFullyQualifiedFieldTest.buildResourceAndReturnResult(AccessFullyQualifiedFieldTest.java:31)
	at spoon.test.variable.AccessFullyQualifiedFieldTest.testNoFQNAndStaticImport(AccessFullyQualifiedFieldTest.java:137)

[ERROR] testNoFQNWhenUsedInTryCatch(spoon.test.variable.AccessFullyQualifiedFieldTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessFullyQualifiedFieldTest.buildResourceAndReturnResult(AccessFullyQualifiedFieldTest.java:31)
	at spoon.test.variable.AccessFullyQualifiedFieldTest.testNoFQNWhenUsedInTryCatch(AccessFullyQualifiedFieldTest.java:86)

[ERROR] testStaticImportWithAutoImport(spoon.test.variable.AccessFullyQualifiedFieldTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessFullyQualifiedFieldTest.testStaticImportWithAutoImport(AccessFullyQualifiedFieldTest.java:112)

[ERROR] testNoFQNWhenShadowedByField(spoon.test.variable.AccessFullyQualifiedFieldTest)  Time elapsed: 0.067 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessFullyQualifiedFieldTest.buildResourceAndReturnResult(AccessFullyQualifiedFieldTest.java:31)
	at spoon.test.variable.AccessFullyQualifiedFieldTest.testNoFQNWhenShadowedByField(AccessFullyQualifiedFieldTest.java:48)

[ERROR] testPrivateStaticImportShouldNotBeImportedInSameClass(spoon.test.variable.AccessFullyQualifiedFieldTest)  Time elapsed: 0.062 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessFullyQualifiedFieldTest.buildResourceAndReturnResult(AccessFullyQualifiedFieldTest.java:31)
	at spoon.test.variable.AccessFullyQualifiedFieldTest.testPrivateStaticImportShouldNotBeImportedInSameClass(AccessFullyQualifiedFieldTest.java:148)

[ERROR] testNoFQNWhenUsedInInnerClassAndShadowedByLocalVariable(spoon.test.variable.AccessFullyQualifiedFieldTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessFullyQualifiedFieldTest.buildResourceAndReturnResult(AccessFullyQualifiedFieldTest.java:31)
	at spoon.test.variable.AccessFullyQualifiedFieldTest.testNoFQNWhenUsedInInnerClassAndShadowedByLocalVariable(AccessFullyQualifiedFieldTest.java:75)

[ERROR] testCheckAssignmentContracts(spoon.test.variable.AccessFullyQualifiedFieldTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.variable.AccessFullyQualifiedFieldTest.testCheckAssignmentContracts(AccessFullyQualifiedFieldTest.java:21)

[INFO] Running spoon.test.loop.LoopTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.091 s <<< FAILURE! - in spoon.test.loop.LoopTest
[ERROR] testAnnotationInForLoop(spoon.test.loop.LoopTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.loop.LoopTest.testAnnotationInForLoop(LoopTest.java:28)

[ERROR] testForeachShouldHaveAlwaysABlockInItsBody(spoon.test.loop.LoopTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.loop.LoopTest.testForeachShouldHaveAlwaysABlockInItsBody(LoopTest.java:40)

[INFO] Running spoon.test.intercession.insertBefore.InsertMethodsTest
[ERROR] Tests run: 9, Failures: 0, Errors: 9, Skipped: 0, Time elapsed: 0.461 s <<< FAILURE! - in spoon.test.intercession.insertBefore.InsertMethodsTest
[ERROR] testInsertBeforeWithoutBrace(spoon.test.intercession.insertBefore.InsertMethodsTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.intercession.insertBefore.InsertMethodsTest.setup(InsertMethodsTest.java:42)

[ERROR] insertBeforeAndUpdateParent(spoon.test.intercession.insertBefore.InsertMethodsTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.intercession.insertBefore.InsertMethodsTest.setup(InsertMethodsTest.java:42)

[ERROR] testInsertBeforeWithBrace(spoon.test.intercession.insertBefore.InsertMethodsTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.intercession.insertBefore.InsertMethodsTest.setup(InsertMethodsTest.java:42)

[ERROR] testInsertAfter(spoon.test.intercession.insertBefore.InsertMethodsTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.intercession.insertBefore.InsertMethodsTest.setup(InsertMethodsTest.java:42)

[ERROR] testInsertAfterWithoutBrace(spoon.test.intercession.insertBefore.InsertMethodsTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.intercession.insertBefore.InsertMethodsTest.setup(InsertMethodsTest.java:42)

[ERROR] testInsertBefore(spoon.test.intercession.insertBefore.InsertMethodsTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.intercession.insertBefore.InsertMethodsTest.setup(InsertMethodsTest.java:42)

[ERROR] testInsertAfterWithBrace(spoon.test.intercession.insertBefore.InsertMethodsTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.intercession.insertBefore.InsertMethodsTest.setup(InsertMethodsTest.java:42)

[ERROR] testInsertAfterSwitchCase(spoon.test.intercession.insertBefore.InsertMethodsTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.intercession.insertBefore.InsertMethodsTest.setup(InsertMethodsTest.java:42)

[ERROR] testInsertBeforeSwitchCase(spoon.test.intercession.insertBefore.InsertMethodsTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.intercession.insertBefore.InsertMethodsTest.setup(InsertMethodsTest.java:42)

[INFO] Running spoon.test.intercession.IntercessionTest
[ERROR] Tests run: 8, Failures: 0, Errors: 6, Skipped: 1, Time elapsed: 3.565 s <<< FAILURE! - in spoon.test.intercession.IntercessionTest
[ERROR] testInsertIfIntercession(spoon.test.intercession.IntercessionTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public int bar() {if (1 == 0)
            return 1;
        else
            return 0;
        }};;
    }
}
	at spoon.test.intercession.IntercessionTest.testInsertIfIntercession(IntercessionTest.java:132)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.intercession.IntercessionTest.testInsertIfIntercession(IntercessionTest.java:132)

[ERROR] testInsertAfter(spoon.test.intercession.IntercessionTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0; int y=0; int z=x+y;}};;
    }
}
	at spoon.test.intercession.IntercessionTest.testInsertAfter(IntercessionTest.java:165)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.intercession.IntercessionTest.testInsertAfter(IntercessionTest.java:165)

[ERROR] testInsertBegin(spoon.test.intercession.IntercessionTest)  Time elapsed: 0.064 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0;}};;
    }
}
	at spoon.test.intercession.IntercessionTest.testInsertBegin(IntercessionTest.java:52)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.intercession.IntercessionTest.testInsertBegin(IntercessionTest.java:52)

[ERROR] testInsertEnd(spoon.test.intercession.IntercessionTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0; String foo="toto";}};;
    }
}
	at spoon.test.intercession.IntercessionTest.testInsertEnd(IntercessionTest.java:72)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.intercession.IntercessionTest.testInsertEnd(IntercessionTest.java:72)

[ERROR] testEqualConstructor(spoon.test.intercession.IntercessionTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X { public X() {} };;
    }
}
	at spoon.test.intercession.IntercessionTest.testEqualConstructor(IntercessionTest.java:95)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.intercession.IntercessionTest.testEqualConstructor(IntercessionTest.java:95)

[ERROR] testSettersAreAllGood(spoon.test.intercession.IntercessionTest)  Time elapsed: 3.301 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.intercession.IntercessionTest.testSettersAreAllGood(IntercessionTest.java:196)

[INFO] Running spoon.test.intercession.IntercessionContractTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.343 s <<< FAILURE! - in spoon.test.intercession.IntercessionContractTest
[ERROR] initializationError(spoon.test.intercession.IntercessionContractTest)  Time elapsed: 0.001 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.intercession.IntercessionContractTest.data(IntercessionContractTest.java:35)

[INFO] Running spoon.test.intercession.RemoveTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.056 s <<< FAILURE! - in spoon.test.intercession.RemoveTest
[ERROR] testRemoveAllStatements(spoon.test.intercession.RemoveTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0;int y=0;}};;
    }
}
	at spoon.test.intercession.RemoveTest.testRemoveAllStatements(RemoveTest.java:24)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.intercession.RemoveTest.testRemoveAllStatements(RemoveTest.java:24)

[INFO] Running spoon.test.annotation.AnnotationTest
[ERROR] Tests run: 48, Failures: 0, Errors: 33, Skipped: 0, Time elapsed: 2.974 s <<< FAILURE! - in spoon.test.annotation.AnnotationTest
[ERROR] testModelBuildingAnnotationBound(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testModelBuildingAnnotationBound(AnnotationTest.java:113)

[ERROR] testDefaultValueInAnnotationsForAnnotationFields(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testDefaultValueInAnnotationsForAnnotationFields(AnnotationTest.java:872)

[ERROR] testPersistenceProperty(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testPersistenceProperty(AnnotationTest.java:155)

[ERROR] annotationOverrideFQNIsOK(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.annotationOverrideFQNIsOK(AnnotationTest.java:1138)

[ERROR] testInnerAnnotationsWithArray(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testInnerAnnotationsWithArray(AnnotationTest.java:401)

[ERROR] testUsageOfTypeAnnotationInCast(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.092 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testUsageOfTypeAnnotationInCast(AnnotationTest.java:471)

[ERROR] testAnnotationNotRepeatableNotArrayAnnotation(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testAnnotationNotRepeatableNotArrayAnnotation(AnnotationTest.java:1343)

[ERROR] annotationAddValue(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.annotationAddValue(AnnotationTest.java:1117)

[ERROR] testAnnotationWithDefaultArrayValue(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testAnnotationWithDefaultArrayValue(AnnotationTest.java:381)

[ERROR] testUsageOfTypeAnnotationWithGenericTypesInStatements(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testUsageOfTypeAnnotationWithGenericTypesInStatements(AnnotationTest.java:642)

[ERROR] testRepeatableAnnotationAreManaged(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.063 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testRepeatableAnnotationAreManaged(AnnotationTest.java:1239)

[ERROR] testUsageOfTypeAnnotationInReturnTypeInMethod(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.076 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testUsageOfTypeAnnotationInReturnTypeInMethod(AnnotationTest.java:513)

[ERROR] testAbstractAllAnnotationProcessor(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.077 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testAbstractAllAnnotationProcessor(AnnotationTest.java:907)

[ERROR] testUsageOfTypeAnnotationInNewInstance(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.065 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testUsageOfTypeAnnotationInNewInstance(AnnotationTest.java:449)

[ERROR] testSpoonSpoonResult(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testSpoonSpoonResult(AnnotationTest.java:1051)

[ERROR] testAnnotatedElementTypes(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.097 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testAnnotatedElementTypes(AnnotationTest.java:260)

[ERROR] testFieldAndMethodInAnnotation(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testFieldAndMethodInAnnotation(AnnotationTest.java:957)

[ERROR] testUsageOfTypeAnnotationWithGenericTypesInClassDeclaration(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testUsageOfTypeAnnotationWithGenericTypesInClassDeclaration(AnnotationTest.java:621)

[ERROR] testAnnotationIntrospection(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testAnnotationIntrospection(AnnotationTest.java:947)

[ERROR] testCreateRepeatableAnnotation(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testCreateRepeatableAnnotation(AnnotationTest.java:1262)

[ERROR] testGetAnnotationOuter(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testGetAnnotationOuter(AnnotationTest.java:886)

[ERROR] testUsageOfTypeAnnotationOnParameterInMethod(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.07 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testUsageOfTypeAnnotationOnParameterInMethod(AnnotationTest.java:533)

[ERROR] testGetAnnotationFromParameter(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.071 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testGetAnnotationFromParameter(AnnotationTest.java:1083)

[ERROR] testAbstractAllAnnotationProcessorWithGlobalAnnotation(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.067 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testAbstractAllAnnotationProcessorWithGlobalAnnotation(AnnotationTest.java:929)

[ERROR] testUsageOfTypeAnnotationBeforeExceptionInSignatureOfMethod(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.078 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testUsageOfTypeAnnotationBeforeExceptionInSignatureOfMethod(AnnotationTest.java:494)

[ERROR] testWritingAnnotParamArray(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.062 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testWritingAnnotParamArray(AnnotationTest.java:124)

[ERROR] testAnnotationInterfacePreserveMethods(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testAnnotationInterfacePreserveMethods(AnnotationTest.java:977)

[ERROR] testOutputGeneratedByTypeAnnotation(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testOutputGeneratedByTypeAnnotation(AnnotationTest.java:735)

[ERROR] testUsageOfTypeAnnotationOnLocalVariableInMethod(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testUsageOfTypeAnnotationOnLocalVariableInMethod(AnnotationTest.java:551)

[ERROR] testUsageOfTypeAnnotationInExtendsImplementsOfAClass(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.066 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testUsageOfTypeAnnotationInExtendsImplementsOfAClass(AnnotationTest.java:574)

[ERROR] testCreateRepeatableAnnotationWithArrays(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testCreateRepeatableAnnotationWithArrays(AnnotationTest.java:1314)

[ERROR] testUsageOfParametersInTypeAnnotation(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testUsageOfParametersInTypeAnnotation(AnnotationTest.java:692)

[ERROR] testRepeatableAnnotationAreManagedWithArrays(spoon.test.annotation.AnnotationTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationTest.testRepeatableAnnotationAreManagedWithArrays(AnnotationTest.java:1292)

[INFO] Running spoon.test.annotation.AnnotationLoopTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.059 s - in spoon.test.annotation.AnnotationLoopTest
[INFO] Running spoon.test.annotation.AnnotationValuesTest
[ERROR] Tests run: 6, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.253 s <<< FAILURE! - in spoon.test.annotation.AnnotationValuesTest
[ERROR] testValuesOnJava8Annotation(spoon.test.annotation.AnnotationValuesTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.annotation.AnnotationValuesTest.testValuesOnJava8Annotation(AnnotationValuesTest.java:55)

[ERROR] testAnnotationPrintAnnotation(spoon.test.annotation.AnnotationValuesTest)  Time elapsed: 0.074 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.annotation.AnnotationValuesTest.testAnnotationPrintAnnotation(AnnotationValuesTest.java:127)

[ERROR] testValuesOnJava7Annotation(spoon.test.annotation.AnnotationValuesTest)  Time elapsed: 0.062 s  <<< ERROR!
spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.annotation.AnnotationValuesTest.testValuesOnJava7Annotation(AnnotationValuesTest.java:38)

[INFO] Running spoon.test.pkg.PackageTest
[ERROR] Tests run: 12, Failures: 0, Errors: 10, Skipped: 0, Time elapsed: 1.046 s <<< FAILURE! - in spoon.test.pkg.PackageTest
[ERROR] testRenameRootPackageWithNullOrEmpty(spoon.test.pkg.PackageTest)  Time elapsed: 0.066 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.pkg.PackageTest.testRenameRootPackageWithNullOrEmpty(PackageTest.java:215)

[ERROR] testPackage(spoon.test.pkg.PackageTest)  Time elapsed: 0.069 s  <<< ERROR!
java.lang.NullPointerException
	at spoon.test.pkg.PackageTest.testPackage(PackageTest.java:65)

[ERROR] testGetFQNSimple(spoon.test.pkg.PackageTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.pkg.PackageTest.testGetFQNSimple(PackageTest.java:273)

[ERROR] testAnnotationOnPackage(spoon.test.pkg.PackageTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.pkg.PackageTest.testAnnotationOnPackage(PackageTest.java:91)

[ERROR] testRenamePackageAndPrettyPrintWithProcessor(spoon.test.pkg.PackageTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.pkg.PackageTest.testRenamePackageAndPrettyPrintWithProcessor(PackageTest.java:185)

[ERROR] testRenamePackageAndPrettyPrint(spoon.test.pkg.PackageTest)  Time elapsed: 0.065 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.pkg.PackageTest.testRenamePackageAndPrettyPrint(PackageTest.java:142)

[ERROR] testRenamePackageAndPrettyPrintNoclasspath(spoon.test.pkg.PackageTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.pkg.PackageTest.testRenamePackageAndPrettyPrintNoclasspath(PackageTest.java:162)

[ERROR] testRenameRootPackage(spoon.test.pkg.PackageTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.pkg.PackageTest.testRenameRootPackage(PackageTest.java:202)

[ERROR] testGetFQNInNoClassPath(spoon.test.pkg.PackageTest)  Time elapsed: 0.071 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.pkg.PackageTest.testGetFQNInNoClassPath(PackageTest.java:289)

[ERROR] testAddAnnotationToPackage(spoon.test.pkg.PackageTest)  Time elapsed: 0.065 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.pkg.PackageTest.testAddAnnotationToPackage(PackageTest.java:237)

[INFO] Running spoon.test.comment.CommentTest
[ERROR] Tests run: 17, Failures: 0, Errors: 15, Skipped: 0, Time elapsed: 2.773 s <<< FAILURE! - in spoon.test.comment.CommentTest
[ERROR] testCommentsInComment1And2(spoon.test.comment.CommentTest)  Time elapsed: 0.237 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.getSpoonFactory(CommentTest.java:82)
	at spoon.test.comment.CommentTest.testCommentsInComment1And2(CommentTest.java:827)

[ERROR] testJavaDocCommentOnUnix(spoon.test.comment.CommentTest)  Time elapsed: 0.116 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.getSpoonFactory(CommentTest.java:82)
	at spoon.test.comment.CommentTest.testJavaDocCommentOnUnix(CommentTest.java:129)

[ERROR] testJavaDocEmptyCommentAndTag(spoon.test.comment.CommentTest)  Time elapsed: 0.085 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.getSpoonFactory(CommentTest.java:82)
	at spoon.test.comment.CommentTest.testJavaDocEmptyCommentAndTag(CommentTest.java:232)

[ERROR] testWildComments(spoon.test.comment.CommentTest)  Time elapsed: 0.068 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.getSpoonFactory(CommentTest.java:82)
	at spoon.test.comment.CommentTest.testWildComments(CommentTest.java:898)

[ERROR] testRemoveComment(spoon.test.comment.CommentTest)  Time elapsed: 0.075 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.getSpoonFactory(CommentTest.java:82)
	at spoon.test.comment.CommentTest.testRemoveComment(CommentTest.java:250)

[ERROR] testJavadocShortAndLongComment(spoon.test.comment.CommentTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.getSpoonFactory(CommentTest.java:82)
	at spoon.test.comment.CommentTest.testJavadocShortAndLongComment(CommentTest.java:137)

[ERROR] testCombinedPackageInfoComment(spoon.test.comment.CommentTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.getSpoonFactory(CommentTest.java:82)
	at spoon.test.comment.CommentTest.testCombinedPackageInfoComment(CommentTest.java:100)

[ERROR] testJavaDocCommentOnMac(spoon.test.comment.CommentTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.testJavaDocCommentOnMac(CommentTest.java:150)

[ERROR] testInsertNewComment(spoon.test.comment.CommentTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.getSpoonFactory(CommentTest.java:82)
	at spoon.test.comment.CommentTest.testInsertNewComment(CommentTest.java:620)

[ERROR] testInLineComment(spoon.test.comment.CommentTest)  Time elapsed: 0.089 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.getSpoonFactory(CommentTest.java:82)
	at spoon.test.comment.CommentTest.testInLineComment(CommentTest.java:260)

[ERROR] testBlockComment(spoon.test.comment.CommentTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.getSpoonFactory(CommentTest.java:82)
	at spoon.test.comment.CommentTest.testBlockComment(CommentTest.java:458)

[ERROR] testSnippedWithComments(spoon.test.comment.CommentTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.testSnippedWithComments(CommentTest.java:703)

[ERROR] testCodeFactory(spoon.test.comment.CommentTest)  Time elapsed: 0.073 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.getSpoonFactory(CommentTest.java:82)
	at spoon.test.comment.CommentTest.testCodeFactory(CommentTest.java:672)

[ERROR] testCoreFactory(spoon.test.comment.CommentTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.getSpoonFactory(CommentTest.java:82)
	at spoon.test.comment.CommentTest.testCoreFactory(CommentTest.java:654)

[ERROR] testDocumentationContract(spoon.test.comment.CommentTest)  Time elapsed: 1.595 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.comment.CommentTest.testDocumentationContract(CommentTest.java:758)

[INFO] Running spoon.test.position.PositionTest
[ERROR] Tests run: 14, Failures: 0, Errors: 12, Skipped: 0, Time elapsed: 1.462 s <<< FAILURE! - in spoon.test.position.PositionTest
[ERROR] testPositionAbstractMethod(spoon.test.position.PositionTest)  Time elapsed: 0.069 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.position.PositionTest.testPositionAbstractMethod(PositionTest.java:391)

[ERROR] testPositionCastExpressionOfVariableRead(spoon.test.position.PositionTest)  Time elapsed: 0.087 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.position.PositionTest.testPositionCastExpressionOfVariableRead(PositionTest.java:605)

[ERROR] getPositionOfImplicitBlock(spoon.test.position.PositionTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.position.PositionTest.getPositionOfImplicitBlock(PositionTest.java:575)

[ERROR] testPositionClass(spoon.test.position.PositionTest)  Time elapsed: 0.816 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.position.PositionTest.testPositionClass(PositionTest.java:58)

[ERROR] testPositionField(spoon.test.position.PositionTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.position.PositionTest.testPositionField(PositionTest.java:223)

[ERROR] testPositionInterface(spoon.test.position.PositionTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.position.PositionTest.testPositionInterface(PositionTest.java:147)

[ERROR] testPositionClassWithComments(spoon.test.position.PositionTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.position.PositionTest.testPositionClassWithComments(PositionTest.java:89)

[ERROR] testPositionMethod(spoon.test.position.PositionTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.position.PositionTest.testPositionMethod(PositionTest.java:329)

[ERROR] testPositionStatement(spoon.test.position.PositionTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.position.PositionTest.testPositionStatement(PositionTest.java:425)

[ERROR] testPositionParameterTypeReference(spoon.test.position.PositionTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.position.PositionTest.testPositionParameterTypeReference(PositionTest.java:128)

[ERROR] testPositionAnnotation(spoon.test.position.PositionTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.position.PositionTest.testPositionAnnotation(PositionTest.java:181)

[ERROR] testPositionGeneric(spoon.test.position.PositionTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.position.PositionTest.testPositionGeneric(PositionTest.java:286)

[INFO] Running spoon.test.position.SourceFragmentTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in spoon.test.position.SourceFragmentTest
[INFO] Running spoon.test.generics.GenericsTest
[ERROR] Tests run: 45, Failures: 0, Errors: 44, Skipped: 0, Time elapsed: 2.693 s <<< FAILURE! - in spoon.test.generics.GenericsTest
[ERROR] testIsGenericsMethod(spoon.test.generics.GenericsTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testIsGenericsMethod(GenericsTest.java:603)

[ERROR] testModelBuildingGenericConstructor(spoon.test.generics.GenericsTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testModelBuildingGenericConstructor(GenericsTest.java:122)

[ERROR] testisGeneric(spoon.test.generics.GenericsTest)  Time elapsed: 0.083 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testisGeneric(GenericsTest.java:670)

[ERROR] testIsSameSignatureWithReferencedGenerics(spoon.test.generics.GenericsTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testIsSameSignatureWithReferencedGenerics(GenericsTest.java:1354)

[ERROR] testDeclarationOfTypeParameterReference(spoon.test.generics.GenericsTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testDeclarationOfTypeParameterReference(GenericsTest.java:590)

[ERROR] testGenericTypeReference(spoon.test.generics.GenericsTest)  Time elapsed: 0.069 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testGenericTypeReference(GenericsTest.java:653)

[ERROR] testTypeParameterDeclarer(spoon.test.generics.GenericsTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testTypeParameterDeclarer(GenericsTest.java:196)

[ERROR] testAccessToGenerics(spoon.test.generics.GenericsTest)  Time elapsed: 0.066 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testAccessToGenerics(GenericsTest.java:340)

[ERROR] testConstructorCallGenerics(spoon.test.generics.GenericsTest)  Time elapsed: 0.068 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testConstructorCallGenerics(GenericsTest.java:364)

[ERROR] testRecursiveTypeAdapting(spoon.test.generics.GenericsTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testRecursiveTypeAdapting(GenericsTest.java:964)

[ERROR] testBugCommonCollection(spoon.test.generics.GenericsTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testBugCommonCollection(GenericsTest.java:237)

[ERROR] testName(spoon.test.generics.GenericsTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testName(GenericsTest.java:488)

[ERROR] testClassContextOnInnerClass(spoon.test.generics.GenericsTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testClassContextOnInnerClass(GenericsTest.java:1141)

[ERROR] testTypeAdapted(spoon.test.generics.GenericsTest)  Time elapsed: 0.069 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testTypeAdapted(GenericsTest.java:876)

[ERROR] testGenericWithExtendsInDeclaration(spoon.test.generics.GenericsTest)  Time elapsed: 0.037 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testGenericWithExtendsInDeclaration(GenericsTest.java:502)

[ERROR] testGenericsInQualifiedNameInConstructorCall(spoon.test.generics.GenericsTest)  Time elapsed: 0.062 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testGenericsInQualifiedNameInConstructorCall(GenericsTest.java:529)

[ERROR] testWildcard(spoon.test.generics.GenericsTest)  Time elapsed: 0.086 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testWildcard(GenericsTest.java:583)

[ERROR] testInstanceOfMapEntryGeneric(spoon.test.generics.GenericsTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testInstanceOfMapEntryGeneric(GenericsTest.java:321)

[ERROR] testNewClassGenerics(spoon.test.generics.GenericsTest)  Time elapsed: 0.063 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testNewClassGenerics(GenericsTest.java:444)

[ERROR] testGenericsOnLocalType(spoon.test.generics.GenericsTest)  Time elapsed: 0.068 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testGenericsOnLocalType(GenericsTest.java:559)

[ERROR] testTypeParameterReferenceAsActualTypeArgument(spoon.test.generics.GenericsTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testTypeParameterReferenceAsActualTypeArgument(GenericsTest.java:617)

[ERROR] testWildCardonShadowClass(spoon.test.generics.GenericsTest)  Time elapsed: 0.036 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testWildCardonShadowClass(GenericsTest.java:1182)

[ERROR] testGenericsInConstructorCall(spoon.test.generics.GenericsTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testGenericsInConstructorCall(GenericsTest.java:571)

[ERROR] testGetDeclarationOfTypeParameterReference(spoon.test.generics.GenericsTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testGetDeclarationOfTypeParameterReference(GenericsTest.java:1228)

[ERROR] testCannotAdaptTypeOfNonTypeScope(spoon.test.generics.GenericsTest)  Time elapsed: 0.071 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testCannotAdaptTypeOfNonTypeScope(GenericsTest.java:1413)

[ERROR] testDiamond1(spoon.test.generics.GenericsTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class Diamond {
        	java.util.List<String> f = new java.util.ArrayList<>();
        };
    }
}
	at spoon.test.generics.GenericsTest.testDiamond1(GenericsTest.java:148)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.generics.GenericsTest.testDiamond1(GenericsTest.java:148)

[ERROR] testDiamond2(spoon.test.generics.GenericsTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testDiamond2(GenericsTest.java:130)

[ERROR] testClassTypingContextMethodSignature(spoon.test.generics.GenericsTest)  Time elapsed: 0.077 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testClassTypingContextMethodSignature(GenericsTest.java:1115)

[ERROR] testInvocationGenerics(spoon.test.generics.GenericsTest)  Time elapsed: 0.069 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testInvocationGenerics(GenericsTest.java:417)

[ERROR] testIsGenericTypeEqual(spoon.test.generics.GenericsTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testIsGenericTypeEqual(GenericsTest.java:1376)

[ERROR] testIsSameSignatureWithMethodGenerics(spoon.test.generics.GenericsTest)  Time elapsed: 0.082 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testIsSameSignatureWithMethodGenerics(GenericsTest.java:1305)

[ERROR] testMethodTypingContextAdaptMethod(spoon.test.generics.GenericsTest)  Time elapsed: 0.065 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testMethodTypingContextAdaptMethod(GenericsTest.java:1067)

[ERROR] testModelBuildingTree(spoon.test.generics.GenericsTest)  Time elapsed: 0.037 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testModelBuildingTree(GenericsTest.java:105)

[ERROR] testMethodsWithGenericsWhoExtendsObject(spoon.test.generics.GenericsTest)  Time elapsed: 0.08 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testMethodsWithGenericsWhoExtendsObject(GenericsTest.java:468)

[ERROR] testModelBuildingSimilarSignatureMethods(spoon.test.generics.GenericsTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testModelBuildingSimilarSignatureMethods(GenericsTest.java:161)

[ERROR] testClassTypingContext(spoon.test.generics.GenericsTest)  Time elapsed: 0.075 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testClassTypingContext(GenericsTest.java:904)

[ERROR] testGenericInField(spoon.test.generics.GenericsTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testGenericInField(GenericsTest.java:515)

[ERROR] testGenericMethodCallWithExtend(spoon.test.generics.GenericsTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testGenericMethodCallWithExtend(GenericsTest.java:227)

[ERROR] testBugComparableComparator(spoon.test.generics.GenericsTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testBugComparableComparator(GenericsTest.java:89)

[ERROR] testCtTypeReference_getSuperclass(spoon.test.generics.GenericsTest)  Time elapsed: 0.077 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testCtTypeReference_getSuperclass(GenericsTest.java:839)

[ERROR] testTypeParameterReference(spoon.test.generics.GenericsTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testTypeParameterReference(GenericsTest.java:172)

[ERROR] testMethodTypingContext(spoon.test.generics.GenericsTest)  Time elapsed: 0.079 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testMethodTypingContext(GenericsTest.java:1001)

[ERROR] testIsSameSignatureWithGenerics(spoon.test.generics.GenericsTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testIsSameSignatureWithGenerics(GenericsTest.java:1283)

[ERROR] testDiamondComplexGenericsRxJava(spoon.test.generics.GenericsTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.generics.GenericsTest.testDiamondComplexGenericsRxJava(GenericsTest.java:1199)

[INFO] Running spoon.test.compilation.CompilationTest
[ERROR] Tests run: 13, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 1.398 s <<< FAILURE! - in spoon.test.compilation.CompilationTest
[ERROR] compileTest(spoon.test.compilation.CompilationTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.compilation.CompilationTest.compileTest(CompilationTest.java:87)

[ERROR] compileCommandLineTest(spoon.test.compilation.CompilationTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.compilation.CompilationTest.compileCommandLineTest(CompilationTest.java:63)

[ERROR] testFilterResourcesFile(spoon.test.compilation.CompilationTest)  Time elapsed: 0.104 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.compilation.CompilationTest.testFilterResourcesFile(CompilationTest.java:197)

[ERROR] testPrecompile(spoon.test.compilation.CompilationTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.compilation.CompilationTest.testPrecompile(CompilationTest.java:253)

[ERROR] testNewInstanceFromExistingClass(spoon.test.compilation.CompilationTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.compilation.CompilationTest.testNewInstanceFromExistingClass(CompilationTest.java:126)

[ERROR] testFilterResourcesDir(spoon.test.compilation.CompilationTest)  Time elapsed: 0.766 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.compilation.CompilationTest.testFilterResourcesDir(CompilationTest.java:236)

[ERROR] testNewInstance(spoon.test.compilation.CompilationTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X implements spoon.test.compilation.Ifoo { public int foo() {int i=0; return i;} };
    }
}
	at spoon.test.compilation.CompilationTest.testNewInstance(CompilationTest.java:154)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.compilation.CompilationTest.testNewInstance(CompilationTest.java:154)

[ERROR] testExoticClassLoader(spoon.test.compilation.CompilationTest)  Time elapsed: 0.066 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.compilation.CompilationTest.testExoticClassLoader(CompilationTest.java:376)

[INFO] Running spoon.test.staticFieldAccess.StaticAccessTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.098 s <<< FAILURE! - in spoon.test.staticFieldAccess.StaticAccessTest
[ERROR] testProcessAndCompile(spoon.test.staticFieldAccess.StaticAccessTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess.StaticAccessTest.setUp(StaticAccessTest.java:36)

[ERROR] testReferences(spoon.test.staticFieldAccess.StaticAccessTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess.StaticAccessTest.setUp(StaticAccessTest.java:36)

[INFO] Running spoon.test.template.TemplateEnumAccessTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.098 s <<< FAILURE! - in spoon.test.template.TemplateEnumAccessTest
[ERROR] testEnumAccessTest(spoon.test.template.TemplateEnumAccessTest)  Time elapsed: 0.098 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateEnumAccessTest.testEnumAccessTest(TemplateEnumAccessTest.java:26)

[INFO] Running spoon.test.template.TemplateReplaceReturnTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.123 s <<< FAILURE! - in spoon.test.template.TemplateReplaceReturnTest
[ERROR] testNoReturnReplaceTemplate(spoon.test.template.TemplateReplaceReturnTest)  Time elapsed: 0.068 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateReplaceReturnTest.testNoReturnReplaceTemplate(TemplateReplaceReturnTest.java:47)

[ERROR] testReturnReplaceTemplate(spoon.test.template.TemplateReplaceReturnTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateReplaceReturnTest.testReturnReplaceTemplate(TemplateReplaceReturnTest.java:28)

[INFO] Running spoon.test.template.TemplateInvocationSubstitutionTest
[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.172 s <<< FAILURE! - in spoon.test.template.TemplateInvocationSubstitutionTest
[ERROR] testInvocationSubstitutionByExpression(spoon.test.template.TemplateInvocationSubstitutionTest)  Time elapsed: 0.076 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateInvocationSubstitutionTest.testInvocationSubstitutionByExpression(TemplateInvocationSubstitutionTest.java:41)

[ERROR] testInvocationSubstitutionByStatement(spoon.test.template.TemplateInvocationSubstitutionTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateInvocationSubstitutionTest.testInvocationSubstitutionByStatement(TemplateInvocationSubstitutionTest.java:25)

[ERROR] testSubstitutionByExpression(spoon.test.template.TemplateInvocationSubstitutionTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateInvocationSubstitutionTest.testSubstitutionByExpression(TemplateInvocationSubstitutionTest.java:56)

[INFO] Running spoon.test.template.TemplateArrayAccessTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.088 s <<< FAILURE! - in spoon.test.template.TemplateArrayAccessTest
[ERROR] testArrayAccess(spoon.test.template.TemplateArrayAccessTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateArrayAccessTest.testArrayAccess(TemplateArrayAccessTest.java:23)

[ERROR] testArrayLengthAccess(spoon.test.template.TemplateArrayAccessTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateArrayAccessTest.testArrayLengthAccess(TemplateArrayAccessTest.java:37)

[INFO] Running spoon.test.template.TemplateTest
[ERROR] Tests run: 24, Failures: 0, Errors: 23, Skipped: 0, Time elapsed: 1.595 s <<< FAILURE! - in spoon.test.template.TemplateTest
[ERROR] testObjectIsNotParamTemplate(spoon.test.template.TemplateTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testObjectIsNotParamTemplate(TemplateTest.java:957)

[ERROR] substituteSubString(spoon.test.template.TemplateTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.substituteSubString(TemplateTest.java:893)

[ERROR] testFieldAccessNameSubstitutionInInnerClass(spoon.test.template.TemplateTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testFieldAccessNameSubstitutionInInnerClass(TemplateTest.java:989)

[ERROR] testSimpleTemplate(spoon.test.template.TemplateTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testSimpleTemplate(TemplateTest.java:700)

[ERROR] testExtensionBlock(spoon.test.template.TemplateTest)  Time elapsed: 0.226 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testExtensionBlock(TemplateTest.java:527)

[ERROR] testTemplateInterfaces(spoon.test.template.TemplateTest)  Time elapsed: 0.125 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testTemplateInterfaces(TemplateTest.java:588)

[ERROR] substituteTypeAccessReference(spoon.test.template.TemplateTest)  Time elapsed: 0.064 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.substituteTypeAccessReference(TemplateTest.java:1029)

[ERROR] testTemplateMatcher(spoon.test.template.TemplateTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testTemplateMatcher(TemplateTest.java:429)

[ERROR] testFieldAccessNameSubstitution(spoon.test.template.TemplateTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testFieldAccessNameSubstitution(TemplateTest.java:971)

[ERROR] testSubstitutionInsertAllNtoN(spoon.test.template.TemplateTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testSubstitutionInsertAllNtoN(TemplateTest.java:717)

[ERROR] testTemplateWithWrongUsedStringParam(spoon.test.template.TemplateTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testTemplateWithWrongUsedStringParam(TemplateTest.java:360)

[ERROR] testTemplateInheritance(spoon.test.template.TemplateTest)  Time elapsed: 0.13 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testTemplateInheritance(TemplateTest.java:109)

[ERROR] testCheckBoundTemplate(spoon.test.template.TemplateTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testCheckBoundTemplate(TemplateTest.java:388)

[ERROR] testAnotherFieldAccessNameSubstitution(spoon.test.template.TemplateTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testAnotherFieldAccessNameSubstitution(TemplateTest.java:1008)

[ERROR] testExtensionDecoupledSubstitutionVisitor(spoon.test.template.TemplateTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testExtensionDecoupledSubstitutionVisitor(TemplateTest.java:551)

[ERROR] testTemplateC1(spoon.test.template.TemplateTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testTemplateC1(TemplateTest.java:302)

[ERROR] substituteStringLiteral(spoon.test.template.TemplateTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.substituteStringLiteral(TemplateTest.java:851)

[ERROR] testStatementTemplateRootSubstitution(spoon.test.template.TemplateTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testStatementTemplateRootSubstitution(TemplateTest.java:785)

[ERROR] testTemplateMatcherWithWholePackage(spoon.test.template.TemplateTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testTemplateMatcherWithWholePackage(TemplateTest.java:608)

[ERROR] createTypeFromTemplate(spoon.test.template.TemplateTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.createTypeFromTemplate(TemplateTest.java:803)

[ERROR] testTemplateArrayAccess(spoon.test.template.TemplateTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testTemplateArrayAccess(TemplateTest.java:735)

[ERROR] testTemplateInvocationSubstitution(spoon.test.template.TemplateTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testTemplateInvocationSubstitution(TemplateTest.java:685)

[ERROR] testSubstituteInnerClass(spoon.test.template.TemplateTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateTest.testSubstituteInnerClass(TemplateTest.java:763)

[INFO] Running spoon.test.template.TemplateClassAccessTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.048 s <<< FAILURE! - in spoon.test.template.TemplateClassAccessTest
[ERROR] testClassAccessTest(spoon.test.template.TemplateClassAccessTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.template.TemplateClassAccessTest.testClassAccessTest(TemplateClassAccessTest.java:22)

[INFO] Running spoon.test.visibility.VisibilityTest
[ERROR] Tests run: 5, Failures: 0, Errors: 5, Skipped: 0, Time elapsed: 0.355 s <<< FAILURE! - in spoon.test.visibility.VisibilityTest
[ERROR] testMethodeWithNonAccessibleTypeArgument(spoon.test.visibility.VisibilityTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.visibility.VisibilityTest.testMethodeWithNonAccessibleTypeArgument(VisibilityTest.java:35)

[ERROR] testName(spoon.test.visibility.VisibilityTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.visibility.VisibilityTest.testName(VisibilityTest.java:122)

[ERROR] testFullyQualifiedNameOfTypeReferenceWithGeneric(spoon.test.visibility.VisibilityTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.visibility.VisibilityTest.testFullyQualifiedNameOfTypeReferenceWithGeneric(VisibilityTest.java:83)

[ERROR] testInvocationVisibilityInFieldDeclaration(spoon.test.visibility.VisibilityTest)  Time elapsed: 0.138 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.visibility.VisibilityTest.testInvocationVisibilityInFieldDeclaration(VisibilityTest.java:147)

[ERROR] testVisibilityOfClassesNamedByClassesInJavaLangPackage(spoon.test.visibility.VisibilityTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.visibility.VisibilityTest.testVisibilityOfClassesNamedByClassesInJavaLangPackage(VisibilityTest.java:58)

[INFO] Running spoon.test.reference.AnnotationFieldReferenceTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.053 s <<< FAILURE! - in spoon.test.reference.AnnotationFieldReferenceTest
[ERROR] testAnnotationFieldReference(spoon.test.reference.AnnotationFieldReferenceTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.AnnotationFieldReferenceTest.testAnnotationFieldReference(AnnotationFieldReferenceTest.java:19)

[INFO] Running spoon.test.reference.ExecutableReferenceGenericTest
[ERROR] Tests run: 12, Failures: 0, Errors: 12, Skipped: 0, Time elapsed: 0.665 s <<< FAILURE! - in spoon.test.reference.ExecutableReferenceGenericTest
[ERROR] testReferencesBetweenConstructorsInOtherClass(spoon.test.reference.ExecutableReferenceGenericTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceGenericTest.setUp(ExecutableReferenceGenericTest.java:48)

[ERROR] testExecutableReferences(spoon.test.reference.ExecutableReferenceGenericTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceGenericTest.setUp(ExecutableReferenceGenericTest.java:48)

[ERROR] testOneReferenceWithMethodNotGenericOutOfTheClass(spoon.test.reference.ExecutableReferenceGenericTest)  Time elapsed: 0.064 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceGenericTest.setUp(ExecutableReferenceGenericTest.java:48)

[ERROR] testMultiReferenceWithGenericMethodOutOfTheClass(spoon.test.reference.ExecutableReferenceGenericTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceGenericTest.setUp(ExecutableReferenceGenericTest.java:48)

[ERROR] testMultiReferencesBetweenMethodsWithoutGenericInSameClass(spoon.test.reference.ExecutableReferenceGenericTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceGenericTest.setUp(ExecutableReferenceGenericTest.java:48)

[ERROR] testMethodWithoutReferences(spoon.test.reference.ExecutableReferenceGenericTest)  Time elapsed: 0.06 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceGenericTest.setUp(ExecutableReferenceGenericTest.java:48)

[ERROR] testReferencesBetweenConstructors(spoon.test.reference.ExecutableReferenceGenericTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceGenericTest.setUp(ExecutableReferenceGenericTest.java:48)

[ERROR] testMultiReferenceBetweenMethodsWithGenericInSameClass(spoon.test.reference.ExecutableReferenceGenericTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceGenericTest.setUp(ExecutableReferenceGenericTest.java:48)

[ERROR] testMethodGenericWithoutReferences(spoon.test.reference.ExecutableReferenceGenericTest)  Time elapsed: 0.066 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceGenericTest.setUp(ExecutableReferenceGenericTest.java:48)

[ERROR] testOneReferenceBetweenMethodsInSameClass(spoon.test.reference.ExecutableReferenceGenericTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceGenericTest.setUp(ExecutableReferenceGenericTest.java:48)

[ERROR] testReferencesBetweenMethods(spoon.test.reference.ExecutableReferenceGenericTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceGenericTest.setUp(ExecutableReferenceGenericTest.java:48)

[ERROR] testOneReferenceWithGenericMethodOutOfTheClass(spoon.test.reference.ExecutableReferenceGenericTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceGenericTest.setUp(ExecutableReferenceGenericTest.java:48)

[INFO] Running spoon.test.reference.CloneReferenceTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.158 s <<< FAILURE! - in spoon.test.reference.CloneReferenceTest
[ERROR] testGetDeclarationOfFieldAfterClone(spoon.test.reference.CloneReferenceTest)  Time elapsed: 0.092 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.CloneReferenceTest.testGetDeclarationOfFieldAfterClone(CloneReferenceTest.java:62)

[ERROR] testGetDeclarationAfterClone(spoon.test.reference.CloneReferenceTest)  Time elapsed: 0.066 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.CloneReferenceTest.testGetDeclarationAfterClone(CloneReferenceTest.java:30)

[INFO] Running spoon.test.reference.ElasticsearchStackoverflowTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.068 s <<< FAILURE! - in spoon.test.reference.ElasticsearchStackoverflowTest
[ERROR] testStackOverflow(spoon.test.reference.ElasticsearchStackoverflowTest)  Time elapsed: 0.068 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ElasticsearchStackoverflowTest.testStackOverflow(ElasticsearchStackoverflowTest.java:39)

[INFO] Running spoon.test.reference.VariableAccessTest
[ERROR] Tests run: 11, Failures: 0, Errors: 11, Skipped: 0, Time elapsed: 0.636 s <<< FAILURE! - in spoon.test.reference.VariableAccessTest
[ERROR] testDeclarationArray(spoon.test.reference.VariableAccessTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.VariableAccessTest.testDeclarationArray(VariableAccessTest.java:61)

[ERROR] testMultipleDeclarationsOfLocalVariable(spoon.test.reference.VariableAccessTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.VariableAccessTest.testMultipleDeclarationsOfLocalVariable(VariableAccessTest.java:240)

[ERROR] testDeclaringTypeOfALambdaReferencedByParameterReference(spoon.test.reference.VariableAccessTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.VariableAccessTest.testDeclaringTypeOfALambdaReferencedByParameterReference(VariableAccessTest.java:104)

[ERROR] testGetDeclarationAfterClone(spoon.test.reference.VariableAccessTest)  Time elapsed: 0.123 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.VariableAccessTest.testGetDeclarationAfterClone(VariableAccessTest.java:135)

[ERROR] testReferences(spoon.test.reference.VariableAccessTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.VariableAccessTest.testReferences(VariableAccessTest.java:164)

[ERROR] testVariableAccessDeclarationInAnonymousClass(spoon.test.reference.VariableAccessTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.VariableAccessTest.testVariableAccessDeclarationInAnonymousClass(VariableAccessTest.java:42)

[ERROR] testSuperAccess(spoon.test.reference.VariableAccessTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.VariableAccessTest.testSuperAccess(VariableAccessTest.java:261)

[ERROR] testParameterReferenceInConstructorNoClasspath(spoon.test.reference.VariableAccessTest)  Time elapsed: 0.069 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.VariableAccessTest.testParameterReferenceInConstructorNoClasspath(VariableAccessTest.java:75)

[ERROR] testReferenceToLocalVariableDeclaredInLoop(spoon.test.reference.VariableAccessTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.VariableAccessTest.testReferenceToLocalVariableDeclaredInLoop(VariableAccessTest.java:216)

[ERROR] testDeclarationOfVariableReference(spoon.test.reference.VariableAccessTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.reference.VariableAccessTest.testDeclarationOfVariableReference(VariableAccessTest.java:83)

[ERROR] testReferencesInInitExpression(spoon.test.reference.VariableAccessTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.VariableAccessTest.testReferencesInInitExpression(VariableAccessTest.java:189)

[INFO] Running spoon.test.reference.TypeReferenceTest
[ERROR] Tests run: 28, Failures: 0, Errors: 17, Skipped: 0, Time elapsed: 1.08 s <<< FAILURE! - in spoon.test.reference.TypeReferenceTest
[ERROR] testIgnoreEnclosingClassInActualTypes(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testIgnoreEnclosingClassInActualTypes(TypeReferenceTest.java:528)

[ERROR] testTypeDeclarationWildcard(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.06 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        java.util.List<?> l = null;
    }
}
	at spoon.test.reference.TypeReferenceTest.testTypeDeclarationWildcard(TypeReferenceTest.java:604)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.reference.TypeReferenceTest.testTypeDeclarationWildcard(TypeReferenceTest.java:604)

[ERROR] testAnonymousClassesHaveAnEmptyStringForItsNameInNoClasspath(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testAnonymousClassesHaveAnEmptyStringForItsNameInNoClasspath(TypeReferenceTest.java:458)

[ERROR] testGetAllExecutablesForInterfaces(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testGetAllExecutablesForInterfaces(TypeReferenceTest.java:73)

[ERROR] testTypeReferenceSpecifiedInClassDeclarationInNoClasspath(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testTypeReferenceSpecifiedInClassDeclarationInNoClasspath(TypeReferenceTest.java:340)

[ERROR] testSubTypeAnonymous(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testSubTypeAnonymous(TypeReferenceTest.java:580)

[ERROR] testToStringEqualityBetweenTwoGenericTypeDifferent(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.084 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testToStringEqualityBetweenTwoGenericTypeDifferent(TypeReferenceTest.java:215)

[ERROR] testConstructorCallInNoClasspath(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testConstructorCallInNoClasspath(TypeReferenceTest.java:482)

[ERROR] doNotCloseLoader(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.031 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.doNotCloseLoader(TypeReferenceTest.java:159)

[ERROR] testUnknownSuperClassWithSameNameInNoClasspath(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testUnknownSuperClassWithSameNameInNoClasspath(TypeReferenceTest.java:290)

[ERROR] testGetTypeDeclaration(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testGetTypeDeclaration(TypeReferenceTest.java:593)

[ERROR] testArgumentOfAInvocationIsNotATypeAccess(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testArgumentOfAInvocationIsNotATypeAccess(TypeReferenceTest.java:396)

[ERROR] testAnnotationOnMethodWithPrimitiveReturnTypeInNoClasspath(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testAnnotationOnMethodWithPrimitiveReturnTypeInNoClasspath(TypeReferenceTest.java:441)

[ERROR] testRecursiveTypeReferenceInGenericType(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testRecursiveTypeReferenceInGenericType(TypeReferenceTest.java:265)

[ERROR] testEqualityTypeReference(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.064 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testEqualityTypeReference(TypeReferenceTest.java:618)

[ERROR] testPackageInNoClasspath(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testPackageInNoClasspath(TypeReferenceTest.java:305)

[ERROR] testInvocationWithFieldAccessInNoClasspath(spoon.test.reference.TypeReferenceTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.TypeReferenceTest.testInvocationWithFieldAccessInNoClasspath(TypeReferenceTest.java:415)

[INFO] Running spoon.test.reference.ExecutableReferenceTest
[ERROR] Tests run: 7, Failures: 0, Errors: 6, Skipped: 0, Time elapsed: 0.37 s <<< FAILURE! - in spoon.test.reference.ExecutableReferenceTest
[ERROR] testLambdaNoClasspath(spoon.test.reference.ExecutableReferenceTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceTest.testLambdaNoClasspath(ExecutableReferenceTest.java:175)

[ERROR] testCreateReferenceForAnonymousExecutable(spoon.test.reference.ExecutableReferenceTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.reference.ExecutableReferenceTest.testCreateReferenceForAnonymousExecutable(ExecutableReferenceTest.java:135)

[ERROR] testSuperClassInGetAllExecutables(spoon.test.reference.ExecutableReferenceTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceTest.testSuperClassInGetAllExecutables(ExecutableReferenceTest.java:96)

[ERROR] testHashcodeWorksWithReference(spoon.test.reference.ExecutableReferenceTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceTest.testHashcodeWorksWithReference(ExecutableReferenceTest.java:184)

[ERROR] testSpecifyGetAllExecutablesMethod(spoon.test.reference.ExecutableReferenceTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceTest.testSpecifyGetAllExecutablesMethod(ExecutableReferenceTest.java:112)

[ERROR] testInvokeEnumMethod(spoon.test.reference.ExecutableReferenceTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reference.ExecutableReferenceTest.testInvokeEnumMethod(ExecutableReferenceTest.java:156)

[INFO] Running spoon.test.model.TypeTest
[ERROR] Tests run: 8, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 0.383 s <<< FAILURE! - in spoon.test.model.TypeTest
[ERROR] testGetDeclaredOrIheritedFieldOnType(spoon.test.model.TypeTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.model.TypeTest.testGetDeclaredOrIheritedFieldOnType(TypeTest.java:72)

[ERROR] testTypeInfoIsInterface(spoon.test.model.TypeTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.model.TypeTest.testTypeInfoIsInterface(TypeTest.java:108)

[ERROR] testGetDeclaredOrIheritedFieldOnTypeRef(spoon.test.model.TypeTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.model.TypeTest.testGetDeclaredOrIheritedFieldOnTypeRef(TypeTest.java:85)

[ERROR] testGetUsedTypesForTypeInRootPackage(spoon.test.model.TypeTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X { X x; };
    }
}
	at spoon.test.model.TypeTest.testGetUsedTypesForTypeInRootPackage(TypeTest.java:66)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.model.TypeTest.testGetUsedTypesForTypeInRootPackage(TypeTest.java:66)

[ERROR] testGetAllExecutables(spoon.test.model.TypeTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.model.TypeTest.testGetAllExecutables(TypeTest.java:25)

[ERROR] testGetUsedTypes(spoon.test.model.TypeTest)  Time elapsed: 0.063 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.model.TypeTest.testGetUsedTypes(TypeTest.java:41)

[ERROR] superclassTest(spoon.test.model.TypeTest)  Time elapsed: 0.06 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.model.TypeTest.superclassTest(TypeTest.java:55)

[ERROR] testGetDeclaredOrIheritedFieldByReflection(spoon.test.model.TypeTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.model.TypeTest.testGetDeclaredOrIheritedFieldByReflection(TypeTest.java:98)

[INFO] Running spoon.test.model.AnonymousExecutableTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.073 s <<< FAILURE! - in spoon.test.model.AnonymousExecutableTest
[ERROR] testStatements(spoon.test.model.AnonymousExecutableTest)  Time elapsed: 0.073 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.model.AnonymousExecutableTest.testStatements(AnonymousExecutableTest.java:18)

[INFO] Running spoon.test.model.SwitchCaseTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.143 s <<< FAILURE! - in spoon.test.model.SwitchCaseTest
[ERROR] testSwitchStatementOnAString(spoon.test.model.SwitchCaseTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.model.SwitchCaseTest.testSwitchStatementOnAString(SwitchCaseTest.java:60)

[ERROR] testIterationStatements(spoon.test.model.SwitchCaseTest)  Time elapsed: 0.091 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0;switch(x) {case 0: x=x+1;break;case 1: x=0;default: x=-1;}}};;
    }
}
	at spoon.test.model.SwitchCaseTest.testIterationStatements(SwitchCaseTest.java:36)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.model.SwitchCaseTest.testIterationStatements(SwitchCaseTest.java:36)

[INFO] Running spoon.test.model.BlockTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.128 s <<< FAILURE! - in spoon.test.model.BlockTest
[ERROR] testAddEmptyBlock(spoon.test.model.BlockTest)  Time elapsed: 0.064 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { }};;
    }
}
	at spoon.test.model.BlockTest.testAddEmptyBlock(BlockTest.java:56)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.model.BlockTest.testAddEmptyBlock(BlockTest.java:56)

[ERROR] testIterationStatements(spoon.test.model.BlockTest)  Time elapsed: 0.064 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0;int y=0;}};;
    }
}
	at spoon.test.model.BlockTest.testIterationStatements(BlockTest.java:30)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.model.BlockTest.testIterationStatements(BlockTest.java:30)

[INFO] Running spoon.test.compilationunit.TestCompilationUnit
[ERROR] Tests run: 7, Failures: 0, Errors: 5, Skipped: 0, Time elapsed: 0.243 s <<< FAILURE! - in spoon.test.compilationunit.TestCompilationUnit
[ERROR] testAddDeclaredTypeInCU(spoon.test.compilationunit.TestCompilationUnit)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.compilationunit.TestCompilationUnit.testAddDeclaredTypeInCU(TestCompilationUnit.java:116)

[ERROR] testNewlyCreatedCUWouldGetAPartialPosition(spoon.test.compilationunit.TestCompilationUnit)  Time elapsed: 0.003 s  <<< ERROR!
spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.compilationunit.TestCompilationUnit.testNewlyCreatedCUWouldGetAPartialPosition(TestCompilationUnit.java:147)

[ERROR] testGetUnitTypeWorksWithDeclaredPackage(spoon.test.compilationunit.TestCompilationUnit)  Time elapsed: 0.044 s  <<< ERROR!
java.lang.NullPointerException
	at spoon.test.compilationunit.TestCompilationUnit.testGetUnitTypeWorksWithDeclaredPackage(TestCompilationUnit.java:71)

[ERROR] testIsoEncodingIsSupported(spoon.test.compilationunit.TestCompilationUnit)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.compilationunit.TestCompilationUnit.testIsoEncodingIsSupported(TestCompilationUnit.java:45)

[ERROR] testCompilationUnitDeclaredTypes(spoon.test.compilationunit.TestCompilationUnit)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.compilationunit.TestCompilationUnit.testCompilationUnitDeclaredTypes(TestCompilationUnit.java:94)

[INFO] Running spoon.test.compilationunit.GetBinaryFilesTest
[ERROR] Tests run: 5, Failures: 0, Errors: 5, Skipped: 0, Time elapsed: 0.264 s <<< FAILURE! - in spoon.test.compilationunit.GetBinaryFilesTest
[ERROR] testExistingButNotBuiltBinary(spoon.test.compilationunit.GetBinaryFilesTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.compilationunit.GetBinaryFilesTest.testExistingButNotBuiltBinary(GetBinaryFilesTest.java:52)

[ERROR] testSingleBinary(spoon.test.compilationunit.GetBinaryFilesTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.compilationunit.GetBinaryFilesTest.testSingleBinary(GetBinaryFilesTest.java:31)

[ERROR] testAnonymousClasses(spoon.test.compilationunit.GetBinaryFilesTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.compilationunit.GetBinaryFilesTest.testAnonymousClasses(GetBinaryFilesTest.java:122)

[ERROR] testMultiClassInSingleFile(spoon.test.compilationunit.GetBinaryFilesTest)  Time elapsed: 0.062 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.compilationunit.GetBinaryFilesTest.testMultiClassInSingleFile(GetBinaryFilesTest.java:75)

[ERROR] testNestedTypes(spoon.test.compilationunit.GetBinaryFilesTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.compilationunit.GetBinaryFilesTest.testNestedTypes(GetBinaryFilesTest.java:100)

[INFO] Running spoon.test.modifiers.TestModifiers
[ERROR] Tests run: 4, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.178 s <<< FAILURE! - in spoon.test.modifiers.TestModifiers
[ERROR] testMethodWithVarargsDoesNotBecomeTransient(spoon.test.modifiers.TestModifiers)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.modifiers.TestModifiers.testMethodWithVarargsDoesNotBecomeTransient(TestModifiers.java:30)

[ERROR] testGetModifiersHelpers(spoon.test.modifiers.TestModifiers)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.modifiers.TestModifiers.testGetModifiersHelpers(TestModifiers.java:94)

[ERROR] testCtModifiableAddRemoveReturnCtModifiable(spoon.test.modifiers.TestModifiers)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.modifiers.TestModifiers.testCtModifiableAddRemoveReturnCtModifiable(TestModifiers.java:51)

[INFO] Running spoon.test.parent.ParentContractTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.71 s <<< FAILURE! - in spoon.test.parent.ParentContractTest
[ERROR] initializationError(spoon.test.parent.ParentContractTest)  Time elapsed: 0 s  <<< ERROR!
java.lang.ExceptionInInitializerError
	at spoon.test.parent.ParentContractTest.<clinit>(ParentContractTest.java:44)

[INFO] Running spoon.test.parent.TopLevelTypeTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.059 s <<< FAILURE! - in spoon.test.parent.TopLevelTypeTest
[ERROR] testTopLevelType(spoon.test.parent.TopLevelTypeTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.TopLevelTypeTest.setup(TopLevelTypeTest.java:27)

[INFO] Running spoon.test.parent.NullParentTest
[ERROR] Tests run: 8, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 0.381 s <<< FAILURE! - in spoon.test.parent.NullParentTest
[ERROR] testLocalVariableNullDefaultExpression(spoon.test.parent.NullParentTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.NullParentTest.setup(NullParentTest.java:34)

[ERROR] testTargetedAccessNullTarget(spoon.test.parent.NullParentTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.NullParentTest.setup(NullParentTest.java:34)

[ERROR] testFieldNullDefaultExpression(spoon.test.parent.NullParentTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.NullParentTest.setup(NullParentTest.java:34)

[ERROR] testReturnNullExpression(spoon.test.parent.NullParentTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.NullParentTest.setup(NullParentTest.java:34)

[ERROR] testAssertNullExpression(spoon.test.parent.NullParentTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.NullParentTest.setup(NullParentTest.java:34)

[ERROR] testForLoopNullChildren(spoon.test.parent.NullParentTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.NullParentTest.setup(NullParentTest.java:34)

[ERROR] testIfNullBranches(spoon.test.parent.NullParentTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.NullParentTest.setup(NullParentTest.java:34)

[ERROR] testTargetedExpressionNullTarget(spoon.test.parent.NullParentTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.NullParentTest.setup(NullParentTest.java:34)

[INFO] Running spoon.test.parent.SetParentTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0 s <<< FAILURE! - in spoon.test.parent.SetParentTest
[ERROR] initializationError(spoon.test.parent.SetParentTest)  Time elapsed: 0 s  <<< ERROR!
java.lang.NoClassDefFoundError: Could not initialize class spoon.test.parent.ParentContractTest
	at spoon.test.parent.SetParentTest.data(SetParentTest.java:48)

[INFO] Running spoon.test.parent.ParentTest
[ERROR] Tests run: 11, Failures: 0, Errors: 10, Skipped: 1, Time elapsed: 0.472 s <<< FAILURE! - in spoon.test.parent.ParentTest
[ERROR] testParentSet(spoon.test.parent.ParentTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.ParentTest.setup(ParentTest.java:70)

[ERROR] testParentOfCtPackageReference(spoon.test.parent.ParentTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.ParentTest.setup(ParentTest.java:70)

[ERROR] testParentOfGenericInTypeReference(spoon.test.parent.ParentTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.ParentTest.setup(ParentTest.java:70)

[ERROR] testHasParent(spoon.test.parent.ParentTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.ParentTest.setup(ParentTest.java:70)

[ERROR] testParentOfPrimitiveReference(spoon.test.parent.ParentTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.ParentTest.setup(ParentTest.java:70)

[ERROR] testParentOfCtVariableReference(spoon.test.parent.ParentTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.ParentTest.setup(ParentTest.java:70)

[ERROR] testGetParentWithFilter(spoon.test.parent.ParentTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.ParentTest.setup(ParentTest.java:70)

[ERROR] testParentPackage(spoon.test.parent.ParentTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.ParentTest.setup(ParentTest.java:70)

[ERROR] testParent(spoon.test.parent.ParentTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.ParentTest.setup(ParentTest.java:70)

[ERROR] testParentOfCtExecutableReference(spoon.test.parent.ParentTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parent.ParentTest.setup(ParentTest.java:70)

[INFO] Running spoon.test.control.ControlTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.076 s <<< FAILURE! - in spoon.test.control.ControlTest
[ERROR] testModelBuildingDoWhile(spoon.test.control.ControlTest)  Time elapsed: 0.037 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.control.ControlTest.testModelBuildingDoWhile(ControlTest.java:53)

[ERROR] testModelBuildingFor(spoon.test.control.ControlTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.control.ControlTest.testModelBuildingFor(ControlTest.java:24)

[INFO] Running spoon.test.method.MethodTest
[ERROR] Tests run: 5, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.193 s <<< FAILURE! - in spoon.test.method.MethodTest
[ERROR] testClone(spoon.test.method.MethodTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.method.MethodTest.testClone(MethodTest.java:46)

[ERROR] testGetAllMethods(spoon.test.method.MethodTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.method.MethodTest.testGetAllMethods(MethodTest.java:85)

[ERROR] testGetAllMethodsAdaptingType(spoon.test.method.MethodTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.method.MethodTest.testGetAllMethodsAdaptingType(MethodTest.java:97)

[ERROR] testSearchMethodWithGeneric(spoon.test.method.MethodTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.method.MethodTest.testSearchMethodWithGeneric(MethodTest.java:58)

[INFO] Running spoon.test.change.ChangeCollectorTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.051 s <<< FAILURE! - in spoon.test.change.ChangeCollectorTest
[ERROR] testChangeCollector(spoon.test.change.ChangeCollectorTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.change.ChangeCollectorTest.testChangeCollector(ChangeCollectorTest.java:29)

[INFO] Running spoon.test.method_overriding.MethodOverriddingTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.104 s <<< FAILURE! - in spoon.test.method_overriding.MethodOverriddingTest
[ERROR] testMethodOverride(spoon.test.method_overriding.MethodOverriddingTest)  Time elapsed: 0.062 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.method_overriding.MethodOverriddingTest.checkMethodOverride(MethodOverriddingTest.java:31)
	at spoon.test.method_overriding.MethodOverriddingTest.testMethodOverride(MethodOverriddingTest.java:23)

[ERROR] testMethodOverrideByReference(spoon.test.method_overriding.MethodOverriddingTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.method_overriding.MethodOverriddingTest.checkMethodOverride(MethodOverriddingTest.java:31)
	at spoon.test.method_overriding.MethodOverriddingTest.testMethodOverrideByReference(MethodOverriddingTest.java:27)

[INFO] Running spoon.test.path.PathTest
[ERROR] Tests run: 10, Failures: 0, Errors: 10, Skipped: 0, Time elapsed: 0.539 s <<< FAILURE! - in spoon.test.path.PathTest
[ERROR] testWildcards(spoon.test.path.PathTest)  Time elapsed: 0.037 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.path.PathTest.setup(PathTest.java:46)

[ERROR] testRoles(spoon.test.path.PathTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.path.PathTest.setup(PathTest.java:46)

[ERROR] testPathFromString(spoon.test.path.PathTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.path.PathTest.setup(PathTest.java:46)

[ERROR] testGetPathFromNonParent(spoon.test.path.PathTest)  Time elapsed: 0.119 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.path.PathTest.setup(PathTest.java:46)

[ERROR] testBuilder(spoon.test.path.PathTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.path.PathTest.setup(PathTest.java:46)

[ERROR] testMultiPathFromString(spoon.test.path.PathTest)  Time elapsed: 0.07 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.path.PathTest.setup(PathTest.java:46)

[ERROR] exceptionTest(spoon.test.path.PathTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.path.PathTest.setup(PathTest.java:46)

[ERROR] toStringTest(spoon.test.path.PathTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.path.PathTest.setup(PathTest.java:46)

[ERROR] testIncorrectPathFromString(spoon.test.path.PathTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.path.PathTest.setup(PathTest.java:46)

[ERROR] testBuilderMethod(spoon.test.path.PathTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.path.PathTest.setup(PathTest.java:46)

[INFO] Running spoon.test.enums.EnumsTest
[ERROR] Tests run: 4, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.174 s <<< FAILURE! - in spoon.test.enums.EnumsTest
[ERROR] testModelBuildingEnum(spoon.test.enums.EnumsTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.enums.EnumsTest.testModelBuildingEnum(EnumsTest.java:22)

[ERROR] testAnnotationsOnEnum(spoon.test.enums.EnumsTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.enums.EnumsTest.testAnnotationsOnEnum(EnumsTest.java:33)

[INFO] Running spoon.test.enums.EnumsTypeTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.034 s <<< FAILURE! - in spoon.test.enums.EnumsTypeTest
[ERROR] testEnumsType(spoon.test.enums.EnumsTypeTest)  Time elapsed: 0.034 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.enums.EnumsTypeTest.testEnumsType(EnumsTypeTest.java:35)

[INFO] Running spoon.test.interfaces.TestInterfaceWithoutSetup
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.103 s <<< FAILURE! - in spoon.test.interfaces.TestInterfaceWithoutSetup
[ERROR] testModifierFromInterfaceFieldAndMethod(spoon.test.interfaces.TestInterfaceWithoutSetup)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.interfaces.TestInterfaceWithoutSetup.testModifierFromInterfaceFieldAndMethod(TestInterfaceWithoutSetup.java:29)

[ERROR] testInterfacePrettyPrinting(spoon.test.interfaces.TestInterfaceWithoutSetup)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.interfaces.TestInterfaceWithoutSetup.testInterfacePrettyPrinting(TestInterfaceWithoutSetup.java:128)

[INFO] Running spoon.test.interfaces.InterfaceTest
[ERROR] Tests run: 6, Failures: 0, Errors: 6, Skipped: 0, Time elapsed: 0.39 s <<< FAILURE! - in spoon.test.interfaces.InterfaceTest
[ERROR] testDefaultMethodInConsumer(spoon.test.interfaces.InterfaceTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.interfaces.InterfaceTest.setUp(InterfaceTest.java:41)

[ERROR] testRedefinesStaticMethodInSubInterface(spoon.test.interfaces.InterfaceTest)  Time elapsed: 0.067 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.interfaces.InterfaceTest.setUp(InterfaceTest.java:41)

[ERROR] testDefaultMethodInInterface(spoon.test.interfaces.InterfaceTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.interfaces.InterfaceTest.setUp(InterfaceTest.java:41)

[ERROR] testRedefinesDefaultMethodInSubInterface(spoon.test.interfaces.InterfaceTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.interfaces.InterfaceTest.setUp(InterfaceTest.java:41)

[ERROR] testExtendsDefaultMethodInSubInterface(spoon.test.interfaces.InterfaceTest)  Time elapsed: 0.071 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.interfaces.InterfaceTest.setUp(InterfaceTest.java:41)

[ERROR] testExtendsStaticMethodInSubInterface(spoon.test.interfaces.InterfaceTest)  Time elapsed: 0.076 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.interfaces.InterfaceTest.setUp(InterfaceTest.java:41)

[INFO] Running spoon.test.processing.ProcessingTest
[ERROR] Tests run: 9, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.51 s <<< FAILURE! - in spoon.test.processing.ProcessingTest
[ERROR] testInsertBegin(spoon.test.processing.ProcessingTest)  Time elapsed: 0.063 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.processing.ProcessingTest.testInsertBegin(ProcessingTest.java:46)

[ERROR] testCallProcessorWithMultipleTypes(spoon.test.processing.ProcessingTest)  Time elapsed: 0.08 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.processing.ProcessingTest.testCallProcessorWithMultipleTypes(ProcessingTest.java:357)

[ERROR] testProcessorWithGenericType(spoon.test.processing.ProcessingTest)  Time elapsed: 0.07 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.processing.ProcessingTest.testProcessorWithGenericType(ProcessingTest.java:332)

[ERROR] testInsertEnd(spoon.test.processing.ProcessingTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.processing.ProcessingTest.testInsertEnd(ProcessingTest.java:85)

[INFO] Running spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest
[ERROR] Tests run: 16, Failures: 0, Errors: 16, Skipped: 0, Time elapsed: 0.715 s <<< FAILURE! - in spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest
[ERROR] testGenericsWithAmbiguousStaticFieldAutoImport(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testGenericsWithAmbiguousStaticFieldAutoImport(ImplicitStaticFieldReferenceTest.java:99)

[ERROR] testAmbiguousImplicitFieldReferenceAutoImport(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.062 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testAmbiguousImplicitFieldReferenceAutoImport(ImplicitStaticFieldReferenceTest.java:75)

[ERROR] testAnnotationInChildWithConstantsAutoImport(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testAnnotationInChildWithConstantsAutoImport(ImplicitStaticFieldReferenceTest.java:135)

[ERROR] testChildOfGenericsWithAmbiguousStaticFieldAutoImport(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testChildOfGenericsWithAmbiguousStaticFieldAutoImport(ImplicitStaticFieldReferenceTest.java:109)

[ERROR] testImplicitFieldReference(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testImplicitFieldReference(ImplicitStaticFieldReferenceTest.java:41)

[ERROR] testGenericsWithAmbiguousStaticField(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testGenericsWithAmbiguousStaticField(ImplicitStaticFieldReferenceTest.java:95)

[ERROR] testAmbiguousImplicitFieldReference(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testAmbiguousImplicitFieldReference(ImplicitStaticFieldReferenceTest.java:64)

[ERROR] testImplicitStaticFieldReferenceAutoImport(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testImplicitStaticFieldReferenceAutoImport(ImplicitStaticFieldReferenceTest.java:29)

[ERROR] testGenericsWithAmbiguousMemberField(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testGenericsWithAmbiguousMemberField(ImplicitStaticFieldReferenceTest.java:121)

[ERROR] testChildOfGenericsWithAmbiguousStaticField(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testChildOfGenericsWithAmbiguousStaticField(ImplicitStaticFieldReferenceTest.java:104)

[ERROR] testAnnotationInChildWithConstants(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testAnnotationInChildWithConstants(ImplicitStaticFieldReferenceTest.java:130)

[ERROR] testImplicitFieldReferenceAutoImport(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testImplicitFieldReferenceAutoImport(ImplicitStaticFieldReferenceTest.java:52)

[ERROR] testImplicitStaticFieldReference(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testImplicitStaticFieldReference(ImplicitStaticFieldReferenceTest.java:17)

[ERROR] testImplicitStaticClassAccess(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testImplicitStaticClassAccess(ImplicitStaticFieldReferenceTest.java:87)

[ERROR] testGenericsWithAmbiguousMemberFieldAutoImport(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testGenericsWithAmbiguousMemberFieldAutoImport(ImplicitStaticFieldReferenceTest.java:125)

[ERROR] testImplicitStaticClassAccessAutoImport(spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.checkFile(ImplicitStaticFieldReferenceTest.java:149)
	at spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest.testImplicitStaticClassAccessAutoImport(ImplicitStaticFieldReferenceTest.java:91)

[INFO] Running spoon.test.ctClass.CtClassTest
[ERROR] Tests run: 8, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 0.585 s <<< FAILURE! - in spoon.test.ctClass.CtClassTest
[ERROR] testCloneAnonymousClassInvocationWithAutoimports(spoon.test.ctClass.CtClassTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctClass.CtClassTest.testCloneAnonymousClassInvocationWithAutoimports(CtClassTest.java:253)

[ERROR] testParentOfTheEnclosingClassOfStaticClass(spoon.test.ctClass.CtClassTest)  Time elapsed: 0.187 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctClass.CtClassTest.testParentOfTheEnclosingClassOfStaticClass(CtClassTest.java:106)

[ERROR] testDefaultConstructorAreOk(spoon.test.ctClass.CtClassTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctClass.CtClassTest.testDefaultConstructorAreOk(CtClassTest.java:210)

[ERROR] testCloneAnonymousClassInvocation(spoon.test.ctClass.CtClassTest)  Time elapsed: 0.065 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctClass.CtClassTest.testCloneAnonymousClassInvocation(CtClassTest.java:225)

[ERROR] testAllTypeReferencesToALocalTypeShouldNotStartWithNumber(spoon.test.ctClass.CtClassTest)  Time elapsed: 0.063 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctClass.CtClassTest.testAllTypeReferencesToALocalTypeShouldNotStartWithNumber(CtClassTest.java:143)

[ERROR] testNoClasspathWithSuperClassOfAClassInAnInterface(spoon.test.ctClass.CtClassTest)  Time elapsed: 0.067 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctClass.CtClassTest.testNoClasspathWithSuperClassOfAClassInAnInterface(CtClassTest.java:129)

[ERROR] getConstructor(spoon.test.ctClass.CtClassTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctClass.CtClassTest.getConstructor(CtClassTest.java:50)

[ERROR] testSpoonShouldInferImplicitPackageInNoClasspath(spoon.test.ctClass.CtClassTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctClass.CtClassTest.testSpoonShouldInferImplicitPackageInNoClasspath(CtClassTest.java:188)

[INFO] Running spoon.test.varargs.VarArgsTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.036 s <<< FAILURE! - in spoon.test.varargs.VarArgsTest
[ERROR] testModelBuildingInitializer(spoon.test.varargs.VarArgsTest)  Time elapsed: 0.036 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.varargs.VarArgsTest.testModelBuildingInitializer(VarArgsTest.java:18)

[INFO] Running spoon.test.condition.ConditionalTest
[ERROR] Tests run: 4, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.159 s <<< FAILURE! - in spoon.test.condition.ConditionalTest
[ERROR] testNoBlockInConditionAndLoop(spoon.test.condition.ConditionalTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.condition.ConditionalTest.testNoBlockInConditionAndLoop(ConditionalTest.java:51)

[ERROR] testConditionalWithAssignment(spoon.test.condition.ConditionalTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.condition.ConditionalTest.testConditionalWithAssignment(ConditionalTest.java:29)

[ERROR] testBlockInConditionAndLoop(spoon.test.condition.ConditionalTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.condition.ConditionalTest.testBlockInConditionAndLoop(ConditionalTest.java:36)

[ERROR] testConditional(spoon.test.condition.ConditionalTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.condition.ConditionalTest.testConditional(ConditionalTest.java:22)

[INFO] Running spoon.test.jdtimportbuilder.ImportBuilderTest
[ERROR] Tests run: 8, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.399 s <<< FAILURE! - in spoon.test.jdtimportbuilder.ImportBuilderTest
[ERROR] testWithImportFromItf(spoon.test.jdtimportbuilder.ImportBuilderTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.jdtimportbuilder.ImportBuilderTest.testWithImportFromItf(ImportBuilderTest.java:166)

[ERROR] testWithSimpleImportNoAutoimport(spoon.test.jdtimportbuilder.ImportBuilderTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.jdtimportbuilder.ImportBuilderTest.testWithSimpleImportNoAutoimport(ImportBuilderTest.java:70)

[ERROR] testWithSimpleImport(spoon.test.jdtimportbuilder.ImportBuilderTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.jdtimportbuilder.ImportBuilderTest.testWithSimpleImport(ImportBuilderTest.java:48)

[ERROR] testInternalImportWhenNoClasspath(spoon.test.jdtimportbuilder.ImportBuilderTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.jdtimportbuilder.ImportBuilderTest.testInternalImportWhenNoClasspath(ImportBuilderTest.java:84)

[INFO] Running spoon.test.comparison.EqualTest
[ERROR] Tests run: 4, Failures: 1, Errors: 3, Skipped: 0, Time elapsed: 0.183 s <<< FAILURE! - in spoon.test.comparison.EqualTest
[ERROR] testEqualsMultitype(spoon.test.comparison.EqualTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        try{}catch(RuntimeException | AssertionError e){};
    }
}
	at spoon.test.comparison.EqualTest.testEqualsMultitype(EqualTest.java:82)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.comparison.EqualTest.testEqualsMultitype(EqualTest.java:82)

[ERROR] testEqualsActualTypeRef(spoon.test.comparison.EqualTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        java.util.List<String> l ;
    }
}
	at spoon.test.comparison.EqualTest.testEqualsActualTypeRef(EqualTest.java:95)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.comparison.EqualTest.testEqualsActualTypeRef(EqualTest.java:95)

[ERROR] testEqualsEmptyException(spoon.test.comparison.EqualTest)  Time elapsed: 0.048 s  <<< FAILURE!
java.lang.AssertionError: Unable create model
	at spoon.test.comparison.EqualTest.testEqualsEmptyException(EqualTest.java:40)

[ERROR] testEqualsComment(spoon.test.comparison.EqualTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        int i=0;
    }
}
	at spoon.test.comparison.EqualTest.testEqualsComment(EqualTest.java:72)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.comparison.EqualTest.testEqualsComment(EqualTest.java:72)

[INFO] Running spoon.test.type.TypeTest
[ERROR] Tests run: 13, Failures: 0, Errors: 10, Skipped: 0, Time elapsed: 0.498 s <<< FAILURE! - in spoon.test.type.TypeTest
[ERROR] testTypeMemberOrder(spoon.test.type.TypeTest)  Time elapsed: 0.036 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.type.TypeTest.testTypeMemberOrder(TypeTest.java:388)

[ERROR] testTypeAccessForTypeAccessInInstanceOf(spoon.test.type.TypeTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.type.TypeTest.testTypeAccessForTypeAccessInInstanceOf(TypeTest.java:121)

[ERROR] testTypeAccessOnPrimitive(spoon.test.type.TypeTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { Class klass=null;  boolean x= (klass == short.class);}};;
    }
}
	at spoon.test.type.TypeTest.testTypeAccessOnPrimitive(TypeTest.java:100)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.type.TypeTest.testTypeAccessOnPrimitive(TypeTest.java:100)

[ERROR] testTypeReferenceInGenericsAndCasts(spoon.test.type.TypeTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.type.TypeTest.testTypeReferenceInGenericsAndCasts(TypeTest.java:233)

[ERROR] testTypeAccessForDotClass(spoon.test.type.TypeTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.type.TypeTest.testTypeAccessForDotClass(TypeTest.java:73)

[ERROR] testIntersectionTypeOnTopLevelType(spoon.test.type.TypeTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.type.TypeTest.testIntersectionTypeOnTopLevelType(TypeTest.java:267)

[ERROR] test(spoon.test.type.TypeTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.type.TypeTest.test(TypeTest.java:170)

[ERROR] testPolyTypBindingInTernaryExpression(spoon.test.type.TypeTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.type.TypeTest.testPolyTypBindingInTernaryExpression(TypeTest.java:311)

[ERROR] testIntersectionTypeReferenceInGenericsAndCasts(spoon.test.type.TypeTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.type.TypeTest.testIntersectionTypeReferenceInGenericsAndCasts(TypeTest.java:188)

[ERROR] testTypeAccessOfArrayObjectInFullyQualifiedName(spoon.test.type.TypeTest)  Time elapsed: 0.06 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.type.TypeTest.testTypeAccessOfArrayObjectInFullyQualifiedName(TypeTest.java:146)

[INFO] Running spoon.test.factory.CodeFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.factory.CodeFactoryTest
[INFO] Running spoon.test.factory.FieldFactoryTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.106 s <<< FAILURE! - in spoon.test.factory.FieldFactoryTest
[ERROR] testCreateFromSource(spoon.test.factory.FieldFactoryTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.factory.FieldFactoryTest.testCreateFromSource(FieldFactoryTest.java:48)

[ERROR] testCreate(spoon.test.factory.FieldFactoryTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.factory.FieldFactoryTest.testCreate(FieldFactoryTest.java:27)

[INFO] Running spoon.test.factory.FactoryTest
[ERROR] Tests run: 6, Failures: 0, Errors: 6, Skipped: 0, Time elapsed: 1.21 s <<< FAILURE! - in spoon.test.factory.FactoryTest
[ERROR] testClone(spoon.test.factory.FactoryTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.factory.FactoryTest.testClone(FactoryTest.java:40)

[ERROR] testIncrementalModel(spoon.test.factory.FactoryTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.factory.FactoryTest.testIncrementalModel(FactoryTest.java:160)

[ERROR] specificationCoreFactoryCreate(spoon.test.factory.FactoryTest)  Time elapsed: 0.909 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.factory.FactoryTest.specificationCoreFactoryCreate(FactoryTest.java:197)

[ERROR] testCtModel(spoon.test.factory.FactoryTest)  Time elapsed: 0.075 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.factory.FactoryTest.testCtModel(FactoryTest.java:108)

[ERROR] testClassAccessCreatedFromFactories(spoon.test.factory.FactoryTest)  Time elapsed: 0.064 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.factory.FactoryTest.testClassAccessCreatedFromFactories(FactoryTest.java:83)

[ERROR] testFactoryOverriding(spoon.test.factory.FactoryTest)  Time elapsed: 0.062 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.factory.FactoryTest.testFactoryOverriding(FactoryTest.java:74)

[INFO] Running spoon.test.factory.ConstructorFactoryTest
[ERROR] Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.066 s <<< FAILURE! - in spoon.test.factory.ConstructorFactoryTest
[ERROR] testCreate(spoon.test.factory.ConstructorFactoryTest)  Time elapsed: 0.064 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.factory.ConstructorFactoryTest.testCreate(ConstructorFactoryTest.java:30)

[INFO] Running spoon.test.factory.TypeFactoryTest
[ERROR] Tests run: 4, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.199 s <<< FAILURE! - in spoon.test.factory.TypeFactoryTest
[ERROR] testGetClassInAnInterface(spoon.test.factory.TypeFactoryTest)  Time elapsed: 0.089 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.factory.TypeFactoryTest.testGetClassInAnInterface(TypeFactoryTest.java:52)

[ERROR] testGetClassWithDollarAndNestedClass(spoon.test.factory.TypeFactoryTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.factory.TypeFactoryTest.testGetClassWithDollarAndNestedClass(TypeFactoryTest.java:70)

[INFO] Running spoon.test.factory.AnnotationFactoryTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.047 s <<< FAILURE! - in spoon.test.factory.AnnotationFactoryTest
[ERROR] testAnnotate(spoon.test.factory.AnnotationFactoryTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.factory.AnnotationFactoryTest.testAnnotate(AnnotationFactoryTest.java:19)

[INFO] Running spoon.test.factory.ExecutableFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.factory.ExecutableFactoryTest
[INFO] Running spoon.test.factory.ClassFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.factory.ClassFactoryTest
[INFO] Running spoon.test.secondaryclasses.ClassesTest
[ERROR] Tests run: 6, Failures: 0, Errors: 6, Skipped: 0, Time elapsed: 0.29 s <<< FAILURE! - in spoon.test.secondaryclasses.ClassesTest
[ERROR] testIsAnonymousMethodInCtClass(spoon.test.secondaryclasses.ClassesTest)  Time elapsed: 0.064 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.secondaryclasses.ClassesTest.testIsAnonymousMethodInCtClass(ClassesTest.java:103)

[ERROR] testAnonymousClass(spoon.test.secondaryclasses.ClassesTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.secondaryclasses.ClassesTest.testAnonymousClass(ClassesTest.java:61)

[ERROR] testClassWithInternalPublicClassOrInterf(spoon.test.secondaryclasses.ClassesTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.secondaryclasses.ClassesTest.testClassWithInternalPublicClassOrInterf(ClassesTest.java:39)

[ERROR] testInnerClassContruction(spoon.test.secondaryclasses.ClassesTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.secondaryclasses.ClassesTest.testInnerClassContruction(ClassesTest.java:141)

[ERROR] testTopLevel(spoon.test.secondaryclasses.ClassesTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.secondaryclasses.ClassesTest.testTopLevel(ClassesTest.java:126)

[ERROR] testAnonymousClassInStaticField(spoon.test.secondaryclasses.ClassesTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.secondaryclasses.ClassesTest.testAnonymousClassInStaticField(ClassesTest.java:149)

[INFO] Running spoon.test.arrays.ArraysTest
[ERROR] Tests run: 4, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.184 s <<< FAILURE! - in spoon.test.arrays.ArraysTest
[ERROR] testInitializeWithNewArray(spoon.test.arrays.ArraysTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.arrays.ArraysTest.testInitializeWithNewArray(ArraysTest.java:46)

[ERROR] testCtNewArrayInnerCtNewArray(spoon.test.arrays.ArraysTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.arrays.ArraysTest.testCtNewArrayInnerCtNewArray(ArraysTest.java:71)

[ERROR] testArrayReferences(spoon.test.arrays.ArraysTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.arrays.ArraysTest.testArrayReferences(ArraysTest.java:24)

[ERROR] testCtNewArrayWitComments(spoon.test.arrays.ArraysTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.arrays.ArraysTest.testCtNewArrayWitComments(ArraysTest.java:86)

[INFO] Running spoon.test.limits.utils.InternalTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.093 s <<< FAILURE! - in spoon.test.limits.utils.InternalTest
[ERROR] testInternalClasses(spoon.test.limits.utils.InternalTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.limits.utils.InternalTest.testInternalClasses(InternalTest.java:19)

[ERROR] testStaticFinalFieldInAnonymousClass(spoon.test.limits.utils.InternalTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.limits.utils.InternalTest.testStaticFinalFieldInAnonymousClass(InternalTest.java:49)

[INFO] Running spoon.test.trycatch.TryCatchTest
[ERROR] Tests run: 12, Failures: 0, Errors: 12, Skipped: 0, Time elapsed: 0.646 s <<< FAILURE! - in spoon.test.trycatch.TryCatchTest
[ERROR] testFullyQualifiedException(spoon.test.trycatch.TryCatchTest)  Time elapsed: 0.073 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { try{}catch(java.lang.RuntimeException e){}}};;
    }
}
	at spoon.test.trycatch.TryCatchTest.testFullyQualifiedException(TryCatchTest.java:66)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.trycatch.TryCatchTest.testFullyQualifiedException(TryCatchTest.java:66)

[ERROR] testMultiTryCatchWithCustomExceptions(spoon.test.trycatch.TryCatchTest)  Time elapsed: 0.076 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.trycatch.TryCatchTest.testMultiTryCatchWithCustomExceptions(TryCatchTest.java:179)

[ERROR] testRethrowingExceptionsJava7(spoon.test.trycatch.TryCatchTest)  Time elapsed: 0.069 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.trycatch.TryCatchTest.testRethrowingExceptionsJava7(TryCatchTest.java:129)

[ERROR] testCatchWithUnknownExceptions(spoon.test.trycatch.TryCatchTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.trycatch.TryCatchTest.testCatchWithUnknownExceptions(TryCatchTest.java:301)

[ERROR] testTryWithResources(spoon.test.trycatch.TryCatchTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.trycatch.TryCatchTest.testTryWithResources(TryCatchTest.java:164)

[ERROR] testExceptionJava7(spoon.test.trycatch.TryCatchTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { try{}catch(RuntimeException | Error e){System.exit(0);}}};;
    }
}
	at spoon.test.trycatch.TryCatchTest.testExceptionJava7(TryCatchTest.java:105)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.trycatch.TryCatchTest.testExceptionJava7(TryCatchTest.java:105)

[ERROR] testCatchOrder(spoon.test.trycatch.TryCatchTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { try{}catch(RuntimeException e){java.lang.System.exit(0);}      catch(Exception e){}}};;
    }
}
	at spoon.test.trycatch.TryCatchTest.testCatchOrder(TryCatchTest.java:82)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.trycatch.TryCatchTest.testCatchOrder(TryCatchTest.java:82)

[ERROR] testModelBuildingInitializer(spoon.test.trycatch.TryCatchTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.trycatch.TryCatchTest.testModelBuildingInitializer(TryCatchTest.java:44)

[ERROR] testCompileMultiTryCatchWithCustomExceptions(spoon.test.trycatch.TryCatchTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.trycatch.TryCatchTest.testCompileMultiTryCatchWithCustomExceptions(TryCatchTest.java:196)

[ERROR] testTryCatchVariableGetType(spoon.test.trycatch.TryCatchTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { try{}catch(RuntimeException e){System.exit(0);}}};;
    }
}
	at spoon.test.trycatch.TryCatchTest.testTryCatchVariableGetType(TryCatchTest.java:218)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.trycatch.TryCatchTest.testTryCatchVariableGetType(TryCatchTest.java:218)

[ERROR] testTryWithOneResource(spoon.test.trycatch.TryCatchTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.trycatch.TryCatchTest.testTryWithOneResource(TryCatchTest.java:152)

[ERROR] testCatchWithExplicitFinalVariable(spoon.test.trycatch.TryCatchTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.trycatch.TryCatchTest.testCatchWithExplicitFinalVariable(TryCatchTest.java:267)

[INFO] Running spoon.test.lambda.LambdaTest
[ERROR] Tests run: 22, Failures: 0, Errors: 22, Skipped: 0, Time elapsed: 1.498 s <<< FAILURE! - in spoon.test.lambda.LambdaTest
[ERROR] testLambdaExpressionWithStatementBodyAndWithoutParameters(spoon.test.lambda.LambdaTest)  Time elapsed: 0.071 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testFieldAccessInLambdaNoClassPath(spoon.test.lambda.LambdaTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testLambdaExpressionWithExpressionBodyAndWithMultiParameters(spoon.test.lambda.LambdaTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testGetOverriddenMethodWithFunction(spoon.test.lambda.LambdaTest)  Time elapsed: 0.065 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testLambdaExpressionWithExpressionBodyAndWithMultiParametersTyped(spoon.test.lambda.LambdaTest)  Time elapsed: 0.068 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testGetDeclarationOnTypeParameterFromLambda(spoon.test.lambda.LambdaTest)  Time elapsed: 0.06 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testLambdaExpressionInIfConditional(spoon.test.lambda.LambdaTest)  Time elapsed: 0.062 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testLambdaFilter(spoon.test.lambda.LambdaTest)  Time elapsed: 0.069 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testLambdaMethod(spoon.test.lambda.LambdaTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testTypeParameterWithImplicitArrayType(spoon.test.lambda.LambdaTest)  Time elapsed: 0.06 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testLambdaExpressionWithExpressionBodyAndWithParameterTyped(spoon.test.lambda.LambdaTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testBuildExecutableReferenceFromLambda(spoon.test.lambda.LambdaTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testLambdaExpressionWithExpressionBodyAndWithoutTypeForParameter(spoon.test.lambda.LambdaTest)  Time elapsed: 0.06 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testEqualsLambdaParameterRef(spoon.test.lambda.LambdaTest)  Time elapsed: 0.065 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testTypeParameterOfLambdaWithoutType2(spoon.test.lambda.LambdaTest)  Time elapsed: 0.074 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testFieldAccessInLambdaNoClassPathExternal1Example(spoon.test.lambda.LambdaTest)  Time elapsed: 0.065 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testTypeAccessInLambdaNoClassPath(spoon.test.lambda.LambdaTest)  Time elapsed: 0.081 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testLambdaExpressionWithExpressionBodyAndWithoutParameter(spoon.test.lambda.LambdaTest)  Time elapsed: 0.074 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testCompileLambdaGeneratedBySpoon(spoon.test.lambda.LambdaTest)  Time elapsed: 0.072 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testTypeParameterOfLambdaWithoutType(spoon.test.lambda.LambdaTest)  Time elapsed: 0.068 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testLambdaExpressionWithStatementBodyAndWithParameter(spoon.test.lambda.LambdaTest)  Time elapsed: 0.097 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[ERROR] testLambdaWithPrimitiveParameter(spoon.test.lambda.LambdaTest)  Time elapsed: 0.081 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.lambda.LambdaTest.setUp(LambdaTest.java:69)

[INFO] Running spoon.test.refactoring.CtRenameLocalVariableRefactoringTest
[ERROR] Tests run: 4, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.186 s <<< FAILURE! - in spoon.test.refactoring.CtRenameLocalVariableRefactoringTest
[ERROR] testRenameAllLocalVariablesOfRenameTestSubject(spoon.test.refactoring.CtRenameLocalVariableRefactoringTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.refactoring.CtRenameLocalVariableRefactoringTest.testRenameAllLocalVariablesOfRenameTestSubject(CtRenameLocalVariableRefactoringTest.java:63)

[ERROR] testRenameLocalVariableToSameName(spoon.test.refactoring.CtRenameLocalVariableRefactoringTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.refactoring.CtRenameLocalVariableRefactoringTest.testRenameLocalVariableToSameName(CtRenameLocalVariableRefactoringTest.java:253)

[ERROR] testRefactorWrongUsage(spoon.test.refactoring.CtRenameLocalVariableRefactoringTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.refactoring.CtRenameLocalVariableRefactoringTest.testRefactorWrongUsage(CtRenameLocalVariableRefactoringTest.java:205)

[INFO] Running spoon.test.refactoring.MethodsRefactoringTest
[ERROR] Tests run: 5, Failures: 0, Errors: 5, Skipped: 0, Time elapsed: 0.324 s <<< FAILURE! - in spoon.test.refactoring.MethodsRefactoringTest
[ERROR] testAllMethodsSameSignatureFunction(spoon.test.refactoring.MethodsRefactoringTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.refactoring.MethodsRefactoringTest.testAllMethodsSameSignatureFunction(MethodsRefactoringTest.java:104)

[ERROR] testCtParameterRemoveRefactoring(spoon.test.refactoring.MethodsRefactoringTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.refactoring.MethodsRefactoringTest.testCtParameterRemoveRefactoring(MethodsRefactoringTest.java:315)

[ERROR] testExecutableReferenceFilter(spoon.test.refactoring.MethodsRefactoringTest)  Time elapsed: 0.069 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.refactoring.MethodsRefactoringTest.testExecutableReferenceFilter(MethodsRefactoringTest.java:248)

[ERROR] testSubInheritanceHierarchyFunction(spoon.test.refactoring.MethodsRefactoringTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.refactoring.MethodsRefactoringTest.testSubInheritanceHierarchyFunction(MethodsRefactoringTest.java:49)

[ERROR] testCtParameterRemoveRefactoringValidationCheck(spoon.test.refactoring.MethodsRefactoringTest)  Time elapsed: 0.093 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.refactoring.MethodsRefactoringTest.testCtParameterRemoveRefactoringValidationCheck(MethodsRefactoringTest.java:345)

[INFO] Running spoon.test.refactoring.RefactoringTest
[ERROR] Tests run: 4, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.232 s <<< FAILURE! - in spoon.test.refactoring.RefactoringTest
[ERROR] testTransformedInstanceofAfterATransformation(spoon.test.refactoring.RefactoringTest)  Time elapsed: 0.064 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.refactoring.RefactoringTest.testTransformedInstanceofAfterATransformation(RefactoringTest.java:105)

[ERROR] testRefactoringClassChangeAllCtTypeReferenceAssociatedWithClassConcerned(spoon.test.refactoring.RefactoringTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.refactoring.RefactoringTest.testRefactoringClassChangeAllCtTypeReferenceAssociatedWithClassConcerned(RefactoringTest.java:28)

[ERROR] testThisInConstructor(spoon.test.refactoring.RefactoringTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.refactoring.RefactoringTest.testThisInConstructor(RefactoringTest.java:66)

[ERROR] testThisInConstructorAfterATransformation(spoon.test.refactoring.RefactoringTest)  Time elapsed: 0.067 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.refactoring.RefactoringTest.testThisInConstructorAfterATransformation(RefactoringTest.java:86)

[INFO] Running spoon.test.ctBodyHolder.CtBodyHolderTest
[ERROR] Tests run: 6, Failures: 0, Errors: 6, Skipped: 0, Time elapsed: 0.324 s <<< FAILURE! - in spoon.test.ctBodyHolder.CtBodyHolderTest
[ERROR] testTryCatch(spoon.test.ctBodyHolder.CtBodyHolderTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctBodyHolder.CtBodyHolderTest.testTryCatch(CtBodyHolderTest.java:48)

[ERROR] testWhileWithBlock(spoon.test.ctBodyHolder.CtBodyHolderTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctBodyHolder.CtBodyHolderTest.testWhileWithBlock(CtBodyHolderTest.java:87)

[ERROR] testForWithStatement(spoon.test.ctBodyHolder.CtBodyHolderTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctBodyHolder.CtBodyHolderTest.testForWithStatement(CtBodyHolderTest.java:63)

[ERROR] testForWithBlock(spoon.test.ctBodyHolder.CtBodyHolderTest)  Time elapsed: 0.07 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctBodyHolder.CtBodyHolderTest.testForWithBlock(CtBodyHolderTest.java:75)

[ERROR] testMethod(spoon.test.ctBodyHolder.CtBodyHolderTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctBodyHolder.CtBodyHolderTest.testMethod(CtBodyHolderTest.java:39)

[ERROR] testConstructor(spoon.test.ctBodyHolder.CtBodyHolderTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctBodyHolder.CtBodyHolderTest.testConstructor(CtBodyHolderTest.java:30)

[INFO] Running spoon.test.ctBlock.TestCtBlock
[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.124 s <<< FAILURE! - in spoon.test.ctBlock.TestCtBlock
[ERROR] testAddStatementInBlock(spoon.test.ctBlock.TestCtBlock)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctBlock.TestCtBlock.testAddStatementInBlock(TestCtBlock.java:57)

[ERROR] testRemoveStatement(spoon.test.ctBlock.TestCtBlock)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctBlock.TestCtBlock.testRemoveStatement(TestCtBlock.java:29)

[ERROR] testAddStatementInCase(spoon.test.ctBlock.TestCtBlock)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctBlock.TestCtBlock.testAddStatementInCase(TestCtBlock.java:83)

[INFO] Running spoon.test.filters.FilterTest
[ERROR] Tests run: 43, Failures: 0, Errors: 43, Skipped: 0, Time elapsed: 1.927 s <<< FAILURE! - in spoon.test.filters.FilterTest
[ERROR] testBoundQuery(spoon.test.filters.FilterTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testParentFunction(spoon.test.filters.FilterTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testOverridingMethodFromSubClassOfInterface(spoon.test.filters.FilterTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testEmptyQuery(spoon.test.filters.FilterTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testFilterChildrenWithoutFilterQueryStep(spoon.test.filters.FilterTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testQueryBuilderWithFilterChain(spoon.test.filters.FilterTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testReuseOfQuery(spoon.test.filters.FilterTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testgetTopDefinitions(spoon.test.filters.FilterTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testLineFilter(spoon.test.filters.FilterTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testFilters(spoon.test.filters.FilterTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testElementMapFunctionNull(spoon.test.filters.FilterTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testClassCastExceptionOnForEach(spoon.test.filters.FilterTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testReturnOrThrowFilter(spoon.test.filters.FilterTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testCtScannerListener(spoon.test.filters.FilterTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testInvocationFilterWithExecutableInLibrary(spoon.test.filters.FilterTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testReflectionBasedTypeFilter(spoon.test.filters.FilterTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testOverridingMethodFromAbstractClass(spoon.test.filters.FilterTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testOverridingMethodFromSubClassOfAbstractClass(spoon.test.filters.FilterTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testEarlyTerminatingQuery(spoon.test.filters.FilterTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testSubInheritanceHierarchyResolver(spoon.test.filters.FilterTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] intersectionOfTwoFilters(spoon.test.filters.FilterTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testAnnotationFilter(spoon.test.filters.FilterTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testQueryInQuery(spoon.test.filters.FilterTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] filteredElementsAreOfTheCorrectType(spoon.test.filters.FilterTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testOverriddenMethodFromAbstractClass(spoon.test.filters.FilterTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testInvalidQueryStepFailurePolicyIgnore(spoon.test.filters.FilterTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testElementMapFunction(spoon.test.filters.FilterTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] unionOfTwoFilters(spoon.test.filters.FilterTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testFilterQueryStep(spoon.test.filters.FilterTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] classCastExceptionIsNotThrown(spoon.test.filters.FilterTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testInvalidQueryStep(spoon.test.filters.FilterTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testElementMapConsumableFunction(spoon.test.filters.FilterTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testOverriddenMethodFromSubClassOfInterface(spoon.test.filters.FilterTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testOverridingMethodFromInterface(spoon.test.filters.FilterTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testElementMapFunctionOtherContracts(spoon.test.filters.FilterTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testNameFilterWithGenericType(spoon.test.filters.FilterTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testReuseOfBaseQuery(spoon.test.filters.FilterTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testQueryWithOptionalNumberOfInputs(spoon.test.filters.FilterTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testQueryStepScannWithConsumer(spoon.test.filters.FilterTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testFieldAccessFilter(spoon.test.filters.FilterTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testOverriddenMethodsFromSubClassOfAbstractClass(spoon.test.filters.FilterTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testFunctionQueryStep(spoon.test.filters.FilterTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[ERROR] testOverriddenMethodFromInterface(spoon.test.filters.FilterTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.filters.FilterTest.setup(FilterTest.java:99)

[INFO] Running spoon.test.filters.CUFilterTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.128 s - in spoon.test.filters.CUFilterTest
[INFO] Running spoon.test.targeted.TargetedExpressionTest
[ERROR] Tests run: 17, Failures: 0, Errors: 16, Skipped: 0, Time elapsed: 0.825 s <<< FAILURE! - in spoon.test.targeted.TargetedExpressionTest
[ERROR] testStaticTargetsOfInv(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testStaticTargetsOfInv(TargetedExpressionTest.java:302)

[ERROR] testTargetsOfFieldAccess(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testTargetsOfFieldAccess(TargetedExpressionTest.java:124)

[ERROR] testTargetOfFieldAccess(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testTargetOfFieldAccess(TargetedExpressionTest.java:84)

[ERROR] testInitializeFieldAccessInNoclasspathMode(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testInitializeFieldAccessInNoclasspathMode(TargetedExpressionTest.java:422)

[ERROR] testStaticTargetsOfFieldAccessNoClasspath(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testStaticTargetsOfFieldAccessNoClasspath(TargetedExpressionTest.java:243)

[ERROR] testCtThisAccess(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testCtThisAccess(TargetedExpressionTest.java:68)

[ERROR] testTargetsOfFieldAccessInInnerClass(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testTargetsOfFieldAccessInInnerClass(TargetedExpressionTest.java:183)

[ERROR] testTargetsOfStaticFieldAccess(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testTargetsOfStaticFieldAccess(TargetedExpressionTest.java:150)

[ERROR] testClassDeclaredInALambda(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testClassDeclaredInALambda(TargetedExpressionTest.java:435)

[ERROR] testNotTargetedExpression(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testNotTargetedExpression(TargetedExpressionTest.java:98)

[ERROR] testTargetsOfFieldInAnonymousClass(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testTargetsOfFieldInAnonymousClass(TargetedExpressionTest.java:216)

[ERROR] testTargetsOfInv(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.065 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testTargetsOfInv(TargetedExpressionTest.java:270)

[ERROR] testTargetsOfInvInInnerClass(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testTargetsOfInvInInnerClass(TargetedExpressionTest.java:329)

[ERROR] testCastWriteWithGenerics(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testCastWriteWithGenerics(TargetedExpressionTest.java:113)

[ERROR] testTargetsOfInvInAnonymousClass(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testTargetsOfInvInAnonymousClass(TargetedExpressionTest.java:367)

[ERROR] testStaticTargetsOfInvNoClasspath(spoon.test.targeted.TargetedExpressionTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.targeted.TargetedExpressionTest.testStaticTargetsOfInvNoClasspath(TargetedExpressionTest.java:394)

[INFO] Running spoon.test.casts.CastTest
[ERROR] Tests run: 5, Failures: 0, Errors: 5, Skipped: 0, Time elapsed: 0.244 s <<< FAILURE! - in spoon.test.casts.CastTest
[ERROR] testCase4(spoon.test.casts.CastTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.casts.CastTest.testCase4(CastTest.java:78)

[ERROR] testCast1(spoon.test.casts.CastTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { String x=(String) new Object();}};;
    }
}
	at spoon.test.casts.CastTest.testCast1(CastTest.java:30)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.casts.CastTest.testCast1(CastTest.java:30)

[ERROR] testCast2(spoon.test.casts.CastTest)  Time elapsed: 0.06 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { Class<String> x=(Class<String>) new Object();}};;
    }
}
	at spoon.test.casts.CastTest.testCast2(CastTest.java:47)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.casts.CastTest.testCast2(CastTest.java:47)

[ERROR] testCast3(spoon.test.casts.CastTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X<A> {void addConsumedAnnotationType(Class<? extends A> annotationType) {}
        public void foo() { Class<?> x = null; addConsumedAnnotationType((Class<A>) x);}};;
    }
}
	at spoon.test.casts.CastTest.testCast3(CastTest.java:64)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.casts.CastTest.testCast3(CastTest.java:64)

[ERROR] testTypeAnnotationOnCast(spoon.test.casts.CastTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.casts.CastTest.testTypeAnnotationOnCast(CastTest.java:96)

[INFO] Running spoon.test.support.ResourceTest
[ERROR] Tests run: 4, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.096 s <<< FAILURE! - in spoon.test.support.ResourceTest
[ERROR] testFilteringFolder(spoon.test.support.ResourceTest)  Time elapsed: 0.094 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.support.ResourceTest.testFilteringFolder(ResourceTest.java:76)

[INFO] Running spoon.test.javadoc.JavaDocTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.081 s <<< FAILURE! - in spoon.test.javadoc.JavaDocTest
[ERROR] testJavaDocReprint(spoon.test.javadoc.JavaDocTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.javadoc.JavaDocTest.testJavaDocReprint(JavaDocTest.java:26)

[ERROR] testJavadocNotPresentInAST(spoon.test.javadoc.JavaDocTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.javadoc.JavaDocTest.testJavadocNotPresentInAST(JavaDocTest.java:66)

[INFO] Running spoon.test.replace.ReplaceParametrizedTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.689 s <<< FAILURE! - in spoon.test.replace.ReplaceParametrizedTest
[ERROR] initializationError(spoon.test.replace.ReplaceParametrizedTest)  Time elapsed: 0 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceParametrizedTest.data(ReplaceParametrizedTest.java:48)

[INFO] Running spoon.test.replace.ReplaceTest
[ERROR] Tests run: 17, Failures: 0, Errors: 17, Skipped: 0, Time elapsed: 0.741 s <<< FAILURE! - in spoon.test.replace.ReplaceTest
[ERROR] testReplaceSet(spoon.test.replace.ReplaceTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceAPackageReferenceByAnotherOne(spoon.test.replace.ReplaceTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceAllTypeRefenceWithGenerics(spoon.test.replace.ReplaceTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceMethod(spoon.test.replace.ReplaceTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceTwoMethods(spoon.test.replace.ReplaceTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceExecutableReferenceByAnotherOne(spoon.test.replace.ReplaceTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceAParameterReferenceToFieldReference(spoon.test.replace.ReplaceTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceBlockTry(spoon.test.replace.ReplaceTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceStatement(spoon.test.replace.ReplaceTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceReplace(spoon.test.replace.ReplaceTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceExpression(spoon.test.replace.ReplaceTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceStmtByList(spoon.test.replace.ReplaceTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceStmtByListStatements(spoon.test.replace.ReplaceTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceStmtByListStatementsAndNull(spoon.test.replace.ReplaceTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceBlock(spoon.test.replace.ReplaceTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceField(spoon.test.replace.ReplaceTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[ERROR] testReplaceIntegerReference(spoon.test.replace.ReplaceTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.replace.ReplaceTest.setup(ReplaceTest.java:60)

[INFO] Running spoon.test.fieldaccesses.FieldAccessTest
[ERROR] Tests run: 16, Failures: 0, Errors: 16, Skipped: 0, Time elapsed: 1.076 s <<< FAILURE! - in spoon.test.fieldaccesses.FieldAccessTest
[ERROR] testFieldAccessOnUnknownType(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testFieldAccessOnUnknownType(FieldAccessTest.java:367)

[ERROR] testModelBuildingFieldAccesses(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testModelBuildingFieldAccesses(FieldAccessTest.java:53)

[ERROR] testBUG20160112(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testBUG20160112(FieldAccessTest.java:143)

[ERROR] testFieldAccessNoClasspath(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testFieldAccessNoClasspath(FieldAccessTest.java:210)

[ERROR] testTargetedAccessPosition(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testTargetedAccessPosition(FieldAccessTest.java:154)

[ERROR] testTypeDeclaredInAnonymousClass(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.151 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testTypeDeclaredInAnonymousClass(FieldAccessTest.java:285)

[ERROR] testFieldAccessAutoExplicit(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.16 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testFieldAccessAutoExplicit(FieldAccessTest.java:402)

[ERROR] testFieldAccessInLambda(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testFieldAccessInLambda(FieldAccessTest.java:177)

[ERROR] testFieldAccessDeclaredInADefaultClass(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testFieldAccessDeclaredInADefaultClass(FieldAccessTest.java:300)

[ERROR] testFieldWriteWithPlusEqualsOperation(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testFieldWriteWithPlusEqualsOperation(FieldAccessTest.java:261)

[ERROR] testGetReference(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.072 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testGetReference(FieldAccessTest.java:392)

[ERROR] testIncrementationOnAVarIsAUnaryOperator(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testIncrementationOnAVarIsAUnaryOperator(FieldAccessTest.java:237)

[ERROR] testTypeOfFieldAccess(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testTypeOfFieldAccess(FieldAccessTest.java:338)

[ERROR] testFieldAccessWithoutAnyImport(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testFieldAccessWithoutAnyImport(FieldAccessTest.java:351)

[ERROR] testFieldAccessInAnonymousClass(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testFieldAccessInAnonymousClass(FieldAccessTest.java:194)

[ERROR] testBCUBug20140402(spoon.test.fieldaccesses.FieldAccessTest)  Time elapsed: 0.069 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.fieldaccesses.FieldAccessTest.testBCUBug20140402(FieldAccessTest.java:101)

[INFO] Running spoon.test.initializers.InitializerTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.081 s <<< FAILURE! - in spoon.test.initializers.InitializerTest
[ERROR] testModelBuildingStaticInitializer(spoon.test.initializers.InitializerTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.initializers.InitializerTest.testModelBuildingStaticInitializer(InitializerTest.java:21)

[ERROR] testModelBuildingInitializer(spoon.test.initializers.InitializerTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.initializers.InitializerTest.testModelBuildingInitializer(InitializerTest.java:41)

[INFO] Running spoon.test.reflect.visitor.ReferenceQueryTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.038 s <<< FAILURE! - in spoon.test.reflect.visitor.ReferenceQueryTest
[ERROR] getAllTypeReferencesInEnum(spoon.test.reflect.visitor.ReferenceQueryTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reflect.visitor.ReferenceQueryTest.getAllTypeReferencesInEnum(ReferenceQueryTest.java:18)

[INFO] Running spoon.test.reflect.meta.MetaModelTest
[ERROR] Tests run: 8, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.939 s <<< FAILURE! - in spoon.test.reflect.meta.MetaModelTest
[ERROR] spoonMetaModelTest(spoon.test.reflect.meta.MetaModelTest)  Time elapsed: 0.606 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.reflect.meta.MetaModelTest.spoonMetaModelTest(MetaModelTest.java:47)

[INFO] Running spoon.test.literal.LiteralTest
[ERROR] Tests run: 5, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.245 s <<< FAILURE! - in spoon.test.literal.LiteralTest
[ERROR] testBuildLiternal(spoon.test.literal.LiteralTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.literal.LiteralTest.testBuildLiternal(LiteralTest.java:57)

[ERROR] testCharLiteralInNoClasspath(spoon.test.literal.LiteralTest)  Time elapsed: 0.077 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.literal.LiteralTest.testCharLiteralInNoClasspath(LiteralTest.java:30)

[ERROR] testLiteralInForEachWithNoClasspath(spoon.test.literal.LiteralTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.literal.LiteralTest.testLiteralInForEachWithNoClasspath(LiteralTest.java:52)

[ERROR] testEscapedString(spoon.test.literal.LiteralTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.literal.LiteralTest.testEscapedString(LiteralTest.java:140)

[INFO] Running spoon.test.constructorcallnewclass.NewClassTest
[ERROR] Tests run: 7, Failures: 0, Errors: 7, Skipped: 0, Time elapsed: 0.378 s <<< FAILURE! - in spoon.test.constructorcallnewclass.NewClassTest
[ERROR] testNewClassInterfaceWithParameters(spoon.test.constructorcallnewclass.NewClassTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructorcallnewclass.NewClassTest.setUp(NewClassTest.java:33)

[ERROR] testNewClassWithObjectClass(spoon.test.constructorcallnewclass.NewClassTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructorcallnewclass.NewClassTest.setUp(NewClassTest.java:33)

[ERROR] testNewClassWithInterface(spoon.test.constructorcallnewclass.NewClassTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructorcallnewclass.NewClassTest.setUp(NewClassTest.java:33)

[ERROR] testMoreThan9NewClass(spoon.test.constructorcallnewclass.NewClassTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructorcallnewclass.NewClassTest.setUp(NewClassTest.java:33)

[ERROR] testNewClassWithInterfaceGeneric(spoon.test.constructorcallnewclass.NewClassTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructorcallnewclass.NewClassTest.setUp(NewClassTest.java:33)

[ERROR] testNewClassInEnumeration(spoon.test.constructorcallnewclass.NewClassTest)  Time elapsed: 0.063 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructorcallnewclass.NewClassTest.setUp(NewClassTest.java:33)

[ERROR] testCtNewClassInNoClasspath(spoon.test.constructorcallnewclass.NewClassTest)  Time elapsed: 0.067 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructorcallnewclass.NewClassTest.setUp(NewClassTest.java:33)

[INFO] Running spoon.test.constructorcallnewclass.ConstructorCallTest
[ERROR] Tests run: 6, Failures: 0, Errors: 6, Skipped: 0, Time elapsed: 0.347 s <<< FAILURE! - in spoon.test.constructorcallnewclass.ConstructorCallTest
[ERROR] testCoreConstructorCall(spoon.test.constructorcallnewclass.ConstructorCallTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructorcallnewclass.ConstructorCallTest.setUp(ConstructorCallTest.java:35)

[ERROR] testConstructorCallObjectWithParameters(spoon.test.constructorcallnewclass.ConstructorCallTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructorcallnewclass.ConstructorCallTest.setUp(ConstructorCallTest.java:35)

[ERROR] testConstructorCallStringWithoutParameters(spoon.test.constructorcallnewclass.ConstructorCallTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructorcallnewclass.ConstructorCallTest.setUp(ConstructorCallTest.java:35)

[ERROR] testConstructorCallWithGenericArray(spoon.test.constructorcallnewclass.ConstructorCallTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructorcallnewclass.ConstructorCallTest.setUp(ConstructorCallTest.java:35)

[ERROR] testConstructorCallStringWithParameters(spoon.test.constructorcallnewclass.ConstructorCallTest)  Time elapsed: 0.069 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructorcallnewclass.ConstructorCallTest.setUp(ConstructorCallTest.java:35)

[ERROR] testConstructorCallObjectWithoutParameters(spoon.test.constructorcallnewclass.ConstructorCallTest)  Time elapsed: 0.068 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructorcallnewclass.ConstructorCallTest.setUp(ConstructorCallTest.java:35)

[INFO] Running spoon.test.parameters.ParameterTest
[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.162 s <<< FAILURE! - in spoon.test.parameters.ParameterTest
[ERROR] testParameterInNoClasspath(spoon.test.parameters.ParameterTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parameters.ParameterTest.testParameterInNoClasspath(ParameterTest.java:25)

[ERROR] testMultiParameterLambdaTypeReference(spoon.test.parameters.ParameterTest)  Time elapsed: 0.065 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parameters.ParameterTest.testMultiParameterLambdaTypeReference(ParameterTest.java:71)

[ERROR] testGetParameterReferenceInLambdaNoClasspath(spoon.test.parameters.ParameterTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.parameters.ParameterTest.testGetParameterReferenceInLambdaNoClasspath(ParameterTest.java:41)

[INFO] Running spoon.test.sourcePosition.SourcePositionTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.108 s <<< FAILURE! - in spoon.test.sourcePosition.SourcePositionTest
[ERROR] equalPositionsHaveSameHashcode(spoon.test.sourcePosition.SourcePositionTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.sourcePosition.SourcePositionTest.factoryFor(SourcePositionTest.java:51)
	at spoon.test.sourcePosition.SourcePositionTest.equalPositionsHaveSameHashcode(SourcePositionTest.java:35)

[ERROR] testSourcePositionOfSecondPrimitiveType(spoon.test.sourcePosition.SourcePositionTest)  Time elapsed: 0.062 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.sourcePosition.SourcePositionTest.testSourcePositionOfSecondPrimitiveType(SourcePositionTest.java:61)

[INFO] Running spoon.test.labels.TestLabels
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.045 s <<< FAILURE! - in spoon.test.labels.TestLabels
[ERROR] testLabelsAreDetected(spoon.test.labels.TestLabels)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.labels.TestLabels.testLabelsAreDetected(TestLabels.java:34)

[INFO] Running spoon.test.invocations.InvocationTest
[ERROR] Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.182 s <<< FAILURE! - in spoon.test.invocations.InvocationTest
[ERROR] testIssue1753(spoon.test.invocations.InvocationTest)  Time elapsed: 0.065 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.invocations.InvocationTest.testIssue1753(InvocationTest.java:73)

[INFO] Running spoon.test.field.FieldTest
[ERROR] Tests run: 4, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.188 s <<< FAILURE! - in spoon.test.field.FieldTest
[ERROR] testFieldImplicitTarget(spoon.test.field.FieldTest)  Time elapsed: 0.075 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.field.FieldTest.testFieldImplicitTarget(FieldTest.java:96)

[ERROR] testAddFieldsAtTop(spoon.test.field.FieldTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.field.FieldTest.testAddFieldsAtTop(FieldTest.java:77)

[INFO] Running spoon.test.query_function.testclasses.VariableReferencesModelTest
[INFO] Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 s - in spoon.test.query_function.testclasses.VariableReferencesModelTest
[INFO] Running spoon.test.query_function.VariableReferencesTest
2018-04-02 22:55:56,848 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-04-02 22:55:56,850 INFO spoon.Launcher - running Spoon...
2018-04-02 22:55:56,850 INFO spoon.Launcher - start processing...
2018-04-02 22:55:56,934 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-04-02 22:55:56,934 INFO spoon.Launcher - running Spoon...
2018-04-02 22:55:56,934 INFO spoon.Launcher - start processing...
2018-04-02 22:55:56,995 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-04-02 22:55:56,995 INFO spoon.Launcher - running Spoon...
2018-04-02 22:55:56,995 INFO spoon.Launcher - start processing...
2018-04-02 22:55:57,063 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-04-02 22:55:57,064 INFO spoon.Launcher - running Spoon...
2018-04-02 22:55:57,064 INFO spoon.Launcher - start processing...
2018-04-02 22:55:57,121 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-04-02 22:55:57,121 INFO spoon.Launcher - running Spoon...
2018-04-02 22:55:57,121 INFO spoon.Launcher - start processing...
2018-04-02 22:55:57,174 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-04-02 22:55:57,174 INFO spoon.Launcher - running Spoon...
2018-04-02 22:55:57,174 INFO spoon.Launcher - start processing...
2018-04-02 22:55:57,240 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-04-02 22:55:57,240 INFO spoon.Launcher - running Spoon...
2018-04-02 22:55:57,240 INFO spoon.Launcher - start processing...
2018-04-02 22:55:57,293 INFO spoon.Launcher - Spoon version 6.3.0-SNAPSHOT
2018-04-02 22:55:57,293 INFO spoon.Launcher - running Spoon...
2018-04-02 22:55:57,293 INFO spoon.Launcher - start processing...
[ERROR] Tests run: 8, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 0.517 s <<< FAILURE! - in spoon.test.query_function.VariableReferencesTest
[ERROR] testLocalVariableReferenceFunction(spoon.test.query_function.VariableReferencesTest)  Time elapsed: 0.087 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.query_function.VariableReferencesTest.setup(VariableReferencesTest.java:62)

[ERROR] testParameterReferenceFunction(spoon.test.query_function.VariableReferencesTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.query_function.VariableReferencesTest.setup(VariableReferencesTest.java:62)

[ERROR] testCatchVariableReferenceFunction(spoon.test.query_function.VariableReferencesTest)  Time elapsed: 0.069 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.query_function.VariableReferencesTest.setup(VariableReferencesTest.java:62)

[ERROR] testCheckModelConsistency(spoon.test.query_function.VariableReferencesTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.query_function.VariableReferencesTest.setup(VariableReferencesTest.java:62)

[ERROR] testLocalVariableReferenceDeclarationFunction(spoon.test.query_function.VariableReferencesTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.query_function.VariableReferencesTest.setup(VariableReferencesTest.java:62)

[ERROR] testVariableScopeFunction(spoon.test.query_function.VariableReferencesTest)  Time elapsed: 0.066 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.query_function.VariableReferencesTest.setup(VariableReferencesTest.java:62)

[ERROR] testPotentialVariableAccessFromStaticMethod(spoon.test.query_function.VariableReferencesTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.query_function.VariableReferencesTest.setup(VariableReferencesTest.java:62)

[ERROR] testVariableReferenceFunction(spoon.test.query_function.VariableReferencesTest)  Time elapsed: 0.07 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.query_function.VariableReferencesTest.setup(VariableReferencesTest.java:62)

[INFO] Running spoon.test.delete.DeleteTest
[ERROR] Tests run: 14, Failures: 0, Errors: 14, Skipped: 0, Time elapsed: 0.685 s <<< FAILURE! - in spoon.test.delete.DeleteTest
[ERROR] testDeleteACaseOfASwitch(spoon.test.delete.DeleteTest)  Time elapsed: 0.059 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteACaseOfASwitch(DeleteTest.java:131)

[ERROR] testDeleteChainOfAssignment(spoon.test.delete.DeleteTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteChainOfAssignment(DeleteTest.java:237)

[ERROR] testDeleteParameterOfMethod(spoon.test.delete.DeleteTest)  Time elapsed: 0.056 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteParameterOfMethod(DeleteTest.java:164)

[ERROR] testDeleteBodyOfAMethod(spoon.test.delete.DeleteTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteBodyOfAMethod(DeleteTest.java:180)

[ERROR] testDeleteStatementInCase(spoon.test.delete.DeleteTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteStatementInCase(DeleteTest.java:114)

[ERROR] testDeleteAStatementInConstructor(spoon.test.delete.DeleteTest)  Time elapsed: 0.061 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteAStatementInConstructor(DeleteTest.java:66)

[ERROR] testDeleteMethod(spoon.test.delete.DeleteTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteMethod(DeleteTest.java:148)

[ERROR] testDeleteAStatementInStaticAnonymousExecutable(spoon.test.delete.DeleteTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteAStatementInStaticAnonymousExecutable(DeleteTest.java:49)

[ERROR] testDeleteReturn(spoon.test.delete.DeleteTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteReturn(DeleteTest.java:98)

[ERROR] testDeleteAnnotationOnAClass(spoon.test.delete.DeleteTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteAnnotationOnAClass(DeleteTest.java:194)

[ERROR] testDeleteConditionInACondition(spoon.test.delete.DeleteTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteConditionInACondition(DeleteTest.java:222)

[ERROR] testDeleteAClassTopLevel(spoon.test.delete.DeleteTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteAClassTopLevel(DeleteTest.java:208)

[ERROR] testDeleteAStatementInMethod(spoon.test.delete.DeleteTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteAStatementInMethod(DeleteTest.java:82)

[ERROR] testDeleteAStatementInAnonymousExecutable(spoon.test.delete.DeleteTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.delete.DeleteTest.testDeleteAStatementInAnonymousExecutable(DeleteTest.java:32)

[INFO] Running spoon.test.jar.JarTest
[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.218 s <<< FAILURE! - in spoon.test.jar.JarTest
[ERROR] testJar(spoon.test.jar.JarTest)  Time elapsed: 0.13 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.jar.JarTest.testJar(JarTest.java:28)

[ERROR] testFile(spoon.test.jar.JarTest)  Time elapsed: 0.05 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.jar.JarTest.testFile(JarTest.java:41)

[ERROR] testResource(spoon.test.jar.JarTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.jar.JarTest.testResource(JarTest.java:55)

[INFO] Running spoon.test.methodreference.MethodReferenceTest
[ERROR] Tests run: 13, Failures: 0, Errors: 13, Skipped: 0, Time elapsed: 0.692 s <<< FAILURE! - in spoon.test.methodreference.MethodReferenceTest
[ERROR] testReferenceToAConstructor(spoon.test.methodreference.MethodReferenceTest)  Time elapsed: 0.055 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.methodreference.MethodReferenceTest.setUp(MethodReferenceTest.java:59)

[ERROR] testGetGenericExecutableReference(spoon.test.methodreference.MethodReferenceTest)  Time elapsed: 0.066 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.methodreference.MethodReferenceTest.setUp(MethodReferenceTest.java:59)

[ERROR] testNoClasspathExecutableReferenceExpression(spoon.test.methodreference.MethodReferenceTest)  Time elapsed: 0.067 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.methodreference.MethodReferenceTest.setUp(MethodReferenceTest.java:59)

[ERROR] testReferenceToAnInstanceMethodOfMultiParticularObject(spoon.test.methodreference.MethodReferenceTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.methodreference.MethodReferenceTest.setUp(MethodReferenceTest.java:59)

[ERROR] testNoClasspathSuperExecutable(spoon.test.methodreference.MethodReferenceTest)  Time elapsed: 0.058 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.methodreference.MethodReferenceTest.setUp(MethodReferenceTest.java:59)

[ERROR] testCompileMethodReferenceGeneratedBySpoon(spoon.test.methodreference.MethodReferenceTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.methodreference.MethodReferenceTest.setUp(MethodReferenceTest.java:59)

[ERROR] testReferenceToAClassParametrizedConstructor(spoon.test.methodreference.MethodReferenceTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.methodreference.MethodReferenceTest.setUp(MethodReferenceTest.java:59)

[ERROR] testReferenceToAnInstanceMethodOfAParticularObject(spoon.test.methodreference.MethodReferenceTest)  Time elapsed: 0.063 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.methodreference.MethodReferenceTest.setUp(MethodReferenceTest.java:59)

[ERROR] testGetGenericMethodFromReference(spoon.test.methodreference.MethodReferenceTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.methodreference.MethodReferenceTest.setUp(MethodReferenceTest.java:59)

[ERROR] testReferenceToAJavaUtilClassConstructor(spoon.test.methodreference.MethodReferenceTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.methodreference.MethodReferenceTest.setUp(MethodReferenceTest.java:59)

[ERROR] testReferenceToAStaticMethod(spoon.test.methodreference.MethodReferenceTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.methodreference.MethodReferenceTest.setUp(MethodReferenceTest.java:59)

[ERROR] testReferenceToAnInstanceMethodOfAnArbitraryObjectOfAParticularType(spoon.test.methodreference.MethodReferenceTest)  Time elapsed: 0.047 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.methodreference.MethodReferenceTest.setUp(MethodReferenceTest.java:59)

[ERROR] testReferenceBuilderWithComplexGenerics(spoon.test.methodreference.MethodReferenceTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.methodreference.MethodReferenceTest.setUp(MethodReferenceTest.java:59)

[INFO] Running spoon.test.executable.ExecutableTest
[ERROR] Tests run: 3, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.116 s <<< FAILURE! - in spoon.test.executable.ExecutableTest
[ERROR] testInfoInsideAnonymousExecutable(spoon.test.executable.ExecutableTest)  Time elapsed: 0.037 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.executable.ExecutableTest.testInfoInsideAnonymousExecutable(ExecutableTest.java:26)

[ERROR] testBlockInExecutable(spoon.test.executable.ExecutableTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.executable.ExecutableTest.testBlockInExecutable(ExecutableTest.java:42)

[INFO] Running spoon.test.executable.ExecutableRefTest
[ERROR] Tests run: 5, Failures: 0, Errors: 5, Skipped: 0, Time elapsed: 0.199 s <<< FAILURE! - in spoon.test.executable.ExecutableRefTest
[ERROR] testSameTypeInConstructorCallBetweenItsObjectAndItsExecutable(spoon.test.executable.ExecutableRefTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.executable.ExecutableRefTest.testSameTypeInConstructorCallBetweenItsObjectAndItsExecutable(ExecutableRefTest.java:84)

[ERROR] constructorTest(spoon.test.executable.ExecutableRefTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.executable.ExecutableRefTest.getInvocationFromMethod(ExecutableRefTest.java:97)
	at spoon.test.executable.ExecutableRefTest.constructorTest(ExecutableRefTest.java:53)

[ERROR] methodTest(spoon.test.executable.ExecutableRefTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.executable.ExecutableRefTest.getInvocationFromMethod(ExecutableRefTest.java:97)
	at spoon.test.executable.ExecutableRefTest.methodTest(ExecutableRefTest.java:38)

[ERROR] testGetActualClassTest(spoon.test.executable.ExecutableRefTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.executable.ExecutableRefTest.testGetActualClassTest(ExecutableRefTest.java:68)

[ERROR] testOverridingMethod(spoon.test.executable.ExecutableRefTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.executable.ExecutableRefTest.testOverridingMethod(ExecutableRefTest.java:120)

[INFO] Running spoon.test.ctType.CtTypeParameterTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.08 s <<< FAILURE! - in spoon.test.ctType.CtTypeParameterTest
[ERROR] testTypeErasure(spoon.test.ctType.CtTypeParameterTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctType.CtTypeParameterTest.testTypeErasure(CtTypeParameterTest.java:31)

[ERROR] testTypeSame(spoon.test.ctType.CtTypeParameterTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctType.CtTypeParameterTest.testTypeSame(CtTypeParameterTest.java:133)

[INFO] Running spoon.test.ctType.CtTypeTest
[ERROR] Tests run: 8, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 0.315 s <<< FAILURE! - in spoon.test.ctType.CtTypeTest
[ERROR] testIsSubTypeOfonTypeReferences(spoon.test.ctType.CtTypeTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctType.CtTypeTest.testIsSubTypeOfonTypeReferences(CtTypeTest.java:143)

[ERROR] testHasMethodNotHasMethod(spoon.test.ctType.CtTypeTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X { public void foo() {} };
    }
}
	at spoon.test.ctType.CtTypeTest.testHasMethodNotHasMethod(CtTypeTest.java:46)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.ctType.CtTypeTest.testHasMethodNotHasMethod(CtTypeTest.java:46)

[ERROR] testIsSubTypeOf(spoon.test.ctType.CtTypeTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctType.CtTypeTest.testIsSubTypeOf(CtTypeTest.java:88)

[ERROR] testHasMethodInDefaultMethod(spoon.test.ctType.CtTypeTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctType.CtTypeTest.testHasMethodInDefaultMethod(CtTypeTest.java:77)

[ERROR] testHasMethodInDirectMethod(spoon.test.ctType.CtTypeTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X { public void foo() {} };
    }
}
	at spoon.test.ctType.CtTypeTest.testHasMethodInDirectMethod(CtTypeTest.java:38)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.ctType.CtTypeTest.testHasMethodInDirectMethod(CtTypeTest.java:38)

[ERROR] testHasMethodInSuperClass(spoon.test.ctType.CtTypeTest)  Time elapsed: 0.039 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctType.CtTypeTest.testHasMethodInSuperClass(CtTypeTest.java:63)

[ERROR] testIsSubTypeOfonTypeParameters(spoon.test.ctType.CtTypeTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctType.CtTypeTest.testIsSubTypeOfonTypeParameters(CtTypeTest.java:102)

[ERROR] testHasMethodOnNull(spoon.test.ctType.CtTypeTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X { public void foo() {} };
    }
}
	at spoon.test.ctType.CtTypeTest.testHasMethodOnNull(CtTypeTest.java:55)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.ctType.CtTypeTest.testHasMethodOnNull(CtTypeTest.java:55)

[INFO] Running spoon.test.strings.StringLiteralTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.04 s <<< FAILURE! - in spoon.test.strings.StringLiteralTest
[ERROR] testSnippetFullClass(spoon.test.strings.StringLiteralTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class StringValueUTF {
        	String f0 = "toto";
        	String f1 = "\n";
        	char c1 = '\n';
        	String f2 = "\u20ac";
        	char c2 = '\u20ac';
        	String f3 = "€";
        	char c3 = '€';
        	String f4 = "\t";
        	char c4 = '\t';
        	String f5 = "	";
        	char c5 = '	';
        	String f6 = "€\u20ac";
        };
    }
}
	at spoon.test.strings.StringLiteralTest.testSnippetFullClass(StringLiteralTest.java:31)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.strings.StringLiteralTest.testSnippetFullClass(StringLiteralTest.java:31)

[INFO] Running spoon.test.strings.StringTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.035 s <<< FAILURE! - in spoon.test.strings.StringTest
[ERROR] testModelBuildingInitializer(spoon.test.strings.StringTest)  Time elapsed: 0.035 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.strings.StringTest.testModelBuildingInitializer(StringTest.java:18)

[INFO] Running spoon.test.eval.EvalTest
[ERROR] Tests run: 9, Failures: 0, Errors: 9, Skipped: 0, Time elapsed: 0.391 s <<< FAILURE! - in spoon.test.eval.EvalTest
[ERROR] testDoNotSimplify(spoon.test.eval.EvalTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.eval.EvalTest.testDoNotSimplify(EvalTest.java:48)

[ERROR] testVisitorPartialEvaluator_binary(spoon.test.eval.EvalTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static java.lang.Object wrap() throws java.lang.Throwable {
        return 0+1;
    }
}
	at spoon.test.eval.EvalTest.testVisitorPartialEvaluator_binary(EvalTest.java:97)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.eval.EvalTest.testVisitorPartialEvaluator_binary(EvalTest.java:97)

[ERROR] testVisitorPartialEvaluator_if(spoon.test.eval.EvalTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        if (false) {System.out.println("foo");} else {System.out.println("bar");} ;
    }
}
	at spoon.test.eval.EvalTest.testVisitorPartialEvaluator_if(EvalTest.java:130)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.eval.EvalTest.testVisitorPartialEvaluator_if(EvalTest.java:130)

[ERROR] testArrayLength(spoon.test.eval.EvalTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.eval.EvalTest.testArrayLength(EvalTest.java:37)

[ERROR] testTryCatchAndStatement(spoon.test.eval.EvalTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.eval.EvalTest.testTryCatchAndStatement(EvalTest.java:70)

[ERROR] testDoNotSimplifyToExpressionWhenStatementIsExpected(spoon.test.eval.EvalTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.eval.EvalTest.testDoNotSimplifyToExpressionWhenStatementIsExpected(EvalTest.java:81)

[ERROR] testStringConcatenation(spoon.test.eval.EvalTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.eval.EvalTest.testStringConcatenation(EvalTest.java:23)

[ERROR] testDoNotSimplifyCasts(spoon.test.eval.EvalTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.eval.EvalTest.testDoNotSimplifyCasts(EvalTest.java:59)

[ERROR] testVisitorPartialEvaluatorScanner(spoon.test.eval.EvalTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.eval.EvalTest.testVisitorPartialEvaluatorScanner(EvalTest.java:144)

[INFO] Running spoon.test.architecture.SpoonArchitectureEnforcerTest
[ERROR] Tests run: 8, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 11.356 s <<< FAILURE! - in spoon.test.architecture.SpoonArchitectureEnforcerTest
[ERROR] testInterfacesAreCtScannable(spoon.test.architecture.SpoonArchitectureEnforcerTest)  Time elapsed: 1.574 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.testInterfacesAreCtScannable(SpoonArchitectureEnforcerTest.java:281)

[ERROR] metamodelPackageRule(spoon.test.architecture.SpoonArchitectureEnforcerTest)  Time elapsed: 0.439 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.metamodelPackageRule(SpoonArchitectureEnforcerTest.java:187)

[ERROR] testStaticClasses(spoon.test.architecture.SpoonArchitectureEnforcerTest)  Time elapsed: 2.166 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.testStaticClasses(SpoonArchitectureEnforcerTest.java:256)

[ERROR] testSrcMainJava(spoon.test.architecture.SpoonArchitectureEnforcerTest)  Time elapsed: 1.899 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.testSrcMainJava(SpoonArchitectureEnforcerTest.java:126)

[ERROR] testGoodTestClassNames(spoon.test.architecture.SpoonArchitectureEnforcerTest)  Time elapsed: 2.889 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.testGoodTestClassNames(SpoonArchitectureEnforcerTest.java:215)

[ERROR] testFactorySubFactory(spoon.test.architecture.SpoonArchitectureEnforcerTest)  Time elapsed: 0.334 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.testFactorySubFactory(SpoonArchitectureEnforcerTest.java:113)

[ERROR] statelessFactory(spoon.test.architecture.SpoonArchitectureEnforcerTest)  Time elapsed: 0.23 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.statelessFactory(SpoonArchitectureEnforcerTest.java:45)

[ERROR] testSpecPackage(spoon.test.architecture.SpoonArchitectureEnforcerTest)  Time elapsed: 1.824 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.architecture.SpoonArchitectureEnforcerTest.testSpecPackage(SpoonArchitectureEnforcerTest.java:361)

[INFO] Running spoon.test.signature.SignatureTest
[ERROR] Tests run: 8, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 0.51 s <<< FAILURE! - in spoon.test.signature.SignatureTest
[ERROR] testMethodInvocationSignatureStaticFieldsVariables(spoon.test.signature.SignatureTest)  Time elapsed: 0.06 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        Integer.toBinaryString(Integer.MAX_VALUE);
    }
}
	at spoon.test.signature.SignatureTest.testMethodInvocationSignatureStaticFieldsVariables(SignatureTest.java:142)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.signature.SignatureTest.testMethodInvocationSignatureStaticFieldsVariables(SignatureTest.java:142)

[ERROR] testNullSignatureInUnboundVariable(spoon.test.signature.SignatureTest)  Time elapsed: 0.042 s  <<< ERROR!
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at spoon.test.signature.SignatureTest.testNullSignatureInUnboundVariable(SignatureTest.java:101)

[ERROR] testUnboundFieldSignature(spoon.test.signature.SignatureTest)  Time elapsed: 0.04 s  <<< ERROR!
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at spoon.test.signature.SignatureTest.testUnboundFieldSignature(SignatureTest.java:273)

[ERROR] testLiteralSignature(spoon.test.signature.SignatureTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        System.out.println("hello");
    }
}
	at spoon.test.signature.SignatureTest.testLiteralSignature(SignatureTest.java:121)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.signature.SignatureTest.testLiteralSignature(SignatureTest.java:121)

[ERROR] testArgumentNotNullForExecutableReference(spoon.test.signature.SignatureTest)  Time elapsed: 0.176 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.signature.SignatureTest.testArgumentNotNullForExecutableReference(SignatureTest.java:297)

[ERROR] testMethodInvocationSignatureWithVariableAccess(spoon.test.signature.SignatureTest)  Time elapsed: 0.054 s  <<< ERROR!
spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.signature.SignatureTest.testMethodInvocationSignatureWithVariableAccess(SignatureTest.java:202)

[ERROR] testNullSignature(spoon.test.signature.SignatureTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public Object foo() { return null;}};;
    }
}
	at spoon.test.signature.SignatureTest.testNullSignature(SignatureTest.java:59)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.signature.SignatureTest.testNullSignature(SignatureTest.java:59)

[ERROR] testBugSignature(spoon.test.signature.SignatureTest)  Time elapsed: 0.052 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.signature.SignatureTest.testBugSignature(SignatureTest.java:320)

[INFO] Running spoon.test.OutputTypeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.OutputTypeTest
[INFO] Running spoon.test.role.TestCtRole
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in spoon.test.role.TestCtRole
[INFO] Running spoon.test.properties.PropertiesTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.042 s <<< FAILURE! - in spoon.test.properties.PropertiesTest
[ERROR] testNonExistingDirectory(spoon.test.properties.PropertiesTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.properties.PropertiesTest.testNonExistingDirectory(PropertiesTest.java:29)

[INFO] Running spoon.test.constructor.ConstructorTest
[ERROR] Tests run: 6, Failures: 0, Errors: 6, Skipped: 0, Time elapsed: 0.324 s <<< FAILURE! - in spoon.test.constructor.ConstructorTest
[ERROR] testTypeAnnotationWithConstructorsOnFormalType(spoon.test.constructor.ConstructorTest)  Time elapsed: 0.072 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructor.ConstructorTest.setUp(ConstructorTest.java:36)

[ERROR] testTransformationOnConstructorWithInsertBefore(spoon.test.constructor.ConstructorTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructor.ConstructorTest.setUp(ConstructorTest.java:36)

[ERROR] callParamConstructor(spoon.test.constructor.ConstructorTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructor.ConstructorTest.setUp(ConstructorTest.java:36)

[ERROR] testTypeAnnotationOnExceptionDeclaredInConstructors(spoon.test.constructor.ConstructorTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructor.ConstructorTest.setUp(ConstructorTest.java:36)

[ERROR] testTransformationOnConstructorWithInsertBegin(spoon.test.constructor.ConstructorTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructor.ConstructorTest.setUp(ConstructorTest.java:36)

[ERROR] testConstructorCallFactory(spoon.test.constructor.ConstructorTest)  Time elapsed: 0.057 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.constructor.ConstructorTest.setUp(ConstructorTest.java:36)

[INFO] Running spoon.test.serializable.SourcePositionTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.085 s - in spoon.test.serializable.SourcePositionTest
[INFO] Running spoon.test.serializable.SerializableTest
[ERROR] Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.211 s <<< FAILURE! - in spoon.test.serializable.SerializableTest
[ERROR] testSerialCtStatement(spoon.test.serializable.SerializableTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        String hello ="t1"; System.out.println(hello);
    }
}
	at spoon.test.serializable.SerializableTest.testSerialCtStatement(SerializableTest.java:29)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.serializable.SerializableTest.testSerialCtStatement(SerializableTest.java:29)

[INFO] Running spoon.test.ctCase.SwitchCaseTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.077 s <<< FAILURE! - in spoon.test.ctCase.SwitchCaseTest
[ERROR] insertAfterStatementInSwitchCaseWithoutException(spoon.test.ctCase.SwitchCaseTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctCase.SwitchCaseTest.factoryFor(SwitchCaseTest.java:60)
	at spoon.test.ctCase.SwitchCaseTest.insertAfterStatementInSwitchCaseWithoutException(SwitchCaseTest.java:25)

[ERROR] insertBeforeStatementInSwitchCaseWithoutException(spoon.test.ctCase.SwitchCaseTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.ctCase.SwitchCaseTest.factoryFor(SwitchCaseTest.java:60)
	at spoon.test.ctCase.SwitchCaseTest.insertBeforeStatementInSwitchCaseWithoutException(SwitchCaseTest.java:42)

[INFO] Running spoon.test.snippets.SnippetTest
[ERROR] Tests run: 6, Failures: 0, Errors: 5, Skipped: 0, Time elapsed: 0.257 s <<< FAILURE! - in spoon.test.snippets.SnippetTest
[ERROR] testSnippetFullClass(spoon.test.snippets.SnippetTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        class X {public void foo() { int x=0;}};;
    }
}
	at spoon.test.snippets.SnippetTest.testSnippetFullClass(SnippetTest.java:31)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.snippets.SnippetTest.testSnippetFullClass(SnippetTest.java:31)

[ERROR] testCompileSnippetSeveralTimes(spoon.test.snippets.SnippetTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static java.lang.Object wrap() throws java.lang.Throwable {
        return 1 > 2;
    }
}
	at spoon.test.snippets.SnippetTest.testCompileSnippetSeveralTimes(SnippetTest.java:58)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.snippets.SnippetTest.testCompileSnippetSeveralTimes(SnippetTest.java:58)

[ERROR] testCompileSnippetWithContext(spoon.test.snippets.SnippetTest)  Time elapsed: 0.046 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static void wrap() throws java.lang.Throwable {
        int i = 1;;
    }
}
	at spoon.test.snippets.SnippetTest.testCompileSnippetWithContext(SnippetTest.java:81)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.snippets.SnippetTest.testCompileSnippetWithContext(SnippetTest.java:81)

[ERROR] testCompileStatementWithReturn(spoon.test.snippets.SnippetTest)  Time elapsed: 0.041 s  <<< ERROR!
spoon.compiler.ModelBuildingException: 
snippet compilation error while compiling: class Wrapper {
    static java.lang.Integer wrap() throws java.lang.Throwable {
        return 3;
    }
}
	at spoon.test.snippets.SnippetTest.testCompileStatementWithReturn(SnippetTest.java:90)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.test.snippets.SnippetTest.testCompileStatementWithReturn(SnippetTest.java:90)

[ERROR] testIssue981(spoon.test.snippets.SnippetTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.snippets.SnippetTest.testIssue981(SnippetTest.java:105)

[INFO] Running spoon.test.main.MainTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 2.126 s <<< FAILURE! - in spoon.test.main.MainTest
[ERROR] spoon.test.main.MainTest  Time elapsed: 2.126 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.test.main.MainTest.loadModel(MainTest.java:89)

[INFO] Running spoon.test.ctElement.ElementTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.test.ctElement.ElementTest
[INFO] Running spoon.test.ctElement.MetadataTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 s - in spoon.test.ctElement.MetadataTest
[INFO] Running spoon.test.logging.LogTest
2018-04-02 22:56:15,220 DEBUG spoon.Launcher - destination: /root/workspace/INRIA/spoon/361353762/spooned-classes
2018-04-02 22:56:15,220 DEBUG spoon.Launcher - source classpath: null
2018-04-02 22:56:15,221 DEBUG spoon.Launcher - template classpath: []
2018-04-02 22:56:15,221 INFO spoon.Launcher - Log info
2018-04-02 22:56:15,221 WARN spoon.Launcher - Log warn
2018-04-02 22:56:15,221 ERROR spoon.Launcher - Log error
2018-04-02 22:56:15,222 DEBUG spoon.Launcher - Log debug
2018-04-02 22:56:15,222 DEBUG spoon.Launcher - destination: /root/workspace/INRIA/spoon/361353762/spooned-classes
2018-04-02 22:56:15,222 DEBUG spoon.Launcher - source classpath: null
2018-04-02 22:56:15,223 DEBUG spoon.Launcher - template classpath: []
2018-04-02 22:56:15,223 INFO spoon.Launcher - Log info
2018-04-02 22:56:15,223 WARN spoon.Launcher - Log warn
2018-04-02 22:56:15,223 ERROR spoon.Launcher - Log error
2018-04-02 22:56:15,223 DEBUG spoon.Launcher - Log debug
2018-04-02 22:56:15,224 INFO spoon.Launcher - Log info
2018-04-02 22:56:15,224 WARN spoon.Launcher - Log warn
2018-04-02 22:56:15,224 ERROR spoon.Launcher - Log error
2018-04-02 22:56:15,225 WARN spoon.Launcher - Log warn
2018-04-02 22:56:15,225 ERROR spoon.Launcher - Log error
2018-04-02 22:56:15,226 ERROR spoon.Launcher - Log error
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 s - in spoon.test.logging.LogTest
[INFO] Running spoon.testing.CtElementAssertTest
[ERROR] Tests run: 5, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.208 s <<< FAILURE! - in spoon.testing.CtElementAssertTest
[ERROR] testEqualityBetweenTwoCtElementWithTheSameSignatureButNotTheSameContent(spoon.testing.CtElementAssertTest)  Time elapsed: 0.051 s  <<< ERROR!
java.lang.Exception: Unexpected exception, expected<java.lang.AssertionError> but was<spoon.SpoonException>
	at spoon.testing.CtElementAssertTest.testEqualityBetweenTwoCtElementWithTheSameSignatureButNotTheSameContent(CtElementAssertTest.java:42)

[ERROR] testEqualityBetweenTwoCtElement(spoon.testing.CtElementAssertTest)  Time elapsed: 0.051 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.testing.CtElementAssertTest.testEqualityBetweenTwoCtElement(CtElementAssertTest.java:19)

[ERROR] testEqualityBetweenTwoDifferentCtElement(spoon.testing.CtElementAssertTest)  Time elapsed: 0.052 s  <<< ERROR!
java.lang.Exception: Unexpected exception, expected<java.lang.AssertionError> but was<spoon.SpoonException>
	at spoon.testing.CtElementAssertTest.testEqualityBetweenTwoDifferentCtElement(CtElementAssertTest.java:49)

[ERROR] testEqualityBetweenACtElementAndAString(spoon.testing.CtElementAssertTest)  Time elapsed: 0.053 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.testing.CtElementAssertTest.testEqualityBetweenACtElementAndAString(CtElementAssertTest.java:31)

[INFO] Running spoon.testing.FileAssertTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.186 s - in spoon.testing.FileAssertTest
[INFO] Running spoon.testing.CtPackageAssertTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.116 s - in spoon.testing.CtPackageAssertTest
[INFO] Running spoon.testing.AbstractAssertTest
[ERROR] Tests run: 4, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.277 s <<< FAILURE! - in spoon.testing.AbstractAssertTest
[ERROR] testTransformationFromCtElementWithProcessor(spoon.testing.AbstractAssertTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.testing.AbstractAssertTest.testTransformationFromCtElementWithProcessor(AbstractAssertTest.java:38)

[INFO] Running spoon.support.compiler.jdt.JDTBatchCompilerTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.083 s - in spoon.support.compiler.jdt.JDTBatchCompilerTest
[INFO] Running spoon.support.compiler.jdt.JDTBuilderTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.support.compiler.jdt.JDTBuilderTest
[INFO] Running spoon.support.compiler.jdt.ExtendedStringLiteralTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.06 s - in spoon.support.compiler.jdt.ExtendedStringLiteralTest
[INFO] Running spoon.support.compiler.classpath.ComputeClasspathTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in spoon.support.compiler.classpath.ComputeClasspathTest
[INFO] Running spoon.support.visitor.java.JavaReflectionTreeBuilderTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.088 s - in spoon.support.visitor.java.JavaReflectionTreeBuilderTest
[INFO] Running spoon.LauncherTest
[ERROR] Tests run: 4, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.19 s <<< FAILURE! - in spoon.LauncherTest
[ERROR] testLLauncherBuildModelReturnAModel(spoon.LauncherTest)  Time elapsed: 0.044 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.LauncherTest.testLLauncherBuildModelReturnAModel(LauncherTest.java:104)

[ERROR] testLauncherInEmptyWorkingDir(spoon.LauncherTest)  Time elapsed: 0.049 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.LauncherTest.testLauncherInEmptyWorkingDir(LauncherTest.java:91)

[INFO] Running spoon.reflect.visitor.CtInheritanceScannerMethodsTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.45 s <<< FAILURE! - in spoon.reflect.visitor.CtInheritanceScannerMethodsTest
[ERROR] testMethodsInInheritanceScanner(spoon.reflect.visitor.CtInheritanceScannerMethodsTest)  Time elapsed: 0.45 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.visitor.CtInheritanceScannerMethodsTest.testMethodsInInheritanceScanner(CtInheritanceScannerMethodsTest.java:41)

[INFO] Running spoon.reflect.visitor.CtScannerTest
[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 1.062 s <<< FAILURE! - in spoon.reflect.visitor.CtScannerTest
[ERROR] testScannerContract(spoon.reflect.visitor.CtScannerTest)  Time elapsed: 0.463 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.visitor.CtScannerTest.testScannerContract(CtScannerTest.java:81)

[ERROR] testScan(spoon.reflect.visitor.CtScannerTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.visitor.CtScannerTest.testScan(CtScannerTest.java:231)

[ERROR] testScannerCallsAllProperties(spoon.reflect.visitor.CtScannerTest)  Time elapsed: 0.551 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.visitor.CtScannerTest.testScannerCallsAllProperties(CtScannerTest.java:121)

[INFO] Running spoon.reflect.visitor.CtVisitorTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.438 s <<< FAILURE! - in spoon.reflect.visitor.CtVisitorTest
[ERROR] testMethodsInVisitor(spoon.reflect.visitor.CtVisitorTest)  Time elapsed: 0.438 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.visitor.CtVisitorTest.testMethodsInVisitor(CtVisitorTest.java:41)

[INFO] Running spoon.reflect.visitor.CtInheritanceScannerTest
[INFO] Tests run: 81, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.604 s - in spoon.reflect.visitor.CtInheritanceScannerTest
[INFO] Running spoon.reflect.declaration.UnknownDeclarationTest
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.038 s <<< FAILURE! - in spoon.reflect.declaration.UnknownDeclarationTest
[ERROR] testUnknownCalls(spoon.reflect.declaration.UnknownDeclarationTest)  Time elapsed: 0.038 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.declaration.UnknownDeclarationTest.testUnknownCalls(UnknownDeclarationTest.java:35)

[INFO] Running spoon.reflect.declaration.CtTypeInformationTest
[ERROR] Tests run: 4, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.19 s <<< FAILURE! - in spoon.reflect.declaration.CtTypeInformationTest
[ERROR] testClassTypingContextContinueScanning(spoon.reflect.declaration.CtTypeInformationTest)  Time elapsed: 0.045 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.declaration.CtTypeInformationTest.setUp(CtTypeInformationTest.java:33)

[ERROR] testGetAllMethodsWontReturnOverriddenMethod(spoon.reflect.declaration.CtTypeInformationTest)  Time elapsed: 0.06 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.declaration.CtTypeInformationTest.setUp(CtTypeInformationTest.java:33)

[ERROR] testGetSuperclass(spoon.reflect.declaration.CtTypeInformationTest)  Time elapsed: 0.043 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.declaration.CtTypeInformationTest.setUp(CtTypeInformationTest.java:33)

[ERROR] testGetAllMethodsReturnsTheRightNumber(spoon.reflect.declaration.CtTypeInformationTest)  Time elapsed: 0.042 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.declaration.CtTypeInformationTest.setUp(CtTypeInformationTest.java:33)

[INFO] Running spoon.reflect.ast.CloneTest
[ERROR] Tests run: 5, Failures: 0, Errors: 5, Skipped: 0, Time elapsed: 0.733 s <<< FAILURE! - in spoon.reflect.ast.CloneTest
[ERROR] testCopyMethod(spoon.reflect.ast.CloneTest)  Time elapsed: 0.04 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.ast.CloneTest.testCopyMethod(CloneTest.java:159)

[ERROR] testCopyType(spoon.reflect.ast.CloneTest)  Time elapsed: 0.089 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.ast.CloneTest.testCopyType(CloneTest.java:202)

[ERROR] testCloneMethodsDeclaredInAST(spoon.reflect.ast.CloneTest)  Time elapsed: 0.46 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.ast.CloneTest.testCloneMethodsDeclaredInAST(CloneTest.java:46)

[ERROR] testCloneCastConditional(spoon.reflect.ast.CloneTest)  Time elapsed: 0.048 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.ast.CloneTest.testCloneCastConditional(CloneTest.java:112)

[ERROR] testCloneListener(spoon.reflect.ast.CloneTest)  Time elapsed: 0.096 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.ast.CloneTest.testCloneListener(CloneTest.java:121)

[INFO] Running spoon.reflect.ast.AstCheckerTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 2.057 s <<< FAILURE! - in spoon.reflect.ast.AstCheckerTest
[ERROR] testAvoidSetCollectionSavedOnAST(spoon.reflect.ast.AstCheckerTest)  Time elapsed: 1.674 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.ast.AstCheckerTest.testAvoidSetCollectionSavedOnAST(AstCheckerTest.java:37)

[ERROR] testPushToStackChanges(spoon.reflect.ast.AstCheckerTest)  Time elapsed: 0.383 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.reflect.ast.AstCheckerTest.testPushToStackChanges(AstCheckerTest.java:96)

[INFO] Running spoon.MavenLauncherTest
[ERROR] Tests run: 6, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 0.157 s <<< FAILURE! - in spoon.MavenLauncherTest
[ERROR] mavenLauncherTestMultiModulesAndVariables(spoon.MavenLauncherTest)  Time elapsed: 0.094 s  <<< FAILURE!
java.lang.AssertionError: Content of classpath: 
	at spoon.MavenLauncherTest.mavenLauncherTestMultiModulesAndVariables(MavenLauncherTest.java:70)

[ERROR] spoonMavenLauncherTest(spoon.MavenLauncherTest)  Time elapsed: 0.046 s  <<< FAILURE!
java.lang.AssertionError: expected:<7> but was:<0>
	at spoon.MavenLauncherTest.spoonMavenLauncherTest(MavenLauncherTest.java:19)

[INFO] Running spoon.processing.CtGenerationTest
[ERROR] Tests run: 4, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 1.378 s <<< FAILURE! - in spoon.processing.CtGenerationTest
[ERROR] testGenerateCtBiScanner(spoon.processing.CtGenerationTest)  Time elapsed: 0.147 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.processing.CtGenerationTest.testGenerateCtBiScanner(CtGenerationTest.java:89)

[ERROR] testGenerateRoleHandler(spoon.processing.CtGenerationTest)  Time elapsed: 0.498 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.processing.CtGenerationTest.testGenerateRoleHandler(CtGenerationTest.java:176)

[ERROR] testGenerateReplacementVisitor(spoon.processing.CtGenerationTest)  Time elapsed: 0.163 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.processing.CtGenerationTest.testGenerateReplacementVisitor(CtGenerationTest.java:57)

[ERROR] testGenerateCloneVisitor(spoon.processing.CtGenerationTest)  Time elapsed: 0.57 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.processing.CtGenerationTest.testGenerateCloneVisitor(CtGenerationTest.java:127)

[INFO] Running spoon.processing.ProcessingTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.189 s <<< FAILURE! - in spoon.processing.ProcessingTest
[ERROR] testInterruptAProcessor(spoon.processing.ProcessingTest)  Time elapsed: 0.185 s  <<< ERROR!
spoon.SpoonException: SourcePosition values must be ascending or equal
	at spoon.processing.ProcessingTest.testInterruptAProcessor(ProcessingTest.java:40)

[ERROR] testSpoonTagger(spoon.processing.ProcessingTest)  Time elapsed: 0.004 s  <<< ERROR!
spoon.SpoonException: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.processing.ProcessingTest.testSpoonTagger(ProcessingTest.java:51)
Caused by: spoon.SpoonException: SourcePosition value must not be negative
	at spoon.processing.ProcessingTest.testSpoonTagger(ProcessingTest.java:51)

[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   MavenLauncherTest.mavenLauncherTestMultiModulesAndVariables:70 Content of classpath: 
[ERROR]   MavenLauncherTest.spoonMavenLauncherTest:19 expected:<7> but was:<0>
[ERROR]   EqualTest.testEqualsEmptyException:40 Unable create model
[ERROR] Errors: 
[ERROR]   LauncherTest.testLLauncherBuildModelReturnAModel:104 » Spoon SourcePosition va...
[ERROR]   LauncherTest.testLauncherInEmptyWorkingDir:91 » Spoon SourcePosition values mu...
[ERROR]   CtGenerationTest.testGenerateCloneVisitor:127 » Spoon SourcePosition values mu...
[ERROR]   CtGenerationTest.testGenerateCtBiScanner:89 » Spoon SourcePosition values must...
[ERROR]   CtGenerationTest.testGenerateReplacementVisitor:57 » Spoon SourcePosition valu...
[ERROR]   CtGenerationTest.testGenerateRoleHandler:176 » Spoon SourcePosition values mus...
[ERROR]   ProcessingTest.testInterruptAProcessor:40 » Spoon SourcePosition values must b...
[ERROR]   ProcessingTest.testSpoonTagger:51 » Spoon spoon.SpoonException: SourcePosition...
[ERROR]   AstCheckerTest.testAvoidSetCollectionSavedOnAST:37 » Spoon SourcePosition valu...
[ERROR]   AstCheckerTest.testPushToStackChanges:96 » Spoon SourcePosition values must be...
[ERROR]   CloneTest.testCloneCastConditional:112 » Spoon SourcePosition values must be a...
[ERROR]   CloneTest.testCloneListener:121 » Spoon SourcePosition values must be ascendin...
[ERROR]   CloneTest.testCloneMethodsDeclaredInAST:46 » Spoon SourcePosition values must ...
[ERROR]   CloneTest.testCopyMethod:159 » Spoon SourcePosition values must be ascending o...
[ERROR]   CloneTest.testCopyType:202 » Spoon SourcePosition values must be ascending or ...
[ERROR]   CtTypeInformationTest.setUp:33 » Spoon SourcePosition values must be ascending...
[ERROR]   CtTypeInformationTest.setUp:33 » Spoon SourcePosition values must be ascending...
[ERROR]   CtTypeInformationTest.setUp:33 » Spoon SourcePosition values must be ascending...
[ERROR]   CtTypeInformationTest.setUp:33 » Spoon SourcePosition values must be ascending...
[ERROR]   UnknownDeclarationTest.testUnknownCalls:35 » Spoon SourcePosition values must ...
[ERROR]   CtInheritanceScannerMethodsTest.testMethodsInInheritanceScanner:41 » Spoon Sou...
[ERROR]   CtScannerTest.testScan:231 » Spoon SourcePosition values must be ascending or ...
[ERROR]   CtScannerTest.testScannerCallsAllProperties:121 » Spoon SourcePosition values ...
[ERROR]   CtScannerTest.testScannerContract:81 » Spoon SourcePosition values must be asc...
[ERROR]   CtVisitorTest.testMethodsInVisitor:41 » Spoon SourcePosition values must be as...
[ERROR]   AnnotationTest.annotationAddValue:1117 » Spoon SourcePosition values must be a...
[ERROR]   AnnotationTest.annotationOverrideFQNIsOK:1138 » Spoon SourcePosition values mu...
[ERROR]   AnnotationTest.testAbstractAllAnnotationProcessor:907 » Spoon SourcePosition v...
[ERROR]   AnnotationTest.testAbstractAllAnnotationProcessorWithGlobalAnnotation:929 » Spoon
[ERROR]   AnnotationTest.testAnnotatedElementTypes:260 » Spoon SourcePosition values mus...
[ERROR]   AnnotationTest.testAnnotationInterfacePreserveMethods:977 » Spoon SourcePositi...
[ERROR]   AnnotationTest.testAnnotationIntrospection:947 » Spoon SourcePosition values m...
[ERROR]   AnnotationTest.testAnnotationNotRepeatableNotArrayAnnotation:1343 » Spoon Sour...
[ERROR]   AnnotationTest.testAnnotationWithDefaultArrayValue:381 » Spoon SourcePosition ...
[ERROR]   AnnotationTest.testCreateRepeatableAnnotation:1262 » Spoon SourcePosition valu...
[ERROR]   AnnotationTest.testCreateRepeatableAnnotationWithArrays:1314 » Spoon SourcePos...
[ERROR]   AnnotationTest.testDefaultValueInAnnotationsForAnnotationFields:872 » Spoon So...
[ERROR]   AnnotationTest.testFieldAndMethodInAnnotation:957 » Spoon SourcePosition value...
[ERROR]   AnnotationTest.testGetAnnotationFromParameter:1083 » Spoon SourcePosition valu...
[ERROR]   AnnotationTest.testGetAnnotationOuter:886 » Spoon SourcePosition values must b...
[ERROR]   AnnotationTest.testInnerAnnotationsWithArray:401 » Spoon SourcePosition values...
[ERROR]   AnnotationTest.testModelBuildingAnnotationBound:113 » Spoon SourcePosition val...
[ERROR]   AnnotationTest.testOutputGeneratedByTypeAnnotation:735 » Spoon SourcePosition ...
[ERROR]   AnnotationTest.testPersistenceProperty:155 » Spoon SourcePosition values must ...
[ERROR]   AnnotationTest.testRepeatableAnnotationAreManaged:1239 » Spoon SourcePosition ...
[ERROR]   AnnotationTest.testRepeatableAnnotationAreManagedWithArrays:1292 » Spoon Sourc...
[ERROR]   AnnotationTest.testSpoonSpoonResult:1051 » Spoon SourcePosition values must be...
[ERROR]   AnnotationTest.testUsageOfParametersInTypeAnnotation:692 » Spoon SourcePositio...
[ERROR]   AnnotationTest.testUsageOfTypeAnnotationBeforeExceptionInSignatureOfMethod:494 » Spoon
[ERROR]   AnnotationTest.testUsageOfTypeAnnotationInCast:471 » Spoon SourcePosition valu...
[ERROR]   AnnotationTest.testUsageOfTypeAnnotationInExtendsImplementsOfAClass:574 » Spoon
[ERROR]   AnnotationTest.testUsageOfTypeAnnotationInNewInstance:449 » Spoon SourcePositi...
[ERROR]   AnnotationTest.testUsageOfTypeAnnotationInReturnTypeInMethod:513 » Spoon Sourc...
[ERROR]   AnnotationTest.testUsageOfTypeAnnotationOnLocalVariableInMethod:551 » Spoon So...
[ERROR]   AnnotationTest.testUsageOfTypeAnnotationOnParameterInMethod:533 » Spoon Source...
[ERROR]   AnnotationTest.testUsageOfTypeAnnotationWithGenericTypesInClassDeclaration:621 » Spoon
[ERROR]   AnnotationTest.testUsageOfTypeAnnotationWithGenericTypesInStatements:642 » Spoon
[ERROR]   AnnotationTest.testWritingAnnotParamArray:124 » Spoon SourcePosition values mu...
[ERROR]   AnnotationValuesTest.testAnnotationPrintAnnotation:127 » Spoon SourcePosition ...
[ERROR]   AnnotationValuesTest.testValuesOnJava7Annotation:38 » Spoon SourcePosition val...
[ERROR]   AnnotationValuesTest.testValuesOnJava8Annotation:55 » Spoon SourcePosition val...
[ERROR]   APITest.testBasicAPIUsage:68 » Spoon SourcePosition values must be ascending o...
[ERROR]   APITest.testDuplicateEntry:117 » Spoon SourcePosition values must be ascending...
[ERROR]   APITest.testDuplicateFilePlusFolder:148 » Spoon SourcePosition values must be ...
[ERROR]   APITest.testDuplicateFolder:134 » Spoon SourcePosition values must be ascendin...
[ERROR]   APITest.testOneLinerIntro:422 » Spoon SourcePosition value must not be negativ...
[ERROR]   APITest.testOutputDestinationHandlerWithCUFactory:527 » Spoon SourcePosition v...
[ERROR]   APITest.testOverrideOutputWriter:99 » Spoon SourcePosition values must be asce...
[ERROR]   APITest.testPrintNotAllSourcesInCommandLine:256 » Spoon SourcePosition values ...
[ERROR]   APITest.testPrintNotAllSourcesWithFilter:223 » Spoon SourcePosition values mus...
[ERROR]   APITest.testPrintNotAllSourcesWithNames:242 » Spoon SourcePosition values must...
[ERROR]   APITest.testSetterInNodes:399 » Spoon SourcePosition values must be ascending ...
[ERROR]   MetamodelTest.testGetAllMetamodelInterfacess:49 » Spoon SourcePosition values ...
[ERROR]   MetamodelTest.testGetterSetterFroRole:62 » Spoon SourcePosition values must be...
[ERROR]   MetamodelTest.testRoleOnField:89 » Spoon SourcePosition values must be ascendi...
[ERROR]   NoClasspathTest.test:42 » Spoon SourcePosition values must be ascending or equ...
[ERROR]   NoClasspathTest.testInheritanceInNoClassPathWithClasses:167 » Spoon SourcePosi...
[ERROR]   NoClasspathTest.testIssue1747:153 » Spoon SourcePosition values must be ascend...
[ERROR]   SpoonArchitectureEnforcerTest.metamodelPackageRule:187 » Spoon SourcePosition ...
[ERROR]   SpoonArchitectureEnforcerTest.statelessFactory:45 » Spoon SourcePosition value...
[ERROR]   SpoonArchitectureEnforcerTest.testFactorySubFactory:113 » Spoon SourcePosition...
[ERROR]   SpoonArchitectureEnforcerTest.testGoodTestClassNames:215 » Spoon SourcePositio...
[ERROR]   SpoonArchitectureEnforcerTest.testInterfacesAreCtScannable:281 » Spoon SourceP...
[ERROR]   SpoonArchitectureEnforcerTest.testSpecPackage:361 » Spoon SourcePosition value...
[ERROR]   SpoonArchitectureEnforcerTest.testSrcMainJava:126 » Spoon SourcePosition value...
[ERROR]   SpoonArchitectureEnforcerTest.testStaticClasses:256 » Spoon SourcePosition val...
[ERROR]   ArraysTest.testArrayReferences:24 » Spoon SourcePosition values must be ascend...
[ERROR]   ArraysTest.testCtNewArrayInnerCtNewArray:71 » Spoon SourcePosition values must...
[ERROR]   ArraysTest.testCtNewArrayWitComments:86 » Spoon SourcePosition values must be ...
[ERROR]   ArraysTest.testInitializeWithNewArray:46 » Spoon SourcePosition values must be...
[ERROR]   CastTest.testCase4:78 » Spoon SourcePosition values must be ascending or equal
[ERROR]   CastTest.testCast1:30 » ModelBuilding snippet compilation error while compilin...
[ERROR]   CastTest.testCast2:47 » ModelBuilding snippet compilation error while compilin...
[ERROR]   CastTest.testCast3:64 » ModelBuilding snippet compilation error while compilin...
[ERROR]   CastTest.testTypeAnnotationOnCast:96 » Spoon SourcePosition values must be asc...
[ERROR]   ChangeCollectorTest.testChangeCollector:29 » Spoon SourcePosition values must ...
[ERROR]   CommentTest.testBlockComment:458->getSpoonFactory:82 » Spoon SourcePosition va...
[ERROR]   CommentTest.testCodeFactory:672->getSpoonFactory:82 » Spoon SourcePosition val...
[ERROR]   CommentTest.testCombinedPackageInfoComment:100->getSpoonFactory:82 » Spoon Sou...
[ERROR]   CommentTest.testCommentsInComment1And2:827->getSpoonFactory:82 » Spoon SourceP...
[ERROR]   CommentTest.testCoreFactory:654->getSpoonFactory:82 » Spoon SourcePosition val...
[ERROR]   CommentTest.testDocumentationContract:758 » Spoon SourcePosition values must b...
[ERROR]   CommentTest.testInLineComment:260->getSpoonFactory:82 » Spoon SourcePosition v...
[ERROR]   CommentTest.testInsertNewComment:620->getSpoonFactory:82 » Spoon SourcePositio...
[ERROR]   CommentTest.testJavaDocCommentOnMac:150 » Spoon SourcePosition values must be ...
[ERROR]   CommentTest.testJavaDocCommentOnUnix:129->getSpoonFactory:82 » Spoon SourcePos...
[ERROR]   CommentTest.testJavaDocEmptyCommentAndTag:232->getSpoonFactory:82 » Spoon Sour...
[ERROR]   CommentTest.testJavadocShortAndLongComment:137->getSpoonFactory:82 » Spoon Sou...
[ERROR]   CommentTest.testRemoveComment:250->getSpoonFactory:82 » Spoon SourcePosition v...
[ERROR]   CommentTest.testSnippedWithComments:703 » Spoon SourcePosition values must be ...
[ERROR]   CommentTest.testWildComments:898->getSpoonFactory:82 » Spoon SourcePosition va...
[ERROR]   EqualTest.testEqualsActualTypeRef:95 » ModelBuilding snippet compilation error...
[ERROR]   EqualTest.testEqualsComment:72 » ModelBuilding snippet compilation error while...
[ERROR]   EqualTest.testEqualsMultitype:82 » ModelBuilding snippet compilation error whi...
[ERROR]   CompilationTest.compileCommandLineTest:63 » Spoon SourcePosition value must no...
[ERROR]   CompilationTest.compileTest:87 » Spoon SourcePosition value must not be negati...
[ERROR]   CompilationTest.testExoticClassLoader:376 » Spoon SourcePosition values must b...
[ERROR]   CompilationTest.testFilterResourcesDir:236 » Spoon SourcePosition values must ...
[ERROR]   CompilationTest.testFilterResourcesFile:197 » Spoon SourcePosition values must...
[ERROR]   CompilationTest.testNewInstance:154 » ModelBuilding snippet compilation error ...
[ERROR]   CompilationTest.testNewInstanceFromExistingClass:126 » Spoon SourcePosition va...
[ERROR]   CompilationTest.testPrecompile:253 » Spoon SourcePosition values must be ascen...
[ERROR]   GetBinaryFilesTest.testAnonymousClasses:122 » Spoon SourcePosition values must...
[ERROR]   GetBinaryFilesTest.testExistingButNotBuiltBinary:52 » Spoon SourcePosition val...
[ERROR]   GetBinaryFilesTest.testMultiClassInSingleFile:75 » Spoon SourcePosition values...
[ERROR]   GetBinaryFilesTest.testNestedTypes:100 » Spoon SourcePosition values must be a...
[ERROR]   GetBinaryFilesTest.testSingleBinary:31 » Spoon SourcePosition values must be a...
[ERROR]   TestCompilationUnit.testAddDeclaredTypeInCU:116 » Spoon SourcePosition values ...
[ERROR]   TestCompilationUnit.testCompilationUnitDeclaredTypes:94 » Spoon SourcePosition...
[ERROR]   TestCompilationUnit.testGetUnitTypeWorksWithDeclaredPackage:71 NullPointer
[ERROR]   TestCompilationUnit.testIsoEncodingIsSupported:45 » Spoon SourcePosition value...
[ERROR]   TestCompilationUnit.testNewlyCreatedCUWouldGetAPartialPosition:147 » Spoon Sou...
[ERROR]   ConditionalTest.testBlockInConditionAndLoop:36 » Spoon SourcePosition values m...
[ERROR]   ConditionalTest.testConditional:22 » Spoon SourcePosition values must be ascen...
[ERROR]   ConditionalTest.testConditionalWithAssignment:29 » Spoon SourcePosition values...
[ERROR]   ConditionalTest.testNoBlockInConditionAndLoop:51 » Spoon SourcePosition values...
[ERROR]   ConstructorTest.setUp:36 » Spoon SourcePosition values must be ascending or eq...
[ERROR]   ConstructorTest.setUp:36 » Spoon SourcePosition values must be ascending or eq...
[ERROR]   ConstructorTest.setUp:36 » Spoon SourcePosition values must be ascending or eq...
[ERROR]   ConstructorTest.setUp:36 » Spoon SourcePosition values must be ascending or eq...
[ERROR]   ConstructorTest.setUp:36 » Spoon SourcePosition values must be ascending or eq...
[ERROR]   ConstructorTest.setUp:36 » Spoon SourcePosition values must be ascending or eq...
[ERROR]   ConstructorCallTest.setUp:35 » Spoon SourcePosition values must be ascending o...
[ERROR]   ConstructorCallTest.setUp:35 » Spoon SourcePosition values must be ascending o...
[ERROR]   ConstructorCallTest.setUp:35 » Spoon SourcePosition values must be ascending o...
[ERROR]   ConstructorCallTest.setUp:35 » Spoon SourcePosition values must be ascending o...
[ERROR]   ConstructorCallTest.setUp:35 » Spoon SourcePosition values must be ascending o...
[ERROR]   ConstructorCallTest.setUp:35 » Spoon SourcePosition values must be ascending o...
[ERROR]   NewClassTest.setUp:33 » Spoon SourcePosition values must be ascending or equal
[ERROR]   NewClassTest.setUp:33 » Spoon SourcePosition values must be ascending or equal
[ERROR]   NewClassTest.setUp:33 » Spoon SourcePosition values must be ascending or equal
[ERROR]   NewClassTest.setUp:33 » Spoon SourcePosition values must be ascending or equal
[ERROR]   NewClassTest.setUp:33 » Spoon SourcePosition values must be ascending or equal
[ERROR]   NewClassTest.setUp:33 » Spoon SourcePosition values must be ascending or equal
[ERROR]   NewClassTest.setUp:33 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ControlTest.testModelBuildingDoWhile:53 » Spoon SourcePosition values must be ...
[ERROR]   ControlTest.testModelBuildingFor:24 » Spoon SourcePosition values must be asce...
[ERROR]   TestCtBlock.testAddStatementInBlock:57 » Spoon SourcePosition values must be a...
[ERROR]   TestCtBlock.testAddStatementInCase:83 » Spoon SourcePosition values must be as...
[ERROR]   TestCtBlock.testRemoveStatement:29 » Spoon SourcePosition values must be ascen...
[ERROR]   CtBodyHolderTest.testConstructor:30 » Spoon SourcePosition values must be asce...
[ERROR]   CtBodyHolderTest.testForWithBlock:75 » Spoon SourcePosition values must be asc...
[ERROR]   CtBodyHolderTest.testForWithStatement:63 » Spoon SourcePosition values must be...
[ERROR]   CtBodyHolderTest.testMethod:39 » Spoon SourcePosition values must be ascending...
[ERROR]   CtBodyHolderTest.testTryCatch:48 » Spoon SourcePosition values must be ascendi...
[ERROR]   CtBodyHolderTest.testWhileWithBlock:87 » Spoon SourcePosition values must be a...
[ERROR]   SwitchCaseTest.insertAfterStatementInSwitchCaseWithoutException:25->factoryFor:60 » Spoon
[ERROR]   SwitchCaseTest.insertBeforeStatementInSwitchCaseWithoutException:42->factoryFor:60 » Spoon
[ERROR]   CtClassTest.getConstructor:50 » Spoon SourcePosition values must be ascending ...
[ERROR]   CtClassTest.testAllTypeReferencesToALocalTypeShouldNotStartWithNumber:143 » Spoon
[ERROR]   CtClassTest.testCloneAnonymousClassInvocation:225 » Spoon SourcePosition value...
[ERROR]   CtClassTest.testCloneAnonymousClassInvocationWithAutoimports:253 » Spoon Sourc...
[ERROR]   CtClassTest.testDefaultConstructorAreOk:210 » Spoon SourcePosition values must...
[ERROR]   CtClassTest.testNoClasspathWithSuperClassOfAClassInAnInterface:129 » Spoon Sou...
[ERROR]   CtClassTest.testParentOfTheEnclosingClassOfStaticClass:106 » Spoon SourcePosit...
[ERROR]   CtClassTest.testSpoonShouldInferImplicitPackageInNoClasspath:188 » Spoon Sourc...
[ERROR]   CtTypeParameterTest.testTypeErasure:31 » Spoon SourcePosition values must be a...
[ERROR]   CtTypeParameterTest.testTypeSame:133 » Spoon SourcePosition values must be asc...
[ERROR]   CtTypeTest.testHasMethodInDefaultMethod:77 » Spoon SourcePosition values must ...
[ERROR]   CtTypeTest.testHasMethodInDirectMethod:38 » ModelBuilding snippet compilation ...
[ERROR]   CtTypeTest.testHasMethodInSuperClass:63 » Spoon SourcePosition values must be ...
[ERROR]   CtTypeTest.testHasMethodNotHasMethod:46 » ModelBuilding snippet compilation er...
[ERROR]   CtTypeTest.testHasMethodOnNull:55 » ModelBuilding snippet compilation error wh...
[ERROR]   CtTypeTest.testIsSubTypeOf:88 » Spoon SourcePosition values must be ascending ...
[ERROR]   CtTypeTest.testIsSubTypeOfonTypeParameters:102 » Spoon SourcePosition values m...
[ERROR]   CtTypeTest.testIsSubTypeOfonTypeReferences:143 » Spoon SourcePosition values m...
[ERROR]   DeleteTest.testDeleteACaseOfASwitch:131 » Spoon SourcePosition values must be ...
[ERROR]   DeleteTest.testDeleteAClassTopLevel:208 » Spoon SourcePosition values must be ...
[ERROR]   DeleteTest.testDeleteAStatementInAnonymousExecutable:32 » Spoon SourcePosition...
[ERROR]   DeleteTest.testDeleteAStatementInConstructor:66 » Spoon SourcePosition values ...
[ERROR]   DeleteTest.testDeleteAStatementInMethod:82 » Spoon SourcePosition values must ...
[ERROR]   DeleteTest.testDeleteAStatementInStaticAnonymousExecutable:49 » Spoon SourcePo...
[ERROR]   DeleteTest.testDeleteAnnotationOnAClass:194 » Spoon SourcePosition values must...
[ERROR]   DeleteTest.testDeleteBodyOfAMethod:180 » Spoon SourcePosition values must be a...
[ERROR]   DeleteTest.testDeleteChainOfAssignment:237 » Spoon SourcePosition values must ...
[ERROR]   DeleteTest.testDeleteConditionInACondition:222 » Spoon SourcePosition values m...
[ERROR]   DeleteTest.testDeleteMethod:148 » Spoon SourcePosition values must be ascendin...
[ERROR]   DeleteTest.testDeleteParameterOfMethod:164 » Spoon SourcePosition values must ...
[ERROR]   DeleteTest.testDeleteReturn:98 » Spoon SourcePosition values must be ascending...
[ERROR]   DeleteTest.testDeleteStatementInCase:114 » Spoon SourcePosition values must be...
[ERROR]   EnumsTest.testAnnotationsOnEnum:33 » Spoon SourcePosition values must be ascen...
[ERROR]   EnumsTest.testModelBuildingEnum:22 » Spoon SourcePosition values must be ascen...
[ERROR]   EnumsTypeTest.testEnumsType:35 » Spoon SourcePosition values must be ascending...
[ERROR]   EvalTest.testArrayLength:37 » Spoon SourcePosition values must be ascending or...
[ERROR]   EvalTest.testDoNotSimplify:48 » Spoon SourcePosition values must be ascending ...
[ERROR]   EvalTest.testDoNotSimplifyCasts:59 » Spoon SourcePosition values must be ascen...
[ERROR]   EvalTest.testDoNotSimplifyToExpressionWhenStatementIsExpected:81 » Spoon Sourc...
[ERROR]   EvalTest.testStringConcatenation:23 » Spoon SourcePosition values must be asce...
[ERROR]   EvalTest.testTryCatchAndStatement:70 » Spoon SourcePosition values must be asc...
[ERROR]   EvalTest.testVisitorPartialEvaluatorScanner:144 » Spoon SourcePosition values ...
[ERROR]   EvalTest.testVisitorPartialEvaluator_binary:97 » ModelBuilding snippet compila...
[ERROR]   EvalTest.testVisitorPartialEvaluator_if:130 » ModelBuilding snippet compilatio...
[ERROR]   ExceptionTest.testExceptionIfNotCompilable:33 » Spoon SourcePosition values mu...
[ERROR]   ExceptionTest.testUnionCatchExceptionInsideLambdaInNoClasspath:117 » Spoon Sou...
[ERROR]   ExecutableRefTest.constructorTest:53->getInvocationFromMethod:97 » Spoon Sourc...
[ERROR]   ExecutableRefTest.methodTest:38->getInvocationFromMethod:97 » Spoon SourcePosi...
[ERROR]   ExecutableRefTest.testGetActualClassTest:68 » Spoon SourcePosition values must...
[ERROR]   ExecutableRefTest.testOverridingMethod:120 » Spoon SourcePosition values must ...
[ERROR]   ExecutableRefTest.testSameTypeInConstructorCallBetweenItsObjectAndItsExecutable:84 » Spoon
[ERROR]   ExecutableTest.testBlockInExecutable:42 » Spoon SourcePosition values must be ...
[ERROR]   ExecutableTest.testInfoInsideAnonymousExecutable:26 » Spoon SourcePosition val...
[ERROR]   AnnotationFactoryTest.testAnnotate:19 » Spoon SourcePosition values must be as...
[ERROR]   ConstructorFactoryTest.testCreate:30 » Spoon SourcePosition values must be asc...
[ERROR]   FactoryTest.specificationCoreFactoryCreate:197 » Spoon SourcePosition values m...
[ERROR]   FactoryTest.testClassAccessCreatedFromFactories:83 » Spoon SourcePosition valu...
[ERROR]   FactoryTest.testClone:40 » Spoon SourcePosition values must be ascending or eq...
[ERROR]   FactoryTest.testCtModel:108 » Spoon SourcePosition values must be ascending or...
[ERROR]   FactoryTest.testFactoryOverriding:74 » Spoon SourcePosition values must be asc...
[ERROR]   FactoryTest.testIncrementalModel:160 » Spoon SourcePosition values must be asc...
[ERROR]   FieldFactoryTest.testCreate:27 » Spoon SourcePosition values must be ascending...
[ERROR]   FieldFactoryTest.testCreateFromSource:48 » Spoon SourcePosition values must be...
[ERROR]   TypeFactoryTest.testGetClassInAnInterface:52 » Spoon SourcePosition values mus...
[ERROR]   TypeFactoryTest.testGetClassWithDollarAndNestedClass:70 » Spoon SourcePosition...
[ERROR]   FieldTest.testAddFieldsAtTop:77 » Spoon SourcePosition values must be ascendin...
[ERROR]   FieldTest.testFieldImplicitTarget:96 » Spoon SourcePosition values must be asc...
[ERROR]   FieldAccessTest.testBCUBug20140402:101 » Spoon SourcePosition values must be a...
[ERROR]   FieldAccessTest.testBUG20160112:143 » Spoon SourcePosition values must be asce...
[ERROR]   FieldAccessTest.testFieldAccessAutoExplicit:402 » Spoon SourcePosition values ...
[ERROR]   FieldAccessTest.testFieldAccessDeclaredInADefaultClass:300 » Spoon SourcePosit...
[ERROR]   FieldAccessTest.testFieldAccessInAnonymousClass:194 » Spoon SourcePosition val...
[ERROR]   FieldAccessTest.testFieldAccessInLambda:177 » Spoon SourcePosition values must...
[ERROR]   FieldAccessTest.testFieldAccessNoClasspath:210 » Spoon SourcePosition values m...
[ERROR]   FieldAccessTest.testFieldAccessOnUnknownType:367 » Spoon SourcePosition values...
[ERROR]   FieldAccessTest.testFieldAccessWithoutAnyImport:351 » Spoon SourcePosition val...
[ERROR]   FieldAccessTest.testFieldWriteWithPlusEqualsOperation:261 » Spoon SourcePositi...
[ERROR]   FieldAccessTest.testGetReference:392 » Spoon SourcePosition values must be asc...
[ERROR]   FieldAccessTest.testIncrementationOnAVarIsAUnaryOperator:237 » Spoon SourcePos...
[ERROR]   FieldAccessTest.testModelBuildingFieldAccesses:53 » Spoon SourcePosition value...
[ERROR]   FieldAccessTest.testTargetedAccessPosition:154 » Spoon SourcePosition values m...
[ERROR]   FieldAccessTest.testTypeDeclaredInAnonymousClass:285 » Spoon SourcePosition va...
[ERROR]   FieldAccessTest.testTypeOfFieldAccess:338 » Spoon SourcePosition values must b...
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   FilterTest.setup:99 » Spoon SourcePosition values must be ascending or equal
[ERROR]   GenericsTest.testAccessToGenerics:340 » Spoon SourcePosition values must be as...
[ERROR]   GenericsTest.testBugCommonCollection:237 » Spoon SourcePosition values must be...
[ERROR]   GenericsTest.testBugComparableComparator:89 » Spoon SourcePosition values must...
[ERROR]   GenericsTest.testCannotAdaptTypeOfNonTypeScope:1413 » Spoon SourcePosition val...
[ERROR]   GenericsTest.testClassContextOnInnerClass:1141 » Spoon SourcePosition values m...
[ERROR]   GenericsTest.testClassTypingContext:904 » Spoon SourcePosition values must be ...
[ERROR]   GenericsTest.testClassTypingContextMethodSignature:1115 » Spoon SourcePosition...
[ERROR]   GenericsTest.testConstructorCallGenerics:364 » Spoon SourcePosition values mus...
[ERROR]   GenericsTest.testCtTypeReference_getSuperclass:839 » Spoon SourcePosition valu...
[ERROR]   GenericsTest.testDeclarationOfTypeParameterReference:590 » Spoon SourcePositio...
[ERROR]   GenericsTest.testDiamond1:148 » ModelBuilding snippet compilation error while ...
[ERROR]   GenericsTest.testDiamond2:130 » Spoon SourcePosition values must be ascending ...
[ERROR]   GenericsTest.testDiamondComplexGenericsRxJava:1199 » Spoon SourcePosition valu...
[ERROR]   GenericsTest.testGenericInField:515 » Spoon SourcePosition values must be asce...
[ERROR]   GenericsTest.testGenericMethodCallWithExtend:227 » Spoon SourcePosition values...
[ERROR]   GenericsTest.testGenericTypeReference:653 » Spoon SourcePosition values must b...
[ERROR]   GenericsTest.testGenericWithExtendsInDeclaration:502 » Spoon SourcePosition va...
[ERROR]   GenericsTest.testGenericsInConstructorCall:571 » Spoon SourcePosition values m...
[ERROR]   GenericsTest.testGenericsInQualifiedNameInConstructorCall:529 » Spoon SourcePo...
[ERROR]   GenericsTest.testGenericsOnLocalType:559 » Spoon SourcePosition values must be...
[ERROR]   GenericsTest.testGetDeclarationOfTypeParameterReference:1228 » Spoon SourcePos...
[ERROR]   GenericsTest.testInstanceOfMapEntryGeneric:321 » Spoon SourcePosition values m...
[ERROR]   GenericsTest.testInvocationGenerics:417 » Spoon SourcePosition values must be ...
[ERROR]   GenericsTest.testIsGenericTypeEqual:1376 » Spoon SourcePosition values must be...
[ERROR]   GenericsTest.testIsGenericsMethod:603 » Spoon SourcePosition values must be as...
[ERROR]   GenericsTest.testIsSameSignatureWithGenerics:1283 » Spoon SourcePosition value...
[ERROR]   GenericsTest.testIsSameSignatureWithMethodGenerics:1305 » Spoon SourcePosition...
[ERROR]   GenericsTest.testIsSameSignatureWithReferencedGenerics:1354 » Spoon SourcePosi...
[ERROR]   GenericsTest.testMethodTypingContext:1001 » Spoon SourcePosition values must b...
[ERROR]   GenericsTest.testMethodTypingContextAdaptMethod:1067 » Spoon SourcePosition va...
[ERROR]   GenericsTest.testMethodsWithGenericsWhoExtendsObject:468 » Spoon SourcePositio...
[ERROR]   GenericsTest.testModelBuildingGenericConstructor:122 » Spoon SourcePosition va...
[ERROR]   GenericsTest.testModelBuildingSimilarSignatureMethods:161 » Spoon SourcePositi...
[ERROR]   GenericsTest.testModelBuildingTree:105 » Spoon SourcePosition values must be a...
[ERROR]   GenericsTest.testName:488 » Spoon SourcePosition values must be ascending or e...
[ERROR]   GenericsTest.testNewClassGenerics:444 » Spoon SourcePosition values must be as...
[ERROR]   GenericsTest.testRecursiveTypeAdapting:964 » Spoon SourcePosition values must ...
[ERROR]   GenericsTest.testTypeAdapted:876 » Spoon SourcePosition values must be ascendi...
[ERROR]   GenericsTest.testTypeParameterDeclarer:196 » Spoon SourcePosition values must ...
[ERROR]   GenericsTest.testTypeParameterReference:172 » Spoon SourcePosition values must...
[ERROR]   GenericsTest.testTypeParameterReferenceAsActualTypeArgument:617 » Spoon Source...
[ERROR]   GenericsTest.testWildCardonShadowClass:1182 » Spoon SourcePosition values must...
[ERROR]   GenericsTest.testWildcard:583 » Spoon SourcePosition values must be ascending ...
[ERROR]   GenericsTest.testisGeneric:670 » Spoon SourcePosition values must be ascending...
[ERROR]   ImportAndExtendWithPackageNameTest.testBuildModel:21 » Spoon SourcePosition va...
[ERROR]   ImportScannerTest.testComputeImportsInClass:53 » Spoon SourcePosition values m...
[ERROR]   ImportScannerTest.testComputeImportsInClassWithSameName:72 » Spoon SourcePosit...
[ERROR]   ImportScannerTest.testComputeMinimalImportsInClass:37 » Spoon SourcePosition v...
[ERROR]   ImportScannerTest.testMultiCatchImport:94 » Spoon SourcePosition values must b...
[ERROR]   ImportTest.testAccessToNestedClass:446 » Spoon SourcePosition values must be a...
[ERROR]   ImportTest.testAccessType:462 » Spoon SourcePosition values must be ascending ...
[ERROR]   ImportTest.testAnotherMissingImport:234 » Spoon SourcePosition values must be ...
[ERROR]   ImportTest.testCanAccess:548 » Spoon SourcePosition values must be ascending o...
[ERROR]   ImportTest.testDeepNestedStaticPathWithTypedParameter:655 » Spoon SourcePositi...
[ERROR]   ImportTest.testDeepNestedStaticPathWithTypedParameterWithImports:672 » Spoon S...
[ERROR]   ImportTest.testImportOfAnInnerClassInAClassPackage:174 » Spoon SourcePosition ...
[ERROR]   ImportTest.testImportOfAnInnerClassInASuperClassAvailableInLibrary:153 » Spoon
[ERROR]   ImportTest.testImportOfAnInnerClassInASuperClassPackageAutoImport:93 » Spoon S...
[ERROR]   ImportTest.testImportOfAnInnerClassInASuperClassPackageFullQualified:123 » Spoon
[ERROR]   ImportTest.testImportOfInvocationOfPrivateClass:349->getFactory:690 » Spoon So...
[ERROR]   ImportTest.testImportStarredPackageWithNonVisibleClass:1236 » Spoon SourcePosi...
[ERROR]   ImportTest.testImportStaticAndFieldAccess:404 » Spoon SourcePosition values mu...
[ERROR]   ImportTest.testImportStaticAndFieldAccessWithImport:419 » Spoon SourcePosition...
[ERROR]   ImportTest.testJavaLangIsConsideredAsImported:976 » Spoon SourcePosition value...
[ERROR]   ImportTest.testJavaLangIsConsideredAsImportedButNotForSubPackages:988 » Spoon ...
[ERROR]   ImportTest.testNestedAccessPathWithTypedParameter:572 » Spoon SourcePosition v...
[ERROR]   ImportTest.testNestedAccessPathWithTypedParameterWithImports:595 » Spoon Sourc...
[ERROR]   ImportTest.testNestedStaticPathWithTypedParameter:619 » Spoon SourcePosition v...
[ERROR]   ImportTest.testNestedStaticPathWithTypedParameterWithImports:637 » Spoon Sourc...
[ERROR]   ImportTest.testNewInnerClassDefinesInItsClassAndSuperClass:192 » Spoon SourceP...
[ERROR]   ImportTest.testNotImportExecutableType:364->getFactory:690 » Spoon SourcePosit...
[ERROR]   ImportTest.testSortImportPutStaticImportAfterTypeImport:1186 » Spoon SourcePos...
[ERROR]   ImportTest.testSortingOfImports:1144 » Spoon SourcePosition values must be asc...
[ERROR]   ImportTest.testSpoonWithImports:259 » Spoon SourcePosition values must be asce...
[ERROR]   ImportTest.testStaticImportForInvocationInNoClasspath:286 » Spoon SourcePositi...
[ERROR]   ImportTest.testStaticMethodWithDifferentClassSameNameCollision:1119 » Spoon So...
[ERROR]   ImportTest.testStaticMethodWithDifferentClassSameNameJava3NoCollision:1089 » Spoon
[ERROR]   ImportTest.testStaticMethodWithDifferentClassSameNameJava7NoCollision:1059 » Spoon
[ERROR]   ImportTest.testWithInnerEnumDoesNotImportStaticInnerMethods:751 » Spoon Source...
[ERROR]   ImportTest.testmportInCu:1004 » Spoon SourcePosition values must be ascending ...
[ERROR]   InitializerTest.testModelBuildingInitializer:41 » Spoon SourcePosition values ...
[ERROR]   InitializerTest.testModelBuildingStaticInitializer:21 » Spoon SourcePosition v...
[ERROR]   IntercessionContractTest.data:35 » Spoon SourcePosition values must be ascendi...
[ERROR]   IntercessionTest.testEqualConstructor:95 » ModelBuilding snippet compilation e...
[ERROR]   IntercessionTest.testInsertAfter:165 » ModelBuilding snippet compilation error...
[ERROR]   IntercessionTest.testInsertBegin:52 » ModelBuilding snippet compilation error ...
[ERROR]   IntercessionTest.testInsertEnd:72 » ModelBuilding snippet compilation error wh...
[ERROR]   IntercessionTest.testInsertIfIntercession:132 » ModelBuilding snippet compilat...
[ERROR]   IntercessionTest.testSettersAreAllGood:196 » Spoon SourcePosition values must ...
[ERROR]   RemoveTest.testRemoveAllStatements:24 » ModelBuilding snippet compilation erro...
[ERROR]   InsertMethodsTest.setup:42 » Spoon SourcePosition values must be ascending or ...
[ERROR]   InsertMethodsTest.setup:42 » Spoon SourcePosition values must be ascending or ...
[ERROR]   InsertMethodsTest.setup:42 » Spoon SourcePosition values must be ascending or ...
[ERROR]   InsertMethodsTest.setup:42 » Spoon SourcePosition values must be ascending or ...
[ERROR]   InsertMethodsTest.setup:42 » Spoon SourcePosition values must be ascending or ...
[ERROR]   InsertMethodsTest.setup:42 » Spoon SourcePosition values must be ascending or ...
[ERROR]   InsertMethodsTest.setup:42 » Spoon SourcePosition values must be ascending or ...
[ERROR]   InsertMethodsTest.setup:42 » Spoon SourcePosition values must be ascending or ...
[ERROR]   InsertMethodsTest.setup:42 » Spoon SourcePosition values must be ascending or ...
[ERROR]   InterfaceTest.setUp:41 » Spoon SourcePosition values must be ascending or equa...
[ERROR]   InterfaceTest.setUp:41 » Spoon SourcePosition values must be ascending or equa...
[ERROR]   InterfaceTest.setUp:41 » Spoon SourcePosition values must be ascending or equa...
[ERROR]   InterfaceTest.setUp:41 » Spoon SourcePosition values must be ascending or equa...
[ERROR]   InterfaceTest.setUp:41 » Spoon SourcePosition values must be ascending or equa...
[ERROR]   InterfaceTest.setUp:41 » Spoon SourcePosition values must be ascending or equa...
[ERROR]   TestInterfaceWithoutSetup.testInterfacePrettyPrinting:128 » Spoon SourcePositi...
[ERROR]   TestInterfaceWithoutSetup.testModifierFromInterfaceFieldAndMethod:29 » Spoon S...
[ERROR]   InvocationTest.testIssue1753:73 » Spoon SourcePosition values must be ascendin...
[ERROR]   JarTest.testFile:41 » Spoon SourcePosition values must be ascending or equal
[ERROR]   JarTest.testJar:28 » Spoon SourcePosition values must be ascending or equal
[ERROR]   JarTest.testResource:55 » Spoon SourcePosition value must not be negative
[ERROR]   JavaDocTest.testJavaDocReprint:26 » Spoon SourcePosition values must be ascend...
[ERROR]   JavaDocTest.testJavadocNotPresentInAST:66 » Spoon SourcePosition values must b...
[ERROR]   ImportBuilderTest.testInternalImportWhenNoClasspath:84 » Spoon SourcePosition ...
[ERROR]   ImportBuilderTest.testWithImportFromItf:166 » Spoon SourcePosition values must...
[ERROR]   ImportBuilderTest.testWithSimpleImport:48 » Spoon SourcePosition values must b...
[ERROR]   ImportBuilderTest.testWithSimpleImportNoAutoimport:70 » Spoon SourcePosition v...
[ERROR]   TestLabels.testLabelsAreDetected:34 » Spoon SourcePosition values must be asce...
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LambdaTest.setUp:69 » Spoon SourcePosition values must be ascending or equal
[ERROR]   InternalTest.testInternalClasses:19 » Spoon SourcePosition values must be asce...
[ERROR]   InternalTest.testStaticFinalFieldInAnonymousClass:49 » Spoon SourcePosition va...
[ERROR]   LiteralTest.testBuildLiternal:57 » Spoon SourcePosition values must be ascendi...
[ERROR]   LiteralTest.testCharLiteralInNoClasspath:30 » Spoon SourcePosition values must...
[ERROR]   LiteralTest.testEscapedString:140 » Spoon SourcePosition values must be ascend...
[ERROR]   LiteralTest.testLiteralInForEachWithNoClasspath:52 » Spoon SourcePosition valu...
[ERROR]   LoopTest.testAnnotationInForLoop:28 » Spoon SourcePosition values must be asce...
[ERROR]   LoopTest.testForeachShouldHaveAlwaysABlockInItsBody:40 » Spoon SourcePosition ...
[ERROR]   MainTest.loadModel:89 » Spoon SourcePosition values must be ascending or equal
[ERROR]   MethodTest.testClone:46 » Spoon SourcePosition values must be ascending or equ...
[ERROR]   MethodTest.testGetAllMethods:85 » Spoon SourcePosition values must be ascendin...
[ERROR]   MethodTest.testGetAllMethodsAdaptingType:97 » Spoon SourcePosition values must...
[ERROR]   MethodTest.testSearchMethodWithGeneric:58 » Spoon SourcePosition values must b...
[ERROR]   MethodOverriddingTest.testMethodOverride:23->checkMethodOverride:31 » Spoon So...
[ERROR]   MethodOverriddingTest.testMethodOverrideByReference:27->checkMethodOverride:31 » Spoon
[ERROR]   MethodReferenceTest.setUp:59 » Spoon SourcePosition values must be ascending o...
[ERROR]   MethodReferenceTest.setUp:59 » Spoon SourcePosition values must be ascending o...
[ERROR]   MethodReferenceTest.setUp:59 » Spoon SourcePosition values must be ascending o...
[ERROR]   MethodReferenceTest.setUp:59 » Spoon SourcePosition values must be ascending o...
[ERROR]   MethodReferenceTest.setUp:59 » Spoon SourcePosition values must be ascending o...
[ERROR]   MethodReferenceTest.setUp:59 » Spoon SourcePosition values must be ascending o...
[ERROR]   MethodReferenceTest.setUp:59 » Spoon SourcePosition values must be ascending o...
[ERROR]   MethodReferenceTest.setUp:59 » Spoon SourcePosition values must be ascending o...
[ERROR]   MethodReferenceTest.setUp:59 » Spoon SourcePosition values must be ascending o...
[ERROR]   MethodReferenceTest.setUp:59 » Spoon SourcePosition values must be ascending o...
[ERROR]   MethodReferenceTest.setUp:59 » Spoon SourcePosition values must be ascending o...
[ERROR]   MethodReferenceTest.setUp:59 » Spoon SourcePosition values must be ascending o...
[ERROR]   MethodReferenceTest.setUp:59 » Spoon SourcePosition values must be ascending o...
[ERROR]   AnonymousExecutableTest.testStatements:18 » Spoon SourcePosition values must b...
[ERROR]   BlockTest.testAddEmptyBlock:56 » ModelBuilding snippet compilation error while...
[ERROR]   BlockTest.testIterationStatements:30 » ModelBuilding snippet compilation error...
[ERROR]   SwitchCaseTest.testIterationStatements:36 » ModelBuilding snippet compilation ...
[ERROR]   SwitchCaseTest.testSwitchStatementOnAString:60 » Spoon SourcePosition values m...
[ERROR]   TypeTest.superclassTest:55 » Spoon SourcePosition values must be ascending or ...
[ERROR]   TypeTest.testGetAllExecutables:25 » Spoon SourcePosition values must be ascend...
[ERROR]   TypeTest.testGetDeclaredOrIheritedFieldByReflection:98 » Spoon SourcePosition ...
[ERROR]   TypeTest.testGetDeclaredOrIheritedFieldOnType:72 » Spoon SourcePosition values...
[ERROR]   TypeTest.testGetDeclaredOrIheritedFieldOnTypeRef:85 » Spoon SourcePosition val...
[ERROR]   TypeTest.testGetUsedTypes:41 » Spoon SourcePosition values must be ascending o...
[ERROR]   TypeTest.testGetUsedTypesForTypeInRootPackage:66 » ModelBuilding snippet compi...
[ERROR]   TypeTest.testTypeInfoIsInterface:108 » Spoon SourcePosition values must be asc...
[ERROR]   TestModifiers.testCtModifiableAddRemoveReturnCtModifiable:51 » Spoon SourcePos...
[ERROR]   TestModifiers.testGetModifiersHelpers:94 » Spoon SourcePosition values must be...
[ERROR]   TestModifiers.testMethodWithVarargsDoesNotBecomeTransient:30 » Spoon SourcePos...
[ERROR]   ParameterTest.testGetParameterReferenceInLambdaNoClasspath:41 » Spoon SourcePo...
[ERROR]   ParameterTest.testMultiParameterLambdaTypeReference:71 » Spoon SourcePosition ...
[ERROR]   ParameterTest.testParameterInNoClasspath:25 » Spoon SourcePosition values must...
[ERROR]   NullParentTest.setup:34 » Spoon SourcePosition values must be ascending or equ...
[ERROR]   NullParentTest.setup:34 » Spoon SourcePosition values must be ascending or equ...
[ERROR]   NullParentTest.setup:34 » Spoon SourcePosition values must be ascending or equ...
[ERROR]   NullParentTest.setup:34 » Spoon SourcePosition values must be ascending or equ...
[ERROR]   NullParentTest.setup:34 » Spoon SourcePosition values must be ascending or equ...
[ERROR]   NullParentTest.setup:34 » Spoon SourcePosition values must be ascending or equ...
[ERROR]   NullParentTest.setup:34 » Spoon SourcePosition values must be ascending or equ...
[ERROR]   NullParentTest.setup:34 » Spoon SourcePosition values must be ascending or equ...
[ERROR]   ParentContractTest.initializationError » ExceptionInInitializer
[ERROR]   ParentTest.setup:70 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ParentTest.setup:70 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ParentTest.setup:70 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ParentTest.setup:70 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ParentTest.setup:70 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ParentTest.setup:70 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ParentTest.setup:70 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ParentTest.setup:70 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ParentTest.setup:70 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ParentTest.setup:70 » Spoon SourcePosition values must be ascending or equal
[ERROR]   SetParentTest.data:48 NoClassDefFound Could not initialize class spoon.test.pa...
[ERROR]   TopLevelTypeTest.setup:27 » Spoon SourcePosition values must be ascending or e...
[ERROR]   PathTest.setup:46 » Spoon SourcePosition values must be ascending or equal
[ERROR]   PathTest.setup:46 » Spoon SourcePosition values must be ascending or equal
[ERROR]   PathTest.setup:46 » Spoon SourcePosition values must be ascending or equal
[ERROR]   PathTest.setup:46 » Spoon SourcePosition values must be ascending or equal
[ERROR]   PathTest.setup:46 » Spoon SourcePosition values must be ascending or equal
[ERROR]   PathTest.setup:46 » Spoon SourcePosition values must be ascending or equal
[ERROR]   PathTest.setup:46 » Spoon SourcePosition values must be ascending or equal
[ERROR]   PathTest.setup:46 » Spoon SourcePosition values must be ascending or equal
[ERROR]   PathTest.setup:46 » Spoon SourcePosition values must be ascending or equal
[ERROR]   PathTest.setup:46 » Spoon SourcePosition values must be ascending or equal
[ERROR]   PackageTest.testAddAnnotationToPackage:237 » Spoon SourcePosition values must ...
[ERROR]   PackageTest.testAnnotationOnPackage:91 » Spoon SourcePosition values must be a...
[ERROR]   PackageTest.testGetFQNInNoClassPath:289 » Spoon SourcePosition values must be ...
[ERROR]   PackageTest.testGetFQNSimple:273 » Spoon SourcePosition values must be ascendi...
[ERROR]   PackageTest.testPackage:65 NullPointer
[ERROR]   PackageTest.testRenamePackageAndPrettyPrint:142 » Spoon SourcePosition values ...
[ERROR]   PackageTest.testRenamePackageAndPrettyPrintNoclasspath:162 » Spoon SourcePosit...
[ERROR]   PackageTest.testRenamePackageAndPrettyPrintWithProcessor:185 » Spoon SourcePos...
[ERROR]   PackageTest.testRenameRootPackage:202 » Spoon SourcePosition values must be as...
[ERROR]   PackageTest.testRenameRootPackageWithNullOrEmpty:215 » Spoon SourcePosition va...
[ERROR]   PositionTest.getPositionOfImplicitBlock:575 » Spoon SourcePosition values must...
[ERROR]   PositionTest.testPositionAbstractMethod:391 » Spoon SourcePosition values must...
[ERROR]   PositionTest.testPositionAnnotation:181 » Spoon SourcePosition values must be ...
[ERROR]   PositionTest.testPositionCastExpressionOfVariableRead:605 » Spoon SourcePositi...
[ERROR]   PositionTest.testPositionClass:58 » Spoon SourcePosition values must be ascend...
[ERROR]   PositionTest.testPositionClassWithComments:89 » Spoon SourcePosition values mu...
[ERROR]   PositionTest.testPositionField:223 » Spoon SourcePosition values must be ascen...
[ERROR]   PositionTest.testPositionGeneric:286 » Spoon SourcePosition values must be asc...
[ERROR]   PositionTest.testPositionInterface:147 » Spoon SourcePosition values must be a...
[ERROR]   PositionTest.testPositionMethod:329 » Spoon SourcePosition values must be asce...
[ERROR]   PositionTest.testPositionParameterTypeReference:128 » Spoon SourcePosition val...
[ERROR]   PositionTest.testPositionStatement:425 » Spoon SourcePosition values must be a...
[ERROR]   DefaultPrettyPrinterTest.autoImportUsesFullyQualifiedNameWhenImportedNameAlreadyPresent:171 » Spoon
[ERROR]   DefaultPrettyPrinterTest.importsFromMultipleTypesSupported:271 » Spoon SourceP...
[ERROR]   DefaultPrettyPrinterTest.printClassCreatedWithSpoon:257 » Spoon SourcePosition...
[ERROR]   DefaultPrettyPrinterTest.printerCanPrintInvocationWithoutException:49 » Spoon ...
[ERROR]   DefaultPrettyPrinterTest.superInvocationWithEnclosingInstance:72 » Spoon Sourc...
[ERROR]   DefaultPrettyPrinterTest.testIssue1501:301 » Spoon SourcePosition values must ...
[ERROR]   DefaultPrettyPrinterTest.testPrintAClassWithImports:87 » Spoon SourcePosition ...
[ERROR]   DefaultPrettyPrinterTest.testPrintAMethodWithGeneric:145 » Spoon SourcePositio...
[ERROR]   DefaultPrettyPrinterTest.testPrintAMethodWithImports:118 » Spoon SourcePositio...
[ERROR]   DefaultPrettyPrinterTest.testTernaryParenthesesOnLocalVariable:288 » ModelBuilding
[ERROR]   LinesTest.setup:36 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LinesTest.setup:36 » Spoon SourcePosition values must be ascending or equal
[ERROR]   LinesTest.setup:36 » Spoon SourcePosition values must be ascending or equal
[ERROR]   PrintChangesTest.testPrintChanged:46 » Spoon SourcePosition values must be asc...
[ERROR]   PrintChangesTest.testPrintUnchaged:24 » Spoon SourcePosition values must be as...
[ERROR]   PrinterTest.testAutoimportModeDontImportUselessStatic:104 » Spoon SourcePositi...
[ERROR]   PrinterTest.testFQNModeWriteFQNConstructorInCtVisitor:86 » Spoon SourcePositio...
[ERROR]   PrinterTest.testJDTBatchCompilerCanBeBuild:147 » Spoon SourcePosition values m...
[ERROR]   PrinterTest.testPrettyPrinter:46 » Spoon SourcePosition values must be ascendi...
[ERROR]   PrinterTest.testPrinterTokenListener:247 » Spoon SourcePosition values must be...
[ERROR]   PrinterTest.testPrintingOfOrphanFieldReference:161 » Spoon SourcePosition valu...
[ERROR]   PrinterTest.testRuleCanBeBuild:127 » Spoon SourcePosition values must be ascen...
[ERROR]   QualifiedThisRefTest.setup:52 » Spoon SourcePosition values must be ascending ...
[ERROR]   QualifiedThisRefTest.setup:52 » Spoon SourcePosition values must be ascending ...
[ERROR]   QualifiedThisRefTest.setup:52 » Spoon SourcePosition values must be ascending ...
[ERROR]   ProcessingTest.testCallProcessorWithMultipleTypes:357 » Spoon SourcePosition v...
[ERROR]   ProcessingTest.testInsertBegin:46 » Spoon SourcePosition values must be ascend...
[ERROR]   ProcessingTest.testInsertEnd:85 » Spoon SourcePosition values must be ascendin...
[ERROR]   ProcessingTest.testProcessorWithGenericType:332 » Spoon SourcePosition values ...
[ERROR]   PropertiesTest.testNonExistingDirectory:29 » Spoon SourcePosition values must ...
[ERROR]   VariableReferencesTest.setup:62 » Spoon SourcePosition values must be ascendin...
[ERROR]   VariableReferencesTest.setup:62 » Spoon SourcePosition values must be ascendin...
[ERROR]   VariableReferencesTest.setup:62 » Spoon SourcePosition values must be ascendin...
[ERROR]   VariableReferencesTest.setup:62 » Spoon SourcePosition values must be ascendin...
[ERROR]   VariableReferencesTest.setup:62 » Spoon SourcePosition values must be ascendin...
[ERROR]   VariableReferencesTest.setup:62 » Spoon SourcePosition values must be ascendin...
[ERROR]   VariableReferencesTest.setup:62 » Spoon SourcePosition values must be ascendin...
[ERROR]   VariableReferencesTest.setup:62 » Spoon SourcePosition values must be ascendin...
[ERROR]   CtRenameLocalVariableRefactoringTest.testRefactorWrongUsage:205 » Spoon Source...
[ERROR]   CtRenameLocalVariableRefactoringTest.testRenameAllLocalVariablesOfRenameTestSubject:63 » Spoon
[ERROR]   CtRenameLocalVariableRefactoringTest.testRenameLocalVariableToSameName:253 » Spoon
[ERROR]   MethodsRefactoringTest.testAllMethodsSameSignatureFunction:104 » Spoon SourceP...
[ERROR]   MethodsRefactoringTest.testCtParameterRemoveRefactoring:315 » Spoon SourcePosi...
[ERROR]   MethodsRefactoringTest.testCtParameterRemoveRefactoringValidationCheck:345 » Spoon
[ERROR]   MethodsRefactoringTest.testExecutableReferenceFilter:248 » Spoon SourcePositio...
[ERROR]   MethodsRefactoringTest.testSubInheritanceHierarchyFunction:49 » Spoon SourcePo...
[ERROR]   RefactoringTest.testRefactoringClassChangeAllCtTypeReferenceAssociatedWithClassConcerned:28 » Spoon
[ERROR]   RefactoringTest.testThisInConstructor:66 » Spoon SourcePosition values must be...
[ERROR]   RefactoringTest.testThisInConstructorAfterATransformation:86 » Spoon SourcePos...
[ERROR]   RefactoringTest.testTransformedInstanceofAfterATransformation:105 » Spoon Sour...
[ERROR]   AnnotationFieldReferenceTest.testAnnotationFieldReference:19 » Spoon SourcePos...
[ERROR]   CloneReferenceTest.testGetDeclarationAfterClone:30 » Spoon SourcePosition valu...
[ERROR]   CloneReferenceTest.testGetDeclarationOfFieldAfterClone:62 » Spoon SourcePositi...
[ERROR]   ElasticsearchStackoverflowTest.testStackOverflow:39 » Spoon SourcePosition val...
[ERROR]   ExecutableReferenceGenericTest.setUp:48 » Spoon SourcePosition values must be ...
[ERROR]   ExecutableReferenceGenericTest.setUp:48 » Spoon SourcePosition values must be ...
[ERROR]   ExecutableReferenceGenericTest.setUp:48 » Spoon SourcePosition values must be ...
[ERROR]   ExecutableReferenceGenericTest.setUp:48 » Spoon SourcePosition values must be ...
[ERROR]   ExecutableReferenceGenericTest.setUp:48 » Spoon SourcePosition values must be ...
[ERROR]   ExecutableReferenceGenericTest.setUp:48 » Spoon SourcePosition values must be ...
[ERROR]   ExecutableReferenceGenericTest.setUp:48 » Spoon SourcePosition values must be ...
[ERROR]   ExecutableReferenceGenericTest.setUp:48 » Spoon SourcePosition values must be ...
[ERROR]   ExecutableReferenceGenericTest.setUp:48 » Spoon SourcePosition values must be ...
[ERROR]   ExecutableReferenceGenericTest.setUp:48 » Spoon SourcePosition values must be ...
[ERROR]   ExecutableReferenceGenericTest.setUp:48 » Spoon SourcePosition values must be ...
[ERROR]   ExecutableReferenceGenericTest.setUp:48 » Spoon SourcePosition values must be ...
[ERROR]   ExecutableReferenceTest.testCreateReferenceForAnonymousExecutable:135 » Spoon ...
[ERROR]   ExecutableReferenceTest.testHashcodeWorksWithReference:184 » Spoon SourcePosit...
[ERROR]   ExecutableReferenceTest.testInvokeEnumMethod:156 » Spoon SourcePosition values...
[ERROR]   ExecutableReferenceTest.testLambdaNoClasspath:175 » Spoon SourcePosition value...
[ERROR]   ExecutableReferenceTest.testSpecifyGetAllExecutablesMethod:112 » Spoon SourceP...
[ERROR]   ExecutableReferenceTest.testSuperClassInGetAllExecutables:96 » Spoon SourcePos...
[ERROR]   TypeReferenceTest.doNotCloseLoader:159 » Spoon SourcePosition values must be a...
[ERROR]   TypeReferenceTest.testAnnotationOnMethodWithPrimitiveReturnTypeInNoClasspath:441 » Spoon
[ERROR]   TypeReferenceTest.testAnonymousClassesHaveAnEmptyStringForItsNameInNoClasspath:458 » Spoon
[ERROR]   TypeReferenceTest.testArgumentOfAInvocationIsNotATypeAccess:396 » Spoon Source...
[ERROR]   TypeReferenceTest.testConstructorCallInNoClasspath:482 » Spoon SourcePosition ...
[ERROR]   TypeReferenceTest.testEqualityTypeReference:618 » Spoon SourcePosition values ...
[ERROR]   TypeReferenceTest.testGetAllExecutablesForInterfaces:73 » Spoon SourcePosition...
[ERROR]   TypeReferenceTest.testGetTypeDeclaration:593 » Spoon SourcePosition values mus...
[ERROR]   TypeReferenceTest.testIgnoreEnclosingClassInActualTypes:528 » Spoon SourcePosi...
[ERROR]   TypeReferenceTest.testInvocationWithFieldAccessInNoClasspath:415 » Spoon Sourc...
[ERROR]   TypeReferenceTest.testPackageInNoClasspath:305 » Spoon SourcePosition values m...
[ERROR]   TypeReferenceTest.testRecursiveTypeReferenceInGenericType:265 » Spoon SourcePo...
[ERROR]   TypeReferenceTest.testSubTypeAnonymous:580 » Spoon SourcePosition values must ...
[ERROR]   TypeReferenceTest.testToStringEqualityBetweenTwoGenericTypeDifferent:215 » Spoon
[ERROR]   TypeReferenceTest.testTypeDeclarationWildcard:604 » ModelBuilding snippet comp...
[ERROR]   TypeReferenceTest.testTypeReferenceSpecifiedInClassDeclarationInNoClasspath:340 » Spoon
[ERROR]   TypeReferenceTest.testUnknownSuperClassWithSameNameInNoClasspath:290 » Spoon S...
[ERROR]   VariableAccessTest.testDeclarationArray:61 » Spoon SourcePosition values must ...
[ERROR]   VariableAccessTest.testDeclarationOfVariableReference:83 » Spoon SourcePositio...
[ERROR]   VariableAccessTest.testDeclaringTypeOfALambdaReferencedByParameterReference:104 » Spoon
[ERROR]   VariableAccessTest.testGetDeclarationAfterClone:135 » Spoon SourcePosition val...
[ERROR]   VariableAccessTest.testMultipleDeclarationsOfLocalVariable:240 » Spoon SourceP...
[ERROR]   VariableAccessTest.testParameterReferenceInConstructorNoClasspath:75 » Spoon S...
[ERROR]   VariableAccessTest.testReferenceToLocalVariableDeclaredInLoop:216 » Spoon Sour...
[ERROR]   VariableAccessTest.testReferences:164 » Spoon SourcePosition values must be as...
[ERROR]   VariableAccessTest.testReferencesInInitExpression:189 » Spoon SourcePosition v...
[ERROR]   VariableAccessTest.testSuperAccess:261 » Spoon SourcePosition values must be a...
[ERROR]   VariableAccessTest.testVariableAccessDeclarationInAnonymousClass:42 » Spoon So...
[ERROR]   MetaModelTest.spoonMetaModelTest:47 » Spoon SourcePosition values must be asce...
[ERROR]   ReferenceQueryTest.getAllTypeReferencesInEnum:18 » Spoon SourcePosition values...
[ERROR]   ReplaceParametrizedTest.data:48 » Spoon SourcePosition values must be ascendin...
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ReplaceTest.setup:60 » Spoon SourcePosition values must be ascending or equal
[ERROR]   ClassesTest.testAnonymousClass:61 » Spoon SourcePosition values must be ascend...
[ERROR]   ClassesTest.testAnonymousClassInStaticField:149 » Spoon SourcePosition values ...
[ERROR]   ClassesTest.testClassWithInternalPublicClassOrInterf:39 » Spoon SourcePosition...
[ERROR]   ClassesTest.testInnerClassContruction:141 » Spoon SourcePosition values must b...
[ERROR]   ClassesTest.testIsAnonymousMethodInCtClass:103 » Spoon SourcePosition values m...
[ERROR]   ClassesTest.testTopLevel:126 » Spoon SourcePosition values must be ascending o...
[ERROR]   SerializableTest.testSerialCtStatement:29 » ModelBuilding snippet compilation ...
[ERROR]   SignatureTest.testArgumentNotNullForExecutableReference:297 » Spoon SourcePosi...
[ERROR]   SignatureTest.testBugSignature:320 » Spoon SourcePosition values must be ascen...
[ERROR]   SignatureTest.testLiteralSignature:121 » ModelBuilding snippet compilation err...
[ERROR]   SignatureTest.testMethodInvocationSignatureStaticFieldsVariables:142 » ModelBuilding
[ERROR]   SignatureTest.testMethodInvocationSignatureWithVariableAccess:202 » Spoon Sour...
[ERROR]   SignatureTest.testNullSignature:59 » ModelBuilding snippet compilation error w...
[ERROR]   SignatureTest.testNullSignatureInUnboundVariable:101 » IndexOutOfBounds Index:...
[ERROR]   SignatureTest.testUnboundFieldSignature:273 » IndexOutOfBounds Index: 0, Size:...
[ERROR]   SnippetTest.testCompileSnippetSeveralTimes:58 » ModelBuilding snippet compilat...
[ERROR]   SnippetTest.testCompileSnippetWithContext:81 » ModelBuilding snippet compilati...
[ERROR]   SnippetTest.testCompileStatementWithReturn:90 » ModelBuilding snippet compilat...
[ERROR]   SnippetTest.testIssue981:105 » Spoon SourcePosition values must be ascending o...
[ERROR]   SnippetTest.testSnippetFullClass:31 » ModelBuilding snippet compilation error ...
[ERROR]   SourcePositionTest.equalPositionsHaveSameHashcode:35->factoryFor:51 » Spoon So...
[ERROR]   SourcePositionTest.testSourcePositionOfSecondPrimitiveType:61 » Spoon SourcePo...
[ERROR]   StaticAccessTest.setUp:36 » Spoon SourcePosition values must be ascending or e...
[ERROR]   StaticAccessTest.setUp:36 » Spoon SourcePosition values must be ascending or e...
[ERROR]   ImplicitStaticFieldReferenceTest.testAmbiguousImplicitFieldReference:64->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testAmbiguousImplicitFieldReferenceAutoImport:75->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testAnnotationInChildWithConstants:130->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testAnnotationInChildWithConstantsAutoImport:135->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testChildOfGenericsWithAmbiguousStaticField:104->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testChildOfGenericsWithAmbiguousStaticFieldAutoImport:109->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testGenericsWithAmbiguousMemberField:121->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testGenericsWithAmbiguousMemberFieldAutoImport:125->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testGenericsWithAmbiguousStaticField:95->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testGenericsWithAmbiguousStaticFieldAutoImport:99->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testImplicitFieldReference:41->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testImplicitFieldReferenceAutoImport:52->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testImplicitStaticClassAccess:87->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testImplicitStaticClassAccessAutoImport:91->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testImplicitStaticFieldReference:17->checkFile:149 » Spoon
[ERROR]   ImplicitStaticFieldReferenceTest.testImplicitStaticFieldReferenceAutoImport:29->checkFile:149 » Spoon
[ERROR]   StringLiteralTest.testSnippetFullClass:31 » ModelBuilding snippet compilation ...
[ERROR]   StringTest.testModelBuildingInitializer:18 » Spoon SourcePosition values must ...
[ERROR]   ResourceTest.testFilteringFolder:76 » Spoon SourcePosition values must be asce...
[ERROR]   TargetedExpressionTest.testCastWriteWithGenerics:113 » Spoon SourcePosition va...
[ERROR]   TargetedExpressionTest.testClassDeclaredInALambda:435 » Spoon SourcePosition v...
[ERROR]   TargetedExpressionTest.testCtThisAccess:68 » Spoon SourcePosition values must ...
[ERROR]   TargetedExpressionTest.testInitializeFieldAccessInNoclasspathMode:422 » Spoon ...
[ERROR]   TargetedExpressionTest.testNotTargetedExpression:98 » Spoon SourcePosition val...
[ERROR]   TargetedExpressionTest.testStaticTargetsOfFieldAccessNoClasspath:243 » Spoon S...
[ERROR]   TargetedExpressionTest.testStaticTargetsOfInv:302 » Spoon SourcePosition value...
[ERROR]   TargetedExpressionTest.testStaticTargetsOfInvNoClasspath:394 » Spoon SourcePos...
[ERROR]   TargetedExpressionTest.testTargetOfFieldAccess:84 » Spoon SourcePosition value...
[ERROR]   TargetedExpressionTest.testTargetsOfFieldAccess:124 » Spoon SourcePosition val...
[ERROR]   TargetedExpressionTest.testTargetsOfFieldAccessInInnerClass:183 » Spoon Source...
[ERROR]   TargetedExpressionTest.testTargetsOfFieldInAnonymousClass:216 » Spoon SourcePo...
[ERROR]   TargetedExpressionTest.testTargetsOfInv:270 » Spoon SourcePosition values must...
[ERROR]   TargetedExpressionTest.testTargetsOfInvInAnonymousClass:367 » Spoon SourcePosi...
[ERROR]   TargetedExpressionTest.testTargetsOfInvInInnerClass:329 » Spoon SourcePosition...
[ERROR]   TargetedExpressionTest.testTargetsOfStaticFieldAccess:150 » Spoon SourcePositi...
[ERROR]   TemplateArrayAccessTest.testArrayAccess:23 » Spoon SourcePosition values must ...
[ERROR]   TemplateArrayAccessTest.testArrayLengthAccess:37 » Spoon SourcePosition values...
[ERROR]   TemplateClassAccessTest.testClassAccessTest:22 » Spoon SourcePosition values m...
[ERROR]   TemplateEnumAccessTest.testEnumAccessTest:26 » Spoon SourcePosition values mus...
[ERROR]   TemplateInvocationSubstitutionTest.testInvocationSubstitutionByExpression:41 » Spoon
[ERROR]   TemplateInvocationSubstitutionTest.testInvocationSubstitutionByStatement:25 » Spoon
[ERROR]   TemplateInvocationSubstitutionTest.testSubstitutionByExpression:56 » Spoon Sou...
[ERROR]   TemplateReplaceReturnTest.testNoReturnReplaceTemplate:47 » Spoon SourcePositio...
[ERROR]   TemplateReplaceReturnTest.testReturnReplaceTemplate:28 » Spoon SourcePosition ...
[ERROR]   TemplateTest.createTypeFromTemplate:803 » Spoon SourcePosition values must be ...
[ERROR]   TemplateTest.substituteStringLiteral:851 » Spoon SourcePosition values must be...
[ERROR]   TemplateTest.substituteSubString:893 » Spoon SourcePosition values must be asc...
[ERROR]   TemplateTest.substituteTypeAccessReference:1029 » Spoon SourcePosition values ...
[ERROR]   TemplateTest.testAnotherFieldAccessNameSubstitution:1008 » Spoon SourcePositio...
[ERROR]   TemplateTest.testCheckBoundTemplate:388 » Spoon SourcePosition values must be ...
[ERROR]   TemplateTest.testExtensionBlock:527 » Spoon SourcePosition values must be asce...
[ERROR]   TemplateTest.testExtensionDecoupledSubstitutionVisitor:551 » Spoon SourcePosit...
[ERROR]   TemplateTest.testFieldAccessNameSubstitution:971 » Spoon SourcePosition values...
[ERROR]   TemplateTest.testFieldAccessNameSubstitutionInInnerClass:989 » Spoon SourcePos...
[ERROR]   TemplateTest.testObjectIsNotParamTemplate:957 » Spoon SourcePosition values mu...
[ERROR]   TemplateTest.testSimpleTemplate:700 » Spoon SourcePosition values must be asce...
[ERROR]   TemplateTest.testStatementTemplateRootSubstitution:785 » Spoon SourcePosition ...
[ERROR]   TemplateTest.testSubstituteInnerClass:763 » Spoon SourcePosition values must b...
[ERROR]   TemplateTest.testSubstitutionInsertAllNtoN:717 » Spoon SourcePosition values m...
[ERROR]   TemplateTest.testTemplateArrayAccess:735 » Spoon SourcePosition values must be...
[ERROR]   TemplateTest.testTemplateC1:302 » Spoon SourcePosition values must be ascendin...
[ERROR]   TemplateTest.testTemplateInheritance:109 » Spoon SourcePosition values must be...
[ERROR]   TemplateTest.testTemplateInterfaces:588 » Spoon SourcePosition values must be ...
[ERROR]   TemplateTest.testTemplateInvocationSubstitution:685 » Spoon SourcePosition val...
[ERROR]   TemplateTest.testTemplateMatcher:429 » Spoon SourcePosition values must be asc...
[ERROR]   TemplateTest.testTemplateMatcherWithWholePackage:608 » Spoon SourcePosition va...
[ERROR]   TemplateTest.testTemplateWithWrongUsedStringParam:360 » Spoon SourcePosition v...
[ERROR]   TryCatchTest.testCatchOrder:82 » ModelBuilding snippet compilation error while...
[ERROR]   TryCatchTest.testCatchWithExplicitFinalVariable:267 » Spoon SourcePosition val...
[ERROR]   TryCatchTest.testCatchWithUnknownExceptions:301 » Spoon SourcePosition values ...
[ERROR]   TryCatchTest.testCompileMultiTryCatchWithCustomExceptions:196 » Spoon SourcePo...
[ERROR]   TryCatchTest.testExceptionJava7:105 » ModelBuilding snippet compilation error ...
[ERROR]   TryCatchTest.testFullyQualifiedException:66 » ModelBuilding snippet compilatio...
[ERROR]   TryCatchTest.testModelBuildingInitializer:44 » Spoon SourcePosition values mus...
[ERROR]   TryCatchTest.testMultiTryCatchWithCustomExceptions:179 » Spoon SourcePosition ...
[ERROR]   TryCatchTest.testRethrowingExceptionsJava7:129 » Spoon SourcePosition values m...
[ERROR]   TryCatchTest.testTryCatchVariableGetType:218 » ModelBuilding snippet compilati...
[ERROR]   TryCatchTest.testTryWithOneResource:152 » Spoon SourcePosition values must be ...
[ERROR]   TryCatchTest.testTryWithResources:164 » Spoon SourcePosition values must be as...
[ERROR]   TypeTest.test:170 » Spoon SourcePosition values must be ascending or equal
[ERROR]   TypeTest.testIntersectionTypeOnTopLevelType:267 » Spoon SourcePosition values ...
[ERROR]   TypeTest.testIntersectionTypeReferenceInGenericsAndCasts:188 » Spoon SourcePos...
[ERROR]   TypeTest.testPolyTypBindingInTernaryExpression:311 » Spoon SourcePosition valu...
[ERROR]   TypeTest.testTypeAccessForDotClass:73 » Spoon SourcePosition values must be as...
[ERROR]   TypeTest.testTypeAccessForTypeAccessInInstanceOf:121 » Spoon SourcePosition va...
[ERROR]   TypeTest.testTypeAccessOfArrayObjectInFullyQualifiedName:146 » Spoon SourcePos...
[ERROR]   TypeTest.testTypeAccessOnPrimitive:100 » ModelBuilding snippet compilation err...
[ERROR]   TypeTest.testTypeMemberOrder:388 » Spoon SourcePosition values must be ascendi...
[ERROR]   TypeTest.testTypeReferenceInGenericsAndCasts:233 » Spoon SourcePosition values...
[ERROR]   VarArgsTest.testModelBuildingInitializer:18 » Spoon SourcePosition values must...
[ERROR]   AccessFullyQualifiedFieldTest.testCheckAssignmentContracts:21 » Spoon SourcePo...
[ERROR]   AccessFullyQualifiedFieldTest.testNoFQNAndStaticImport:137->buildResourceAndReturnResult:31 » Spoon
[ERROR]   AccessFullyQualifiedFieldTest.testNoFQNWhenShadowedByField:48->buildResourceAndReturnResult:31 » Spoon
[ERROR]   AccessFullyQualifiedFieldTest.testNoFQNWhenShadowedByLocalVariable:60->buildResourceAndReturnResult:31 » Spoon
[ERROR]   AccessFullyQualifiedFieldTest.testNoFQNWhenUsedInInnerClassAndShadowedByLocalVariable:75->buildResourceAndReturnResult:31 » Spoon
[ERROR]   AccessFullyQualifiedFieldTest.testNoFQNWhenUsedInLoop:97->buildResourceAndReturnResult:31 » Spoon
[ERROR]   AccessFullyQualifiedFieldTest.testNoFQNWhenUsedInTryCatch:86->buildResourceAndReturnResult:31 » Spoon
[ERROR]   AccessFullyQualifiedFieldTest.testPrivateStaticImportShouldNotBeImportedInSameClass:148->buildResourceAndReturnResult:31 » Spoon
[ERROR]   AccessFullyQualifiedFieldTest.testStaticImportWithAutoImport:112 » Spoon Sourc...
[ERROR]   AccessTest.testAccessToStringOnPostIncrement:213 » ModelBuilding snippet compi...
[ERROR]   AccessTest.testCanVisitArrayAccessAndSubClasses:118 » Spoon SourcePosition val...
[ERROR]   AccessTest.testCanVisitVariableAccessAndSubClasses:42 » Spoon SourcePosition v...
[ERROR]   AccessTest.testFieldWriteDeclaredInTheSuperclass:172 » Spoon SourcePosition va...
[ERROR]   AccessTest.testRHS:165 » Spoon SourcePosition values must be ascending or equa...
[ERROR]   AccessTest.testStackedAssignments:158 » Spoon SourcePosition values must be as...
[ERROR]   AccessTest.testVariableAccessInNoClasspath:189 » Spoon SourcePosition values m...
[ERROR]   VisibilityTest.testFullyQualifiedNameOfTypeReferenceWithGeneric:83 » Spoon Sou...
[ERROR]   VisibilityTest.testInvocationVisibilityInFieldDeclaration:147 » Spoon SourcePo...
[ERROR]   VisibilityTest.testMethodeWithNonAccessibleTypeArgument:35 » Spoon SourcePosit...
[ERROR]   VisibilityTest.testName:122 » Spoon SourcePosition values must be ascending or...
[ERROR]   VisibilityTest.testVisibilityOfClassesNamedByClassesInJavaLangPackage:58 » Spoon
[ERROR]   AssignmentsEqualsTest.testEquals:19 » Spoon SourcePosition values must be asce...
[ERROR]   AbstractAssertTest.testTransformationFromCtElementWithProcessor:38 » Spoon Sou...
[ERROR]   CtElementAssertTest.testEqualityBetweenACtElementAndAString:31 » Spoon SourceP...
[ERROR]   CtElementAssertTest.testEqualityBetweenTwoCtElement:19 » Spoon SourcePosition ...
[ERROR]   CtElementAssertTest.testEqualityBetweenTwoCtElementWithTheSameSignatureButNotTheSameContent » 
[ERROR]   CtElementAssertTest.testEqualityBetweenTwoDifferentCtElement »  Unexpected exc...
[INFO] 
[ERROR] Tests run: 1079, Failures: 3, Errors: 795, Skipped: 4
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 01:42 min
[INFO] Finished at: 2018-04-02T22:56:24+02:00
[INFO] Final Memory: 28M/951M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.20.1:test (default-test) on project spoon-core: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/INRIA/spoon/361353762/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
