<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="529" failures="0" name="TestSuite" time="3.006" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.121-b13"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/root/workspace/modelmapper/modelmapper/384016852"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="skip.gulp" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="findbugs.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/root/workspace/modelmapper/modelmapper/384016852"/>
    <property name="checkstyle.skip" value="true"/>
    <property name="java.runtime.version" value="1.8.0_121-8u121-b13-1~bpo8+1-b13"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="skip.npm" value="true"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="gpg.skip" value="true"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="cobertura.skip" value="true"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="license.skip" value="true"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="skip.bower" value="true"/>
    <property name="maven.repo.local" value="/root/./workspace/modelmapper/modelmapper/384016852/.m2"/>
    <property name="os.version" value="3.10.0-862.2.3.el7.x86_64"/>
    <property name="user.home" value="/root"/>
    <property name="user.timezone" value="Europe/Paris"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="root"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="skipITs" value="true"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -B -D enforcer.skip=true -D dependency-check.skip=true -D skipITs=true -D cobertura.skip=true -D maven.repo.local=/root/./workspace/modelmapper/modelmapper/384016852/.m2 -D rat.skip=true -D findbugs.skip=true -D skip.bower=true -D gpg.skip=true -D checkstyle.skip=true -D skip.gulp=true -D license.skip=true -D skip.npm=true test"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="dependency-check.skip" value="true"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_121"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="enforcer.skip" value="true"/>
    <property name="rat.skip" value="true"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="org.modelmapper.internal.converter.CalendarConverterTest" name="(org.modelmapper.internal.converter.CalendarConverterTest)" time="0.019"/>
  <testcase classname="org.modelmapper.internal.converter.CalendarConverterTest" name="(org.modelmapper.internal.converter.CalendarConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.CalendarConverterTest" name="(org.modelmapper.internal.converter.CalendarConverterTest)" time="0.005"/>
  <testcase classname="org.modelmapper.internal.converter.CalendarConverterTest" name="(org.modelmapper.internal.converter.CalendarConverterTest)" time="0.002"/>
  <testcase classname="org.modelmapper.internal.converter.CalendarConverterTest" name="(org.modelmapper.internal.converter.CalendarConverterTest)" time="0.007"/>
  <testcase classname="org.modelmapper.internal.converter.CalendarConverterTest" name="(org.modelmapper.internal.converter.CalendarConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.CalendarConverterTest" name="(org.modelmapper.internal.converter.CalendarConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.DateConverterTest" name="(org.modelmapper.internal.converter.DateConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.ArrayConverterTest" name="(org.modelmapper.internal.converter.ArrayConverterTest)" time="0.004"/>
  <testcase classname="org.modelmapper.internal.converter.ArrayConverterTest" name="(org.modelmapper.internal.converter.ArrayConverterTest)" time="0.002"/>
  <testcase classname="org.modelmapper.internal.converter.ArrayConverterTest" name="(org.modelmapper.internal.converter.ArrayConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.ArrayConverterTest" name="(org.modelmapper.internal.converter.ArrayConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.ArrayConverterTest" name="(org.modelmapper.internal.converter.ArrayConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.ArrayConverterTest" name="(org.modelmapper.internal.converter.ArrayConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.ArrayConverterTest" name="(org.modelmapper.internal.converter.ArrayConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.ArrayConverterTest" name="(org.modelmapper.internal.converter.ArrayConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.AssignableConverterTest" name="(org.modelmapper.internal.converter.AssignableConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.AssignableConverterTest" name="(org.modelmapper.internal.converter.AssignableConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.BooleanConverterTest" name="(org.modelmapper.internal.converter.BooleanConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.BooleanConverterTest" name="(org.modelmapper.internal.converter.BooleanConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.BooleanConverterTest" name="(org.modelmapper.internal.converter.BooleanConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.BooleanConverterTest" name="(org.modelmapper.internal.converter.BooleanConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.user.CharArray" name="(org.modelmapper.user.CharArray)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.CharacterConverterTest" name="(org.modelmapper.internal.converter.CharacterConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.CharacterConverterTest" name="(org.modelmapper.internal.converter.CharacterConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.CharacterConverterTest" name="(org.modelmapper.internal.converter.CharacterConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies1" name="(org.modelmapper.functional.circular.CircularDependencies1)" time="0.005"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies1" name="(org.modelmapper.functional.circular.CircularDependencies1)" time="0.002"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies1" name="(org.modelmapper.functional.circular.CircularDependencies1)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies1" name="(org.modelmapper.functional.circular.CircularDependencies1)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies1" name="(org.modelmapper.functional.circular.CircularDependencies1)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies2" name="(org.modelmapper.functional.circular.CircularDependencies2)" time="0.334"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies2" name="(org.modelmapper.functional.circular.CircularDependencies2)" time="0.016"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies2" name="(org.modelmapper.functional.circular.CircularDependencies2)" time="0.01"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies2" name="(org.modelmapper.functional.circular.CircularDependencies2)" time="0.005"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies3" name="(org.modelmapper.functional.circular.CircularDependencies3)" time="0.002"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies4" name="(org.modelmapper.functional.circular.CircularDependencies4)" time="0"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies5" name="(org.modelmapper.functional.circular.CircularDependencies5)" time="0.002"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies5" name="(org.modelmapper.functional.circular.CircularDependencies5)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies5" name="(org.modelmapper.functional.circular.CircularDependencies5)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies6" name="(org.modelmapper.functional.circular.CircularDependencies6)" time="0.002"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies6" name="(org.modelmapper.functional.circular.CircularDependencies6)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies6" name="(org.modelmapper.functional.circular.CircularDependencies6)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.circular.CircularDependencies7" name="(org.modelmapper.functional.circular.CircularDependencies7)" time="0"/>
  <testcase classname="org.modelmapper.bugs.CircularMappingBug" name="(org.modelmapper.bugs.CircularMappingBug)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.CollectionConverterTest" name="(org.modelmapper.internal.converter.CollectionConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.CollectionConverterTest" name="(org.modelmapper.internal.converter.CollectionConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.CollectionConverterTest" name="(org.modelmapper.internal.converter.CollectionConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.CollectionConverterTest" name="(org.modelmapper.internal.converter.CollectionConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.CollectionConverterTest" name="(org.modelmapper.internal.converter.CollectionConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.CollectionConverterTest" name="(org.modelmapper.internal.converter.CollectionConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.CollectionConverterTest" name="(org.modelmapper.internal.converter.CollectionConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.CollectionConverterTest" name="(org.modelmapper.internal.converter.CollectionConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.CollectionConverterTest" name="(org.modelmapper.internal.converter.CollectionConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.CollectionConverterTest" name="(org.modelmapper.internal.converter.CollectionConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.CollectionConverterTest" name="(org.modelmapper.internal.converter.CollectionConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.iterable.CollectionMapping1" name="(org.modelmapper.functional.iterable.CollectionMapping1)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.iterable.CollectionMapping1" name="(org.modelmapper.functional.iterable.CollectionMapping1)" time="0"/>
  <testcase classname="org.modelmapper.functional.iterable.CollectionMapping1" name="(org.modelmapper.functional.iterable.CollectionMapping1)" time="0"/>
  <testcase classname="org.modelmapper.functional.iterable.CollectionMapping2" name="(org.modelmapper.functional.iterable.CollectionMapping2)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.iterable.CollectionMapping2" name="(org.modelmapper.functional.iterable.CollectionMapping2)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.iterable.CollectionMapping2" name="(org.modelmapper.functional.iterable.CollectionMapping2)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.iterable.CollectionMapping2" name="(org.modelmapper.functional.iterable.CollectionMapping2)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.iterable.CollectionMapping3" name="(org.modelmapper.functional.iterable.CollectionMapping3)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.iterable.CollectionMapping3" name="(org.modelmapper.functional.iterable.CollectionMapping3)" time="0.066"/>
  <testcase classname="org.modelmapper.functional.iterable.CollectionWithConverter" name="(org.modelmapper.functional.iterable.CollectionWithConverter)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.conditional.ConditionalMapping1" name="(org.modelmapper.functional.conditional.ConditionalMapping1)" time="0.007"/>
  <testcase classname="org.modelmapper.functional.conditional.ConditionalMapping1" name="(org.modelmapper.functional.conditional.ConditionalMapping1)" time="0"/>
  <testcase classname="org.modelmapper.functional.conditional.ConditionalMapping2" name="(org.modelmapper.functional.conditional.ConditionalMapping2)" time="0.007"/>
  <testcase classname="org.modelmapper.functional.shading.ConditionalShading" name="(org.modelmapper.functional.shading.ConditionalShading)" time="0.007"/>
  <testcase classname="org.modelmapper.functional.shading.ConditionalShading" name="(org.modelmapper.functional.shading.ConditionalShading)" time="0.01"/>
  <testcase classname="org.modelmapper.functional.shading.ConditionalShading" name="(org.modelmapper.functional.shading.ConditionalShading)" time="0.015"/>
  <testcase classname="org.modelmapper.functional.conditional.ConditionalTest" name="(org.modelmapper.functional.conditional.ConditionalTest)" time="0.005"/>
  <testcase classname="org.modelmapper.functional.conditional.ConditionalTest" name="(org.modelmapper.functional.conditional.ConditionalTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.conditional.ConditionalTest" name="(org.modelmapper.functional.conditional.ConditionalTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.converter.ConvertNestedObjectTest" name="(org.modelmapper.functional.converter.ConvertNestedObjectTest)" time="0.016"/>
  <testcase classname="org.modelmapper.functional.shading.ConverterShading" name="(org.modelmapper.functional.shading.ConverterShading)" time="0.009"/>
  <testcase classname="org.modelmapper.functional.shading.ConverterShading" name="(org.modelmapper.functional.shading.ConverterShading)" time="0.011"/>
  <testcase classname="org.modelmapper.internal.converter.ConverterStoreTest" name="(org.modelmapper.internal.converter.ConverterStoreTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.ConverterStoreTest" name="(org.modelmapper.internal.converter.ConverterStoreTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.ConverterStoreTest" name="(org.modelmapper.internal.converter.ConverterStoreTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.ConverterStoreTest" name="(org.modelmapper.internal.converter.ConverterStoreTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.ConverterStoreTest" name="(org.modelmapper.internal.converter.ConverterStoreTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.converter.ConverterTest1" name="(org.modelmapper.functional.converter.ConverterTest1)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.converter.ConverterTest1" name="(org.modelmapper.functional.converter.ConverterTest1)" time="0.006"/>
  <testcase classname="org.modelmapper.functional.converter.ConverterTest1" name="(org.modelmapper.functional.converter.ConverterTest1)" time="0.007"/>
  <testcase classname="org.modelmapper.functional.converter.ConverterTest1" name="(org.modelmapper.functional.converter.ConverterTest1)" time="0"/>
  <testcase classname="org.modelmapper.functional.converter.ConverterTest1" name="(org.modelmapper.functional.converter.ConverterTest1)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_converter" name="(org.modelmapper.functional.converter.CustomConversion$When_using_converter)" time="0.006"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_converter" name="(org.modelmapper.functional.converter.CustomConversion$When_using_converter)" time="0"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_destination_object" name="(org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_destination_object)" time="0.006"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_destination_object" name="(org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_destination_object)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_destination_object" name="(org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_destination_object)" time="0.008"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_destination_object" name="(org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_destination_object)" time="0.006"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_deep_mapping" name="(org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_deep_mapping)" time="0.008"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_mapping_to_one_destination_from_many_sources" name="(org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_mapping_to_one_destination_from_many_sources)" time="0.026"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_mismatched_properties" name="(org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_mismatched_properties)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_mismatched_properties" name="(org.modelmapper.functional.converter.CustomConversion$When_using_converter_for_mismatched_properties)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_member_converter" name="(org.modelmapper.functional.converter.CustomConversion$When_using_member_converter)" time="0"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_member_converter" name="(org.modelmapper.functional.converter.CustomConversion$When_using_member_converter)" time="0"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_member_converter_for_deep_model" name="(org.modelmapper.functional.converter.CustomConversion$When_using_member_converter_for_deep_model)" time="0"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_member_converter_for_different_member" name="(org.modelmapper.functional.converter.CustomConversion$When_using_member_converter_for_different_member)" time="0.006"/>
  <testcase classname="org.modelmapper.functional.converter.CustomConversion$When_using_member_converter_for_different_member" name="(org.modelmapper.functional.converter.CustomConversion$When_using_member_converter_for_different_member)" time="0.008"/>
  <testcase classname="org.modelmapper.functional.deepmapping.DeepMappingTest1" name="(org.modelmapper.functional.deepmapping.DeepMappingTest1)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.deepmapping.DeepMappingTest1" name="(org.modelmapper.functional.deepmapping.DeepMappingTest1)" time="0.017"/>
  <testcase classname="org.modelmapper.functional.deepmapping.DeepMappingTest2" name="(org.modelmapper.functional.deepmapping.DeepMappingTest2)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.iterable.DifferentTypedElements" name="(org.modelmapper.functional.iterable.DifferentTypedElements)" time="0"/>
  <testcase classname="org.modelmapper.functional.disambiguation.DisambiguationTest1" name="(org.modelmapper.functional.disambiguation.DisambiguationTest1)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.disambiguation.DisambiguationTest2" name="(org.modelmapper.functional.disambiguation.DisambiguationTest2)" time="0.003"/>
  <testcase classname="org.modelmapper.functional.disambiguation.DisambiguationTest2" name="(org.modelmapper.functional.disambiguation.DisambiguationTest2)" time="0.002"/>
  <testcase classname="org.modelmapper.functional.disambiguation.DisambiguationTest3" name="(org.modelmapper.functional.disambiguation.DisambiguationTest3)" time="0.002"/>
  <testcase classname="org.modelmapper.functional.disambiguation.DisambiguationTest3" name="(org.modelmapper.functional.disambiguation.DisambiguationTest3)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.disambiguation.DisambiguationTest4" name="(org.modelmapper.functional.disambiguation.DisambiguationTest4)" time="0.006"/>
  <testcase classname="org.modelmapper.functional.disambiguation.DisambiguationTest4" name="(org.modelmapper.functional.disambiguation.DisambiguationTest4)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.skip.EnableSkipNullTest" name="(org.modelmapper.functional.skip.EnableSkipNullTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.skip.EnableSkipNullTest" name="(org.modelmapper.functional.skip.EnableSkipNullTest)" time="0.006"/>
  <testcase classname="org.modelmapper.functional.skip.EnableSkipNullTest" name="(org.modelmapper.functional.skip.EnableSkipNullTest)" time="0.008"/>
  <testcase classname="org.modelmapper.functional.EnumConversion" name="(org.modelmapper.functional.EnumConversion)" time="0"/>
  <testcase classname="org.modelmapper.functional.EnumConversion" name="(org.modelmapper.functional.EnumConversion)" time="0"/>
  <testcase classname="org.modelmapper.functional.enums.EnumConverter" name="(org.modelmapper.functional.enums.EnumConverter)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.EnumConverterTest" name="(org.modelmapper.internal.converter.EnumConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.EnumConverterTest" name="(org.modelmapper.internal.converter.EnumConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.EnumConverterTest" name="(org.modelmapper.internal.converter.EnumConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.enums.EnumSetMappingTest" name="(org.modelmapper.functional.enums.EnumSetMappingTest)" time="0.047"/>
  <testcase classname="org.modelmapper.functional.enums.EnumSetMappingTest" name="(org.modelmapper.functional.enums.EnumSetMappingTest)" time="0.036"/>
  <testcase classname="org.modelmapper.functional.EqualHierarchies" name="(org.modelmapper.functional.EqualHierarchies)" time="0"/>
  <testcase classname="org.modelmapper.functional.EqualHierarchies" name="(org.modelmapper.functional.EqualHierarchies)" time="0"/>
  <testcase classname="org.modelmapper.functional.EqualHierarchies" name="(org.modelmapper.functional.EqualHierarchies)" time="0"/>
  <testcase classname="org.modelmapper.functional.EqualHierarchies" name="(org.modelmapper.functional.EqualHierarchies)" time="0"/>
  <testcase classname="org.modelmapper.functional.converter.ExistingDestinationTest" name="(org.modelmapper.functional.converter.ExistingDestinationTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.006"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.006"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.009"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.006"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.012"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.005"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.014"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.005"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.006"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.006"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.006"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.ExplicitMappingBuilderTest" name="(org.modelmapper.internal.ExplicitMappingBuilderTest)" time="0.007"/>
  <testcase classname="org.modelmapper.functional.FieldMappingTest" name="(org.modelmapper.functional.FieldMappingTest)" time="0.007"/>
  <testcase classname="org.modelmapper.functional.FieldMappingTest" name="(org.modelmapper.functional.FieldMappingTest)" time="0.015"/>
  <testcase classname="org.modelmapper.functional.FieldMappingTest" name="(org.modelmapper.functional.FieldMappingTest)" time="0.007"/>
  <testcase classname="org.modelmapper.bugs.GC10" name="(org.modelmapper.bugs.GC10)" time="0.011"/>
  <testcase classname="org.modelmapper.bugs.GC12" name="(org.modelmapper.bugs.GC12)" time="0.004"/>
  <testcase classname="org.modelmapper.bugs.GC19" name="(org.modelmapper.bugs.GC19)" time="0.004"/>
  <testcase classname="org.modelmapper.bugs.GC22" name="(org.modelmapper.bugs.GC22)" time="0.007"/>
  <testcase classname="org.modelmapper.bugs.GH101" name="(org.modelmapper.bugs.GH101)" time="0.001"/>
  <testcase classname="org.modelmapper.bugs.GH104" name="(org.modelmapper.bugs.GH104)" time="0.001"/>
  <testcase classname="org.modelmapper.bugs.GH109" name="(org.modelmapper.bugs.GH109)" time="0.004"/>
  <testcase classname="org.modelmapper.bugs.GH11" name="(org.modelmapper.bugs.GH11)" time="0"/>
  <testcase classname="org.modelmapper.bugs.GH110" name="(org.modelmapper.bugs.GH110)" time="0.095"/>
  <testcase classname="org.modelmapper.bugs.GH113" name="(org.modelmapper.bugs.GH113)" time="0.006"/>
  <testcase classname="org.modelmapper.bugs.GH115" name="(org.modelmapper.bugs.GH115)" time="0.005"/>
  <testcase classname="org.modelmapper.bugs.GH119" name="(org.modelmapper.bugs.GH119)" time="0.001"/>
  <testcase classname="org.modelmapper.bugs.GH126" name="(org.modelmapper.bugs.GH126)" time="0.006"/>
  <testcase classname="org.modelmapper.bugs.GH129" name="(org.modelmapper.bugs.GH129)" time="0.002"/>
  <testcase classname="org.modelmapper.bugs.GH143" name="(org.modelmapper.bugs.GH143)" time="0.001"/>
  <testcase classname="org.modelmapper.bugs.GH153" name="(org.modelmapper.bugs.GH153)" time="0.005"/>
  <testcase classname="org.modelmapper.bugs.GH171" name="(org.modelmapper.bugs.GH171)" time="0.011"/>
  <testcase classname="org.modelmapper.bugs.GH171" name="(org.modelmapper.bugs.GH171)" time="0.003"/>
  <testcase classname="org.modelmapper.bugs.GH176" name="(org.modelmapper.bugs.GH176)" time="0.006"/>
  <testcase classname="org.modelmapper.bugs.GH176" name="(org.modelmapper.bugs.GH176)" time="0.011"/>
  <testcase classname="org.modelmapper.bugs.GH176" name="(org.modelmapper.bugs.GH176)" time="0.007"/>
  <testcase classname="org.modelmapper.bugs.GH197" name="(org.modelmapper.bugs.GH197)" time="0.004"/>
  <testcase classname="org.modelmapper.bugs.GH197" name="(org.modelmapper.bugs.GH197)" time="0.004"/>
  <testcase classname="org.modelmapper.bugs.GH20" name="(org.modelmapper.bugs.GH20)" time="0.001"/>
  <testcase classname="org.modelmapper.bugs.GH204" name="(org.modelmapper.bugs.GH204)" time="0.008"/>
  <testcase classname="org.modelmapper.bugs.GH204" name="(org.modelmapper.bugs.GH204)" time="0.011"/>
  <testcase classname="org.modelmapper.bugs.GH204" name="(org.modelmapper.bugs.GH204)" time="0.008"/>
  <testcase classname="org.modelmapper.bugs.GH22" name="(org.modelmapper.bugs.GH22)" time="0.002"/>
  <testcase classname="org.modelmapper.bugs.GH220" name="(org.modelmapper.bugs.GH220)" time="0.013"/>
  <testcase classname="org.modelmapper.bugs.GH23" name="(org.modelmapper.bugs.GH23)" time="0.001"/>
  <testcase classname="org.modelmapper.bugs.GH23" name="(org.modelmapper.bugs.GH23)" time="0"/>
  <testcase classname="org.modelmapper.bugs.GH234" name="(org.modelmapper.bugs.GH234)" time="0"/>
  <testcase classname="org.modelmapper.bugs.GH249" name="(org.modelmapper.bugs.GH249)" time="0.001"/>
  <testcase classname="org.modelmapper.bugs.GH249" name="(org.modelmapper.bugs.GH249)" time="0"/>
  <testcase classname="org.modelmapper.bugs.GH26" name="(org.modelmapper.bugs.GH26)" time="0.013"/>
  <testcase classname="org.modelmapper.bugs.GH267" name="(org.modelmapper.bugs.GH267)" time="0.003"/>
  <testcase classname="org.modelmapper.bugs.GH27" name="(org.modelmapper.bugs.GH27)" time="0.007"/>
  <testcase classname="org.modelmapper.bugs.GH283" name="(org.modelmapper.bugs.GH283)" time="0.011"/>
  <testcase classname="org.modelmapper.bugs.GH287" name="(org.modelmapper.bugs.GH287)" time="0.001"/>
  <testcase classname="org.modelmapper.bugs.GH287" name="(org.modelmapper.bugs.GH287)" time="0.001"/>
  <testcase classname="org.modelmapper.bugs.GH287" name="(org.modelmapper.bugs.GH287)" time="0.001"/>
  <testcase classname="org.modelmapper.bugs.GH291" name="(org.modelmapper.bugs.GH291)" time="0"/>
  <testcase classname="org.modelmapper.bugs.GH30" name="testMappingWithConstructorCustomPropertyMap" time="0.005"/>
  <testcase classname="org.modelmapper.bugs.GH31" name="(org.modelmapper.bugs.GH31)" time="0.026"/>
  <testcase classname="org.modelmapper.bugs.GH37" name="(org.modelmapper.bugs.GH37)" time="0.005"/>
  <testcase classname="org.modelmapper.bugs.GH38" name="(org.modelmapper.bugs.GH38)" time="0.008"/>
  <testcase classname="org.modelmapper.bugs.GH39" name="(org.modelmapper.bugs.GH39)" time="0.003"/>
  <testcase classname="org.modelmapper.bugs.GH40" name="(org.modelmapper.bugs.GH40)" time="0.001"/>
  <testcase classname="org.modelmapper.bugs.GH46" name="(org.modelmapper.bugs.GH46)" time="0.034"/>
  <testcase classname="org.modelmapper.bugs.GH47" name="(org.modelmapper.bugs.GH47)" time="0.01"/>
  <testcase classname="org.modelmapper.bugs.GH6" name="(org.modelmapper.bugs.GH6)" time="0.001"/>
  <testcase classname="org.modelmapper.bugs.GH6" name="(org.modelmapper.bugs.GH6)" time="0"/>
  <testcase classname="org.modelmapper.bugs.GH6" name="(org.modelmapper.bugs.GH6)" time="0"/>
  <testcase classname="org.modelmapper.bugs.GH60" name="(org.modelmapper.bugs.GH60)" time="0"/>
  <testcase classname="org.modelmapper.bugs.GH60" name="(org.modelmapper.bugs.GH60)" time="0"/>
  <testcase classname="org.modelmapper.bugs.GH60" name="(org.modelmapper.bugs.GH60)" time="0"/>
  <testcase classname="org.modelmapper.bugs.GH74" name="(org.modelmapper.bugs.GH74)" time="0.001"/>
  <testcase classname="org.modelmapper.bugs.GH81" name="(org.modelmapper.bugs.GH81)" time="0"/>
  <testcase classname="org.modelmapper.bugs.GH85" name="(org.modelmapper.bugs.GH85)" time="0"/>
  <testcase classname="org.modelmapper.bugs.GH9" name="(org.modelmapper.bugs.GH9)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.iterable.GenericElementMapping" name="(org.modelmapper.functional.iterable.GenericElementMapping)" time="0.011"/>
  <testcase classname="org.modelmapper.functional.iterable.GenericElementMapping" name="(org.modelmapper.functional.iterable.GenericElementMapping)" time="0.011"/>
  <testcase classname="org.modelmapper.functional.iterable.GenericElementMapping" name="(org.modelmapper.functional.iterable.GenericElementMapping)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.typeresolution.GenericMapping" name="(org.modelmapper.functional.typeresolution.GenericMapping)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.typeresolution.GenericMapping" name="(org.modelmapper.functional.typeresolution.GenericMapping)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.typeresolution.GenericMapping" name="(org.modelmapper.functional.typeresolution.GenericMapping)" time="0"/>
  <testcase classname="org.modelmapper.functional.typeresolution.GenericMapping" name="(org.modelmapper.functional.typeresolution.GenericMapping)" time="0"/>
  <testcase classname="org.modelmapper.functional.Immutable" name="(org.modelmapper.functional.Immutable)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.Immutable" name="(org.modelmapper.functional.Immutable)" time="0"/>
  <testcase classname="org.modelmapper.functional.config.ImplicitMappingDisabled" name="(org.modelmapper.functional.config.ImplicitMappingDisabled)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest" name="(org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest" name="(org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest" name="(org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest" name="(org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest" name="(org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest" name="(org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest" name="(org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest" name="(org.modelmapper.functional.converter.ImplicitUnknownTypeConversionTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.InexactMatcherTest" name="(org.modelmapper.convention.InexactMatcherTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.InexactMatchingStrategyTest" name="(org.modelmapper.convention.InexactMatchingStrategyTest)" time="0.001"/>
  <testcase classname="org.modelmapper.convention.InexactMatchingStrategyTest" name="(org.modelmapper.convention.InexactMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.InexactMatchingStrategyTest" name="(org.modelmapper.convention.InexactMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.InexactMatchingStrategyTest" name="(org.modelmapper.convention.InexactMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.InexactMatchingStrategyTest" name="(org.modelmapper.convention.InexactMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.InexactMatchingStrategyTest" name="(org.modelmapper.convention.InexactMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.InexactMatchingStrategyTest" name="(org.modelmapper.convention.InexactMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.InexactMatchingStrategyTest" name="(org.modelmapper.convention.InexactMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.InexactMatchingStrategyTest" name="(org.modelmapper.convention.InexactMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.InexactMatchingStrategyTest" name="(org.modelmapper.convention.InexactMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.InexactMatchingStrategyTest" name="(org.modelmapper.convention.InexactMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.InexactMatchingStrategyTest" name="(org.modelmapper.convention.InexactMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.InexactMatchingStrategyTest" name="(org.modelmapper.convention.InexactMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.LooseMatchingStrategyTest" name="(org.modelmapper.convention.LooseMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0.001"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0.001"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.StandardMatchingStrategyTest" name="(org.modelmapper.convention.StandardMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.InheritingConfigurationTest" name="(org.modelmapper.internal.InheritingConfigurationTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.InheritingConfigurationTest" name="(org.modelmapper.internal.InheritingConfigurationTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.InheritingConfigurationTest" name="(org.modelmapper.internal.InheritingConfigurationTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.InheritingConfigurationTest" name="(org.modelmapper.internal.InheritingConfigurationTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.JitTypeMap" name="(org.modelmapper.functional.JitTypeMap)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.persistence.LazyFetching" name="(org.modelmapper.functional.persistence.LazyFetching)" time="1.261"/>
  <testcase classname="org.modelmapper.functional.loosematching.LooseMappingTest1" name="(org.modelmapper.functional.loosematching.LooseMappingTest1)" time="0"/>
  <testcase classname="org.modelmapper.functional.loosematching.LooseMappingTest1" name="(org.modelmapper.functional.loosematching.LooseMappingTest1)" time="0"/>
  <testcase classname="org.modelmapper.functional.loosematching.LooseMappingTest2" name="(org.modelmapper.functional.loosematching.LooseMappingTest2)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.loosematching.LooseMappingTest2" name="(org.modelmapper.functional.loosematching.LooseMappingTest2)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.MapConverterTest" name="(org.modelmapper.internal.converter.MapConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.MapConverterTest" name="(org.modelmapper.internal.converter.MapConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.MapConverterTest" name="(org.modelmapper.internal.converter.MapConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.valueaccess.MapValueReaderTest" name="(org.modelmapper.internal.valueaccess.MapValueReaderTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.valueaccess.MapValueReaderTest" name="(org.modelmapper.internal.valueaccess.MapValueReaderTest)" time="0.002"/>
  <testcase classname="org.modelmapper.internal.valueaccess.MapValueReaderTest" name="(org.modelmapper.internal.valueaccess.MapValueReaderTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.util.MembersTest" name="(org.modelmapper.internal.util.MembersTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.util.MembersTest" name="(org.modelmapper.internal.util.MembersTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.util.MembersTest" name="(org.modelmapper.internal.util.MembersTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.util.MembersTest" name="(org.modelmapper.internal.util.MembersTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.util.MembersTest" name="(org.modelmapper.internal.util.MembersTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.util.MembersTest" name="(org.modelmapper.internal.util.MembersTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.util.MembersTest" name="(org.modelmapper.internal.util.MembersTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.merge.MergeSourcePropertiesTest" name="(org.modelmapper.functional.merge.MergeSourcePropertiesTest)" time="0.005"/>
  <testcase classname="org.modelmapper.functional.merging.MergeTypeMaps" name="(org.modelmapper.functional.merging.MergeTypeMaps)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.merging.MergingTest1" name="(org.modelmapper.functional.merging.MergingTest1)" time="0.003"/>
  <testcase classname="org.modelmapper.functional.merging.MergingWithConverter" name="(org.modelmapper.functional.merging.MergingWithConverter)" time="0.002"/>
  <testcase classname="org.modelmapper.functional.MismatchedProperties" name="(org.modelmapper.functional.MismatchedProperties)" time="0.005"/>
  <testcase classname="org.modelmapper.ModelMapperTest" name="(org.modelmapper.ModelMapperTest)" time="0"/>
  <testcase classname="org.modelmapper.ModelMapperTest" name="(org.modelmapper.ModelMapperTest)" time="0.001"/>
  <testcase classname="org.modelmapper.ModelMapperTest" name="(org.modelmapper.ModelMapperTest)" time="0"/>
  <testcase classname="org.modelmapper.ModelMapperTest" name="(org.modelmapper.ModelMapperTest)" time="0.004"/>
  <testcase classname="org.modelmapper.ModelMapperTest" name="(org.modelmapper.ModelMapperTest)" time="0.001"/>
  <testcase classname="org.modelmapper.ModelMapperTest" name="(org.modelmapper.ModelMapperTest)" time="0.001"/>
  <testcase classname="org.modelmapper.ModelMapperTest" name="(org.modelmapper.ModelMapperTest)" time="0.001"/>
  <testcase classname="org.modelmapper.ModelMapperTest" name="(org.modelmapper.ModelMapperTest)" time="0.004"/>
  <testcase classname="org.modelmapper.internal.valueaccess.MultiMapValueReaderTest" name="(org.modelmapper.internal.valueaccess.MultiMapValueReaderTest)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.inherit.MultipleInterfacesTest" name="(org.modelmapper.functional.inherit.MultipleInterfacesTest)" time="0.011"/>
  <testcase classname="org.modelmapper.convention.NameTokenizersTest" name="(org.modelmapper.convention.NameTokenizersTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.NameTokenizersTest" name="(org.modelmapper.convention.NameTokenizersTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.NameTransformersTest" name="(org.modelmapper.convention.NameTransformersTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.NameTransformersTest" name="(org.modelmapper.convention.NameTransformersTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.NamedTypeMaps" name="(org.modelmapper.functional.NamedTypeMaps)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.NamedTypeMaps" name="(org.modelmapper.functional.NamedTypeMaps)" time="0"/>
  <testcase classname="org.modelmapper.convention.NamingConventionsTest" name="(org.modelmapper.convention.NamingConventionsTest)" time="0"/>
  <testcase classname="org.modelmapper.convention.NamingConventionsTest" name="(org.modelmapper.convention.NamingConventionsTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest1" name="(org.modelmapper.functional.deepmapping.NestedMappingTest1)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest1" name="(org.modelmapper.functional.deepmapping.NestedMappingTest1)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest1" name="(org.modelmapper.functional.deepmapping.NestedMappingTest1)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest1" name="(org.modelmapper.functional.deepmapping.NestedMappingTest1)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest1" name="(org.modelmapper.functional.deepmapping.NestedMappingTest1)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest1" name="(org.modelmapper.functional.deepmapping.NestedMappingTest1)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest2" name="(org.modelmapper.functional.deepmapping.NestedMappingTest2)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest2" name="(org.modelmapper.functional.deepmapping.NestedMappingTest2)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest2" name="(org.modelmapper.functional.deepmapping.NestedMappingTest2)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest2" name="(org.modelmapper.functional.deepmapping.NestedMappingTest2)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest2" name="(org.modelmapper.functional.deepmapping.NestedMappingTest2)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest2" name="(org.modelmapper.functional.deepmapping.NestedMappingTest2)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest2" name="(org.modelmapper.functional.deepmapping.NestedMappingTest2)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest2" name="(org.modelmapper.functional.deepmapping.NestedMappingTest2)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest2" name="(org.modelmapper.functional.deepmapping.NestedMappingTest2)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest2" name="(org.modelmapper.functional.deepmapping.NestedMappingTest2)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest2" name="(org.modelmapper.functional.deepmapping.NestedMappingTest2)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest3" name="(org.modelmapper.functional.deepmapping.NestedMappingTest3)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest3" name="(org.modelmapper.functional.deepmapping.NestedMappingTest3)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest3" name="(org.modelmapper.functional.deepmapping.NestedMappingTest3)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest3" name="(org.modelmapper.functional.deepmapping.NestedMappingTest3)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest3" name="(org.modelmapper.functional.deepmapping.NestedMappingTest3)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest3" name="(org.modelmapper.functional.deepmapping.NestedMappingTest3)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest3" name="(org.modelmapper.functional.deepmapping.NestedMappingTest3)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest3" name="(org.modelmapper.functional.deepmapping.NestedMappingTest3)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest3" name="(org.modelmapper.functional.deepmapping.NestedMappingTest3)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest4" name="(org.modelmapper.functional.deepmapping.NestedMappingTest4)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest4" name="(org.modelmapper.functional.deepmapping.NestedMappingTest4)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest4" name="(org.modelmapper.functional.deepmapping.NestedMappingTest4)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest4" name="(org.modelmapper.functional.deepmapping.NestedMappingTest4)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest4" name="(org.modelmapper.functional.deepmapping.NestedMappingTest4)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest4" name="(org.modelmapper.functional.deepmapping.NestedMappingTest4)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest5" name="(org.modelmapper.functional.deepmapping.NestedMappingTest5)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest6" name="(org.modelmapper.functional.deepmapping.NestedMappingTest6)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest6" name="(org.modelmapper.functional.deepmapping.NestedMappingTest6)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest7" name="(org.modelmapper.functional.deepmapping.NestedMappingTest7)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest7" name="(org.modelmapper.functional.deepmapping.NestedMappingTest7)" time="0"/>
  <testcase classname="org.modelmapper.functional.deepmapping.NestedMappingTest8" name="(org.modelmapper.functional.deepmapping.NestedMappingTest8)" time="0.006"/>
  <testcase classname="org.modelmapper.functional.NullBehavior" name="(org.modelmapper.functional.NullBehavior)" time="0"/>
  <testcase classname="org.modelmapper.functional.NullBehavior" name="(org.modelmapper.functional.NullBehavior)" time="0"/>
  <testcase classname="org.modelmapper.functional.NullBehavior" name="(org.modelmapper.functional.NullBehavior)" time="0"/>
  <testcase classname="org.modelmapper.functional.NullBehavior" name="(org.modelmapper.functional.NullBehavior)" time="0"/>
  <testcase classname="org.modelmapper.functional.shading.NullMapping1" name="(org.modelmapper.functional.shading.NullMapping1)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.shading.NullMapping1" name="(org.modelmapper.functional.shading.NullMapping1)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.shading.NullMapping2" name="(org.modelmapper.functional.shading.NullMapping2)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.converter.NumberConverterTest" name="(org.modelmapper.internal.converter.NumberConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.user.OnlyStrings" name="(org.modelmapper.user.OnlyStrings)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.converter.PassNullSourcesToGlobalConditionalConvertersTest" name="(org.modelmapper.functional.converter.PassNullSourcesToGlobalConditionalConvertersTest)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.converter.PreAndPostConverterTest" name="(org.modelmapper.functional.converter.PreAndPostConverterTest)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.converter.PreAndPostConverterTest" name="(org.modelmapper.functional.converter.PreAndPostConverterTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.PrimitiveMapping" name="(org.modelmapper.functional.PrimitiveMapping)" time="0"/>
  <testcase classname="org.modelmapper.functional.PrimitiveMapping" name="(org.modelmapper.functional.PrimitiveMapping)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.PrimitiveMapping" name="(org.modelmapper.functional.PrimitiveMapping)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.util.PrimitivesTest" name="(org.modelmapper.internal.util.PrimitivesTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.util.PrimitivesTest" name="(org.modelmapper.internal.util.PrimitivesTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.PropertyInfoRegistryTest" name="(org.modelmapper.internal.PropertyInfoRegistryTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.PropertyInfoRegistryTest" name="(org.modelmapper.internal.PropertyInfoRegistryTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.PropertyInfoSetResolverTest" name="(org.modelmapper.internal.PropertyInfoSetResolverTest)" time="0"/>
  <testcase classname="org.modelmapper.PropertyMapTest" name="(org.modelmapper.PropertyMapTest)" time="0"/>
  <testcase classname="org.modelmapper.PropertyMapTest" name="(org.modelmapper.PropertyMapTest)" time="0"/>
  <testcase classname="org.modelmapper.PropertyMapTest" name="(org.modelmapper.PropertyMapTest)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.PropertyMappingTest" name="(org.modelmapper.functional.PropertyMappingTest)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.PropertyMappingTest" name="(org.modelmapper.functional.PropertyMappingTest)" time="0.003"/>
  <testcase classname="org.modelmapper.functional.PropertyMappingTest" name="(org.modelmapper.functional.PropertyMappingTest)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.PropertyMappingTest" name="(org.modelmapper.functional.PropertyMappingTest)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.provider.ProviderTest1" name="(org.modelmapper.functional.provider.ProviderTest1)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.provider.ProviderTest1" name="(org.modelmapper.functional.provider.ProviderTest1)" time="0"/>
  <testcase classname="org.modelmapper.functional.provider.ProviderTest2" name="(org.modelmapper.functional.provider.ProviderTest2)" time="0.005"/>
  <testcase classname="org.modelmapper.functional.provider.ProviderTest2" name="(org.modelmapper.functional.provider.ProviderTest2)" time="0"/>
  <testcase classname="org.modelmapper.functional.provider.ProviderTest2" name="(org.modelmapper.functional.provider.ProviderTest2)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.provider.ProviderTest2" name="(org.modelmapper.functional.provider.ProviderTest2)" time="0.005"/>
  <testcase classname="org.modelmapper.functional.provider.ProviderTest2" name="(org.modelmapper.functional.provider.ProviderTest2)" time="0"/>
  <testcase classname="org.modelmapper.internal.ProxyFactoryTest" name="(org.modelmapper.internal.ProxyFactoryTest)" time="0.01"/>
  <testcase classname="org.modelmapper.functional.ProxyTest" name="(org.modelmapper.functional.ProxyTest)" time="0.002"/>
  <testcase classname="org.modelmapper.functional.ProxyTest" name="(org.modelmapper.functional.ProxyTest)" time="0.068"/>
  <testcase classname="org.modelmapper.functional.disambiguation.SameNames" name="(org.modelmapper.functional.disambiguation.SameNames)" time="0"/>
  <testcase classname="org.modelmapper.functional.disambiguation.SameNames" name="(org.modelmapper.functional.disambiguation.SameNames)" time="0"/>
  <testcase classname="org.modelmapper.functional.shading.ShadedNestedMapping" name="(org.modelmapper.functional.shading.ShadedNestedMapping)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.skip.SkipMappingTest1" name="(org.modelmapper.functional.skip.SkipMappingTest1)" time="0.005"/>
  <testcase classname="org.modelmapper.functional.skip.SkipMappingTest1" name="(org.modelmapper.functional.skip.SkipMappingTest1)" time="0.003"/>
  <testcase classname="org.modelmapper.convention.StrictMatchingStrategyTest" name="(org.modelmapper.convention.StrictMatchingStrategyTest)" time="0.001"/>
  <testcase classname="org.modelmapper.convention.StrictMatchingStrategyTest" name="(org.modelmapper.convention.StrictMatchingStrategyTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.stringmapping.StringMapping" name="(org.modelmapper.functional.stringmapping.StringMapping)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.stringmapping.StringMapping" name="(org.modelmapper.functional.stringmapping.StringMapping)" time="0.003"/>
  <testcase classname="org.modelmapper.internal.TypeInfoImplTest" name="(org.modelmapper.internal.TypeInfoImplTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.TypeInfoImplTest" name="(org.modelmapper.internal.TypeInfoImplTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.TypeInfoRegistryTest" name="(org.modelmapper.internal.TypeInfoRegistryTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.TypeInfoRegistryTest" name="(org.modelmapper.internal.TypeInfoRegistryTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.TypeMapImplTest" name="(org.modelmapper.internal.TypeMapImplTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.TypeMapImplTest" name="(org.modelmapper.internal.TypeMapImplTest)" time="0"/>
  <testcase classname="org.modelmapper.internal.TypeMapImplTest" name="(org.modelmapper.internal.TypeMapImplTest)" time="0"/>
  <testcase classname="org.modelmapper.functional.inherit.TypeMapIncludeBaseTest" name="(org.modelmapper.functional.inherit.TypeMapIncludeBaseTest)" time="0.005"/>
  <testcase classname="org.modelmapper.functional.inherit.TypeMapIncludeBaseTest" name="(org.modelmapper.functional.inherit.TypeMapIncludeBaseTest)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.inherit.TypeMapIncludeTest" name="(org.modelmapper.functional.inherit.TypeMapIncludeTest)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.inherit.TypeMapIncludeTest" name="(org.modelmapper.functional.inherit.TypeMapIncludeTest)" time="0.003"/>
  <testcase classname="org.modelmapper.functional.inherit.TypeMapIncludeTest" name="(org.modelmapper.functional.inherit.TypeMapIncludeTest)" time="0.003"/>
  <testcase classname="org.modelmapper.functional.inherit.TypeMapIncludeTest" name="(org.modelmapper.functional.inherit.TypeMapIncludeTest)" time="0.003"/>
  <testcase classname="org.modelmapper.functional.inherit.TypeMapIncludeTest" name="(org.modelmapper.functional.inherit.TypeMapIncludeTest)" time="0.003"/>
  <testcase classname="org.modelmapper.functional.inherit.TypeMapInheritanceDeepTypeTest" name="(org.modelmapper.functional.inherit.TypeMapInheritanceDeepTypeTest)" time="0.007"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaDeepMapTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaDeepMapTest)" time="0.006"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaDeepMapTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaDeepMapTest)" time="0.005"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaMultipleFieldsTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaMultipleFieldsTest)" time="0.008"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaMultipleFieldsTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaMultipleFieldsTest)" time="0.007"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaMultipleFieldsTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaMultipleFieldsTest)" time="0.006"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaMultipleFieldsTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaMultipleFieldsTest)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaMultipleFieldsTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaMultipleFieldsTest)" time="0.005"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaTest)" time="0.002"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaTest)" time="0.003"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaTest)" time="0.003"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaTest)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaTest)" time="0.007"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaTest)" time="0.004"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaTest)" time="0.003"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaTypeConvertTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaTypeConvertTest)" time="0.003"/>
  <testcase classname="org.modelmapper.functional.lambda.TypeMapLambdaTypeConvertTest" name="(org.modelmapper.functional.lambda.TypeMapLambdaTypeConvertTest)" time="0.003"/>
  <testcase classname="org.modelmapper.TypeMapTest" name="(org.modelmapper.TypeMapTest)" time="0.001"/>
  <testcase classname="org.modelmapper.TypeMapTest" name="(org.modelmapper.TypeMapTest)" time="0.003"/>
  <testcase classname="org.modelmapper.TypeMapTest" name="(org.modelmapper.TypeMapTest)" time="0.003"/>
  <testcase classname="org.modelmapper.TypeMapTest" name="(org.modelmapper.TypeMapTest)" time="0.004"/>
  <testcase classname="org.modelmapper.TypeMapTest" name="(org.modelmapper.TypeMapTest)" time="0.006"/>
  <testcase classname="org.modelmapper.TypeMapTest" name="(org.modelmapper.TypeMapTest)" time="0"/>
  <testcase classname="org.modelmapper.TypeMapTest" name="(org.modelmapper.TypeMapTest)" time="0.003"/>
  <testcase classname="org.modelmapper.functional.typeresolution.TypeResolutionTest1" name="(org.modelmapper.functional.typeresolution.TypeResolutionTest1)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.typeresolution.TypeResolutionTest2" name="(org.modelmapper.functional.typeresolution.TypeResolutionTest2)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.typeresolution.TypeResolutionTest3" name="(org.modelmapper.functional.typeresolution.TypeResolutionTest3)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.iterable.TypedMapMapping" name="(org.modelmapper.functional.iterable.TypedMapMapping)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.util.TypesTest" name="(org.modelmapper.internal.util.TypesTest)" time="0.005"/>
  <testcase classname="org.modelmapper.internal.util.TypesTest" name="(org.modelmapper.internal.util.TypesTest)" time="0.001"/>
  <testcase classname="org.modelmapper.internal.util.TypesTest" name="(org.modelmapper.internal.util.TypesTest)" time="0.002"/>
  <testcase classname="org.modelmapper.functional.UnequalHierarchies" name="(org.modelmapper.functional.UnequalHierarchies)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.UnequalHierarchies" name="(org.modelmapper.functional.UnequalHierarchies)" time="0.001"/>
  <testcase classname="org.modelmapper.functional.inherit.ValueReaderInheritanceTest" name="(org.modelmapper.functional.inherit.ValueReaderInheritanceTest)" time="0.009"/>
  <testcase classname="org.modelmapper.functional.inherit.ValueReaderInheritanceTest" name="(org.modelmapper.functional.inherit.ValueReaderInheritanceTest)" time="0.007"/>
</testsuite>