  _  _ ___ ___ ___     _    _    _
 | || | __| _ \ __|   /_\  /_\  /_\
 | __ | _||   / _|   / _ \/ _ \/ _ \
 |_||_|___|_|_\___| /_/ \_\/ \_\/ \_\

HERE Authentication, Authorization, and Accounting

Copyright (c) 2016 HERE Europe B.V.

Introduction
============
The purpose of here-oauth-client JAR is to obtain authorization from the HERE OAuth2.0 
Authorization Server, for use with HERE Services.  See also https://tools.ietf.org/html/rfc6749.

The HERE Access Tokens obtained are provided as Authorization: Bearer values on requests to 
HERE Services.  See also https://tools.ietf.org/html/rfc6750#section-2.1.

The here-oauth-client JAR includes
- Authentication features for signing requests to the HERE OAuth2.0 Authorization Server.  The 
  client provides its provisioned id and secret to make authenticated requests via the OAuth1.0 
  authentication method.
- Authorization features for obtaining HERE Access Tokens from the HERE OAuth2.0 Authorization 
  Server, including the ability to automatically refresh HERE Access Tokens.  Supported 
  flows include OAuth2.0 client_credentials grant for confidential clients.
- Authorization features for using OAuth2.0 Bearer HERE Access Token in the Authorization header 
  for requests to HERE Services.
- Accounting claims in the Access Tokens it uses.  HERE Services extract signed Accounting claims 
  from the Access Tokens.

For help, contact HERE_ACCOUNT_SUPPORT@here.com.

Developer Setup
===============

1. Requires Java 1.8.

Configuration
=============

The simplest option is to place your credentials.properties file obtained from the HERE Account 
authorization server, on your filesystem, and chmod it to 400.  Then (if it is in the current 
working directory), load it via 

  OAuth1ClientCredentialsProvider creds = 
      new OAuth1ClientCredentialsProvider.FromFile("credentials.properties");

other options are covered in the OAuth1ClientCredentialsProvider javadocs.

Example Usage
=============

The examples directory contains a tutorial example.  To run it 

1. Download and place your HERE Account authorization server credentials.properties file to
   ~/.here/credentials.properties.
2.   $ chmod 400 ~/.here/credentials.properties
3.   $ java -jar examples/here-oauth-client-example-*.jar

This tutorial uses the recommended "always fresh" approach with the simplest FromFile properties 
loader.  The tutorial will obtain a valid HERE Access Token and print portions of it to stdout.
If in a secure location, optionally re-run with

     $ java -jar examples/here-oauth-client-example-*.jar -v

to print a full valid HERE Access Token to stdout.  You can also put the file in a different 
location or give it a different name, just supply the file as input to the executable jar command 
line.  The examples are for tutorial purposes only and MUST NOT be used in your deployed 
application.  You might find it useful to start from the main(..) method's sample code, and 
adapt the integration to your environment.

Manual Usage
============

Within your deployed application, using the SDK in your application simply requires including the 
included here-oauth-client JAR file in your project's classpath.  Load configurations according to 
your application's standard configuration methods, and use the SDKs classes and interfaces as 
described in the javadocs.

NOTE: This library requires the here-oauth-client JAR file as well as the JAR files
in the /lib directory to be available on your classpath.  By default, the /lib JARs
are referenced in the here-oauth-client's Class-Path.

Documentation
=============

Read the javadocs for details, included in the /javadoc directory.  Open the /javadoc/index.html
to get started.  To skip ahead, go to com.here.account.oauth2.HereAccount javadocs for the overview 
of two options:
- get an "always fresh" HERE Access Token via TokenEndpoint.requestAutoRefreshingToken(..) approach
- get a one time use HERE Access Token via TokenEndpoint.requestToken(..) approach

