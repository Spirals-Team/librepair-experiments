#
# Copyright 2007-2016, Kaazing Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


property missingAuthHeader ${""}
property credentials ${http:loginBase64Encoder("user:pass")}
property invalidAuthHeader ${http:append("Basic ", credentials)}
property validAuthHeader ${http:append("Token ", credentials)}

connect "http://localhost:8001/echoAuth"
connected

write http:method "GET"
write http:header "Authorization" ${missingAuthHeader}
write notify BARRIER
write close

# 401 Unauthorized response when scheme is missing
read await BARRIER
read http:status "401" "Unauthorized"
read http:header "WWW-Authenticate" "Application Token"
read notify FIRST_DONE

connect await FIRST_DONE
        "http://localhost:8001/echoAuth"
connected

write http:method "GET"
write http:header "Authorization" ${invalidAuthHeader}
write close

# 401 Response when scheme is not of correct type
read http:status "401" "Unauthorized"
read notify SECOND_DONE

connect await SECOND_DONE
        "http://localhost:8001/echoAuth"
connected

write http:method "GET"
write http:header "Authorization" ${validAuthHeader}
write close

read http:status "200" "OK"
