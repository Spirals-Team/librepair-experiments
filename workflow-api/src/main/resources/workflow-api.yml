server:
  port: ${PORT:9000}

#server:
#  contextPath: /workflows-api

spring:
  application:
    name: workflow-api
  data:
    jpa:
      repositories:
        enabled: "true"
  jpa:
    hibernate:
      ddl-auto: "create"
      show_sql: true
      format_sql: true
    database-platform: "${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}"
  datasource:
    driverClassName: "${SPRING_DRIVER_CLASS_NAME:org.postgresql.Driver}"
    #change url accordingly
    url: "${SPRING_DATASOURCE_URL:jdbc:postgresql://192.168.1.67:5432/thingsboard}"
    username: "${SPRING_DATASOURCE_USERNAME:postgres}"
    password: "${SPRING_DATASOURCE_PASSWORD:postgres}"

#for generating schema queries fired by hibernate
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target: my-schema.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action: create


eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

install:
  data_dir: /Users/jetinder/timeseries/HashmapAnalyticsFramework/workflow-api/src/main/resources

security:
  oauth2:
    client:
      clientId: workflow-service
      clientSecret: ${WORKFLOW_SERVICE_PASSWORD:password}
      accessTokenUri: http://localhost:9002/oauth/token
      grant-type: client_credentials
      scope: server
    resource:
      tokenInfoUri: http://localhost:9002/oauth/check_token