<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="spoon.test.parent.CollectionsContractTest" time="5.306" tests="80" errors="0" skipped="0" failures="79">
  <properties>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/root/./workspace/INRIA/spoon/383402152/.m2/org/apache/maven/surefire/surefire-booter/2.20.1/surefire-booter-2.20.1.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/apache/maven/surefire/surefire-api/2.20.1/surefire-api-2.20.1.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/apache/maven/surefire/surefire-logger-api/2.20.1/surefire-logger-api-2.20.1.jar:/root/workspace/INRIA/spoon/383402152/target/test-classes:/root/workspace/INRIA/spoon/383402152/target/classes:/root/./workspace/INRIA/spoon/383402152/.m2/org/eclipse/tycho/org.eclipse.jdt.core/3.13.50.v20171007-0855/org.eclipse.jdt.core-3.13.50.v20171007-0855.jar:/root/./workspace/INRIA/spoon/383402152/.m2/junit/junit/4.12/junit-4.12.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/./workspace/INRIA/spoon/383402152/.m2/com/github/stefanbirkner/system-rules/1.9.0/system-rules-1.9.0.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/mockito/mockito-all/2.0.2-beta/mockito-all-2.0.2-beta.jar:/root/./workspace/INRIA/spoon/383402152/.m2/com/martiansoftware/jsap/2.1/jsap-2.1.jar:/root/./workspace/INRIA/spoon/383402152/.m2/log4j/log4j/1.2.17/log4j-1.2.17.jar:/root/./workspace/INRIA/spoon/383402152/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/apache/maven/maven-model/3.3.9/maven-model-3.3.9.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/codehaus/plexus/plexus-utils/3.0.22/plexus-utils-3.0.22.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar:/root/./workspace/INRIA/spoon/383402152/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.2/jackson-databind-2.9.2.jar:/root/./workspace/INRIA/spoon/383402152/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/root/./workspace/INRIA/spoon/383402152/.m2/com/fasterxml/jackson/core/jackson-core/2.9.2/jackson-core-2.9.2.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/jacoco/org.jacoco.agent/0.7.9/org.jacoco.agent-0.7.9-runtime.jar"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="skip.bower" value="true"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value=""/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Linux"/>
    <property name="rat.skip" value="true"/>
    <property name="gpg.skip" value="true"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="skip.gulp" value="true"/>
    <property name="sun.java.command" value="org.apache.maven.surefire.booter.ForkedBooter /root/workspace/INRIA/spoon/383402152/target/surefire 2018-05-24T23-18-08_918-jvmRun1 surefire6720344223594463017tmp surefire_03606745227549297774tmp"/>
    <property name="dependency-check.skip" value="true"/>
    <property name="surefire.test.class.path" value="/root/workspace/INRIA/spoon/383402152/target/test-classes:/root/workspace/INRIA/spoon/383402152/target/classes:/root/./workspace/INRIA/spoon/383402152/.m2/org/eclipse/tycho/org.eclipse.jdt.core/3.13.50.v20171007-0855/org.eclipse.jdt.core-3.13.50.v20171007-0855.jar:/root/./workspace/INRIA/spoon/383402152/.m2/junit/junit/4.12/junit-4.12.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/./workspace/INRIA/spoon/383402152/.m2/com/github/stefanbirkner/system-rules/1.9.0/system-rules-1.9.0.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/mockito/mockito-all/2.0.2-beta/mockito-all-2.0.2-beta.jar:/root/./workspace/INRIA/spoon/383402152/.m2/com/martiansoftware/jsap/2.1/jsap-2.1.jar:/root/./workspace/INRIA/spoon/383402152/.m2/log4j/log4j/1.2.17/log4j-1.2.17.jar:/root/./workspace/INRIA/spoon/383402152/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/apache/maven/maven-model/3.3.9/maven-model-3.3.9.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/codehaus/plexus/plexus-utils/3.0.22/plexus-utils-3.0.22.jar:/root/./workspace/INRIA/spoon/383402152/.m2/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar:/root/./workspace/INRIA/spoon/383402152/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.2/jackson-databind-2.9.2.jar:/root/./workspace/INRIA/spoon/383402152/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/root/./workspace/INRIA/spoon/383402152/.m2/com/fasterxml/jackson/core/jackson-core/2.9.2/jackson-core-2.9.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/root"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="basedir" value="/root/workspace/INRIA/spoon/383402152"/>
    <property name="file.separator" value="/"/>
    <property name="checkstyle.skip" value="true"/>
    <property name="line.separator" value="&#10;"/>
    <property name="skip.npm" value="true"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="skipITs" value="true"/>
    <property name="cobertura.skip" value="true"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_121-8u121-b13-1~bpo8+1-b13"/>
    <property name="user.name" value="root"/>
    <property name="findbugs.skip" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="3.10.0-862.2.3.el7.x86_64"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/root/./workspace/INRIA/spoon/383402152/.m2"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="1.8.0_121"/>
    <property name="user.dir" value="/root/workspace/INRIA/spoon/383402152"/>
    <property name="os.arch" value="amd64"/>
    <property name="license.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.121-b13"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="maven.repo.local" value="/root/./workspace/INRIA/spoon/383402152/.m2"/>
    <property name="enforcer.skip" value="true"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="testContract[CtConditional]" classname="spoon.test.parent.CollectionsContractTest" time="0.017">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtConditional&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtConditional&#10;normal;[READ_ONLY, READ_ONLY]comment of CtConditional" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtConditional
normal;[READ_ONLY, READ_ONLY]annotation of CtConditional
normal;[READ_ONLY, READ_ONLY]comment of CtConditional
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtProvidedService]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]implementationType of CtProvidedService&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtProvidedService&#10;normal;[READ_ONLY, READ_ONLY]comment of CtProvidedService" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]implementationType of CtProvidedService
normal;[READ_ONLY, READ_ONLY]annotation of CtProvidedService
normal;[READ_ONLY, READ_ONLY]comment of CtProvidedService
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtParameter]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtParameter&#10;normal;[READ_ONLY, READ_ONLY]comment of CtParameter" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtParameter
normal;[READ_ONLY, READ_ONLY]comment of CtParameter
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtWhile]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtWhile&#10;normal;[READ_ONLY, READ_ONLY]comment of CtWhile" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtWhile
normal;[READ_ONLY, READ_ONLY]comment of CtWhile
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtTypeReference]" classname="spoon.test.parent.CollectionsContractTest" time="0.01">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeArgument of CtTypeReference&#10;Failed check of;CtTypeReference#interface. SpoonException : Setting of CtRole.INTERFACE is not supported for CtTypeReferenceImpl&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtTypeReference" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeArgument of CtTypeReference
Failed check of;CtTypeReference#interface. SpoonException : Setting of CtRole.INTERFACE is not supported for CtTypeReferenceImpl
normal;[READ_ONLY, READ_ONLY]annotation of CtTypeReference
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtCatchVariableReference]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtCatchVariableReference" type="java.lang.AssertionError">java.lang.AssertionError: normal;[READ_ONLY, READ_ONLY]annotation of CtCatchVariableReference
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtContinue]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtContinue&#10;normal;[READ_ONLY, READ_ONLY]comment of CtContinue" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtContinue
normal;[READ_ONLY, READ_ONLY]comment of CtContinue
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtInterface]" classname="spoon.test.parent.CollectionsContractTest" time="0.005">
    <failure message="normal;[READ_ONLY, READ_ONLY]typeMember of CtInterface&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]interface of CtInterface&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeParameter of CtInterface&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtInterface&#10;normal;[READ_ONLY, READ_ONLY]comment of CtInterface" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]typeMember of CtInterface
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]interface of CtInterface
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeParameter of CtInterface
normal;[READ_ONLY, READ_ONLY]annotation of CtInterface
normal;[READ_ONLY, READ_ONLY]comment of CtInterface
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtAssignment]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtAssignment&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtAssignment&#10;normal;[READ_ONLY, READ_ONLY]comment of CtAssignment" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtAssignment
normal;[READ_ONLY, READ_ONLY]annotation of CtAssignment
normal;[READ_ONLY, READ_ONLY]comment of CtAssignment
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtBinaryOperator]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtBinaryOperator&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtBinaryOperator&#10;normal;[READ_ONLY, READ_ONLY]comment of CtBinaryOperator" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtBinaryOperator
normal;[READ_ONLY, READ_ONLY]annotation of CtBinaryOperator
normal;[READ_ONLY, READ_ONLY]comment of CtBinaryOperator
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtEnumValue]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtEnumValue&#10;normal;[READ_ONLY, READ_ONLY]comment of CtEnumValue" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtEnumValue
normal;[READ_ONLY, READ_ONLY]comment of CtEnumValue
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtModuleRequirement]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtModuleRequirement&#10;normal;[READ_ONLY, READ_ONLY]comment of CtModuleRequirement" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtModuleRequirement
normal;[READ_ONLY, READ_ONLY]comment of CtModuleRequirement
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtForEach]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtForEach&#10;normal;[READ_ONLY, READ_ONLY]comment of CtForEach" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtForEach
normal;[READ_ONLY, READ_ONLY]comment of CtForEach
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtConstructor]" classname="spoon.test.parent.CollectionsContractTest" time="0.003">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeParameter of CtConstructor&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]parameter of CtConstructor&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]thrown of CtConstructor&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtConstructor&#10;normal;[READ_ONLY, READ_ONLY]comment of CtConstructor" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeParameter of CtConstructor
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]parameter of CtConstructor
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]thrown of CtConstructor
normal;[READ_ONLY, READ_ONLY]annotation of CtConstructor
normal;[READ_ONLY, READ_ONLY]comment of CtConstructor
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtSuperAccess]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtSuperAccess&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtSuperAccess&#10;normal;[READ_ONLY, READ_ONLY]comment of CtSuperAccess" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtSuperAccess
normal;[READ_ONLY, READ_ONLY]annotation of CtSuperAccess
normal;[READ_ONLY, READ_ONLY]comment of CtSuperAccess
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtAnonymousExecutable]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtAnonymousExecutable&#10;normal;[READ_ONLY, READ_ONLY]comment of CtAnonymousExecutable" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtAnonymousExecutable
normal;[READ_ONLY, READ_ONLY]comment of CtAnonymousExecutable
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtComment]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtComment&#10;normal;[READ_ONLY, READ_ONLY]comment of CtComment" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtComment
normal;[READ_ONLY, READ_ONLY]comment of CtComment
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtWildcardReference]" classname="spoon.test.parent.CollectionsContractTest" time="0.003">
    <failure message="Failed check of;CtWildcardReference#interface. SpoonException : Setting of CtRole.INTERFACE is not supported for CtWildcardReferenceImpl&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtWildcardReference" type="java.lang.AssertionError">java.lang.AssertionError: 
Failed check of;CtWildcardReference#interface. SpoonException : Setting of CtRole.INTERFACE is not supported for CtWildcardReferenceImpl
normal;[READ_ONLY, READ_ONLY]annotation of CtWildcardReference
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtThisAccess]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtThisAccess&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtThisAccess&#10;normal;[READ_ONLY, READ_ONLY]comment of CtThisAccess" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtThisAccess
normal;[READ_ONLY, READ_ONLY]annotation of CtThisAccess
normal;[READ_ONLY, READ_ONLY]comment of CtThisAccess
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtArrayWrite]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtArrayWrite&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtArrayWrite&#10;normal;[READ_ONLY, READ_ONLY]comment of CtArrayWrite" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtArrayWrite
normal;[READ_ONLY, READ_ONLY]annotation of CtArrayWrite
normal;[READ_ONLY, READ_ONLY]comment of CtArrayWrite
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtPackageReference]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtPackageReference" type="java.lang.AssertionError">java.lang.AssertionError: normal;[READ_ONLY, READ_ONLY]annotation of CtPackageReference
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtJavaDoc]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtJavaDoc&#10;normal;[READ_ONLY, READ_ONLY]comment of CtJavaDoc" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtJavaDoc
normal;[READ_ONLY, READ_ONLY]comment of CtJavaDoc
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtArrayRead]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtArrayRead&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtArrayRead&#10;normal;[READ_ONLY, READ_ONLY]comment of CtArrayRead" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtArrayRead
normal;[READ_ONLY, READ_ONLY]annotation of CtArrayRead
normal;[READ_ONLY, READ_ONLY]comment of CtArrayRead
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtStatementList]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]statement of CtStatementList&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtStatementList&#10;normal;[READ_ONLY, READ_ONLY]comment of CtStatementList" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]statement of CtStatementList
normal;[READ_ONLY, READ_ONLY]annotation of CtStatementList
normal;[READ_ONLY, READ_ONLY]comment of CtStatementList
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtVariableWrite]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtVariableWrite&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtVariableWrite&#10;normal;[READ_ONLY, READ_ONLY]comment of CtVariableWrite" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtVariableWrite
normal;[READ_ONLY, READ_ONLY]annotation of CtVariableWrite
normal;[READ_ONLY, READ_ONLY]comment of CtVariableWrite
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtParameterReference]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtParameterReference" type="java.lang.AssertionError">java.lang.AssertionError: normal;[READ_ONLY, READ_ONLY]annotation of CtParameterReference
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtOperatorAssignment]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtOperatorAssignment&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtOperatorAssignment&#10;normal;[READ_ONLY, READ_ONLY]comment of CtOperatorAssignment" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtOperatorAssignment
normal;[READ_ONLY, READ_ONLY]annotation of CtOperatorAssignment
normal;[READ_ONLY, READ_ONLY]comment of CtOperatorAssignment
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtAnnotationFieldAccess]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtAnnotationFieldAccess&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtAnnotationFieldAccess&#10;normal;[READ_ONLY, READ_ONLY]comment of CtAnnotationFieldAccess" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtAnnotationFieldAccess
normal;[READ_ONLY, READ_ONLY]annotation of CtAnnotationFieldAccess
normal;[READ_ONLY, READ_ONLY]comment of CtAnnotationFieldAccess
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtUnboundVariableReference]" classname="spoon.test.parent.CollectionsContractTest" time="0"/>
  <testcase name="testContract[CtAnnotationMethod]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtAnnotationMethod&#10;normal;[READ_ONLY, READ_ONLY]comment of CtAnnotationMethod" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtAnnotationMethod
normal;[READ_ONLY, READ_ONLY]comment of CtAnnotationMethod
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtClass]" classname="spoon.test.parent.CollectionsContractTest" time="0.007">
    <failure message="normal;[READ_ONLY, READ_ONLY]typeMember of CtClass&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]interface of CtClass&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeParameter of CtClass&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtClass&#10;normal;[READ_ONLY, READ_ONLY]comment of CtClass" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]typeMember of CtClass
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]interface of CtClass
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeParameter of CtClass
normal;[READ_ONLY, READ_ONLY]annotation of CtClass
normal;[READ_ONLY, READ_ONLY]comment of CtClass
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtBlock]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtBlock&#10;normal;[READ_ONLY, READ_ONLY]comment of CtBlock" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtBlock
normal;[READ_ONLY, READ_ONLY]comment of CtBlock
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtPackage]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtPackage&#10;normal;[READ_ONLY, READ_ONLY]comment of CtPackage" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtPackage
normal;[READ_ONLY, READ_ONLY]comment of CtPackage
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtTryWithResource]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]tryResource of CtTryWithResource&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]catch of CtTryWithResource&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtTryWithResource&#10;normal;[READ_ONLY, READ_ONLY]comment of CtTryWithResource" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]tryResource of CtTryWithResource
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]catch of CtTryWithResource
normal;[READ_ONLY, READ_ONLY]annotation of CtTryWithResource
normal;[READ_ONLY, READ_ONLY]comment of CtTryWithResource
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtAssert]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtAssert&#10;normal;[READ_ONLY, READ_ONLY]comment of CtAssert" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtAssert
normal;[READ_ONLY, READ_ONLY]comment of CtAssert
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtSwitch]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]case of CtSwitch&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtSwitch&#10;normal;[READ_ONLY, READ_ONLY]comment of CtSwitch" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]case of CtSwitch
normal;[READ_ONLY, READ_ONLY]annotation of CtSwitch
normal;[READ_ONLY, READ_ONLY]comment of CtSwitch
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtTry]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]catch of CtTry&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtTry&#10;normal;[READ_ONLY, READ_ONLY]comment of CtTry" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]catch of CtTry
normal;[READ_ONLY, READ_ONLY]annotation of CtTry
normal;[READ_ONLY, READ_ONLY]comment of CtTry
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtSynchronized]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtSynchronized&#10;normal;[READ_ONLY, READ_ONLY]comment of CtSynchronized" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtSynchronized
normal;[READ_ONLY, READ_ONLY]comment of CtSynchronized
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtImport]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtImport&#10;normal;[READ_ONLY, READ_ONLY]comment of CtImport" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtImport
normal;[READ_ONLY, READ_ONLY]comment of CtImport
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtTypeParameterReference]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="Failed check of;CtTypeParameterReference#interface. SpoonException : Cannot resolve type erasure of the type parameter reference, which is not able to found it&apos;s declaration.&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtTypeParameterReference" type="java.lang.AssertionError">java.lang.AssertionError: 
Failed check of;CtTypeParameterReference#interface. SpoonException : Cannot resolve type erasure of the type parameter reference, which is not able to found it's declaration.
normal;[READ_ONLY, READ_ONLY]annotation of CtTypeParameterReference
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtInvocation]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]argument of CtInvocation&#10;Failed check of;CtInvocation#typeArgument. AssertionError : null&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtInvocation&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtInvocation&#10;normal;[READ_ONLY, READ_ONLY]comment of CtInvocation" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]argument of CtInvocation
Failed check of;CtInvocation#typeArgument. AssertionError : null
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtInvocation
normal;[READ_ONLY, READ_ONLY]annotation of CtInvocation
normal;[READ_ONLY, READ_ONLY]comment of CtInvocation
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtCodeSnippetExpression]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtCodeSnippetExpression&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtCodeSnippetExpression&#10;normal;[READ_ONLY, READ_ONLY]comment of CtCodeSnippetExpression" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtCodeSnippetExpression
normal;[READ_ONLY, READ_ONLY]annotation of CtCodeSnippetExpression
normal;[READ_ONLY, READ_ONLY]comment of CtCodeSnippetExpression
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtFieldWrite]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtFieldWrite&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtFieldWrite&#10;normal;[READ_ONLY, READ_ONLY]comment of CtFieldWrite" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtFieldWrite
normal;[READ_ONLY, READ_ONLY]annotation of CtFieldWrite
normal;[READ_ONLY, READ_ONLY]comment of CtFieldWrite
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtUnaryOperator]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtUnaryOperator&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtUnaryOperator&#10;normal;[READ_ONLY, READ_ONLY]comment of CtUnaryOperator" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtUnaryOperator
normal;[READ_ONLY, READ_ONLY]annotation of CtUnaryOperator
normal;[READ_ONLY, READ_ONLY]comment of CtUnaryOperator
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtExecutableReference]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeArgument of CtExecutableReference&#10;normal;[READ_ONLY, READ_ONLY]argumentType of CtExecutableReference&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtExecutableReference" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeArgument of CtExecutableReference
normal;[READ_ONLY, READ_ONLY]argumentType of CtExecutableReference
normal;[READ_ONLY, READ_ONLY]annotation of CtExecutableReference
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtFor]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]forInit of CtFor&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]forUpdate of CtFor&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtFor&#10;normal;[READ_ONLY, READ_ONLY]comment of CtFor" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]forInit of CtFor
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]forUpdate of CtFor
normal;[READ_ONLY, READ_ONLY]annotation of CtFor
normal;[READ_ONLY, READ_ONLY]comment of CtFor
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtVariableRead]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtVariableRead&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtVariableRead&#10;normal;[READ_ONLY, READ_ONLY]comment of CtVariableRead" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtVariableRead
normal;[READ_ONLY, READ_ONLY]annotation of CtVariableRead
normal;[READ_ONLY, READ_ONLY]comment of CtVariableRead
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtTypeParameter]" classname="spoon.test.parent.CollectionsContractTest" time="0.004">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtTypeParameter&#10;normal;[READ_ONLY, READ_ONLY]comment of CtTypeParameter" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtTypeParameter
normal;[READ_ONLY, READ_ONLY]comment of CtTypeParameter
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtLocalVariable]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtLocalVariable&#10;normal;[READ_ONLY, READ_ONLY]comment of CtLocalVariable" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtLocalVariable
normal;[READ_ONLY, READ_ONLY]comment of CtLocalVariable
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtIf]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtIf&#10;normal;[READ_ONLY, READ_ONLY]comment of CtIf" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtIf
normal;[READ_ONLY, READ_ONLY]comment of CtIf
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtModule]" classname="spoon.test.parent.CollectionsContractTest" time="0.005">
    <failure message="normal;[READ_ONLY, READ_ONLY]moduleDirective of CtModule&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtModule&#10;normal;[READ_ONLY, READ_ONLY]comment of CtModule" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]moduleDirective of CtModule
normal;[READ_ONLY, READ_ONLY]annotation of CtModule
normal;[READ_ONLY, READ_ONLY]comment of CtModule
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtPackageExport]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, READ_ONLY]moduleRef of CtPackageExport&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtPackageExport&#10;normal;[READ_ONLY, READ_ONLY]comment of CtPackageExport" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]moduleRef of CtPackageExport
normal;[READ_ONLY, READ_ONLY]annotation of CtPackageExport
normal;[READ_ONLY, READ_ONLY]comment of CtPackageExport
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtConstructorCall]" classname="spoon.test.parent.CollectionsContractTest" time="0.003">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]argument of CtConstructorCall&#10;Failed check of;CtConstructorCall#typeArgument. AssertionError : null&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtConstructorCall&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtConstructorCall&#10;normal;[READ_ONLY, READ_ONLY]comment of CtConstructorCall" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]argument of CtConstructorCall
Failed check of;CtConstructorCall#typeArgument. AssertionError : null
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtConstructorCall
normal;[READ_ONLY, READ_ONLY]annotation of CtConstructorCall
normal;[READ_ONLY, READ_ONLY]comment of CtConstructorCall
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtCase]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]statement of CtCase&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtCase&#10;normal;[READ_ONLY, READ_ONLY]comment of CtCase" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]statement of CtCase
normal;[READ_ONLY, READ_ONLY]annotation of CtCase
normal;[READ_ONLY, READ_ONLY]comment of CtCase
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtModuleReference]" classname="spoon.test.parent.CollectionsContractTest" time="0">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtModuleReference" type="java.lang.AssertionError">java.lang.AssertionError: normal;[READ_ONLY, READ_ONLY]annotation of CtModuleReference
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtCatch]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtCatch&#10;normal;[READ_ONLY, READ_ONLY]comment of CtCatch" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtCatch
normal;[READ_ONLY, READ_ONLY]comment of CtCatch
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtArrayTypeReference]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeArgument of CtArrayTypeReference&#10;Failed check of;CtArrayTypeReference#interface. SpoonException : Setting of CtRole.INTERFACE is not supported for CtArrayTypeReferenceImpl&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtArrayTypeReference" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeArgument of CtArrayTypeReference
Failed check of;CtArrayTypeReference#interface. SpoonException : Setting of CtRole.INTERFACE is not supported for CtArrayTypeReferenceImpl
normal;[READ_ONLY, READ_ONLY]annotation of CtArrayTypeReference
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtMethod]" classname="spoon.test.parent.CollectionsContractTest" time="0.003">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeParameter of CtMethod&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]parameter of CtMethod&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]thrown of CtMethod&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtMethod&#10;normal;[READ_ONLY, READ_ONLY]comment of CtMethod" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeParameter of CtMethod
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]parameter of CtMethod
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]thrown of CtMethod
normal;[READ_ONLY, READ_ONLY]annotation of CtMethod
normal;[READ_ONLY, READ_ONLY]comment of CtMethod
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtLambda]" classname="spoon.test.parent.CollectionsContractTest" time="0.003">
    <failure message="normal;[READ_ONLY, READ_ONLY]parameter of CtLambda&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtLambda&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtLambda&#10;normal;[READ_ONLY, READ_ONLY]comment of CtLambda" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]parameter of CtLambda
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtLambda
normal;[READ_ONLY, READ_ONLY]annotation of CtLambda
normal;[READ_ONLY, READ_ONLY]comment of CtLambda
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtNewArray]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]dimension of CtNewArray&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]expression of CtNewArray&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtNewArray&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtNewArray&#10;normal;[READ_ONLY, READ_ONLY]comment of CtNewArray" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]dimension of CtNewArray
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]expression of CtNewArray
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtNewArray
normal;[READ_ONLY, READ_ONLY]annotation of CtNewArray
normal;[READ_ONLY, READ_ONLY]comment of CtNewArray
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtUsedService]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtUsedService&#10;normal;[READ_ONLY, READ_ONLY]comment of CtUsedService" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtUsedService
normal;[READ_ONLY, READ_ONLY]comment of CtUsedService
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtIntersectionTypeReference]" classname="spoon.test.parent.CollectionsContractTest" time="0.004">
    <failure message="normal;[READ_ONLY, READ_ONLY]bound of CtIntersectionTypeReference&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeArgument of CtIntersectionTypeReference&#10;Failed check of;CtIntersectionTypeReference#interface. SpoonClassNotFoundException : cannot load class: &#10;normal;[READ_ONLY, READ_ONLY]annotation of CtIntersectionTypeReference" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]bound of CtIntersectionTypeReference
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]typeArgument of CtIntersectionTypeReference
Failed check of;CtIntersectionTypeReference#interface. SpoonClassNotFoundException : cannot load class: 
normal;[READ_ONLY, READ_ONLY]annotation of CtIntersectionTypeReference
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtThrow]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtThrow&#10;normal;[READ_ONLY, READ_ONLY]comment of CtThrow" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtThrow
normal;[READ_ONLY, READ_ONLY]comment of CtThrow
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtLiteral]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtLiteral&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtLiteral&#10;normal;[READ_ONLY, READ_ONLY]comment of CtLiteral" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtLiteral
normal;[READ_ONLY, READ_ONLY]annotation of CtLiteral
normal;[READ_ONLY, READ_ONLY]comment of CtLiteral
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtReturn]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtReturn&#10;normal;[READ_ONLY, READ_ONLY]comment of CtReturn" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtReturn
normal;[READ_ONLY, READ_ONLY]comment of CtReturn
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtJavaDocTag]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtJavaDocTag&#10;normal;[READ_ONLY, READ_ONLY]comment of CtJavaDocTag" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtJavaDocTag
normal;[READ_ONLY, READ_ONLY]comment of CtJavaDocTag
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtField]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtField&#10;normal;[READ_ONLY, READ_ONLY]comment of CtField" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtField
normal;[READ_ONLY, READ_ONLY]comment of CtField
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtTypeAccess]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtTypeAccess&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtTypeAccess&#10;normal;[READ_ONLY, READ_ONLY]comment of CtTypeAccess" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtTypeAccess
normal;[READ_ONLY, READ_ONLY]annotation of CtTypeAccess
normal;[READ_ONLY, READ_ONLY]comment of CtTypeAccess
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtCodeSnippetStatement]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtCodeSnippetStatement&#10;normal;[READ_ONLY, READ_ONLY]comment of CtCodeSnippetStatement" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtCodeSnippetStatement
normal;[READ_ONLY, READ_ONLY]comment of CtCodeSnippetStatement
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtDo]" classname="spoon.test.parent.CollectionsContractTest" time="0">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtDo&#10;normal;[READ_ONLY, READ_ONLY]comment of CtDo" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtDo
normal;[READ_ONLY, READ_ONLY]comment of CtDo
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtAnnotation]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, READ_ONLY]value of CtAnnotation&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtAnnotation&#10;normal;[READ_ONLY, READ_ONLY]comment of CtAnnotation" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]value of CtAnnotation
normal;[READ_ONLY, READ_ONLY]annotation of CtAnnotation
normal;[READ_ONLY, READ_ONLY]comment of CtAnnotation
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtFieldRead]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtFieldRead&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtFieldRead&#10;normal;[READ_ONLY, READ_ONLY]comment of CtFieldRead" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtFieldRead
normal;[READ_ONLY, READ_ONLY]annotation of CtFieldRead
normal;[READ_ONLY, READ_ONLY]comment of CtFieldRead
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtBreak]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtBreak&#10;normal;[READ_ONLY, READ_ONLY]comment of CtBreak" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]annotation of CtBreak
normal;[READ_ONLY, READ_ONLY]comment of CtBreak
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtFieldReference]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtFieldReference" type="java.lang.AssertionError">java.lang.AssertionError: normal;[READ_ONLY, READ_ONLY]annotation of CtFieldReference
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtEnum]" classname="spoon.test.parent.CollectionsContractTest" time="0.008">
    <failure message="normal;[READ_ONLY, READ_ONLY]value of CtEnum&#10;normal;[READ_ONLY, READ_ONLY]typeMember of CtEnum&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]interface of CtEnum&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtEnum&#10;normal;[READ_ONLY, READ_ONLY]comment of CtEnum" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]value of CtEnum
normal;[READ_ONLY, READ_ONLY]typeMember of CtEnum
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]interface of CtEnum
normal;[READ_ONLY, READ_ONLY]annotation of CtEnum
normal;[READ_ONLY, READ_ONLY]comment of CtEnum
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtNewClass]" classname="spoon.test.parent.CollectionsContractTest" time="0.003">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]argument of CtNewClass&#10;Failed check of;CtNewClass#typeArgument. AssertionError : null&#10;normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtNewClass&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtNewClass&#10;normal;[READ_ONLY, READ_ONLY]comment of CtNewClass" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]argument of CtNewClass
Failed check of;CtNewClass#typeArgument. AssertionError : null
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtNewClass
normal;[READ_ONLY, READ_ONLY]annotation of CtNewClass
normal;[READ_ONLY, READ_ONLY]comment of CtNewClass
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtLocalVariableReference]" classname="spoon.test.parent.CollectionsContractTest" time="0">
    <failure message="normal;[READ_ONLY, READ_ONLY]annotation of CtLocalVariableReference" type="java.lang.AssertionError">java.lang.AssertionError: normal;[READ_ONLY, READ_ONLY]annotation of CtLocalVariableReference
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtAnnotationType]" classname="spoon.test.parent.CollectionsContractTest" time="0.005">
    <failure message="normal;[READ_ONLY, READ_ONLY]typeMember of CtAnnotationType&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtAnnotationType&#10;normal;[READ_ONLY, READ_ONLY]comment of CtAnnotationType" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, READ_ONLY]typeMember of CtAnnotationType
normal;[READ_ONLY, READ_ONLY]annotation of CtAnnotationType
normal;[READ_ONLY, READ_ONLY]comment of CtAnnotationType
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtCatchVariable]" classname="spoon.test.parent.CollectionsContractTest" time="0.001">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]multiType of CtCatchVariable&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtCatchVariable&#10;normal;[READ_ONLY, READ_ONLY]comment of CtCatchVariable" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]multiType of CtCatchVariable
normal;[READ_ONLY, READ_ONLY]annotation of CtCatchVariable
normal;[READ_ONLY, READ_ONLY]comment of CtCatchVariable
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
  <testcase name="testContract[CtExecutableReferenceExpression]" classname="spoon.test.parent.CollectionsContractTest" time="0.002">
    <failure message="normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtExecutableReferenceExpression&#10;normal;[READ_ONLY, READ_ONLY]annotation of CtExecutableReferenceExpression&#10;normal;[READ_ONLY, READ_ONLY]comment of CtExecutableReferenceExpression" type="java.lang.AssertionError">java.lang.AssertionError: 
normal;[READ_ONLY, MUTABLE_ATTACHED_INCORRECT]cast of CtExecutableReferenceExpression
normal;[READ_ONLY, READ_ONLY]annotation of CtExecutableReferenceExpression
normal;[READ_ONLY, READ_ONLY]comment of CtExecutableReferenceExpression
	at spoon.test.parent.CollectionsContractTest.testContract(CollectionsContractTest.java:157)
</failure>
  </testcase>
</testsuite>