<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.auscope.portal.core.view.TestViewCSWRecordFactory" time="0.033" tests="3" errors="0" skipped="0" failures="3">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.121-b13"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/root/workspace/AuScope/portal-core/385530692"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="skip.gulp" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="findbugs.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/root/workspace/AuScope/portal-core/385530692"/>
    <property name="checkstyle.skip" value="true"/>
    <property name="java.runtime.version" value="1.8.0_121-8u121-b13-1~bpo8+1-b13"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="skip.npm" value="true"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="gpg.skip" value="true"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="cobertura.skip" value="true"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="license.skip" value="true"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="skip.bower" value="true"/>
    <property name="maven.repo.local" value="/root/./workspace/AuScope/portal-core/385530692/.m2"/>
    <property name="os.version" value="3.10.0-862.2.3.el7.x86_64"/>
    <property name="user.home" value="/root"/>
    <property name="user.timezone" value="Europe/Paris"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="root"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="skipITs" value="true"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -B -D enforcer.skip=true -D dependency-check.skip=true -D skipITs=true -D cobertura.skip=true -D maven.repo.local=/root/./workspace/AuScope/portal-core/385530692/.m2 -D rat.skip=true -D findbugs.skip=true -D skip.bower=true -D gpg.skip=true -D checkstyle.skip=true -D skip.gulp=true -D license.skip=true -D skip.npm=true test"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="dependency-check.skip" value="true"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_121"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="enforcer.skip" value="true"/>
    <property name="rat.skip" value="true"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="testToViewNoResponsibleParty" classname="org.auscope.portal.core.view.TestViewCSWRecordFactory" time="0.02">
    <failure message="unexpected invocation: cswRecord.getMinScale()&#10;expectations:&#10;  allowed, already invoked 1 time: cswRecord.getServiceName(); returns &quot;sn&quot;&#10;  allowed, already invoked 1 time: cswRecord.getNoCache(); returns &lt;false&gt;&#10;  allowed, already invoked 1 time: cswRecord.getContact(); returns null&#10;  allowed, already invoked 1 time: cswRecord.getResourceProvider(); returns &quot;MDU&quot;&#10;  allowed, already invoked 1 time: cswRecord.getFileIdentifier(); returns &quot;asb&quot;&#10;  allowed, already invoked 1 time: cswRecord.getRecordInfoUrl(); returns &quot;http://bob.xom&quot;&#10;  allowed, already invoked 1 time: cswRecord.getDataIdentificationAbstract(); returns &quot;assda&quot;&#10;  allowed, already invoked 2 times: cswRecord.getOnlineResources(); returns [&lt;abstractCSWOnlineResource&gt;]&#10;  allowed, already invoked 2 times: cswRecord.getCSWGeographicElements(); returns [&lt;cswGeographicBoundingBox&gt;]&#10;  allowed, already invoked 2 times: cswRecord.getDescriptiveKeywords(); returns [&quot;kw1&quot;, &quot;kw1&quot;]&#10;  allowed, already invoked 2 times: cswRecord.getConstraints(); returns [&quot;c1&quot;, &quot;c2&quot;]&#10;  allowed, already invoked 2 times: cswRecord.getUseLimitConstraints(); returns [&quot;use1&quot;, &quot;use2&quot;]&#10;  allowed, already invoked 2 times: cswRecord.getAccessConstraints(); returns [&quot;acess1&quot;, &quot;acess2&quot;]&#10;  allowed, already invoked 1 time: cswRecord.hasChildRecords(); returns &lt;false&gt;&#10;  allowed, already invoked 2 times: cswRecord.getDate(); returns &lt;Thu Oct 09 01:00:00 CET 1986&gt;&#10;  allowed, already invoked 1 time: cswRecord.isService(); returns &lt;false&gt;&#10;  allowed, already invoked 2 times: cswRecord.getDataSetURIs(); returns [&quot;datasetUri1&quot;]&#10;  allowed, already invoked 1 time: cswGeographicBoundingBox.getEastBoundLongitude(); returns &lt;7.0&gt;&#10;  allowed, already invoked 1 time: cswGeographicBoundingBox.getWestBoundLongitude(); returns &lt;6.0&gt;&#10;  allowed, already invoked 1 time: cswGeographicBoundingBox.getNorthBoundLatitude(); returns &lt;10.0&gt;&#10;  allowed, already invoked 1 time: cswGeographicBoundingBox.getSouthBoundLatitude(); returns &lt;5.0&gt;&#10;  allowed, already invoked 1 time: abstractCSWOnlineResource.getDescription(); returns &quot;desc&quot;&#10;  allowed, already invoked 1 time: abstractCSWOnlineResource.getName(); returns &quot;ascom&quot;&#10;  allowed, already invoked 1 time: abstractCSWOnlineResource.getType(); returns &lt;WFS&gt;&#10;  allowed, already invoked 2 times: abstractCSWOnlineResource.getLinkage(); returns &lt;http://hah.com&gt;&#10;  allowed, already invoked 1 time: abstractCSWOnlineResource.getVersion(); returns &quot;1.3.0&quot;&#10;  allowed, already invoked 1 time: abstractCSWOnlineResource.getApplicationProfile(); returns &quot;Esri:ArcGIS Server/x&quot;&#10;  allowed, never invoked: cswResponsibleParty.getOrganisationName(); returns &quot;&quot;&#10;what happened before this:&#10;  cswRecord.getServiceName()&#10;  cswRecord.getResourceProvider()&#10;  cswRecord.getFileIdentifier()&#10;  cswRecord.getRecordInfoUrl()&#10;  cswRecord.getDataIdentificationAbstract()&#10;  cswRecord.getNoCache()&#10;  cswRecord.isService()&#10;  cswRecord.getContact()&#10;  cswRecord.getOnlineResources()&#10;  cswRecord.getOnlineResources()&#10;  abstractCSWOnlineResource.getLinkage()&#10;  abstractCSWOnlineResource.getLinkage()&#10;  abstractCSWOnlineResource.getType()&#10;  abstractCSWOnlineResource.getName()&#10;  abstractCSWOnlineResource.getDescription()&#10;  abstractCSWOnlineResource.getVersion()&#10;  abstractCSWOnlineResource.getApplicationProfile()&#10;  cswRecord.getCSWGeographicElements()&#10;  cswRecord.getCSWGeographicElements()&#10;  cswGeographicBoundingBox.getEastBoundLongitude()&#10;  cswGeographicBoundingBox.getWestBoundLongitude()&#10;  cswGeographicBoundingBox.getNorthBoundLatitude()&#10;  cswGeographicBoundingBox.getSouthBoundLatitude()&#10;  cswRecord.getDescriptiveKeywords()&#10;  cswRecord.getDescriptiveKeywords()&#10;  cswRecord.getDataSetURIs()&#10;  cswRecord.getDataSetURIs()&#10;  cswRecord.getConstraints()&#10;  cswRecord.getConstraints()&#10;  cswRecord.getUseLimitConstraints()&#10;  cswRecord.getUseLimitConstraints()&#10;  cswRecord.getAccessConstraints()&#10;  cswRecord.getAccessConstraints()&#10;  cswRecord.hasChildRecords()&#10;  cswRecord.getDate()&#10;  cswRecord.getDate()&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: unexpected invocation: cswRecord.getMinScale()
expectations:
  allowed, already invoked 1 time: cswRecord.getServiceName(); returns "sn"
  allowed, already invoked 1 time: cswRecord.getNoCache(); returns <false>
  allowed, already invoked 1 time: cswRecord.getContact(); returns null
  allowed, already invoked 1 time: cswRecord.getResourceProvider(); returns "MDU"
  allowed, already invoked 1 time: cswRecord.getFileIdentifier(); returns "asb"
  allowed, already invoked 1 time: cswRecord.getRecordInfoUrl(); returns "http://bob.xom"
  allowed, already invoked 1 time: cswRecord.getDataIdentificationAbstract(); returns "assda"
  allowed, already invoked 2 times: cswRecord.getOnlineResources(); returns [<abstractCSWOnlineResource>]
  allowed, already invoked 2 times: cswRecord.getCSWGeographicElements(); returns [<cswGeographicBoundingBox>]
  allowed, already invoked 2 times: cswRecord.getDescriptiveKeywords(); returns ["kw1", "kw1"]
  allowed, already invoked 2 times: cswRecord.getConstraints(); returns ["c1", "c2"]
  allowed, already invoked 2 times: cswRecord.getUseLimitConstraints(); returns ["use1", "use2"]
  allowed, already invoked 2 times: cswRecord.getAccessConstraints(); returns ["acess1", "acess2"]
  allowed, already invoked 1 time: cswRecord.hasChildRecords(); returns <false>
  allowed, already invoked 2 times: cswRecord.getDate(); returns <Thu Oct 09 01:00:00 CET 1986>
  allowed, already invoked 1 time: cswRecord.isService(); returns <false>
  allowed, already invoked 2 times: cswRecord.getDataSetURIs(); returns ["datasetUri1"]
  allowed, already invoked 1 time: cswGeographicBoundingBox.getEastBoundLongitude(); returns <7.0>
  allowed, already invoked 1 time: cswGeographicBoundingBox.getWestBoundLongitude(); returns <6.0>
  allowed, already invoked 1 time: cswGeographicBoundingBox.getNorthBoundLatitude(); returns <10.0>
  allowed, already invoked 1 time: cswGeographicBoundingBox.getSouthBoundLatitude(); returns <5.0>
  allowed, already invoked 1 time: abstractCSWOnlineResource.getDescription(); returns "desc"
  allowed, already invoked 1 time: abstractCSWOnlineResource.getName(); returns "ascom"
  allowed, already invoked 1 time: abstractCSWOnlineResource.getType(); returns <WFS>
  allowed, already invoked 2 times: abstractCSWOnlineResource.getLinkage(); returns <http://hah.com>
  allowed, already invoked 1 time: abstractCSWOnlineResource.getVersion(); returns "1.3.0"
  allowed, already invoked 1 time: abstractCSWOnlineResource.getApplicationProfile(); returns "Esri:ArcGIS Server/x"
  allowed, never invoked: cswResponsibleParty.getOrganisationName(); returns ""
what happened before this:
  cswRecord.getServiceName()
  cswRecord.getResourceProvider()
  cswRecord.getFileIdentifier()
  cswRecord.getRecordInfoUrl()
  cswRecord.getDataIdentificationAbstract()
  cswRecord.getNoCache()
  cswRecord.isService()
  cswRecord.getContact()
  cswRecord.getOnlineResources()
  cswRecord.getOnlineResources()
  abstractCSWOnlineResource.getLinkage()
  abstractCSWOnlineResource.getLinkage()
  abstractCSWOnlineResource.getType()
  abstractCSWOnlineResource.getName()
  abstractCSWOnlineResource.getDescription()
  abstractCSWOnlineResource.getVersion()
  abstractCSWOnlineResource.getApplicationProfile()
  cswRecord.getCSWGeographicElements()
  cswRecord.getCSWGeographicElements()
  cswGeographicBoundingBox.getEastBoundLongitude()
  cswGeographicBoundingBox.getWestBoundLongitude()
  cswGeographicBoundingBox.getNorthBoundLatitude()
  cswGeographicBoundingBox.getSouthBoundLatitude()
  cswRecord.getDescriptiveKeywords()
  cswRecord.getDescriptiveKeywords()
  cswRecord.getDataSetURIs()
  cswRecord.getDataSetURIs()
  cswRecord.getConstraints()
  cswRecord.getConstraints()
  cswRecord.getUseLimitConstraints()
  cswRecord.getUseLimitConstraints()
  cswRecord.getAccessConstraints()
  cswRecord.getAccessConstraints()
  cswRecord.hasChildRecords()
  cswRecord.getDate()
  cswRecord.getDate()

	at org.jmock.api.ExpectationError.unexpected(ExpectationError.java:23)
	at org.jmock.internal.InvocationDispatcher.dispatch(InvocationDispatcher.java:85)
	at org.jmock.Mockery.dispatch(Mockery.java:244)
	at org.jmock.Mockery.access$100(Mockery.java:29)
	at org.jmock.Mockery$MockObject.invoke(Mockery.java:284)
	at org.jmock.internal.InvocationDiverter.invoke(InvocationDiverter.java:27)
	at org.jmock.internal.FakeObjectMethods.invoke(FakeObjectMethods.java:38)
	at org.auscope.portal.core.test.jmock.PortalSynchroniser.synchroniseInvocation(PortalSynchroniser.java:47)
	at org.auscope.portal.core.test.jmock.PortalSynchroniser.access$000(PortalSynchroniser.java:15)
	at org.auscope.portal.core.test.jmock.PortalSynchroniser$1.invoke(PortalSynchroniser.java:21)
	at org.jmock.lib.legacy.ClassImposteriser$4.invoke(ClassImposteriser.java:136)
	at org.auscope.portal.core.services.responses.csw.CSWRecord$$EnhancerByCGLIB$$820ca8e5.getMinScale(<generated>)
	at org.auscope.portal.core.view.ViewCSWRecordFactory.toView(ViewCSWRecordFactory.java:133)
	at org.auscope.portal.core.view.TestViewCSWRecordFactory.testToViewNoResponsibleParty(TestViewCSWRecordFactory.java:551)
]]></failure>
  </testcase>
  <testcase name="testToViewBadOnlineResources" classname="org.auscope.portal.core.view.TestViewCSWRecordFactory" time="0.006">
    <failure message="unexpected invocation: cswRecord.getMinScale()&#10;expectations:&#10;  allowed, already invoked 1 time: cswRecord.getServiceName(); returns &quot;sn&quot;&#10;  allowed, already invoked 1 time: cswRecord.getNoCache(); returns &lt;false&gt;&#10;  allowed, already invoked 1 time: cswRecord.getContact(); returns &lt;cswResponsibleParty&gt;&#10;  allowed, already invoked 1 time: cswRecord.getResourceProvider(); returns &quot;MDU&quot;&#10;  allowed, already invoked 1 time: cswRecord.getFileIdentifier(); returns &quot;asb&quot;&#10;  allowed, already invoked 1 time: cswRecord.getRecordInfoUrl(); returns &quot;http://bob.xom&quot;&#10;  allowed, already invoked 1 time: cswRecord.getDataIdentificationAbstract(); returns &quot;assda&quot;&#10;  allowed, already invoked 2 times: cswRecord.getOnlineResources(); returns [&lt;abstractCSWOnlineResource&gt;]&#10;  allowed, already invoked 2 times: cswRecord.getCSWGeographicElements(); returns [&lt;cswGeographicBoundingBox&gt;]&#10;  allowed, already invoked 2 times: cswRecord.getDescriptiveKeywords(); returns [&quot;kw1&quot;, &quot;kw1&quot;]&#10;  allowed, already invoked 2 times: cswRecord.getConstraints(); returns [&quot;c1&quot;, &quot;c2&quot;]&#10;  allowed, already invoked 2 times: cswRecord.getUseLimitConstraints(); returns [&quot;use1&quot;, &quot;use2&quot;]&#10;  allowed, already invoked 2 times: cswRecord.getAccessConstraints(); returns [&quot;acess1&quot;, &quot;acess2&quot;]&#10;  allowed, already invoked 1 time: cswRecord.hasChildRecords(); returns &lt;false&gt;&#10;  allowed, already invoked 2 times: cswRecord.getDate(); returns &lt;Thu Jan 01 01:00:00 CET 1970&gt;&#10;  allowed, already invoked 1 time: cswRecord.isService(); returns &lt;true&gt;&#10;  allowed, already invoked 2 times: cswRecord.getDataSetURIs(); returns []&#10;  allowed, already invoked 1 time: cswGeographicBoundingBox.getEastBoundLongitude(); returns &lt;7.0&gt;&#10;  allowed, already invoked 1 time: cswGeographicBoundingBox.getWestBoundLongitude(); returns &lt;6.0&gt;&#10;  allowed, already invoked 1 time: cswGeographicBoundingBox.getNorthBoundLatitude(); returns &lt;10.0&gt;&#10;  allowed, already invoked 1 time: cswGeographicBoundingBox.getSouthBoundLatitude(); returns &lt;5.0&gt;&#10;  allowed, never invoked: abstractCSWOnlineResource.getDescription(); returns &quot;desc&quot;&#10;  allowed, never invoked: abstractCSWOnlineResource.getName(); returns &quot;ascom&quot;&#10;  allowed, never invoked: abstractCSWOnlineResource.getType(); returns &lt;WFS&gt;&#10;  allowed, already invoked 1 time: abstractCSWOnlineResource.getLinkage(); returns null&#10;  allowed, never invoked: abstractCSWOnlineResource.getApplicationProfile(); returns &quot;Esri:ArcGIS Server/x&quot;&#10;  allowed, already invoked 3 times: cswResponsibleParty.getOrganisationName(); returns &quot;co&quot;&#10;  allowed, already invoked 2 times: cswResponsibleParty.getContactInfo(); returns &lt;cswContact&gt;&#10;  expected once, already invoked 1 time: cswContact.getAddressAdministrativeArea(); returns &quot;CSIRO&quot;&#10;what happened before this:&#10;  cswRecord.getServiceName()&#10;  cswRecord.getResourceProvider()&#10;  cswRecord.getFileIdentifier()&#10;  cswRecord.getRecordInfoUrl()&#10;  cswRecord.getDataIdentificationAbstract()&#10;  cswRecord.getNoCache()&#10;  cswRecord.isService()&#10;  cswRecord.getContact()&#10;  cswResponsibleParty.getOrganisationName()&#10;  cswResponsibleParty.getOrganisationName()&#10;  cswResponsibleParty.getOrganisationName()&#10;  cswResponsibleParty.getContactInfo()&#10;  cswResponsibleParty.getContactInfo()&#10;  cswContact.getAddressAdministrativeArea()&#10;  cswRecord.getOnlineResources()&#10;  cswRecord.getOnlineResources()&#10;  abstractCSWOnlineResource.getLinkage()&#10;  cswRecord.getCSWGeographicElements()&#10;  cswRecord.getCSWGeographicElements()&#10;  cswGeographicBoundingBox.getEastBoundLongitude()&#10;  cswGeographicBoundingBox.getWestBoundLongitude()&#10;  cswGeographicBoundingBox.getNorthBoundLatitude()&#10;  cswGeographicBoundingBox.getSouthBoundLatitude()&#10;  cswRecord.getDescriptiveKeywords()&#10;  cswRecord.getDescriptiveKeywords()&#10;  cswRecord.getDataSetURIs()&#10;  cswRecord.getDataSetURIs()&#10;  cswRecord.getConstraints()&#10;  cswRecord.getConstraints()&#10;  cswRecord.getUseLimitConstraints()&#10;  cswRecord.getUseLimitConstraints()&#10;  cswRecord.getAccessConstraints()&#10;  cswRecord.getAccessConstraints()&#10;  cswRecord.hasChildRecords()&#10;  cswRecord.getDate()&#10;  cswRecord.getDate()&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: unexpected invocation: cswRecord.getMinScale()
expectations:
  allowed, already invoked 1 time: cswRecord.getServiceName(); returns "sn"
  allowed, already invoked 1 time: cswRecord.getNoCache(); returns <false>
  allowed, already invoked 1 time: cswRecord.getContact(); returns <cswResponsibleParty>
  allowed, already invoked 1 time: cswRecord.getResourceProvider(); returns "MDU"
  allowed, already invoked 1 time: cswRecord.getFileIdentifier(); returns "asb"
  allowed, already invoked 1 time: cswRecord.getRecordInfoUrl(); returns "http://bob.xom"
  allowed, already invoked 1 time: cswRecord.getDataIdentificationAbstract(); returns "assda"
  allowed, already invoked 2 times: cswRecord.getOnlineResources(); returns [<abstractCSWOnlineResource>]
  allowed, already invoked 2 times: cswRecord.getCSWGeographicElements(); returns [<cswGeographicBoundingBox>]
  allowed, already invoked 2 times: cswRecord.getDescriptiveKeywords(); returns ["kw1", "kw1"]
  allowed, already invoked 2 times: cswRecord.getConstraints(); returns ["c1", "c2"]
  allowed, already invoked 2 times: cswRecord.getUseLimitConstraints(); returns ["use1", "use2"]
  allowed, already invoked 2 times: cswRecord.getAccessConstraints(); returns ["acess1", "acess2"]
  allowed, already invoked 1 time: cswRecord.hasChildRecords(); returns <false>
  allowed, already invoked 2 times: cswRecord.getDate(); returns <Thu Jan 01 01:00:00 CET 1970>
  allowed, already invoked 1 time: cswRecord.isService(); returns <true>
  allowed, already invoked 2 times: cswRecord.getDataSetURIs(); returns []
  allowed, already invoked 1 time: cswGeographicBoundingBox.getEastBoundLongitude(); returns <7.0>
  allowed, already invoked 1 time: cswGeographicBoundingBox.getWestBoundLongitude(); returns <6.0>
  allowed, already invoked 1 time: cswGeographicBoundingBox.getNorthBoundLatitude(); returns <10.0>
  allowed, already invoked 1 time: cswGeographicBoundingBox.getSouthBoundLatitude(); returns <5.0>
  allowed, never invoked: abstractCSWOnlineResource.getDescription(); returns "desc"
  allowed, never invoked: abstractCSWOnlineResource.getName(); returns "ascom"
  allowed, never invoked: abstractCSWOnlineResource.getType(); returns <WFS>
  allowed, already invoked 1 time: abstractCSWOnlineResource.getLinkage(); returns null
  allowed, never invoked: abstractCSWOnlineResource.getApplicationProfile(); returns "Esri:ArcGIS Server/x"
  allowed, already invoked 3 times: cswResponsibleParty.getOrganisationName(); returns "co"
  allowed, already invoked 2 times: cswResponsibleParty.getContactInfo(); returns <cswContact>
  expected once, already invoked 1 time: cswContact.getAddressAdministrativeArea(); returns "CSIRO"
what happened before this:
  cswRecord.getServiceName()
  cswRecord.getResourceProvider()
  cswRecord.getFileIdentifier()
  cswRecord.getRecordInfoUrl()
  cswRecord.getDataIdentificationAbstract()
  cswRecord.getNoCache()
  cswRecord.isService()
  cswRecord.getContact()
  cswResponsibleParty.getOrganisationName()
  cswResponsibleParty.getOrganisationName()
  cswResponsibleParty.getOrganisationName()
  cswResponsibleParty.getContactInfo()
  cswResponsibleParty.getContactInfo()
  cswContact.getAddressAdministrativeArea()
  cswRecord.getOnlineResources()
  cswRecord.getOnlineResources()
  abstractCSWOnlineResource.getLinkage()
  cswRecord.getCSWGeographicElements()
  cswRecord.getCSWGeographicElements()
  cswGeographicBoundingBox.getEastBoundLongitude()
  cswGeographicBoundingBox.getWestBoundLongitude()
  cswGeographicBoundingBox.getNorthBoundLatitude()
  cswGeographicBoundingBox.getSouthBoundLatitude()
  cswRecord.getDescriptiveKeywords()
  cswRecord.getDescriptiveKeywords()
  cswRecord.getDataSetURIs()
  cswRecord.getDataSetURIs()
  cswRecord.getConstraints()
  cswRecord.getConstraints()
  cswRecord.getUseLimitConstraints()
  cswRecord.getUseLimitConstraints()
  cswRecord.getAccessConstraints()
  cswRecord.getAccessConstraints()
  cswRecord.hasChildRecords()
  cswRecord.getDate()
  cswRecord.getDate()

	at org.jmock.api.ExpectationError.unexpected(ExpectationError.java:23)
	at org.jmock.internal.InvocationDispatcher.dispatch(InvocationDispatcher.java:85)
	at org.jmock.Mockery.dispatch(Mockery.java:244)
	at org.jmock.Mockery.access$100(Mockery.java:29)
	at org.jmock.Mockery$MockObject.invoke(Mockery.java:284)
	at org.jmock.internal.InvocationDiverter.invoke(InvocationDiverter.java:27)
	at org.jmock.internal.FakeObjectMethods.invoke(FakeObjectMethods.java:38)
	at org.auscope.portal.core.test.jmock.PortalSynchroniser.synchroniseInvocation(PortalSynchroniser.java:47)
	at org.auscope.portal.core.test.jmock.PortalSynchroniser.access$000(PortalSynchroniser.java:15)
	at org.auscope.portal.core.test.jmock.PortalSynchroniser$1.invoke(PortalSynchroniser.java:21)
	at org.jmock.lib.legacy.ClassImposteriser$4.invoke(ClassImposteriser.java:136)
	at org.auscope.portal.core.services.responses.csw.CSWRecord$$EnhancerByCGLIB$$820ca8e5.getMinScale(<generated>)
	at org.auscope.portal.core.view.ViewCSWRecordFactory.toView(ViewCSWRecordFactory.java:133)
	at org.auscope.portal.core.view.TestViewCSWRecordFactory.testToViewBadOnlineResources(TestViewCSWRecordFactory.java:409)
]]></failure>
  </testcase>
  <testcase name="testToView" classname="org.auscope.portal.core.view.TestViewCSWRecordFactory" time="0.007">
    <failure message="unexpected invocation: childRecord1.getMinScale()&#10;expectations:&#10;  allowed, already invoked 1 time: cswRecord.getServiceName(); returns &quot;sn&quot;&#10;  allowed, already invoked 1 time: cswRecord.getNoCache(); returns &lt;false&gt;&#10;  allowed, already invoked 1 time: cswRecord.getContact(); returns &lt;cswResponsibleParty&gt;&#10;  allowed, already invoked 1 time: cswRecord.getResourceProvider(); returns &quot;MDU&quot;&#10;  allowed, already invoked 1 time: cswRecord.getFileIdentifier(); returns &quot;asb&quot;&#10;  allowed, already invoked 1 time: cswRecord.getRecordInfoUrl(); returns &quot;http://bob.xom&quot;&#10;  allowed, already invoked 1 time: cswRecord.getDataIdentificationAbstract(); returns &quot;assda&quot;&#10;  allowed, already invoked 2 times: cswRecord.getOnlineResources(); returns [&lt;abstractCSWOnlineResource&gt;]&#10;  allowed, already invoked 2 times: cswRecord.getCSWGeographicElements(); returns [&lt;cswGeographicBoundingBox&gt;]&#10;  allowed, already invoked 2 times: cswRecord.getDescriptiveKeywords(); returns [&quot;kw1&quot;, &quot;kw1&quot;]&#10;  allowed, already invoked 2 times: cswRecord.getDataSetURIs(); returns [&quot;ds1&quot;, &quot;ds2&quot;]&#10;  allowed, already invoked 2 times: cswRecord.getConstraints(); returns [&quot;c1&quot;, &quot;c2&quot;]&#10;  allowed, already invoked 2 times: cswRecord.getUseLimitConstraints(); returns [&quot;use1&quot;, &quot;use2&quot;]&#10;  allowed, already invoked 2 times: cswRecord.getAccessConstraints(); returns [&quot;acess1&quot;, &quot;acess2&quot;]&#10;  allowed, already invoked 1 time: cswRecord.hasChildRecords(); returns &lt;true&gt;&#10;  allowed, already invoked 1 time: cswRecord.getChildRecords(); returns [&lt;childRecord1&gt;]&#10;  allowed, never invoked: cswRecord.getDate(); returns &lt;Thu Jan 01 01:00:00 CET 1970&gt;&#10;  allowed, already invoked 1 time: cswRecord.isService(); returns &lt;false&gt;&#10;  allowed, already invoked 1 time: childRecord1.getServiceName(); returns &quot;sn_1&quot;&#10;  allowed, already invoked 1 time: childRecord1.getNoCache(); returns &lt;false&gt;&#10;  allowed, already invoked 1 time: childRecord1.getContact(); returns null&#10;  allowed, already invoked 1 time: childRecord1.getResourceProvider(); returns &quot;CESRE&quot;&#10;  allowed, already invoked 1 time: childRecord1.getFileIdentifier(); returns &quot;asb_1&quot;&#10;  allowed, already invoked 1 time: childRecord1.getRecordInfoUrl(); returns &quot;http://bob.xom&quot;&#10;  allowed, already invoked 1 time: childRecord1.getDataIdentificationAbstract(); returns &quot;assda_1&quot;&#10;  allowed, already invoked 2 times: childRecord1.getOnlineResources(); returns [&lt;mockOnlineRes_1&gt;]&#10;  allowed, already invoked 1 time: childRecord1.getCSWGeographicElements(); returns null&#10;  allowed, already invoked 2 times: childRecord1.getDescriptiveKeywords(); returns [&quot;kw1_1&quot;, &quot;kw2_1&quot;]&#10;  allowed, already invoked 2 times: childRecord1.getDataSetURIs(); returns [&quot;ds1_1&quot;, &quot;ds2_1&quot;]&#10;  allowed, already invoked 2 times: childRecord1.getConstraints(); returns [&quot;c1_1&quot;, &quot;c2_1&quot;]&#10;  allowed, already invoked 2 times: childRecord1.getUseLimitConstraints(); returns [&quot;use1_1&quot;, &quot;use2_1&quot;]&#10;  allowed, already invoked 2 times: childRecord1.getAccessConstraints(); returns [&quot;acess1_1&quot;, &quot;acess2_1&quot;]&#10;  allowed, already invoked 1 time: childRecord1.hasChildRecords(); returns &lt;false&gt;&#10;  allowed, already invoked 1 time: childRecord1.getDate(); returns null&#10;  allowed, already invoked 1 time: childRecord1.isService(); returns &lt;false&gt;&#10;  allowed, already invoked 1 time: cswGeographicBoundingBox.getEastBoundLongitude(); returns &lt;7.0&gt;&#10;  allowed, already invoked 1 time: cswGeographicBoundingBox.getWestBoundLongitude(); returns &lt;6.0&gt;&#10;  allowed, already invoked 1 time: cswGeographicBoundingBox.getNorthBoundLatitude(); returns &lt;10.0&gt;&#10;  allowed, already invoked 1 time: cswGeographicBoundingBox.getSouthBoundLatitude(); returns &lt;5.0&gt;&#10;  allowed, already invoked 1 time: abstractCSWOnlineResource.getDescription(); returns &quot;desc&quot;&#10;  allowed, already invoked 1 time: abstractCSWOnlineResource.getName(); returns &quot;ascom&quot;&#10;  allowed, already invoked 1 time: abstractCSWOnlineResource.getType(); returns &lt;WFS&gt;&#10;  allowed, already invoked 2 times: abstractCSWOnlineResource.getLinkage(); returns &lt;http://hah.com&gt;&#10;  allowed, already invoked 1 time: abstractCSWOnlineResource.getVersion(); returns &quot;1.1.1&quot;&#10;  allowed, already invoked 1 time: abstractCSWOnlineResource.getApplicationProfile(); returns &quot;Esri:ArcGIS Server/x&quot;&#10;  allowed, already invoked 1 time: mockOnlineRes_1.getDescription(); returns &quot;desc_1&quot;&#10;  allowed, already invoked 1 time: mockOnlineRes_1.getName(); returns &quot;ascom_1&quot;&#10;  allowed, already invoked 1 time: mockOnlineRes_1.getType(); returns &lt;WCS&gt;&#10;  allowed, already invoked 2 times: mockOnlineRes_1.getLinkage(); returns &lt;http://hah_1.com&gt;&#10;  allowed, already invoked 1 time: mockOnlineRes_1.getVersion(); returns &quot;1.1.1&quot;&#10;  allowed, already invoked 1 time: mockOnlineRes_1.getApplicationProfile(); returns &quot;Esri:ArcGIS Server/x&quot;&#10;  allowed, already invoked 3 times: cswResponsibleParty.getOrganisationName(); returns &quot;co&quot;&#10;  allowed, already invoked 2 times: cswResponsibleParty.getContactInfo(); returns &lt;cswContact&gt;&#10;  expected once, already invoked 1 time: cswContact.getAddressAdministrativeArea(); returns &quot;CSIRO&quot;&#10;what happened before this:&#10;  cswRecord.getServiceName()&#10;  cswRecord.getResourceProvider()&#10;  cswRecord.getFileIdentifier()&#10;  cswRecord.getRecordInfoUrl()&#10;  cswRecord.getDataIdentificationAbstract()&#10;  cswRecord.getNoCache()&#10;  cswRecord.isService()&#10;  cswRecord.getContact()&#10;  cswResponsibleParty.getOrganisationName()&#10;  cswResponsibleParty.getOrganisationName()&#10;  cswResponsibleParty.getOrganisationName()&#10;  cswResponsibleParty.getContactInfo()&#10;  cswResponsibleParty.getContactInfo()&#10;  cswContact.getAddressAdministrativeArea()&#10;  cswRecord.getOnlineResources()&#10;  cswRecord.getOnlineResources()&#10;  abstractCSWOnlineResource.getLinkage()&#10;  abstractCSWOnlineResource.getLinkage()&#10;  abstractCSWOnlineResource.getType()&#10;  abstractCSWOnlineResource.getName()&#10;  abstractCSWOnlineResource.getDescription()&#10;  abstractCSWOnlineResource.getVersion()&#10;  abstractCSWOnlineResource.getApplicationProfile()&#10;  cswRecord.getCSWGeographicElements()&#10;  cswRecord.getCSWGeographicElements()&#10;  cswGeographicBoundingBox.getEastBoundLongitude()&#10;  cswGeographicBoundingBox.getWestBoundLongitude()&#10;  cswGeographicBoundingBox.getNorthBoundLatitude()&#10;  cswGeographicBoundingBox.getSouthBoundLatitude()&#10;  cswRecord.getDescriptiveKeywords()&#10;  cswRecord.getDescriptiveKeywords()&#10;  cswRecord.getDataSetURIs()&#10;  cswRecord.getDataSetURIs()&#10;  cswRecord.getConstraints()&#10;  cswRecord.getConstraints()&#10;  cswRecord.getUseLimitConstraints()&#10;  cswRecord.getUseLimitConstraints()&#10;  cswRecord.getAccessConstraints()&#10;  cswRecord.getAccessConstraints()&#10;  cswRecord.hasChildRecords()&#10;  cswRecord.getChildRecords()&#10;  childRecord1.getServiceName()&#10;  childRecord1.getResourceProvider()&#10;  childRecord1.getFileIdentifier()&#10;  childRecord1.getRecordInfoUrl()&#10;  childRecord1.getDataIdentificationAbstract()&#10;  childRecord1.getNoCache()&#10;  childRecord1.isService()&#10;  childRecord1.getContact()&#10;  childRecord1.getOnlineResources()&#10;  childRecord1.getOnlineResources()&#10;  mockOnlineRes_1.getLinkage()&#10;  mockOnlineRes_1.getLinkage()&#10;  mockOnlineRes_1.getType()&#10;  mockOnlineRes_1.getName()&#10;  mockOnlineRes_1.getDescription()&#10;  mockOnlineRes_1.getVersion()&#10;  mockOnlineRes_1.getApplicationProfile()&#10;  childRecord1.getCSWGeographicElements()&#10;  childRecord1.getDescriptiveKeywords()&#10;  childRecord1.getDescriptiveKeywords()&#10;  childRecord1.getDataSetURIs()&#10;  childRecord1.getDataSetURIs()&#10;  childRecord1.getConstraints()&#10;  childRecord1.getConstraints()&#10;  childRecord1.getUseLimitConstraints()&#10;  childRecord1.getUseLimitConstraints()&#10;  childRecord1.getAccessConstraints()&#10;  childRecord1.getAccessConstraints()&#10;  childRecord1.hasChildRecords()&#10;  childRecord1.getDate()&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: unexpected invocation: childRecord1.getMinScale()
expectations:
  allowed, already invoked 1 time: cswRecord.getServiceName(); returns "sn"
  allowed, already invoked 1 time: cswRecord.getNoCache(); returns <false>
  allowed, already invoked 1 time: cswRecord.getContact(); returns <cswResponsibleParty>
  allowed, already invoked 1 time: cswRecord.getResourceProvider(); returns "MDU"
  allowed, already invoked 1 time: cswRecord.getFileIdentifier(); returns "asb"
  allowed, already invoked 1 time: cswRecord.getRecordInfoUrl(); returns "http://bob.xom"
  allowed, already invoked 1 time: cswRecord.getDataIdentificationAbstract(); returns "assda"
  allowed, already invoked 2 times: cswRecord.getOnlineResources(); returns [<abstractCSWOnlineResource>]
  allowed, already invoked 2 times: cswRecord.getCSWGeographicElements(); returns [<cswGeographicBoundingBox>]
  allowed, already invoked 2 times: cswRecord.getDescriptiveKeywords(); returns ["kw1", "kw1"]
  allowed, already invoked 2 times: cswRecord.getDataSetURIs(); returns ["ds1", "ds2"]
  allowed, already invoked 2 times: cswRecord.getConstraints(); returns ["c1", "c2"]
  allowed, already invoked 2 times: cswRecord.getUseLimitConstraints(); returns ["use1", "use2"]
  allowed, already invoked 2 times: cswRecord.getAccessConstraints(); returns ["acess1", "acess2"]
  allowed, already invoked 1 time: cswRecord.hasChildRecords(); returns <true>
  allowed, already invoked 1 time: cswRecord.getChildRecords(); returns [<childRecord1>]
  allowed, never invoked: cswRecord.getDate(); returns <Thu Jan 01 01:00:00 CET 1970>
  allowed, already invoked 1 time: cswRecord.isService(); returns <false>
  allowed, already invoked 1 time: childRecord1.getServiceName(); returns "sn_1"
  allowed, already invoked 1 time: childRecord1.getNoCache(); returns <false>
  allowed, already invoked 1 time: childRecord1.getContact(); returns null
  allowed, already invoked 1 time: childRecord1.getResourceProvider(); returns "CESRE"
  allowed, already invoked 1 time: childRecord1.getFileIdentifier(); returns "asb_1"
  allowed, already invoked 1 time: childRecord1.getRecordInfoUrl(); returns "http://bob.xom"
  allowed, already invoked 1 time: childRecord1.getDataIdentificationAbstract(); returns "assda_1"
  allowed, already invoked 2 times: childRecord1.getOnlineResources(); returns [<mockOnlineRes_1>]
  allowed, already invoked 1 time: childRecord1.getCSWGeographicElements(); returns null
  allowed, already invoked 2 times: childRecord1.getDescriptiveKeywords(); returns ["kw1_1", "kw2_1"]
  allowed, already invoked 2 times: childRecord1.getDataSetURIs(); returns ["ds1_1", "ds2_1"]
  allowed, already invoked 2 times: childRecord1.getConstraints(); returns ["c1_1", "c2_1"]
  allowed, already invoked 2 times: childRecord1.getUseLimitConstraints(); returns ["use1_1", "use2_1"]
  allowed, already invoked 2 times: childRecord1.getAccessConstraints(); returns ["acess1_1", "acess2_1"]
  allowed, already invoked 1 time: childRecord1.hasChildRecords(); returns <false>
  allowed, already invoked 1 time: childRecord1.getDate(); returns null
  allowed, already invoked 1 time: childRecord1.isService(); returns <false>
  allowed, already invoked 1 time: cswGeographicBoundingBox.getEastBoundLongitude(); returns <7.0>
  allowed, already invoked 1 time: cswGeographicBoundingBox.getWestBoundLongitude(); returns <6.0>
  allowed, already invoked 1 time: cswGeographicBoundingBox.getNorthBoundLatitude(); returns <10.0>
  allowed, already invoked 1 time: cswGeographicBoundingBox.getSouthBoundLatitude(); returns <5.0>
  allowed, already invoked 1 time: abstractCSWOnlineResource.getDescription(); returns "desc"
  allowed, already invoked 1 time: abstractCSWOnlineResource.getName(); returns "ascom"
  allowed, already invoked 1 time: abstractCSWOnlineResource.getType(); returns <WFS>
  allowed, already invoked 2 times: abstractCSWOnlineResource.getLinkage(); returns <http://hah.com>
  allowed, already invoked 1 time: abstractCSWOnlineResource.getVersion(); returns "1.1.1"
  allowed, already invoked 1 time: abstractCSWOnlineResource.getApplicationProfile(); returns "Esri:ArcGIS Server/x"
  allowed, already invoked 1 time: mockOnlineRes_1.getDescription(); returns "desc_1"
  allowed, already invoked 1 time: mockOnlineRes_1.getName(); returns "ascom_1"
  allowed, already invoked 1 time: mockOnlineRes_1.getType(); returns <WCS>
  allowed, already invoked 2 times: mockOnlineRes_1.getLinkage(); returns <http://hah_1.com>
  allowed, already invoked 1 time: mockOnlineRes_1.getVersion(); returns "1.1.1"
  allowed, already invoked 1 time: mockOnlineRes_1.getApplicationProfile(); returns "Esri:ArcGIS Server/x"
  allowed, already invoked 3 times: cswResponsibleParty.getOrganisationName(); returns "co"
  allowed, already invoked 2 times: cswResponsibleParty.getContactInfo(); returns <cswContact>
  expected once, already invoked 1 time: cswContact.getAddressAdministrativeArea(); returns "CSIRO"
what happened before this:
  cswRecord.getServiceName()
  cswRecord.getResourceProvider()
  cswRecord.getFileIdentifier()
  cswRecord.getRecordInfoUrl()
  cswRecord.getDataIdentificationAbstract()
  cswRecord.getNoCache()
  cswRecord.isService()
  cswRecord.getContact()
  cswResponsibleParty.getOrganisationName()
  cswResponsibleParty.getOrganisationName()
  cswResponsibleParty.getOrganisationName()
  cswResponsibleParty.getContactInfo()
  cswResponsibleParty.getContactInfo()
  cswContact.getAddressAdministrativeArea()
  cswRecord.getOnlineResources()
  cswRecord.getOnlineResources()
  abstractCSWOnlineResource.getLinkage()
  abstractCSWOnlineResource.getLinkage()
  abstractCSWOnlineResource.getType()
  abstractCSWOnlineResource.getName()
  abstractCSWOnlineResource.getDescription()
  abstractCSWOnlineResource.getVersion()
  abstractCSWOnlineResource.getApplicationProfile()
  cswRecord.getCSWGeographicElements()
  cswRecord.getCSWGeographicElements()
  cswGeographicBoundingBox.getEastBoundLongitude()
  cswGeographicBoundingBox.getWestBoundLongitude()
  cswGeographicBoundingBox.getNorthBoundLatitude()
  cswGeographicBoundingBox.getSouthBoundLatitude()
  cswRecord.getDescriptiveKeywords()
  cswRecord.getDescriptiveKeywords()
  cswRecord.getDataSetURIs()
  cswRecord.getDataSetURIs()
  cswRecord.getConstraints()
  cswRecord.getConstraints()
  cswRecord.getUseLimitConstraints()
  cswRecord.getUseLimitConstraints()
  cswRecord.getAccessConstraints()
  cswRecord.getAccessConstraints()
  cswRecord.hasChildRecords()
  cswRecord.getChildRecords()
  childRecord1.getServiceName()
  childRecord1.getResourceProvider()
  childRecord1.getFileIdentifier()
  childRecord1.getRecordInfoUrl()
  childRecord1.getDataIdentificationAbstract()
  childRecord1.getNoCache()
  childRecord1.isService()
  childRecord1.getContact()
  childRecord1.getOnlineResources()
  childRecord1.getOnlineResources()
  mockOnlineRes_1.getLinkage()
  mockOnlineRes_1.getLinkage()
  mockOnlineRes_1.getType()
  mockOnlineRes_1.getName()
  mockOnlineRes_1.getDescription()
  mockOnlineRes_1.getVersion()
  mockOnlineRes_1.getApplicationProfile()
  childRecord1.getCSWGeographicElements()
  childRecord1.getDescriptiveKeywords()
  childRecord1.getDescriptiveKeywords()
  childRecord1.getDataSetURIs()
  childRecord1.getDataSetURIs()
  childRecord1.getConstraints()
  childRecord1.getConstraints()
  childRecord1.getUseLimitConstraints()
  childRecord1.getUseLimitConstraints()
  childRecord1.getAccessConstraints()
  childRecord1.getAccessConstraints()
  childRecord1.hasChildRecords()
  childRecord1.getDate()

	at org.jmock.api.ExpectationError.unexpected(ExpectationError.java:23)
	at org.jmock.internal.InvocationDispatcher.dispatch(InvocationDispatcher.java:85)
	at org.jmock.Mockery.dispatch(Mockery.java:244)
	at org.jmock.Mockery.access$100(Mockery.java:29)
	at org.jmock.Mockery$MockObject.invoke(Mockery.java:284)
	at org.jmock.internal.InvocationDiverter.invoke(InvocationDiverter.java:27)
	at org.jmock.internal.FakeObjectMethods.invoke(FakeObjectMethods.java:38)
	at org.auscope.portal.core.test.jmock.PortalSynchroniser.synchroniseInvocation(PortalSynchroniser.java:47)
	at org.auscope.portal.core.test.jmock.PortalSynchroniser.access$000(PortalSynchroniser.java:15)
	at org.auscope.portal.core.test.jmock.PortalSynchroniser$1.invoke(PortalSynchroniser.java:21)
	at org.jmock.lib.legacy.ClassImposteriser$4.invoke(ClassImposteriser.java:136)
	at org.auscope.portal.core.services.responses.csw.CSWRecord$$EnhancerByCGLIB$$820ca8e5.getMinScale(<generated>)
	at org.auscope.portal.core.view.ViewCSWRecordFactory.toView(ViewCSWRecordFactory.java:133)
	at org.auscope.portal.core.view.ViewCSWRecordFactory.toView(ViewCSWRecordFactory.java:120)
	at org.auscope.portal.core.view.TestViewCSWRecordFactory.testToView(TestViewCSWRecordFactory.java:278)
]]></failure>
  </testcase>
</testsuite>