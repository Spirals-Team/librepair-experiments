-------------------------------------------------------------------------------
Test set: spoon.processing.CtGenerationTest
-------------------------------------------------------------------------------
Tests run: 4, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 28.349 s <<< FAILURE! - in spoon.processing.CtGenerationTest
testGenerateCloneVisitor(spoon.processing.CtGenerationTest)  Time elapsed: 17.378 s  <<< ERROR!
spoon.SpoonException: 
Get more than one setter. Please make an more ingenious method to get setter method. 0 @spoon.reflect.annotations.MetamodelPropertyField(role = spoon.reflect.path.CtRole.SUB_PACKAGE)
protected spoon.support.util.ModelSet<spoon.reflect.declaration.CtPackage> packs = new spoon.support.util.ModelSet<spoon.reflect.declaration.CtPackage>(spoon.support.comparator.QualifiedNameComparator.INSTANCE) {
	private static final long serialVersionUID = 1L;

	@java.lang.Override
	protected spoon.reflect.declaration.CtElement getOwner() {
		return spoon.support.reflect.declaration.CtPackageImpl.this;
	}

	@java.lang.Override
	protected spoon.reflect.path.CtRole getRole() {
		return spoon.reflect.path.CtRole.SUB_PACKAGE;
	}

	@java.lang.Override
	public boolean add(spoon.reflect.declaration.CtPackage pack) {
		if (pack == null) {
			return false;
		}
		// they are the same
		if (spoon.support.reflect.declaration.CtPackageImpl.this.getQualifiedName().equals(pack.getQualifiedName())) {
			addAllTypes(pack, spoon.support.reflect.declaration.CtPackageImpl.this);
			addAllPackages(pack, spoon.support.reflect.declaration.CtPackageImpl.this);
			return false;
		}
		// it already exists
		for (spoon.reflect.declaration.CtPackage p1 : packs) {
			if (p1.getQualifiedName().equals(pack.getQualifiedName())) {
				addAllTypes(pack, p1);
				addAllPackages(pack, p1);
				return false;
			}
		}
		return super.add(pack);
	}
};
	at spoon.processing.CtGenerationTest.testGenerateCloneVisitor(CtGenerationTest.java:127)

