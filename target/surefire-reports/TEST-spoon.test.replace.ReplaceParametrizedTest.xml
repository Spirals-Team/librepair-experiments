<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="spoon.test.replace.ReplaceParametrizedTest" time="2.643" tests="80" errors="0" skipped="0" failures="0">
  <properties>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/root/./workspace/INRIA/spoon/384466506/.m2/org/apache/maven/surefire/surefire-booter/2.20.1/surefire-booter-2.20.1.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/apache/maven/surefire/surefire-api/2.20.1/surefire-api-2.20.1.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/apache/maven/surefire/surefire-logger-api/2.20.1/surefire-logger-api-2.20.1.jar:/root/workspace/INRIA/spoon/384466506/target/test-classes:/root/workspace/INRIA/spoon/384466506/target/classes:/root/./workspace/INRIA/spoon/384466506/.m2/org/eclipse/tycho/org.eclipse.jdt.core/3.13.50.v20171007-0855/org.eclipse.jdt.core-3.13.50.v20171007-0855.jar:/root/./workspace/INRIA/spoon/384466506/.m2/junit/junit/4.12/junit-4.12.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/./workspace/INRIA/spoon/384466506/.m2/com/github/stefanbirkner/system-rules/1.9.0/system-rules-1.9.0.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/mockito/mockito-all/2.0.2-beta/mockito-all-2.0.2-beta.jar:/root/./workspace/INRIA/spoon/384466506/.m2/com/martiansoftware/jsap/2.1/jsap-2.1.jar:/root/./workspace/INRIA/spoon/384466506/.m2/log4j/log4j/1.2.17/log4j-1.2.17.jar:/root/./workspace/INRIA/spoon/384466506/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/apache/maven/maven-model/3.3.9/maven-model-3.3.9.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/codehaus/plexus/plexus-utils/3.0.22/plexus-utils-3.0.22.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar:/root/./workspace/INRIA/spoon/384466506/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.2/jackson-databind-2.9.2.jar:/root/./workspace/INRIA/spoon/384466506/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/root/./workspace/INRIA/spoon/384466506/.m2/com/fasterxml/jackson/core/jackson-core/2.9.2/jackson-core-2.9.2.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/apache/maven/surefire/surefire-junit4/2.20.1/surefire-junit4-2.20.1.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/jacoco/org.jacoco.agent/0.7.9/org.jacoco.agent-0.7.9-runtime.jar"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="skip.bower" value="true"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value=""/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Linux"/>
    <property name="rat.skip" value="true"/>
    <property name="gpg.skip" value="true"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="skip.gulp" value="true"/>
    <property name="sun.java.command" value="org.apache.maven.surefire.booter.ForkedBooter /root/workspace/INRIA/spoon/384466506/target/surefire 2018-05-27T21-49-53_218-jvmRun1 surefire9215025252377716063tmp surefire_05022426402421792353tmp"/>
    <property name="dependency-check.skip" value="true"/>
    <property name="surefire.test.class.path" value="/root/workspace/INRIA/spoon/384466506/target/test-classes:/root/workspace/INRIA/spoon/384466506/target/classes:/root/./workspace/INRIA/spoon/384466506/.m2/org/eclipse/tycho/org.eclipse.jdt.core/3.13.50.v20171007-0855/org.eclipse.jdt.core-3.13.50.v20171007-0855.jar:/root/./workspace/INRIA/spoon/384466506/.m2/junit/junit/4.12/junit-4.12.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/./workspace/INRIA/spoon/384466506/.m2/com/github/stefanbirkner/system-rules/1.9.0/system-rules-1.9.0.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/mockito/mockito-all/2.0.2-beta/mockito-all-2.0.2-beta.jar:/root/./workspace/INRIA/spoon/384466506/.m2/com/martiansoftware/jsap/2.1/jsap-2.1.jar:/root/./workspace/INRIA/spoon/384466506/.m2/log4j/log4j/1.2.17/log4j-1.2.17.jar:/root/./workspace/INRIA/spoon/384466506/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/apache/maven/maven-model/3.3.9/maven-model-3.3.9.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/codehaus/plexus/plexus-utils/3.0.22/plexus-utils-3.0.22.jar:/root/./workspace/INRIA/spoon/384466506/.m2/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar:/root/./workspace/INRIA/spoon/384466506/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.2/jackson-databind-2.9.2.jar:/root/./workspace/INRIA/spoon/384466506/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/root/./workspace/INRIA/spoon/384466506/.m2/com/fasterxml/jackson/core/jackson-core/2.9.2/jackson-core-2.9.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/root"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="basedir" value="/root/workspace/INRIA/spoon/384466506"/>
    <property name="file.separator" value="/"/>
    <property name="checkstyle.skip" value="true"/>
    <property name="line.separator" value="&#10;"/>
    <property name="skip.npm" value="true"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="skipITs" value="true"/>
    <property name="cobertura.skip" value="true"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_121-8u121-b13-1~bpo8+1-b13"/>
    <property name="user.name" value="root"/>
    <property name="findbugs.skip" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="3.10.0-862.2.3.el7.x86_64"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/root/./workspace/INRIA/spoon/384466506/.m2"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="1.8.0_121"/>
    <property name="user.dir" value="/root/workspace/INRIA/spoon/384466506"/>
    <property name="os.arch" value="amd64"/>
    <property name="license.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.121-b13"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="maven.repo.local" value="/root/./workspace/INRIA/spoon/384466506/.m2"/>
    <property name="enforcer.skip" value="true"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="testContract[CtConditional]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.007"/>
  <testcase name="testContract[CtProvidedService]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtParameter]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtWhile]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtTypeReference]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtCatchVariableReference]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtContinue]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtInterface]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.004"/>
  <testcase name="testContract[CtAssignment]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtBinaryOperator]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtEnumValue]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtModuleRequirement]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtForEach]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtConstructor]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.003"/>
  <testcase name="testContract[CtSuperAccess]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.003"/>
  <testcase name="testContract[CtAnonymousExecutable]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtComment]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtWildcardReference]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtThisAccess]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtArrayWrite]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtPackageReference]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0"/>
  <testcase name="testContract[CtJavaDoc]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtArrayRead]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtStatementList]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtVariableWrite]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtParameterReference]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0"/>
  <testcase name="testContract[CtOperatorAssignment]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtAnnotationFieldAccess]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtUnboundVariableReference]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtAnnotationMethod]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtClass]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.004"/>
  <testcase name="testContract[CtBlock]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtPackage]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtTryWithResource]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtAssert]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtSwitch]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtTry]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtSynchronized]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtImport]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtTypeParameterReference]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtInvocation]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.003"/>
  <testcase name="testContract[CtCodeSnippetExpression]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtFieldWrite]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtUnaryOperator]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtExecutableReference]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtFor]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtVariableRead]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtTypeParameter]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.003"/>
  <testcase name="testContract[CtLocalVariable]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtIf]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtModule]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.004"/>
  <testcase name="testContract[CtPackageExport]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtConstructorCall]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.003"/>
  <testcase name="testContract[CtCase]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtModuleReference]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0"/>
  <testcase name="testContract[CtCatch]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtArrayTypeReference]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtMethod]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtLambda]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtNewArray]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtUsedService]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtIntersectionTypeReference]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtThrow]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtLiteral]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtReturn]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtJavaDocTag]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtField]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtTypeAccess]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtCodeSnippetStatement]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtDo]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtAnnotation]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtFieldRead]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtBreak]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0"/>
  <testcase name="testContract[CtFieldReference]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtEnum]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.005"/>
  <testcase name="testContract[CtNewClass]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtLocalVariableReference]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.001"/>
  <testcase name="testContract[CtAnnotationType]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.003"/>
  <testcase name="testContract[CtCatchVariable]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
  <testcase name="testContract[CtExecutableReferenceExpression]" classname="spoon.test.replace.ReplaceParametrizedTest" time="0.002"/>
</testsuite>