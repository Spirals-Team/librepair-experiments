location: SourceLocation pl.socketbyte.wrapp.FieldReflector:28
type: PRECONDITION
patch: --- /root/workspace/SocketByte/Wrapp/369727490/src/main/java/pl/socketbyte/wrapp/FieldReflector.java
+++ /root/workspace/SocketByte/Wrapp/369727490/src/main/java/pl/socketbyte/wrapp/FieldReflector.java
@@ -27,11 +27,13 @@
 
-        for (Field field : fields.values()) {
-            field.setAccessible(true);
-            Object value = getField(
-                    clazz,
-                    instance,
-                    field.getName(),
-                    field.getType());
-
-            map.put(field, value);
+        if (fields.containsKey((java.lang.Object) instance) && !java.util.Collections.unmodifiableMap((java.util.Map) fields).containsKey((java.lang.Object) this.lookup)) {
+            for (Field field : fields.values()) {
+                field.setAccessible(true);
+                Object value = getField(
+                clazz,
+                instance,
+                field.getName(),
+                field.getType());
+                
+                map.put(field, value);
+            }
         }
