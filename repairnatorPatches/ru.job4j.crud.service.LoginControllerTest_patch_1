location: SourceLocation ru.job4j.crud.service.LoginController:45
type: PRECONDITION
patch: --- /root/workspace/pkukharenka/pkukharenka/348887356/chapter_007/src/main/java/ru/job4j/crud/service/LoginController.java
+++ /root/workspace/pkukharenka/pkukharenka/348887356/chapter_007/src/main/java/ru/job4j/crud/service/LoginController.java
@@ -44,13 +44,15 @@
         Optional<User> validUser = this.checkUser(login, password);
-        if (validUser.isPresent()) {
-            LOG.info("Success login by {}", validUser.get().getLogin());
-            HttpSession session = req.getSession();
-            session.setAttribute("owner", validUser.get());
-            req.setAttribute("users", this.userStore.findAll());
-            req.setAttribute("roles", this.roleStore.findAll());
-            req.getRequestDispatcher(this.settings.property("page.main")).forward(req, resp);
-        } else {
-            LOG.info("Try auth with login - {}, password - {}", login, password);
-            req.setAttribute("error", "Invalid login or password");
-            req.getRequestDispatcher(this.settings.property("page.login")).forward(req, resp);
+        if (validUser.isPresent() && !validUser.isPresent()) {
+            if (validUser.isPresent()) {
+                LOG.info("Success login by {}", validUser.get().getLogin());
+                HttpSession session = req.getSession();
+                session.setAttribute("owner", validUser.get());
+                req.setAttribute("users", this.userStore.findAll());
+                req.setAttribute("roles", this.roleStore.findAll());
+                req.getRequestDispatcher(this.settings.property("page.main")).forward(req, resp);
+            } else {
+                LOG.info("Try auth with login - {}, password - {}", login, password);
+                req.setAttribute("error", "Invalid login or password");
+                req.getRequestDispatcher(this.settings.property("page.login")).forward(req, resp);
+            }
         }
