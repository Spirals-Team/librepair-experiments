--- /root/workspace/eclipse/ditto/410293879/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/BaseClientActor.java
+++ /root/workspace/eclipse/ditto/410293879/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/BaseClientActor.java
@@ -683,33 +683,35 @@
     private void startMessageMappingProcessor(@Nullable final MappingContext mappingContext) {
-        if (!getMessageMappingProcessorActor().isPresent()) {
-            final Connection connection = connection();
-
-            final MessageMappingProcessor processor;
-            try {
-                // this one throws DittoRuntimeExceptions when the mapper could not be configured
-                processor = MessageMappingProcessor.of(connectionId(), mappingContext, getContext().getSystem(), log);
-            } catch (final DittoRuntimeException dre) {
-                log.info(
-                        "Got DittoRuntimeException during initialization of MessageMappingProcessor: {} {} - desc: {}",
-                        dre.getClass().getSimpleName(), dre.getMessage(), dre.getDescription().orElse(""));
-                getSender().tell(dre, getSelf());
-                return;
+        if (true) {
+            if (!getMessageMappingProcessorActor().isPresent()) {
+                final Connection connection = connection();
+                
+                final MessageMappingProcessor processor;
+                try {
+                    // this one throws DittoRuntimeExceptions when the mapper could not be configured
+                    processor = MessageMappingProcessor.of(connectionId(), mappingContext, getContext().getSystem(), log);
+                } catch (final DittoRuntimeException dre) {
+                    log.info(
+                    "Got DittoRuntimeException during initialization of MessageMappingProcessor: {} {} - desc: {}",
+                    dre.getClass().getSimpleName(), dre.getMessage(), dre.getDescription().orElse(""));
+                    getSender().tell(dre, getSelf());
+                    return;
+                }
+                
+                log.info("Configured for processing messages with the following MessageMapperRegistry: <{}>",
+                processor.getRegistry());
+                
+                log.debug("Starting MessageMappingProcessorActor with pool size of <{}>.",
+                connection.getProcessorPoolSize());
+                final Props props =
+                MessageMappingProcessorActor.props(getSelf(), conciergeForwarder,
+                connection.getAuthorizationContext(), processor, connectionId());
+                
+                final Resizer resizer = new DefaultResizer(1, connection.getProcessorPoolSize());
+                messageMappingProcessorActor = getContext().actorOf(new RoundRobinPool(1)
+                .withDispatcher("message-mapping-processor-dispatcher")
+                .withResizer(resizer)
+                .props(props), MessageMappingProcessorActor.ACTOR_NAME);
+            } else {
+                log.info("MessageMappingProcessor already instantiated: don't initializing again.");
             }
-
-            log.info("Configured for processing messages with the following MessageMapperRegistry: <{}>",
-                    processor.getRegistry());
-
-            log.debug("Starting MessageMappingProcessorActor with pool size of <{}>.",
-                    connection.getProcessorPoolSize());
-            final Props props =
-                    MessageMappingProcessorActor.props(getSelf(), conciergeForwarder,
-                            connection.getAuthorizationContext(), processor, connectionId());
-
-            final Resizer resizer = new DefaultResizer(1, connection.getProcessorPoolSize());
-            messageMappingProcessorActor = getContext().actorOf(new RoundRobinPool(1)
-                    .withDispatcher("message-mapping-processor-dispatcher")
-                    .withResizer(resizer)
-                    .props(props), MessageMappingProcessorActor.ACTOR_NAME);
-        } else {
-            log.info("MessageMappingProcessor already instantiated: don't initializing again.");
         }
