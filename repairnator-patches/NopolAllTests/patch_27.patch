--- /root/workspace/eclipse/ditto/410293879/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/BaseClientActor.java
+++ /root/workspace/eclipse/ditto/410293879/services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/BaseClientActor.java
@@ -383,12 +383,14 @@
     private boolean canConnectViaSocket(final Connection connection, final DittoHeaders dittoHeaders) {
-        if (!checkHostAndPortForAvailability(connection.getHostname(), connection.getPort())) {
-            final ConnectionFailedException connectionFailedException = ConnectionFailedException
-                    .newBuilder(connection.getId())
-                    .dittoHeaders(dittoHeaders)
-                    .description("Could not establish a connection on '" +
-                            connection.getHostname() + ":" + connection.getPort() + "'. Make sure the " +
-                            "endpoint is reachable and that no firewall prevents the connection.")
-                    .build();
-            getSender().tell(new Status.Failure(connectionFailedException), getSelf());
-            return false;
+        if (true) {
+            if (!checkHostAndPortForAvailability(connection.getHostname(), connection.getPort())) {
+                final ConnectionFailedException connectionFailedException = ConnectionFailedException
+                .newBuilder(connection.getId())
+                .dittoHeaders(dittoHeaders)
+                .description("Could not establish a connection on '" +
+                connection.getHostname() + ":" + connection.getPort() + "'. Make sure the " +
+                "endpoint is reachable and that no firewall prevents the connection.")
+                .build();
+                getSender().tell(new Status.Failure(connectionFailedException), getSelf());
+                return false;
+            }
         }
