com.twitter.graphjet.bipartite.RightNodeMetadataLeftIndexedMultiSegmentBipartiteGraphTest#testMultiSegmentConstruction
.SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/root/workspace/twitter/GraphJet/367776033/.m2/org/slf4j/slf4j-nop/1.7.21/slf4j-nop-1.7.21.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/root/workspace/twitter/GraphJet/367776033/.m2/org/slf4j/slf4j-log4j12/1.7.21/slf4j-log4j12-1.7.21.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/root/repairnator-pipeline.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.helpers.NOPLoggerFactory]
E
Time: 0.168
There was 1 failure:
1) testMultiSegmentConstruction(com.twitter.graphjet.bipartite.RightNodeMetadataLeftIndexedMultiSegmentBipartiteGraphTest)
java.lang.IllegalStateException: Invalid EdgeType in getFeatureTypePosition
	at com.twitter.graphjet.hashing.ArrayBasedIntToIntArrayMap.getFeaturePosition(ArrayBasedIntToIntArrayMap.java:206)
	at com.twitter.graphjet.hashing.ArrayBasedIntToIntArrayMap.incrementFeatureValue(ArrayBasedIntToIntArrayMap.java:186)
	at com.twitter.graphjet.bipartite.segment.RightNodeMetadataLeftIndexedBipartiteGraphSegment.addEdge(RightNodeMetadataLeftIndexedBipartiteGraphSegment.java:135)
	at com.twitter.graphjet.bipartite.RightNodeMetadataLeftIndexedMultiSegmentBipartiteGraph.addEdge(RightNodeMetadataLeftIndexedMultiSegmentBipartiteGraph.java:80)
	at com.twitter.graphjet.bipartite.RightNodeMetadataLeftIndexedMultiSegmentBipartiteGraphTest.addEdges(RightNodeMetadataLeftIndexedMultiSegmentBipartiteGraphTest.java:20)
	at com.twitter.graphjet.bipartite.RightNodeMetadataLeftIndexedMultiSegmentBipartiteGraphTest.testMultiSegmentConstruction(RightNodeMetadataLeftIndexedMultiSegmentBipartiteGraphTest.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at fr.inria.lille.repair.MethodTestRunner.runTest(MethodTestRunner.java:44)
	at fr.inria.lille.repair.MethodTestRunner.access$000(MethodTestRunner.java:12)
	at fr.inria.lille.repair.MethodTestRunner$1.call(MethodTestRunner.java:20)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

FAILURES!!!
Tests run: 1,  Failures: 1

