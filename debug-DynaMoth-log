org.eclipse.hono.connection.ConnectionFactoryImplTest#testConnectEnablesSslIfTrustStoreIsConfigured
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/root/workspace/ctron/hono/370099951/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/root/repairnator-pipeline.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
.E
Time: 1.078
There was 1 failure:
1) testConnectEnablesSslIfTrustStoreIsConfigured(org.eclipse.hono.connection.ConnectionFactoryImplTest)
java.lang.IllegalArgumentException: Configured trust store file does not exist: /tmp/trusted-ca.p12
	at org.eclipse.hono.config.AbstractConfig.getTrustOptions(AbstractConfig.java:140)
	at org.eclipse.hono.connection.ConnectionFactoryImpl.addTlsTrustOptions(ConnectionFactoryImpl.java:207)
	at org.eclipse.hono.connection.ConnectionFactoryImpl.addOptions(ConnectionFactoryImpl.java:192)
	at org.eclipse.hono.connection.ConnectionFactoryImpl.connect(ConnectionFactoryImpl.java:124)
	at org.eclipse.hono.connection.ConnectionFactoryImpl.connect(ConnectionFactoryImpl.java:102)
	at org.eclipse.hono.connection.ConnectionFactoryImplTest.testConnectEnablesSslIfTrustStoreIsConfigured(ConnectionFactoryImplTest.java:206)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at io.vertx.ext.unit.junit.VertxUnitRunner.invokeTestMethod(VertxUnitRunner.java:93)
	at io.vertx.ext.unit.junit.VertxUnitRunner.lambda$invokeExplosively$0(VertxUnitRunner.java:114)
	at io.vertx.ext.unit.impl.TestContextImpl$Step.run(TestContextImpl.java:128)
	at io.vertx.ext.unit.impl.TestContextImpl$Step.access$200(TestContextImpl.java:30)
	at io.vertx.ext.unit.impl.TestContextImpl.run(TestContextImpl.java:237)
	at io.vertx.ext.unit.junit.VertxUnitRunner.invokeExplosively(VertxUnitRunner.java:130)
	at io.vertx.ext.unit.junit.VertxUnitRunner.access$000(VertxUnitRunner.java:39)
	at io.vertx.ext.unit.junit.VertxUnitRunner$1.evaluate(VertxUnitRunner.java:84)
	at io.vertx.ext.unit.junit.VertxUnitRunner$2.evaluate(VertxUnitRunner.java:196)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at fr.inria.lille.repair.MethodTestRunner.runTest(MethodTestRunner.java:44)
	at fr.inria.lille.repair.MethodTestRunner.access$000(MethodTestRunner.java:12)
	at fr.inria.lille.repair.MethodTestRunner$1.call(MethodTestRunner.java:20)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

FAILURES!!!
Tests run: 1,  Failures: 1

