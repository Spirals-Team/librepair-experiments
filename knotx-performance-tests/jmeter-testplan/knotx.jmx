<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="KNOTX" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="project" elementType="Argument">
            <stringProp name="Argument.name">project</stringProp>
            <stringProp name="Argument.value">knotx</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Domains AWS" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">https. http</stringProp>
          </elementProp>
          <elementProp name="domain" elementType="Argument">
            <stringProp name="Argument.name">domain</stringProp>
            <stringProp name="Argument.value">52.212.167.142</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">8092</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">Domains for Integration env</stringProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Domains LOCALHOST" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">https. http</stringProp>
          </elementProp>
          <elementProp name="domain" elementType="Argument">
            <stringProp name="Argument.name">domain</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">8092</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">Domains for Staging env</stringProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="threads" elementType="Argument">
            <stringProp name="Argument.name">threads</stringProp>
            <stringProp name="Argument.value">${__P(threads, 50)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">2500</stringProp>
          </elementProp>
          <elementProp name="rampup" elementType="Argument">
            <stringProp name="Argument.name">rampup</stringProp>
            <stringProp name="Argument.value">${__P(rampup, 20)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">in  seconds (30 minutes = 1800 seconds)|5400</stringProp>
          </elementProp>
          <elementProp name="think-time-constant" elementType="Argument">
            <stringProp name="Argument.name">think-time-constant</stringProp>
            <stringProp name="Argument.value">${__P(thinkTime, 1000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">miliseconds</stringProp>
          </elementProp>
          <elementProp name="think-time-deviation" elementType="Argument">
            <stringProp name="Argument.name">think-time-deviation</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">miliseconds</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">variables</stringProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables debug" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="threads" elementType="Argument">
            <stringProp name="Argument.name">threads</stringProp>
            <stringProp name="Argument.value">${__P(threads, 40)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rampup" elementType="Argument">
            <stringProp name="Argument.name">rampup</stringProp>
            <stringProp name="Argument.value">${__P(rampup, 10)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">seconds</stringProp>
          </elementProp>
          <elementProp name="think-time-constant" elementType="Argument">
            <stringProp name="Argument.name">think-time-constant</stringProp>
            <stringProp name="Argument.value">500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">miliseconds</stringProp>
          </elementProp>
          <elementProp name="think-time-deviation" elementType="Argument">
            <stringProp name="Argument.name">think-time-deviation</stringProp>
            <stringProp name="Argument.value">300</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">miliseconds</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sample content" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1448350538000</longProp>
        <longProp name="ThreadGroup.end_time">1448350538000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${domain}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">${domain}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">${think-time-constant}</stringProp>
          <stringProp name="RandomTimer.range">${think-time-deviation}</stringProp>
        </GaussianRandomTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1 snippet and 1 service" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/content/simple-1snippet-1service.html</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="1 snippet 1 service - assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="383012399">      &lt;div class=&quot;col-md-6&quot;&gt;
        &lt;h2&gt;This is the list of 7 highest mountains of each of the seven continents - Messner version&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Everest - Asia&lt;/li&gt;
          &lt;li&gt;Aconcagua - South America&lt;/li&gt;
          &lt;li&gt;Denali - North America&lt;/li&gt;
          &lt;li&gt;Kilimanjaro - Africa&lt;/li&gt;
          &lt;li&gt;Elbrus - Europe&lt;/li&gt;
          &lt;li&gt;Puncak Jaya - Australasia (continent)&lt;/li&gt;
          &lt;li&gt;Vinson - Antarctica&lt;/li&gt;
        &lt;/ol&gt;
          &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
          &lt;div class=&quot;col-md-6&quot;&gt;
            &lt;h2&gt;This is the list of 7 highest mountains of each of the seven continents - Bass version&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Everest - Asia&lt;/li&gt;
          &lt;li&gt;Aconcagua - South America&lt;/li&gt;
          &lt;li&gt;Denali - North America&lt;/li&gt;
          &lt;li&gt;Kilimanjaro - Africa&lt;/li&gt;
          &lt;li&gt;Elbrus - Europe&lt;/li&gt;
          &lt;li&gt;Kosciuszko - Australia&lt;/li&gt;
          &lt;li&gt;Vinson - Antarctica&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1 Snippet 5 Services" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/content/simple-1snippet-5services.html</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="1 Snippet 5 Services assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1251114765">      &lt;div class=&quot;col-md-6&quot;&gt;
        &lt;h2&gt;This is the list of 7 highest mountains of each of the seven continents - Messner version&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Everest - Asia&lt;/li&gt;
          &lt;li&gt;Aconcagua - South America&lt;/li&gt;
          &lt;li&gt;Denali - North America&lt;/li&gt;
          &lt;li&gt;Kilimanjaro - Africa&lt;/li&gt;
          &lt;li&gt;Elbrus - Europe&lt;/li&gt;
          &lt;li&gt;Puncak Jaya - Australasia (continent)&lt;/li&gt;
          &lt;li&gt;Vinson - Antarctica&lt;/li&gt;
        &lt;/ol&gt;
        &lt;h2&gt;Continents&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Asia&lt;/li&gt;
          &lt;li&gt;South America&lt;/li&gt;
          &lt;li&gt;Africa&lt;/li&gt;
          &lt;li&gt;Europe&lt;/li&gt;
          &lt;li&gt;Australasia (continetn)&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
          &lt;li&gt;Antarctica&lt;/li&gt;
        &lt;/ol&gt;
        &lt;h2&gt;Countries&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Nepal&lt;/li&gt;
          &lt;li&gt;China&lt;/li&gt;
          &lt;li&gt;United States&lt;/li&gt;
          &lt;li&gt;Argentina&lt;/li&gt;
          &lt;li&gt;Tanzania&lt;/li&gt;
          &lt;li&gt;Russia&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
        &lt;/ol&gt;
        &lt;h2&gt;Names&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Edmund Hillary&lt;/li&gt;
          &lt;li&gt;Tenzing Norgay&lt;/li&gt;
          &lt;li&gt;Reinhold Messner&lt;/li&gt;
          &lt;li&gt;Jerzy Kukuczka&lt;/li&gt;
          &lt;li&gt;George Mallory&lt;/li&gt;
          &lt;li&gt;Joe Simpson&lt;/li&gt;
          &lt;li&gt;Lino Lacedelli&lt;/li&gt;
        &lt;/ol&gt;
        &lt;h2&gt;Dates&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;17 July 1990, Pamir Mountains&lt;/li&gt;
          &lt;li&gt;3 July 1953, Nanga Parbat&lt;/li&gt;
          &lt;li&gt;11 May 1953, Mount Everest&lt;/li&gt;
          &lt;li&gt;31 July 1954, K2&lt;/li&gt;
          &lt;li&gt;24 August 2008, Mont Blanc&lt;/li&gt;
          &lt;li&gt;July 1936, Eiger&lt;/li&gt;
          &lt;li&gt;11 July 1955, Mount Temple&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5 snippets and 1 service for each snippet" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/content/simple-5snippets.html</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="5 snippets and 1 service for each snippet Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="399484102">      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;This is the list of 7 highest mountains of each of the seven continents - Messner version&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Everest - Asia&lt;/li&gt;
          &lt;li&gt;Aconcagua - South America&lt;/li&gt;
          &lt;li&gt;Denali - North America&lt;/li&gt;
          &lt;li&gt;Kilimanjaro - Africa&lt;/li&gt;
          &lt;li&gt;Elbrus - Europe&lt;/li&gt;
          &lt;li&gt;Puncak Jaya - Australasia (continent)&lt;/li&gt;
          &lt;li&gt;Vinson - Antarctica&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Continents&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Asia&lt;/li&gt;
          &lt;li&gt;South America&lt;/li&gt;
          &lt;li&gt;Africa&lt;/li&gt;
          &lt;li&gt;Europe&lt;/li&gt;
          &lt;li&gt;Australasia (continetn)&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
          &lt;li&gt;Antarctica&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Countries&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Nepal&lt;/li&gt;
          &lt;li&gt;China&lt;/li&gt;
          &lt;li&gt;United States&lt;/li&gt;
          &lt;li&gt;Argentina&lt;/li&gt;
          &lt;li&gt;Tanzania&lt;/li&gt;
          &lt;li&gt;Russia&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Names&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Edmund Hillary&lt;/li&gt;
          &lt;li&gt;Tenzing Norgay&lt;/li&gt;
          &lt;li&gt;Reinhold Messner&lt;/li&gt;
          &lt;li&gt;Jerzy Kukuczka&lt;/li&gt;
          &lt;li&gt;George Mallory&lt;/li&gt;
          &lt;li&gt;Joe Simpson&lt;/li&gt;
          &lt;li&gt;Lino Lacedelli&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Dates&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;17 July 1990, Pamir Mountains&lt;/li&gt;
          &lt;li&gt;3 July 1953, Nanga Parbat&lt;/li&gt;
          &lt;li&gt;11 May 1953, Mount Everest&lt;/li&gt;
          &lt;li&gt;31 July 1954, K2&lt;/li&gt;
          &lt;li&gt;24 August 2008, Mont Blanc&lt;/li&gt;
          &lt;li&gt;July 1936, Eiger&lt;/li&gt;
          &lt;li&gt;11 July 1955, Mount Temple&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10 snippets and 1 service for each snippet" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/content/simple-10snippets.html</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="10 snippets and 1 service for each snippet Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-271624510">      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;This is the list of 7 highest mountains of each of the seven continents - Messner version&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Everest - Asia&lt;/li&gt;
          &lt;li&gt;Aconcagua - South America&lt;/li&gt;
          &lt;li&gt;Denali - North America&lt;/li&gt;
          &lt;li&gt;Kilimanjaro - Africa&lt;/li&gt;
          &lt;li&gt;Elbrus - Europe&lt;/li&gt;
          &lt;li&gt;Puncak Jaya - Australasia (continent)&lt;/li&gt;
          &lt;li&gt;Vinson - Antarctica&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Continents&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Asia&lt;/li&gt;
          &lt;li&gt;South America&lt;/li&gt;
          &lt;li&gt;Africa&lt;/li&gt;
          &lt;li&gt;Europe&lt;/li&gt;
          &lt;li&gt;Australasia (continetn)&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
          &lt;li&gt;Antarctica&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Countries&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Nepal&lt;/li&gt;
          &lt;li&gt;China&lt;/li&gt;
          &lt;li&gt;United States&lt;/li&gt;
          &lt;li&gt;Argentina&lt;/li&gt;
          &lt;li&gt;Tanzania&lt;/li&gt;
          &lt;li&gt;Russia&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Names&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Edmund Hillary&lt;/li&gt;
          &lt;li&gt;Tenzing Norgay&lt;/li&gt;
          &lt;li&gt;Reinhold Messner&lt;/li&gt;
          &lt;li&gt;Jerzy Kukuczka&lt;/li&gt;
          &lt;li&gt;George Mallory&lt;/li&gt;
          &lt;li&gt;Joe Simpson&lt;/li&gt;
          &lt;li&gt;Lino Lacedelli&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Dates&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;17 July 1990, Pamir Mountains&lt;/li&gt;
          &lt;li&gt;3 July 1953, Nanga Parbat&lt;/li&gt;
          &lt;li&gt;11 May 1953, Mount Everest&lt;/li&gt;
          &lt;li&gt;31 July 1954, K2&lt;/li&gt;
          &lt;li&gt;24 August 2008, Mont Blanc&lt;/li&gt;
          &lt;li&gt;July 1936, Eiger&lt;/li&gt;
          &lt;li&gt;11 July 1955, Mount Temple&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Lakes&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Caspian Sea – 371,000 km2&lt;/li&gt;
          &lt;li&gt;Lake Superior – 82,414 km2&lt;/li&gt;
          &lt;li&gt;Lake Victoria – 69,485 km2&lt;/li&gt;
          &lt;li&gt;Lake Huron – 59,600 km2&lt;/li&gt;
          &lt;li&gt;Lake Michigan – 58,000 km2&lt;/li&gt;
          &lt;li&gt;Lake Tanganyika – 32,893 km2&lt;/li&gt;
          &lt;li&gt;Lake Baikal – 31,500 km2&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Deserts&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Antarctica&lt;/li&gt;
          &lt;li&gt;Arctic&lt;/li&gt;
          &lt;li&gt;Sahara&lt;/li&gt;
          &lt;li&gt;Arabian Desert&lt;/li&gt;
          &lt;li&gt;Gobi Desert&lt;/li&gt;
          &lt;li&gt;Kalahari Desert&lt;/li&gt;
          &lt;li&gt;Greate Victoria Desert&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Stars&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;UY Scuti&lt;/li&gt;
          &lt;li&gt;WOH G64&lt;/li&gt;
          &lt;li&gt;RW Cephei&lt;/li&gt;
          &lt;li&gt;Westerlund 1-26&lt;/li&gt;
          &lt;li&gt;V354 Cephei&lt;/li&gt;
          &lt;li&gt;KY Cygni&lt;/li&gt;
          &lt;li&gt;VY Canis Majoris&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Winds&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Berg&lt;/li&gt;
          &lt;li&gt;Bora&lt;/li&gt;
          &lt;li&gt;Etesian&lt;/li&gt;
          &lt;li&gt;Haboob&lt;/li&gt;
          &lt;li&gt;Khamsin&lt;/li&gt;
          &lt;li&gt;Mistral&lt;/li&gt;
          &lt;li&gt;Scirocco&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Passes&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Thorong La 5416m&lt;/li&gt;
          &lt;li&gt;West col 6135m&lt;/li&gt;
          &lt;li&gt;East Col 6100m&lt;/li&gt;
          &lt;li&gt;Cho La 5420m&lt;/li&gt;
          &lt;li&gt;Larky Pass 5213m&lt;/li&gt;
          &lt;li&gt;Kagmara La 5115m&lt;/li&gt;
          &lt;li&gt;Ganja La 5106m&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;
</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="big data" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/content/simple-big-data.html</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big data Assertion 1" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-444423202">      &lt;div class=&quot;col-md-4&quot;&gt;
        &lt;h2&gt;Snippet1 - this is webservice no. 1&lt;/h2&gt;
        &lt;div&gt;Snippet1 - message - a&lt;/div&gt;
        &lt;div&gt;&lt;/div&gt;
      &lt;/div&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big data Assertion 2" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2005145260">              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas auctor magna turpis,
              a condimentum leo sollicitudin et. Etiam venenatis turpis mauris, et sodales lorem
              consectetur non. Duis et augue a ipsum pulvinar sollicitudin. Sed aliquam elementum
              ligula, ut viverra mi mattis quis. Ut in commodo tortor. Nunc ac massa vel quam
              iaculis lacinia sed vitae enim. Sed ornare malesuada egestas. Curabitur quis turpis ac
              eros iaculis varius sit amet nec eros. Suspendisse eget nisl velit. Aliquam eu justo
              vulputate risus malesuada semper eu sit amet nunc. Morbi tellus leo, gravida quis
              velit sit amet, finibus tincidunt diam. Etiam lorem felis, mollis sit amet velit id,
              scelerisque ultricies tellus. Nunc semper porttitor posuere. Integer leo risus, porta
              sit amet felis et, aliquet lobortis libero. Donec orci turpis, accumsan dapibus turpis
              at, venenatis consectetur felis.</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big data Assertion 3" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-543316774">          &lt;tr class=&quot;active&quot;&gt;
            &lt;td&gt;7&lt;/td&gt;
            &lt;td&gt;Column content&lt;/td&gt;
            &lt;td&gt;Column content&lt;/td&gt;
            &lt;td&gt;Column content&lt;/td&gt;
          &lt;/tr&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1-big-snippet-1-service-wtih-big-json" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/content/1-big-snippet-1-service-wtih-big-json.html</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big-snippet assertion end" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-737650375">                        Proin molestie lorem non mauris efficitur, nec lobortis turpis finibus. Phasellus
                        pharetra vestibulum nunc eu rhoncus. Vivamus imperdiet, nunc id laoreet faucibus, urna
                        quam commodo mi, non vehicula lacus quam non dui. Fusce ac diam a purus hendrerit
                        porta a ac odio. Suspendisse fringilla, metus ac tempus suscipit, neque lacus
                        tincidunt erat, nec lacinia eros dui eget nulla. Maecenas consectetur tellus felis,
                        sed luctus erat viverra at. Proin euismod rutrum bibendum. Aenean sagittis diam augue,
                        sit amet faucibus ex aliquam quis. Fusce semper lobortis lectus, ac vehicula justo
                        sagittis et. In hac habitasse platea dictumst. Proin odio quam, dictum in lacus sit
                        amet, commodo pellentesque ipsum. Nullam finibus ante ac ipsum condimentum, sed
                        pellentesque augue consectetur. Sed enim neque, egestas vitae pretium malesuada,
                        varius ac diam.
          &lt;/p&gt;
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/div&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big-snippet assertion beginning" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1539070931">      &lt;div class=&quot;col-md-6&quot;&gt;
        &lt;h2&gt;Names:&lt;/h2&gt;
        &lt;ul class=&quot;people_list&quot;&gt;
          
          &lt;li&gt;Chalmers Vernon&lt;/li&gt;
          
          &lt;li&gt;Marlee Drinnan&lt;/li&gt;
          
          &lt;li&gt;Nannette Hinchon&lt;/li&gt;
          
          &lt;li&gt;Curran Stanley&lt;/li&gt;
          
          &lt;li&gt;Alexine Scartifield&lt;/li&gt;
          
          &lt;li&gt;Reinaldo Berrane&lt;/li&gt;
          
          &lt;li&gt;Bear Brilleman&lt;/li&gt;
          
          &lt;li&gt;Missy de la Valette Parisot&lt;/li&gt;
          
          &lt;li&gt;Adele Scrowby&lt;/li&gt;
          
          &lt;li&gt;Mathian Fenlon&lt;/li&gt;
          
          &lt;li&gt;Gabie Crome&lt;/li&gt;
          
          &lt;li&gt;Tildy Fleischer&lt;/li&gt;
          
          &lt;li&gt;Holli Beausang&lt;/li&gt;
          
          &lt;li&gt;Lauri Biscomb&lt;/li&gt;
          
          &lt;li&gt;Deloris Farington&lt;/li&gt;
          
          &lt;li&gt;Jourdain Paxman&lt;/li&gt;
          
          &lt;li&gt;Dru Ghilks&lt;/li&gt;
          
          &lt;li&gt;Welbie Whacket&lt;/li&gt;
          
          &lt;li&gt;Cherlyn Hubatsch&lt;/li&gt;
          
          &lt;li&gt;Casi Kerrane&lt;/li&gt;
          
          &lt;li&gt;Clarie McGlone&lt;/li&gt;
          
          &lt;li&gt;Siana Rylance&lt;/li&gt;
          
          &lt;li&gt;Ola Corsham&lt;/li&gt;
          
          &lt;li&gt;Rickey Giaomozzo&lt;/li&gt;
          
          &lt;li&gt;Giordano Grigaut&lt;/li&gt;
          
          &lt;li&gt;Alric Munday&lt;/li&gt;
          
          &lt;li&gt;Ruggiero Saket&lt;/li&gt;
          
          &lt;li&gt;Orel Geare&lt;/li&gt;
          
          &lt;li&gt;Ronald Mallia&lt;/li&gt;
          
          &lt;li&gt;Lanie Stebbin&lt;/li&gt;
          
          &lt;li&gt;Maude Vader&lt;/li&gt;
          
          &lt;li&gt;Michal Copozio&lt;/li&gt;
          
          &lt;li&gt;Carrie Dominelli&lt;/li&gt;
          
          &lt;li&gt;Domingo Raatz&lt;/li&gt;
          
          &lt;li&gt;Daryl Probert&lt;/li&gt;
          
          &lt;li&gt;Lavina Pickthorne&lt;/li&gt;
          
          &lt;li&gt;Shannan Jaffray&lt;/li&gt;
          
          &lt;li&gt;Vail Dalgarno&lt;/li&gt;
          
          &lt;li&gt;Britta Gowrie&lt;/li&gt;
          
          &lt;li&gt;Crichton Bramstom&lt;/li&gt;
          
          &lt;li&gt;Hanan Grier&lt;/li&gt;
          
          &lt;li&gt;Mickie Alishoner&lt;/li&gt;
          
          &lt;li&gt;Stacy Hasson&lt;/li&gt;
          
          &lt;li&gt;Koralle Gerbl&lt;/li&gt;
          
          &lt;li&gt;Adda Cosyns&lt;/li&gt;
          
          &lt;li&gt;Lura Hartop&lt;/li&gt;
          
          &lt;li&gt;Ashley Gilardoni&lt;/li&gt;
          
          &lt;li&gt;Der Leggate&lt;/li&gt;
          
          &lt;li&gt;Sigismundo Caruth&lt;/li&gt;
          
          &lt;li&gt;Shurwood Bellhouse&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/div&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100-small-snippets-1-service-wtih-big-json" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/content/100-small-snippets-1-service-wtih-big-json.html</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="100-small-snippets-1-service-wtih-big-json assertion first snippet" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1539070931">      &lt;div class=&quot;col-md-6&quot;&gt;
        &lt;h2&gt;Names:&lt;/h2&gt;
        &lt;ul class=&quot;people_list&quot;&gt;
          
          &lt;li&gt;Chalmers Vernon&lt;/li&gt;
          
          &lt;li&gt;Marlee Drinnan&lt;/li&gt;
          
          &lt;li&gt;Nannette Hinchon&lt;/li&gt;
          
          &lt;li&gt;Curran Stanley&lt;/li&gt;
          
          &lt;li&gt;Alexine Scartifield&lt;/li&gt;
          
          &lt;li&gt;Reinaldo Berrane&lt;/li&gt;
          
          &lt;li&gt;Bear Brilleman&lt;/li&gt;
          
          &lt;li&gt;Missy de la Valette Parisot&lt;/li&gt;
          
          &lt;li&gt;Adele Scrowby&lt;/li&gt;
          
          &lt;li&gt;Mathian Fenlon&lt;/li&gt;
          
          &lt;li&gt;Gabie Crome&lt;/li&gt;
          
          &lt;li&gt;Tildy Fleischer&lt;/li&gt;
          
          &lt;li&gt;Holli Beausang&lt;/li&gt;
          
          &lt;li&gt;Lauri Biscomb&lt;/li&gt;
          
          &lt;li&gt;Deloris Farington&lt;/li&gt;
          
          &lt;li&gt;Jourdain Paxman&lt;/li&gt;
          
          &lt;li&gt;Dru Ghilks&lt;/li&gt;
          
          &lt;li&gt;Welbie Whacket&lt;/li&gt;
          
          &lt;li&gt;Cherlyn Hubatsch&lt;/li&gt;
          
          &lt;li&gt;Casi Kerrane&lt;/li&gt;
          
          &lt;li&gt;Clarie McGlone&lt;/li&gt;
          
          &lt;li&gt;Siana Rylance&lt;/li&gt;
          
          &lt;li&gt;Ola Corsham&lt;/li&gt;
          
          &lt;li&gt;Rickey Giaomozzo&lt;/li&gt;
          
          &lt;li&gt;Giordano Grigaut&lt;/li&gt;
          
          &lt;li&gt;Alric Munday&lt;/li&gt;
          
          &lt;li&gt;Ruggiero Saket&lt;/li&gt;
          
          &lt;li&gt;Orel Geare&lt;/li&gt;
          
          &lt;li&gt;Ronald Mallia&lt;/li&gt;
          
          &lt;li&gt;Lanie Stebbin&lt;/li&gt;
          
          &lt;li&gt;Maude Vader&lt;/li&gt;
          
          &lt;li&gt;Michal Copozio&lt;/li&gt;
          
          &lt;li&gt;Carrie Dominelli&lt;/li&gt;
          
          &lt;li&gt;Domingo Raatz&lt;/li&gt;
          
          &lt;li&gt;Daryl Probert&lt;/li&gt;
          
          &lt;li&gt;Lavina Pickthorne&lt;/li&gt;
          
          &lt;li&gt;Shannan Jaffray&lt;/li&gt;
          
          &lt;li&gt;Vail Dalgarno&lt;/li&gt;
          
          &lt;li&gt;Britta Gowrie&lt;/li&gt;
          
          &lt;li&gt;Crichton Bramstom&lt;/li&gt;
          
          &lt;li&gt;Hanan Grier&lt;/li&gt;
          
          &lt;li&gt;Mickie Alishoner&lt;/li&gt;
          
          &lt;li&gt;Stacy Hasson&lt;/li&gt;
          
          &lt;li&gt;Koralle Gerbl&lt;/li&gt;
          
          &lt;li&gt;Adda Cosyns&lt;/li&gt;
          
          &lt;li&gt;Lura Hartop&lt;/li&gt;
          
          &lt;li&gt;Ashley Gilardoni&lt;/li&gt;
          
          &lt;li&gt;Der Leggate&lt;/li&gt;
          
          &lt;li&gt;Sigismundo Caruth&lt;/li&gt;
          
          &lt;li&gt;Shurwood Bellhouse&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/div&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="100-small-snippets-1-service-wtih-big-json assertion last snippet" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1728414529">      &lt;div class=&quot;col-md-6&quot;&gt;
        &lt;h2&gt;Company&lt;/h2&gt;
        &lt;ul class=&quot;people_list&quot;&gt;
          
          &lt;li&gt;Smith-Volkman&lt;/li&gt;
          
          &lt;li&gt;Bernhard and Sons&lt;/li&gt;
          
          &lt;li&gt;Eichmann Group&lt;/li&gt;
          
          &lt;li&gt;Littel, Huel and Lemke&lt;/li&gt;
          
          &lt;li&gt;Daniel-Kub&lt;/li&gt;
          
          &lt;li&gt;Volkman, Grant and Crooks&lt;/li&gt;
          
          &lt;li&gt;Hermiston-Gibson&lt;/li&gt;
          
          &lt;li&gt;Dach, Thompson and Kemmer&lt;/li&gt;
          
          &lt;li&gt;Ziemann-Turner&lt;/li&gt;
          
          &lt;li&gt;Satterfield, Abshire and Goyette&lt;/li&gt;
          
          &lt;li&gt;Langworth Group&lt;/li&gt;
          
          &lt;li&gt;Ferry, Bosco and Bradtke&lt;/li&gt;
          
          &lt;li&gt;Kilback-Roob&lt;/li&gt;
          
          &lt;li&gt;Hills Inc&lt;/li&gt;
          
          &lt;li&gt;Murphy-Walter&lt;/li&gt;
          
          &lt;li&gt;Armstrong-Bernier&lt;/li&gt;
          
          &lt;li&gt;Tillman-Kuhic&lt;/li&gt;
          
          &lt;li&gt;Crist and Sons&lt;/li&gt;
          
          &lt;li&gt;Beer Inc&lt;/li&gt;
          
          &lt;li&gt;Senger, Bahringer and Swaniawski&lt;/li&gt;
          
          &lt;li&gt;Maggio and Sons&lt;/li&gt;
          
          &lt;li&gt;Sporer-Schmidt&lt;/li&gt;
          
          &lt;li&gt;Aufderhar, Gaylord and Koch&lt;/li&gt;
          
          &lt;li&gt;Jaskolski-Connelly&lt;/li&gt;
          
          &lt;li&gt;Bernhard and Sons&lt;/li&gt;
          
          &lt;li&gt;Stark-Cassin&lt;/li&gt;
          
          &lt;li&gt;Miller Group&lt;/li&gt;
          
          &lt;li&gt;Nitzsche, Hickle and Kuhic&lt;/li&gt;
          
          &lt;li&gt;Bayer-Hodkiewicz&lt;/li&gt;
          
          &lt;li&gt;Moore Group&lt;/li&gt;
          
          &lt;li&gt;Witting, Kreiger and Osinski&lt;/li&gt;
          
          &lt;li&gt;Conn-Champlin&lt;/li&gt;
          
          &lt;li&gt;Bosco, Ritchie and Borer&lt;/li&gt;
          
          &lt;li&gt;Windler-Huels&lt;/li&gt;
          
          &lt;li&gt;Nolan-Rempel&lt;/li&gt;
          
          &lt;li&gt;Mertz, Watsica and Greenfelder&lt;/li&gt;
          
          &lt;li&gt;Schuppe and Sons&lt;/li&gt;
          
          &lt;li&gt;Stoltenberg Group&lt;/li&gt;
          
          &lt;li&gt;Tromp-Schinner&lt;/li&gt;
          
          &lt;li&gt;Kassulke, Sawayn and D&amp;#x27;Amore&lt;/li&gt;
          
          &lt;li&gt;Wisoky, Stroman and Schamberger&lt;/li&gt;
          
          &lt;li&gt;Braun, Weimann and Hahn&lt;/li&gt;
          
          &lt;li&gt;Schimmel and Sons&lt;/li&gt;
          
          &lt;li&gt;Adams LLC&lt;/li&gt;
          
          &lt;li&gt;Muller, Littel and Becker&lt;/li&gt;
          
          &lt;li&gt;Moore, Altenwerth and Langworth&lt;/li&gt;
          
          &lt;li&gt;Emard, Von and Kovacek&lt;/li&gt;
          
          &lt;li&gt;Klein and Sons&lt;/li&gt;
          
          &lt;li&gt;Howell-Koss&lt;/li&gt;
          
          &lt;li&gt;Herzog, Marquardt and Kuvalis&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/div&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="Peak Test - Ultimate Thread Group" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1190142184">
            <stringProp name="51508">400</stringProp>
            <stringProp name="49">1</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="53377398">86400</stringProp>
            <stringProp name="1515111">1800</stringProp>
          </collectionProp>
          <collectionProp name="-758732922">
            <stringProp name="51508">400</stringProp>
            <stringProp name="1688091">7200</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="1604484">4800</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
          <collectionProp name="-1994972467">
            <stringProp name="49586">200</stringProp>
            <stringProp name="46968489">18000</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
          <collectionProp name="571840210">
            <stringProp name="49741">250</stringProp>
            <stringProp name="47804559">25200</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
          <collectionProp name="1314428045">
            <stringProp name="55352">800</stringProp>
            <stringProp name="48640629">32400</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="50733">360</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
          <collectionProp name="190765602">
            <stringProp name="49586">200</stringProp>
            <stringProp name="48851088">39600</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="1509345">1200</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
          <collectionProp name="1040535523">
            <stringProp name="50547">300</stringProp>
            <stringProp name="49687158">46800</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
          <collectionProp name="-535904645">
            <stringProp name="52469">500</stringProp>
            <stringProp name="50543409">54000</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
          <collectionProp name="134178298">
            <stringProp name="51508">400</stringProp>
            <stringProp name="51379479">61200</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
          <collectionProp name="-1182165668">
            <stringProp name="49586">200</stringProp>
            <stringProp name="51589938">68400</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
          <collectionProp name="-94284935">
            <stringProp name="51508">400</stringProp>
            <stringProp name="52426008">75600</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
          <collectionProp name="-2093590358">
            <stringProp name="50547">300</stringProp>
            <stringProp name="53262078">82800</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${domain}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">${domain}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">${think-time-constant}</stringProp>
          <stringProp name="RandomTimer.range">${think-time-deviation}</stringProp>
        </GaussianRandomTimer>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>40.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1 snippet and 1 service" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/content/simple-1snippet-1service.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="1 snippet 1 service - assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="383012399">      &lt;div class=&quot;col-md-6&quot;&gt;
        &lt;h2&gt;This is the list of 7 highest mountains of each of the seven continents - Messner version&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Everest - Asia&lt;/li&gt;
          &lt;li&gt;Aconcagua - South America&lt;/li&gt;
          &lt;li&gt;Denali - North America&lt;/li&gt;
          &lt;li&gt;Kilimanjaro - Africa&lt;/li&gt;
          &lt;li&gt;Elbrus - Europe&lt;/li&gt;
          &lt;li&gt;Puncak Jaya - Australasia (continent)&lt;/li&gt;
          &lt;li&gt;Vinson - Antarctica&lt;/li&gt;
        &lt;/ol&gt;
          &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
          &lt;div class=&quot;col-md-6&quot;&gt;
            &lt;h2&gt;This is the list of 7 highest mountains of each of the seven continents - Bass version&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Everest - Asia&lt;/li&gt;
          &lt;li&gt;Aconcagua - South America&lt;/li&gt;
          &lt;li&gt;Denali - North America&lt;/li&gt;
          &lt;li&gt;Kilimanjaro - Africa&lt;/li&gt;
          &lt;li&gt;Elbrus - Europe&lt;/li&gt;
          &lt;li&gt;Kosciuszko - Australia&lt;/li&gt;
          &lt;li&gt;Vinson - Antarctica&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>25.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1 Snippet 5 Services" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/content/simple-1snippet-5services.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="1 Snippet 5 Services assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1251114765">      &lt;div class=&quot;col-md-6&quot;&gt;
        &lt;h2&gt;This is the list of 7 highest mountains of each of the seven continents - Messner version&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Everest - Asia&lt;/li&gt;
          &lt;li&gt;Aconcagua - South America&lt;/li&gt;
          &lt;li&gt;Denali - North America&lt;/li&gt;
          &lt;li&gt;Kilimanjaro - Africa&lt;/li&gt;
          &lt;li&gt;Elbrus - Europe&lt;/li&gt;
          &lt;li&gt;Puncak Jaya - Australasia (continent)&lt;/li&gt;
          &lt;li&gt;Vinson - Antarctica&lt;/li&gt;
        &lt;/ol&gt;
        &lt;h2&gt;Continents&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Asia&lt;/li&gt;
          &lt;li&gt;South America&lt;/li&gt;
          &lt;li&gt;Africa&lt;/li&gt;
          &lt;li&gt;Europe&lt;/li&gt;
          &lt;li&gt;Australasia (continetn)&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
          &lt;li&gt;Antarctica&lt;/li&gt;
        &lt;/ol&gt;
        &lt;h2&gt;Countries&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Nepal&lt;/li&gt;
          &lt;li&gt;China&lt;/li&gt;
          &lt;li&gt;United States&lt;/li&gt;
          &lt;li&gt;Argentina&lt;/li&gt;
          &lt;li&gt;Tanzania&lt;/li&gt;
          &lt;li&gt;Russia&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
        &lt;/ol&gt;
        &lt;h2&gt;Names&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Edmund Hillary&lt;/li&gt;
          &lt;li&gt;Tenzing Norgay&lt;/li&gt;
          &lt;li&gt;Reinhold Messner&lt;/li&gt;
          &lt;li&gt;Jerzy Kukuczka&lt;/li&gt;
          &lt;li&gt;George Mallory&lt;/li&gt;
          &lt;li&gt;Joe Simpson&lt;/li&gt;
          &lt;li&gt;Lino Lacedelli&lt;/li&gt;
        &lt;/ol&gt;
        &lt;h2&gt;Dates&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;17 July 1990, Pamir Mountains&lt;/li&gt;
          &lt;li&gt;3 July 1953, Nanga Parbat&lt;/li&gt;
          &lt;li&gt;11 May 1953, Mount Everest&lt;/li&gt;
          &lt;li&gt;31 July 1954, K2&lt;/li&gt;
          &lt;li&gt;24 August 2008, Mont Blanc&lt;/li&gt;
          &lt;li&gt;July 1936, Eiger&lt;/li&gt;
          &lt;li&gt;11 July 1955, Mount Temple&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>25.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5 snippets and 1 service for each snippet" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/content/simple-5snippets.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="5 snippets and 1 service for each snippet Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="399484102">      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;This is the list of 7 highest mountains of each of the seven continents - Messner version&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Everest - Asia&lt;/li&gt;
          &lt;li&gt;Aconcagua - South America&lt;/li&gt;
          &lt;li&gt;Denali - North America&lt;/li&gt;
          &lt;li&gt;Kilimanjaro - Africa&lt;/li&gt;
          &lt;li&gt;Elbrus - Europe&lt;/li&gt;
          &lt;li&gt;Puncak Jaya - Australasia (continent)&lt;/li&gt;
          &lt;li&gt;Vinson - Antarctica&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Continents&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Asia&lt;/li&gt;
          &lt;li&gt;South America&lt;/li&gt;
          &lt;li&gt;Africa&lt;/li&gt;
          &lt;li&gt;Europe&lt;/li&gt;
          &lt;li&gt;Australasia (continetn)&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
          &lt;li&gt;Antarctica&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Countries&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Nepal&lt;/li&gt;
          &lt;li&gt;China&lt;/li&gt;
          &lt;li&gt;United States&lt;/li&gt;
          &lt;li&gt;Argentina&lt;/li&gt;
          &lt;li&gt;Tanzania&lt;/li&gt;
          &lt;li&gt;Russia&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Names&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Edmund Hillary&lt;/li&gt;
          &lt;li&gt;Tenzing Norgay&lt;/li&gt;
          &lt;li&gt;Reinhold Messner&lt;/li&gt;
          &lt;li&gt;Jerzy Kukuczka&lt;/li&gt;
          &lt;li&gt;George Mallory&lt;/li&gt;
          &lt;li&gt;Joe Simpson&lt;/li&gt;
          &lt;li&gt;Lino Lacedelli&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Dates&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;17 July 1990, Pamir Mountains&lt;/li&gt;
          &lt;li&gt;3 July 1953, Nanga Parbat&lt;/li&gt;
          &lt;li&gt;11 May 1953, Mount Everest&lt;/li&gt;
          &lt;li&gt;31 July 1954, K2&lt;/li&gt;
          &lt;li&gt;24 August 2008, Mont Blanc&lt;/li&gt;
          &lt;li&gt;July 1936, Eiger&lt;/li&gt;
          &lt;li&gt;11 July 1955, Mount Temple&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;</stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>5.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1-big-snippet-1-service-wtih-big-json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/content/1-big-snippet-1-service-wtih-big-json.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big-snippet assertion end" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-737650375">                        Proin molestie lorem non mauris efficitur, nec lobortis turpis finibus. Phasellus
                        pharetra vestibulum nunc eu rhoncus. Vivamus imperdiet, nunc id laoreet faucibus, urna
                        quam commodo mi, non vehicula lacus quam non dui. Fusce ac diam a purus hendrerit
                        porta a ac odio. Suspendisse fringilla, metus ac tempus suscipit, neque lacus
                        tincidunt erat, nec lacinia eros dui eget nulla. Maecenas consectetur tellus felis,
                        sed luctus erat viverra at. Proin euismod rutrum bibendum. Aenean sagittis diam augue,
                        sit amet faucibus ex aliquam quis. Fusce semper lobortis lectus, ac vehicula justo
                        sagittis et. In hac habitasse platea dictumst. Proin odio quam, dictum in lacus sit
                        amet, commodo pellentesque ipsum. Nullam finibus ante ac ipsum condimentum, sed
                        pellentesque augue consectetur. Sed enim neque, egestas vitae pretium malesuada,
                        varius ac diam.
          &lt;/p&gt;
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/div&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big-snippet assertion beginning" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1539070931">      &lt;div class=&quot;col-md-6&quot;&gt;
        &lt;h2&gt;Names:&lt;/h2&gt;
        &lt;ul class=&quot;people_list&quot;&gt;
          
          &lt;li&gt;Chalmers Vernon&lt;/li&gt;
          
          &lt;li&gt;Marlee Drinnan&lt;/li&gt;
          
          &lt;li&gt;Nannette Hinchon&lt;/li&gt;
          
          &lt;li&gt;Curran Stanley&lt;/li&gt;
          
          &lt;li&gt;Alexine Scartifield&lt;/li&gt;
          
          &lt;li&gt;Reinaldo Berrane&lt;/li&gt;
          
          &lt;li&gt;Bear Brilleman&lt;/li&gt;
          
          &lt;li&gt;Missy de la Valette Parisot&lt;/li&gt;
          
          &lt;li&gt;Adele Scrowby&lt;/li&gt;
          
          &lt;li&gt;Mathian Fenlon&lt;/li&gt;
          
          &lt;li&gt;Gabie Crome&lt;/li&gt;
          
          &lt;li&gt;Tildy Fleischer&lt;/li&gt;
          
          &lt;li&gt;Holli Beausang&lt;/li&gt;
          
          &lt;li&gt;Lauri Biscomb&lt;/li&gt;
          
          &lt;li&gt;Deloris Farington&lt;/li&gt;
          
          &lt;li&gt;Jourdain Paxman&lt;/li&gt;
          
          &lt;li&gt;Dru Ghilks&lt;/li&gt;
          
          &lt;li&gt;Welbie Whacket&lt;/li&gt;
          
          &lt;li&gt;Cherlyn Hubatsch&lt;/li&gt;
          
          &lt;li&gt;Casi Kerrane&lt;/li&gt;
          
          &lt;li&gt;Clarie McGlone&lt;/li&gt;
          
          &lt;li&gt;Siana Rylance&lt;/li&gt;
          
          &lt;li&gt;Ola Corsham&lt;/li&gt;
          
          &lt;li&gt;Rickey Giaomozzo&lt;/li&gt;
          
          &lt;li&gt;Giordano Grigaut&lt;/li&gt;
          
          &lt;li&gt;Alric Munday&lt;/li&gt;
          
          &lt;li&gt;Ruggiero Saket&lt;/li&gt;
          
          &lt;li&gt;Orel Geare&lt;/li&gt;
          
          &lt;li&gt;Ronald Mallia&lt;/li&gt;
          
          &lt;li&gt;Lanie Stebbin&lt;/li&gt;
          
          &lt;li&gt;Maude Vader&lt;/li&gt;
          
          &lt;li&gt;Michal Copozio&lt;/li&gt;
          
          &lt;li&gt;Carrie Dominelli&lt;/li&gt;
          
          &lt;li&gt;Domingo Raatz&lt;/li&gt;
          
          &lt;li&gt;Daryl Probert&lt;/li&gt;
          
          &lt;li&gt;Lavina Pickthorne&lt;/li&gt;
          
          &lt;li&gt;Shannan Jaffray&lt;/li&gt;
          
          &lt;li&gt;Vail Dalgarno&lt;/li&gt;
          
          &lt;li&gt;Britta Gowrie&lt;/li&gt;
          
          &lt;li&gt;Crichton Bramstom&lt;/li&gt;
          
          &lt;li&gt;Hanan Grier&lt;/li&gt;
          
          &lt;li&gt;Mickie Alishoner&lt;/li&gt;
          
          &lt;li&gt;Stacy Hasson&lt;/li&gt;
          
          &lt;li&gt;Koralle Gerbl&lt;/li&gt;
          
          &lt;li&gt;Adda Cosyns&lt;/li&gt;
          
          &lt;li&gt;Lura Hartop&lt;/li&gt;
          
          &lt;li&gt;Ashley Gilardoni&lt;/li&gt;
          
          &lt;li&gt;Der Leggate&lt;/li&gt;
          
          &lt;li&gt;Sigismundo Caruth&lt;/li&gt;
          
          &lt;li&gt;Shurwood Bellhouse&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/div&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>5.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="big data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/content/simple-big-data.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big data Assertion 1" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-444423202">      &lt;div class=&quot;col-md-4&quot;&gt;
        &lt;h2&gt;Snippet1 - this is webservice no. 1&lt;/h2&gt;
        &lt;div&gt;Snippet1 - message - a&lt;/div&gt;
        &lt;div&gt;&lt;/div&gt;
      &lt;/div&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big data Assertion 2" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2005145260">              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas auctor magna turpis,
              a condimentum leo sollicitudin et. Etiam venenatis turpis mauris, et sodales lorem
              consectetur non. Duis et augue a ipsum pulvinar sollicitudin. Sed aliquam elementum
              ligula, ut viverra mi mattis quis. Ut in commodo tortor. Nunc ac massa vel quam
              iaculis lacinia sed vitae enim. Sed ornare malesuada egestas. Curabitur quis turpis ac
              eros iaculis varius sit amet nec eros. Suspendisse eget nisl velit. Aliquam eu justo
              vulputate risus malesuada semper eu sit amet nunc. Morbi tellus leo, gravida quis
              velit sit amet, finibus tincidunt diam. Etiam lorem felis, mollis sit amet velit id,
              scelerisque ultricies tellus. Nunc semper porttitor posuere. Integer leo risus, porta
              sit amet felis et, aliquet lobortis libero. Donec orci turpis, accumsan dapibus turpis
              at, venenatis consectetur felis.</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big data Assertion 3" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-543316774">          &lt;tr class=&quot;active&quot;&gt;
            &lt;td&gt;7&lt;/td&gt;
            &lt;td&gt;Column content&lt;/td&gt;
            &lt;td&gt;Column content&lt;/td&gt;
            &lt;td&gt;Column content&lt;/td&gt;
          &lt;/tr&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="Soak Test - Ultimate Thread Group" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-222106665">
            <stringProp name="49586">200</stringProp>
            <stringProp name="49">1</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="53377398">86400</stringProp>
            <stringProp name="1515111">1800</stringProp>
          </collectionProp>
          <collectionProp name="-477671088">
            <stringProp name="51508">400</stringProp>
            <stringProp name="1688091">7200</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="1572771">3600</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
          <collectionProp name="1880039895">
            <stringProp name="53430">600</stringProp>
            <stringProp name="51379479">61200</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
          <collectionProp name="1001216411">
            <stringProp name="50547">300</stringProp>
            <stringProp name="53262078">82800</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="1509345">1200</stringProp>
            <stringProp name="51663">450</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${domain}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">${domain}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">${think-time-constant}</stringProp>
          <stringProp name="RandomTimer.range">${think-time-deviation}</stringProp>
        </GaussianRandomTimer>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>40.0</value>
            <savedValue>40.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1 snippet and 1 service" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/content/simple-1snippet-1service.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="1 snippet 1 service - assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="383012399">      &lt;div class=&quot;col-md-6&quot;&gt;
        &lt;h2&gt;This is the list of 7 highest mountains of each of the seven continents - Messner version&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Everest - Asia&lt;/li&gt;
          &lt;li&gt;Aconcagua - South America&lt;/li&gt;
          &lt;li&gt;Denali - North America&lt;/li&gt;
          &lt;li&gt;Kilimanjaro - Africa&lt;/li&gt;
          &lt;li&gt;Elbrus - Europe&lt;/li&gt;
          &lt;li&gt;Puncak Jaya - Australasia (continent)&lt;/li&gt;
          &lt;li&gt;Vinson - Antarctica&lt;/li&gt;
        &lt;/ol&gt;
          &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
          &lt;div class=&quot;col-md-6&quot;&gt;
            &lt;h2&gt;This is the list of 7 highest mountains of each of the seven continents - Bass version&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Everest - Asia&lt;/li&gt;
          &lt;li&gt;Aconcagua - South America&lt;/li&gt;
          &lt;li&gt;Denali - North America&lt;/li&gt;
          &lt;li&gt;Kilimanjaro - Africa&lt;/li&gt;
          &lt;li&gt;Elbrus - Europe&lt;/li&gt;
          &lt;li&gt;Kosciuszko - Australia&lt;/li&gt;
          &lt;li&gt;Vinson - Antarctica&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>25.0</value>
            <savedValue>25.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1 Snippet 5 Services" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/content/simple-1snippet-5services.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="1 Snippet 5 Services assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1251114765">      &lt;div class=&quot;col-md-6&quot;&gt;
        &lt;h2&gt;This is the list of 7 highest mountains of each of the seven continents - Messner version&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Everest - Asia&lt;/li&gt;
          &lt;li&gt;Aconcagua - South America&lt;/li&gt;
          &lt;li&gt;Denali - North America&lt;/li&gt;
          &lt;li&gt;Kilimanjaro - Africa&lt;/li&gt;
          &lt;li&gt;Elbrus - Europe&lt;/li&gt;
          &lt;li&gt;Puncak Jaya - Australasia (continent)&lt;/li&gt;
          &lt;li&gt;Vinson - Antarctica&lt;/li&gt;
        &lt;/ol&gt;
        &lt;h2&gt;Continents&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Asia&lt;/li&gt;
          &lt;li&gt;South America&lt;/li&gt;
          &lt;li&gt;Africa&lt;/li&gt;
          &lt;li&gt;Europe&lt;/li&gt;
          &lt;li&gt;Australasia (continetn)&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
          &lt;li&gt;Antarctica&lt;/li&gt;
        &lt;/ol&gt;
        &lt;h2&gt;Countries&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Nepal&lt;/li&gt;
          &lt;li&gt;China&lt;/li&gt;
          &lt;li&gt;United States&lt;/li&gt;
          &lt;li&gt;Argentina&lt;/li&gt;
          &lt;li&gt;Tanzania&lt;/li&gt;
          &lt;li&gt;Russia&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
        &lt;/ol&gt;
        &lt;h2&gt;Names&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Edmund Hillary&lt;/li&gt;
          &lt;li&gt;Tenzing Norgay&lt;/li&gt;
          &lt;li&gt;Reinhold Messner&lt;/li&gt;
          &lt;li&gt;Jerzy Kukuczka&lt;/li&gt;
          &lt;li&gt;George Mallory&lt;/li&gt;
          &lt;li&gt;Joe Simpson&lt;/li&gt;
          &lt;li&gt;Lino Lacedelli&lt;/li&gt;
        &lt;/ol&gt;
        &lt;h2&gt;Dates&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;17 July 1990, Pamir Mountains&lt;/li&gt;
          &lt;li&gt;3 July 1953, Nanga Parbat&lt;/li&gt;
          &lt;li&gt;11 May 1953, Mount Everest&lt;/li&gt;
          &lt;li&gt;31 July 1954, K2&lt;/li&gt;
          &lt;li&gt;24 August 2008, Mont Blanc&lt;/li&gt;
          &lt;li&gt;July 1936, Eiger&lt;/li&gt;
          &lt;li&gt;11 July 1955, Mount Temple&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>25.0</value>
            <savedValue>25.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5 snippets and 1 service for each snippet" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/content/simple-5snippets.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="5 snippets and 1 service for each snippet Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="399484102">      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;This is the list of 7 highest mountains of each of the seven continents - Messner version&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Everest - Asia&lt;/li&gt;
          &lt;li&gt;Aconcagua - South America&lt;/li&gt;
          &lt;li&gt;Denali - North America&lt;/li&gt;
          &lt;li&gt;Kilimanjaro - Africa&lt;/li&gt;
          &lt;li&gt;Elbrus - Europe&lt;/li&gt;
          &lt;li&gt;Puncak Jaya - Australasia (continent)&lt;/li&gt;
          &lt;li&gt;Vinson - Antarctica&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Continents&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Asia&lt;/li&gt;
          &lt;li&gt;South America&lt;/li&gt;
          &lt;li&gt;Africa&lt;/li&gt;
          &lt;li&gt;Europe&lt;/li&gt;
          &lt;li&gt;Australasia (continetn)&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
          &lt;li&gt;Antarctica&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Countries&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Nepal&lt;/li&gt;
          &lt;li&gt;China&lt;/li&gt;
          &lt;li&gt;United States&lt;/li&gt;
          &lt;li&gt;Argentina&lt;/li&gt;
          &lt;li&gt;Tanzania&lt;/li&gt;
          &lt;li&gt;Russia&lt;/li&gt;
          &lt;li&gt;Australia&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Names&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;Edmund Hillary&lt;/li&gt;
          &lt;li&gt;Tenzing Norgay&lt;/li&gt;
          &lt;li&gt;Reinhold Messner&lt;/li&gt;
          &lt;li&gt;Jerzy Kukuczka&lt;/li&gt;
          &lt;li&gt;George Mallory&lt;/li&gt;
          &lt;li&gt;Joe Simpson&lt;/li&gt;
          &lt;li&gt;Lino Lacedelli&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;

    
    
      &lt;div class=&quot;col-md-12&quot;&gt;
        &lt;h2&gt;Dates&lt;/h2&gt;
        &lt;ol&gt;
          &lt;li&gt;17 July 1990, Pamir Mountains&lt;/li&gt;
          &lt;li&gt;3 July 1953, Nanga Parbat&lt;/li&gt;
          &lt;li&gt;11 May 1953, Mount Everest&lt;/li&gt;
          &lt;li&gt;31 July 1954, K2&lt;/li&gt;
          &lt;li&gt;24 August 2008, Mont Blanc&lt;/li&gt;
          &lt;li&gt;July 1936, Eiger&lt;/li&gt;
          &lt;li&gt;11 July 1955, Mount Temple&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/div&gt;</stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>5.0</value>
            <savedValue>5.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1-big-snippet-1-service-wtih-big-json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/content/1-big-snippet-1-service-wtih-big-json.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big-snippet assertion end" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-737650375">                        Proin molestie lorem non mauris efficitur, nec lobortis turpis finibus. Phasellus
                        pharetra vestibulum nunc eu rhoncus. Vivamus imperdiet, nunc id laoreet faucibus, urna
                        quam commodo mi, non vehicula lacus quam non dui. Fusce ac diam a purus hendrerit
                        porta a ac odio. Suspendisse fringilla, metus ac tempus suscipit, neque lacus
                        tincidunt erat, nec lacinia eros dui eget nulla. Maecenas consectetur tellus felis,
                        sed luctus erat viverra at. Proin euismod rutrum bibendum. Aenean sagittis diam augue,
                        sit amet faucibus ex aliquam quis. Fusce semper lobortis lectus, ac vehicula justo
                        sagittis et. In hac habitasse platea dictumst. Proin odio quam, dictum in lacus sit
                        amet, commodo pellentesque ipsum. Nullam finibus ante ac ipsum condimentum, sed
                        pellentesque augue consectetur. Sed enim neque, egestas vitae pretium malesuada,
                        varius ac diam.
          &lt;/p&gt;
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/div&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big-snippet assertion beginning" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1539070931">      &lt;div class=&quot;col-md-6&quot;&gt;
        &lt;h2&gt;Names:&lt;/h2&gt;
        &lt;ul class=&quot;people_list&quot;&gt;
          
          &lt;li&gt;Chalmers Vernon&lt;/li&gt;
          
          &lt;li&gt;Marlee Drinnan&lt;/li&gt;
          
          &lt;li&gt;Nannette Hinchon&lt;/li&gt;
          
          &lt;li&gt;Curran Stanley&lt;/li&gt;
          
          &lt;li&gt;Alexine Scartifield&lt;/li&gt;
          
          &lt;li&gt;Reinaldo Berrane&lt;/li&gt;
          
          &lt;li&gt;Bear Brilleman&lt;/li&gt;
          
          &lt;li&gt;Missy de la Valette Parisot&lt;/li&gt;
          
          &lt;li&gt;Adele Scrowby&lt;/li&gt;
          
          &lt;li&gt;Mathian Fenlon&lt;/li&gt;
          
          &lt;li&gt;Gabie Crome&lt;/li&gt;
          
          &lt;li&gt;Tildy Fleischer&lt;/li&gt;
          
          &lt;li&gt;Holli Beausang&lt;/li&gt;
          
          &lt;li&gt;Lauri Biscomb&lt;/li&gt;
          
          &lt;li&gt;Deloris Farington&lt;/li&gt;
          
          &lt;li&gt;Jourdain Paxman&lt;/li&gt;
          
          &lt;li&gt;Dru Ghilks&lt;/li&gt;
          
          &lt;li&gt;Welbie Whacket&lt;/li&gt;
          
          &lt;li&gt;Cherlyn Hubatsch&lt;/li&gt;
          
          &lt;li&gt;Casi Kerrane&lt;/li&gt;
          
          &lt;li&gt;Clarie McGlone&lt;/li&gt;
          
          &lt;li&gt;Siana Rylance&lt;/li&gt;
          
          &lt;li&gt;Ola Corsham&lt;/li&gt;
          
          &lt;li&gt;Rickey Giaomozzo&lt;/li&gt;
          
          &lt;li&gt;Giordano Grigaut&lt;/li&gt;
          
          &lt;li&gt;Alric Munday&lt;/li&gt;
          
          &lt;li&gt;Ruggiero Saket&lt;/li&gt;
          
          &lt;li&gt;Orel Geare&lt;/li&gt;
          
          &lt;li&gt;Ronald Mallia&lt;/li&gt;
          
          &lt;li&gt;Lanie Stebbin&lt;/li&gt;
          
          &lt;li&gt;Maude Vader&lt;/li&gt;
          
          &lt;li&gt;Michal Copozio&lt;/li&gt;
          
          &lt;li&gt;Carrie Dominelli&lt;/li&gt;
          
          &lt;li&gt;Domingo Raatz&lt;/li&gt;
          
          &lt;li&gt;Daryl Probert&lt;/li&gt;
          
          &lt;li&gt;Lavina Pickthorne&lt;/li&gt;
          
          &lt;li&gt;Shannan Jaffray&lt;/li&gt;
          
          &lt;li&gt;Vail Dalgarno&lt;/li&gt;
          
          &lt;li&gt;Britta Gowrie&lt;/li&gt;
          
          &lt;li&gt;Crichton Bramstom&lt;/li&gt;
          
          &lt;li&gt;Hanan Grier&lt;/li&gt;
          
          &lt;li&gt;Mickie Alishoner&lt;/li&gt;
          
          &lt;li&gt;Stacy Hasson&lt;/li&gt;
          
          &lt;li&gt;Koralle Gerbl&lt;/li&gt;
          
          &lt;li&gt;Adda Cosyns&lt;/li&gt;
          
          &lt;li&gt;Lura Hartop&lt;/li&gt;
          
          &lt;li&gt;Ashley Gilardoni&lt;/li&gt;
          
          &lt;li&gt;Der Leggate&lt;/li&gt;
          
          &lt;li&gt;Sigismundo Caruth&lt;/li&gt;
          
          &lt;li&gt;Shurwood Bellhouse&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/div&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>5.0</value>
            <savedValue>5.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="big data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/content/simple-big-data.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big data Assertion 1" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-444423202">      &lt;div class=&quot;col-md-4&quot;&gt;
        &lt;h2&gt;Snippet1 - this is webservice no. 1&lt;/h2&gt;
        &lt;div&gt;Snippet1 - message - a&lt;/div&gt;
        &lt;div&gt;&lt;/div&gt;
      &lt;/div&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big data Assertion 2" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2005145260">              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas auctor magna turpis,
              a condimentum leo sollicitudin et. Etiam venenatis turpis mauris, et sodales lorem
              consectetur non. Duis et augue a ipsum pulvinar sollicitudin. Sed aliquam elementum
              ligula, ut viverra mi mattis quis. Ut in commodo tortor. Nunc ac massa vel quam
              iaculis lacinia sed vitae enim. Sed ornare malesuada egestas. Curabitur quis turpis ac
              eros iaculis varius sit amet nec eros. Suspendisse eget nisl velit. Aliquam eu justo
              vulputate risus malesuada semper eu sit amet nunc. Morbi tellus leo, gravida quis
              velit sit amet, finibus tincidunt diam. Etiam lorem felis, mollis sit amet velit id,
              scelerisque ultricies tellus. Nunc semper porttitor posuere. Integer leo risus, porta
              sit amet felis et, aliquet lobortis libero. Donec orci turpis, accumsan dapibus turpis
              at, venenatis consectetur felis.</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="big data Assertion 3" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-543316774">          &lt;tr class=&quot;active&quot;&gt;
            &lt;td&gt;7&lt;/td&gt;
            &lt;td&gt;Column content&lt;/td&gt;
            &lt;td&gt;Column content&lt;/td&gt;
            &lt;td&gt;Column content&lt;/td&gt;
          &lt;/tr&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseCodesPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Codes per Second" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.HitsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Hits per Second" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">true</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CompositeResultCollector guiclass="kg.apc.jmeter.vizualizers.CompositeGraphGui" testclass="kg.apc.jmeter.vizualizers.CompositeResultCollector" testname="jp@gc - Composite Graph" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
        <collectionProp name="COMPOSITE_CFG">
          <collectionProp name="">
            <stringProp name="-243013315">jp@gc - Response Times Over Time</stringProp>
            <stringProp name="-243013315">jp@gc - Response Times Over Time</stringProp>
            <stringProp name="-243013315">jp@gc - Response Times Over Time</stringProp>
            <stringProp name="-243013315">jp@gc - Response Times Over Time</stringProp>
            <stringProp name="-243013315">jp@gc - Response Times Over Time</stringProp>
          </collectionProp>
          <collectionProp name="">
            <stringProp name="-1965355293">/content/remote/simple.html</stringProp>
            <stringProp name="-1549391110">Overall Response Times</stringProp>
            <stringProp name="879751262">/content/local/simple.html</stringProp>
            <stringProp name="794038494">/content/local/multiple-forms.html</stringProp>
            <stringProp name="-145827229">/content/remote/multiple-forms.html</stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.vizualizers.CompositeResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">testresults/knotx_${__time(YMDHMS)}.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer xml" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>false</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">testresults/knotx_${__time(YMDHMS)}.xml</stringProp>
      </ResultCollector>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="graphiteMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">graphiteMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.graphite.TextGraphiteMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="graphiteHost" elementType="Argument">
              <stringProp name="Argument.name">graphiteHost</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="graphitePort" elementType="Argument">
              <stringProp name="Argument.name">graphitePort</stringProp>
              <stringProp name="Argument.value">2003</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="rootMetricsPrefix" elementType="Argument">
              <stringProp name="Argument.name">rootMetricsPrefix</stringProp>
              <stringProp name="Argument.value">jmeter.knotx.</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersList" elementType="Argument">
              <stringProp name="Argument.name">samplersList</stringProp>
              <stringProp name="Argument.value">.*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="useRegexpForSamplersList" elementType="Argument">
              <stringProp name="Argument.name">useRegexpForSamplersList</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.graphite.GraphiteBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
