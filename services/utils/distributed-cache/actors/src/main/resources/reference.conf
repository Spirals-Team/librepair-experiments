akka.cluster.distributed-data-distributed-cache {
  gossip-interval = 2s # default: 2s
  notify-subscribers-interval = 500ms # default: 500ms
  max-delta-elements = 1000
  use-dispatcher = "distributed-cache-dispatcher"
  pruning-interval = 120 s
  max-pruning-dissemination = 300 s
  pruning-marker-time-to-live = 6 h
  serializer-cache-time-to-live = 10s
  delta-crdt {
    enabled = on
    max-delta-size = 200
  }
  durable {
    keys = []
    pruning-marker-time-to-live = 10 d
    store-actor-class = akka.cluster.ddata.LmdbDurableStore
    use-dispatcher = akka.cluster.distributed-data.durable.pinned-store
    pinned-store {
      executor = thread-pool-executor
      type = PinnedDispatcher
    }
    lmdb {
      dir = "ddata"
      map-size = 100 MiB
      write-behind-interval = off
    }
  }
}

distributed-cache-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 4
    parallelism-factor = 2.0
    parallelism-max = 32
    parallelism-max = ${?DEFAULT_DISPATCHER_PARALLELISM_MAX}
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 5
}
