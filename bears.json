{
  "repository": {
    "name": "voyages-sncf-technologies/hesperides",
    "githubId": 71227768,
    "url": "https://github.com/voyages-sncf-technologies/hesperides",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 402093336,
      "url": "http://travis-ci.org/voyages-sncf-technologies/hesperides/builds/402093336",
      "date": "Jul 10, 2018 9:52:38 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Jul 10, 2018 9:52:48 AM",
    "reproductionDateEnd": "Jul 10, 2018 10:08:46 AM",
    "totalDuration": 951,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 9,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          9
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 250,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          250
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 629,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          629
        ]
      },
      "fixing": {
        "nbSteps": 3,
        "totalDuration": 20,
        "stepNames": [
          "Nopol",
          "NPEFix",
          "AstorJMut"
        ],
        "stepDurations": [
          20,
          0,
          0
        ]
      }
    }
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "commits": {
    "buggyBuild": {
      "repoName": "voyages-sncf-technologies/hesperides",
      "branchName": "feature/batch",
      "sha": "f38a43102c1f4969bed1129ed7f5008fb29e8525",
      "url": "http://github.com/voyages-sncf-technologies/hesperides/commit/f38a43102c1f4969bed1129ed7f5008fb29e8525",
      "date": "Jul 10, 2018 9:02:12 AM"
    }
  },
  "projectMetrics": {
    "numberSourceFiles": 148,
    "numberTestFiles": 61,
    "numberLibraries": 133
  },
  "tests": {
    "failingModule": "/root/workspace/voyages-sncf-technologies/hesperides/402093336/tests/bdd",
    "overallMetrics": {
      "numberRunning": 334,
      "numberPassing": 326,
      "numberFailing": 8,
      "numberErroring": 0,
      "numberSkipping": 0,
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "isError": false,
          "occurrences": 4
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 4
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "Scenario: get a model from a techno with a template that has ambiguous properties",
        "numberRunning": 6,
        "numberPassing": 4,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "Scenario: get a model from a module with a template that has ambiguous properties",
        "numberRunning": 6,
        "numberPassing": 4,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "Scenario: get a model from a techno with templates that have ambiguous properties",
        "numberRunning": 6,
        "numberPassing": 4,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "Scenario: get a model from a module with templates that have ambiguous properties",
        "numberRunning": 6,
        "numberPassing": 4,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "Scenario: get a model from a techno with a template that has ambiguous properties",
        "testMethod": "Scenario: get a model from a techno with a template that has ambiguous properties",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c[filename of template-a]\u003e but was:\u003c[ ]\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a module with a template that has ambiguous properties",
        "testMethod": "Then the model of this module contains all the properties with the same name from this template",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c[filename of template-a]\u003e but was:\u003c[ ]\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a techno with templates that have ambiguous properties",
        "testMethod": "Scenario: get a model from a techno with templates that have ambiguous properties",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003ctrue\u003e but was:\u003cfalse\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a module with templates that have ambiguous properties",
        "testMethod": "Scenario: get a model from a module with templates that have ambiguous properties",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003ctrue\u003e but was:\u003cfalse\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a techno with templates that have ambiguous properties",
        "testMethod": "Then the model of this techno contains all the properties with the same name from these templates",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003ctrue\u003e but was:\u003cfalse\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a module with a template that has ambiguous properties",
        "testMethod": "Scenario: get a model from a module with a template that has ambiguous properties",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c[filename of template-a]\u003e but was:\u003c[ ]\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a module with templates that have ambiguous properties",
        "testMethod": "Then the model of this module contains all the properties with the same name from these templates",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003ctrue\u003e but was:\u003cfalse\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a techno with a template that has ambiguous properties",
        "testMethod": "Then the model of this techno contains all the properties with the same name from this template",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c[filename of template-a]\u003e but was:\u003c[ ]\u003e",
        "isError": false
      }
    ]
  },
  "type": "only_fail"
}