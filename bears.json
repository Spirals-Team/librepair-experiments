{
  "repository": {
    "name": "ngs-doo/dsl-json",
    "githubId": 45384078,
    "url": "https://github.com/ngs-doo/dsl-json",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 409244307,
      "url": "http://travis-ci.org/ngs-doo/dsl-json/builds/409244307",
      "date": "Jul 28, 2018 6:13:32 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Jul 28, 2018 6:13:38 AM",
    "reproductionDateEnd": "Jul 28, 2018 6:28:13 AM",
    "totalDuration": 872,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 5,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          5
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 54,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          54
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 40,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          40
        ]
      }
    },
    "projectRootPomPath": "./workspace/ngs-doo/dsl-json/409244307/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "commits": {
    "buggyBuild": {
      "repoName": "ngs-doo/dsl-json",
      "branchName": "json-object",
      "sha": "9564e7dbfd2c4e65add14d1cdfd5e8335314e376",
      "url": "http://github.com/ngs-doo/dsl-json/commit/9564e7dbfd2c4e65add14d1cdfd5e8335314e376",
      "date": "Jul 28, 2018 6:04:01 AM"
    }
  },
  "projectMetrics": {
    "numberModules": 7,
    "numberSourceFiles": 131,
    "numberTestFiles": 507,
    "numberLibrariesFailingModule": 10
  },
  "tests": {
    "failingModule": "/root/workspace/ngs-doo/dsl-json/409244307/processor",
    "overallMetrics": {
      "numberRunning": 1830,
      "numberPassing": 1791,
      "numberFailing": 39,
      "numberErroring": 0,
      "numberSkipping": 0,
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 39
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "numberRunning": 59,
        "numberPassing": 20,
        "numberFailing": 39,
        "numberErroring": 0,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "mandatoryProperties",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "testNestedStaticClass",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "canIgnoreUnsupportedProperty",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "deserializationNameWorksWithoutInterface",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "validJsonObjectReference",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c1\u003e but was:\u003c3\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "supportsInterfacesWithConfiguration",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "allowedDuplicatesInDifferentProperties",
        "failureName": "java.lang.AssertionError",
        "detail": "Mono is required to run DSL compiler. Mono not detected or specified.",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "fieldsAreRecognized",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "validPropertyConverter",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "testReferenceListPropertyType",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "checkInheritance",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "onUnknownDefault",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "deserializeAsCheck",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "testEnum",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "coverAllTypes",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "supportsAbstractClasses",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "checkIgnore",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "validCustomArrayConverter",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "testEnumWithCtor",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "testValidPropertyType",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "allowedDuplicatesOnSameProperty",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "simpleEnums",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "selfDeserializeAs",
        "failureName": "java.lang.AssertionError",
        "detail": "Mono is required to run DSL compiler. Mono not detected or specified.",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "testEmptyValidClass",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "noOuputByDefault",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c0\u003e but was:\u003c2\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "testReferencePropertyType",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "supportsAbstractClassesWithConfiguration",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "validPrimitivePropertyConverter",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "correctCasing",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "checkNonJavaImplicitReference",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "checkAlias",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "checkMinifiedNames",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "supportsInterfaces",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "willReadJsonAttributeOfClass",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "hashMatchAnnotation",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "checkNonNull",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "validClassConverter",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "failUnknownCheck",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      },
      {
        "testClass": "com.dslplatform.json.DslValidationTest",
        "testMethod": "checkImplicitReference",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cNOTE\u003e but was:\u003cERROR\u003e",
        "isError": false
      }
    ]
  },
  "type": "only_fail"
}