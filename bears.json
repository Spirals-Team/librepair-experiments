{
  "repository": {
    "name": "BentoBoxWorld/bentobox",
    "githubId": 91916253,
    "url": "https://github.com/BentoBoxWorld/bentobox",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 410911396,
      "url": "http://travis-ci.org/BentoBoxWorld/bentobox/builds/410911396",
      "date": "Aug 1, 2018 7:17:00 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Aug 1, 2018 7:17:26 PM",
    "reproductionDateEnd": "Aug 1, 2018 7:25:11 PM",
    "totalDuration": 460,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 14,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          14
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 74,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          74
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 170,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          170
        ]
      }
    },
    "projectRootPomPath": "./workspace/BentoBoxWorld/bentobox/410911396/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "commits": {
    "buggyBuild": {
      "repoName": "BentoBoxWorld/bentobox",
      "branchName": "develop",
      "sha": "df5d63acf0b7ecea5519a97c07f1c55043bfe460",
      "url": "http://github.com/BentoBoxWorld/bentobox/commit/df5d63acf0b7ecea5519a97c07f1c55043bfe460",
      "date": "Aug 1, 2018 7:12:43 PM"
    }
  },
  "tests": {
    "failingModule": "/root/workspace/BentoBoxWorld/bentobox/410911396",
    "overallMetrics": {
      "numberRunning": 551,
      "numberPassing": 542,
      "numberFailing": 0,
      "numberErroring": 9,
      "numberSkipping": 0,
      "failures": [
        {
          "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
          "isError": true,
          "occurrences": 9
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "world.bentobox.bentobox.listeners.flags.EndermanListenerTest",
        "numberRunning": 9,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 9,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "world.bentobox.bentobox.listeners.flags.EndermanListenerTest",
        "testMethod": "testNotEnderman",
        "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
        "detail": " Unfinished stubbing detected here: -\u003e at world.bentobox.bentobox.listeners.flags.EndermanListenerTest.setUp(EndermanListenerTest.java:114)  E.g. thenReturn() may be missing. Examples of correct stubbing:     when(mock.isOk()).thenReturn(true);     when(mock.isOk()).thenThrow(exception);     doThrow(exception).when(mock).someVoidMethod(); Hints:  1. missing thenReturn()  2. you are trying to stub a final method, you naughty developer!  3: you are stubbing the behaviour of another mock inside before \u0027thenReturn\u0027 instruction if completed ",
        "isError": true
      },
      {
        "testClass": "world.bentobox.bentobox.listeners.flags.EndermanListenerTest",
        "testMethod": "testOnEndermanDeathCarryAir",
        "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
        "detail": " Unfinished stubbing detected here: -\u003e at world.bentobox.bentobox.listeners.flags.EndermanListenerTest.setUp(EndermanListenerTest.java:114)  E.g. thenReturn() may be missing. Examples of correct stubbing:     when(mock.isOk()).thenReturn(true);     when(mock.isOk()).thenThrow(exception);     doThrow(exception).when(mock).someVoidMethod(); Hints:  1. missing thenReturn()  2. you are trying to stub a final method, you naughty developer!  3: you are stubbing the behaviour of another mock inside before \u0027thenReturn\u0027 instruction if completed ",
        "isError": true
      },
      {
        "testClass": "world.bentobox.bentobox.listeners.flags.EndermanListenerTest",
        "testMethod": "testOnEndermanGriefAllowed",
        "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
        "detail": " Unfinished stubbing detected here: -\u003e at world.bentobox.bentobox.listeners.flags.EndermanListenerTest.setUp(EndermanListenerTest.java:114)  E.g. thenReturn() may be missing. Examples of correct stubbing:     when(mock.isOk()).thenReturn(true);     when(mock.isOk()).thenThrow(exception);     doThrow(exception).when(mock).someVoidMethod(); Hints:  1. missing thenReturn()  2. you are trying to stub a final method, you naughty developer!  3: you are stubbing the behaviour of another mock inside before \u0027thenReturn\u0027 instruction if completed ",
        "isError": true
      },
      {
        "testClass": "world.bentobox.bentobox.listeners.flags.EndermanListenerTest",
        "testMethod": "testOnNotEndermanDeath",
        "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
        "detail": " Unfinished stubbing detected here: -\u003e at world.bentobox.bentobox.listeners.flags.EndermanListenerTest.setUp(EndermanListenerTest.java:114)  E.g. thenReturn() may be missing. Examples of correct stubbing:     when(mock.isOk()).thenReturn(true);     when(mock.isOk()).thenThrow(exception);     doThrow(exception).when(mock).someVoidMethod(); Hints:  1. missing thenReturn()  2. you are trying to stub a final method, you naughty developer!  3: you are stubbing the behaviour of another mock inside before \u0027thenReturn\u0027 instruction if completed ",
        "isError": true
      },
      {
        "testClass": "world.bentobox.bentobox.listeners.flags.EndermanListenerTest",
        "testMethod": "testOnEndermanDeathNotInWorld",
        "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
        "detail": " Unfinished stubbing detected here: -\u003e at world.bentobox.bentobox.listeners.flags.EndermanListenerTest.setUp(EndermanListenerTest.java:114)  E.g. thenReturn() may be missing. Examples of correct stubbing:     when(mock.isOk()).thenReturn(true);     when(mock.isOk()).thenThrow(exception);     doThrow(exception).when(mock).someVoidMethod(); Hints:  1. missing thenReturn()  2. you are trying to stub a final method, you naughty developer!  3: you are stubbing the behaviour of another mock inside before \u0027thenReturn\u0027 instruction if completed ",
        "isError": true
      },
      {
        "testClass": "world.bentobox.bentobox.listeners.flags.EndermanListenerTest",
        "testMethod": "testOnEndermanGriefWrongWorld",
        "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
        "detail": " Unfinished stubbing detected here: -\u003e at world.bentobox.bentobox.listeners.flags.EndermanListenerTest.setUp(EndermanListenerTest.java:114)  E.g. thenReturn() may be missing. Examples of correct stubbing:     when(mock.isOk()).thenReturn(true);     when(mock.isOk()).thenThrow(exception);     doThrow(exception).when(mock).someVoidMethod(); Hints:  1. missing thenReturn()  2. you are trying to stub a final method, you naughty developer!  3: you are stubbing the behaviour of another mock inside before \u0027thenReturn\u0027 instruction if completed ",
        "isError": true
      },
      {
        "testClass": "world.bentobox.bentobox.listeners.flags.EndermanListenerTest",
        "testMethod": "testOnEndermanGrief",
        "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
        "detail": " Unfinished stubbing detected here: -\u003e at world.bentobox.bentobox.listeners.flags.EndermanListenerTest.setUp(EndermanListenerTest.java:114)  E.g. thenReturn() may be missing. Examples of correct stubbing:     when(mock.isOk()).thenReturn(true);     when(mock.isOk()).thenThrow(exception);     doThrow(exception).when(mock).someVoidMethod(); Hints:  1. missing thenReturn()  2. you are trying to stub a final method, you naughty developer!  3: you are stubbing the behaviour of another mock inside before \u0027thenReturn\u0027 instruction if completed ",
        "isError": true
      },
      {
        "testClass": "world.bentobox.bentobox.listeners.flags.EndermanListenerTest",
        "testMethod": "testOnEndermanDeath",
        "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
        "detail": " Unfinished stubbing detected here: -\u003e at world.bentobox.bentobox.listeners.flags.EndermanListenerTest.setUp(EndermanListenerTest.java:114)  E.g. thenReturn() may be missing. Examples of correct stubbing:     when(mock.isOk()).thenReturn(true);     when(mock.isOk()).thenThrow(exception);     doThrow(exception).when(mock).someVoidMethod(); Hints:  1. missing thenReturn()  2. you are trying to stub a final method, you naughty developer!  3: you are stubbing the behaviour of another mock inside before \u0027thenReturn\u0027 instruction if completed ",
        "isError": true
      },
      {
        "testClass": "world.bentobox.bentobox.listeners.flags.EndermanListenerTest",
        "testMethod": "testOnEndermanDeathNoFlag",
        "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
        "detail": " Unfinished stubbing detected here: -\u003e at world.bentobox.bentobox.listeners.flags.EndermanListenerTest.setUp(EndermanListenerTest.java:114)  E.g. thenReturn() may be missing. Examples of correct stubbing:     when(mock.isOk()).thenReturn(true);     when(mock.isOk()).thenThrow(exception);     doThrow(exception).when(mock).someVoidMethod(); Hints:  1. missing thenReturn()  2. you are trying to stub a final method, you naughty developer!  3: you are stubbing the behaviour of another mock inside before \u0027thenReturn\u0027 instruction if completed ",
        "isError": true
      }
    ]
  },
  "projectMetrics": {
    "numberModules": 1,
    "numberSourceFiles": 192,
    "numberTestFiles": 65,
    "numberLibrariesFailingModule": 23
  },
  "type": "only_fail"
}