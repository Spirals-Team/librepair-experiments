{
  "repository": {
    "name": "kgyrtkirk/calcite",
    "githubId": 128071558,
    "url": "https://github.com/kgyrtkirk/calcite",
    "isFork": true,
    "original": {
      "name": "apache/calcite",
      "githubId": 21193524,
      "url": "https://github.com/apache/calcite"
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 406129542,
      "url": "http://travis-ci.org/kgyrtkirk/calcite/builds/406129542",
      "date": "Jul 20, 2018 9:44:28 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Jul 20, 2018 9:44:42 AM",
    "reproductionDateEnd": "Jul 20, 2018 10:38:24 AM",
    "totalDuration": 3216,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 74,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          74
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 304,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          1,
          303
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 1269,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          1269
        ]
      }
    },
    "projectRootPomPath": "./workspace/kgyrtkirk/calcite/406129542/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "commits": {
    "buggyBuild": {
      "repoName": "kgyrtkirk/calcite",
      "branchName": "2421-simpllist",
      "sha": "eea98d4484531198d43f40f498e276e2688dc730",
      "url": "http://github.com/kgyrtkirk/calcite/commit/eea98d4484531198d43f40f498e276e2688dc730",
      "date": "Jul 20, 2018 9:23:58 AM"
    }
  },
  "projectMetrics": {
    "numberModules": 19,
    "numberSourceFiles": 1504,
    "numberTestFiles": 204,
    "numberLibrariesFailingModule": 46
  },
  "tests": {
    "failingModule": "/root/workspace/kgyrtkirk/calcite/406129542/core",
    "overallMetrics": {
      "numberRunning": 4625,
      "numberPassing": 4623,
      "numberFailing": 2,
      "numberErroring": 0,
      "numberSkipping": 110,
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 2
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "org.apache.calcite.test.CalciteSqlOperatorTest",
        "numberRunning": 223,
        "numberPassing": 222,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 1
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "numberRunning": 16,
        "numberPassing": 15,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "org.apache.calcite.test.CalciteSqlOperatorTest",
        "testMethod": "testOrOperatorLazy",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c[true]\u003e but was:\u003c[null]\u003e",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[5: quidem(sql/sub-query.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/kgyrtkirk/calcite/406129542/core/target/surefire/sql/sub-query.iq /root/workspace/kgyrtkirk/calcite/406129542/core/target/test-classes/sql/sub-query.iq\n626c626\n\u003c   EnumerableCalc(expr#0..7\u003d[{inputs}], expr#8\u003d[\u003d($t7, $t7)], expr#9\u003d[\u0027SMITH\u0027], expr#10\u003d[\u003d($t1, $t9)], expr#11\u003d[AND($t8, $t10)], proj#0..7\u003d[{exprs}], $condition\u003d[$t11])\n---\n\u003e   EnumerableCalc(expr#0..7\u003d[{inputs}], expr#8\u003d[\u0027SMITH\u0027], expr#9\u003d[\u003d($t1, $t8)], expr#10\u003d[IS NOT NULL($t7)], expr#11\u003d[AND($t9, $t10)], proj#0..7\u003d[{exprs}], $condition\u003d[$t11])\n773,786c773,786\n\u003c  1100.00 | null\n\u003c  1250.00 | null\n\u003c  1250.00 | null\n\u003c  1300.00 | null\n\u003c  1500.00 | null\n\u003c  1600.00 | null\n\u003c  2450.00 | null\n\u003c  2850.00 | null\n\u003c  2975.00 | null\n\u003c  3000.00 | null\n\u003c  3000.00 | null\n\u003c  5000.00 | null\n\u003c   800.00 | null\n\u003c   950.00 | null\n---\n\u003e  1100.00 | false\n\u003e  1250.00 | false\n\u003e  1250.00 | false\n\u003e  1300.00 | false\n\u003e  1500.00 | false\n\u003e  1600.00 | false\n\u003e  2450.00 | false\n\u003e  2850.00 | false\n\u003e  2975.00 | false\n\u003e  3000.00 | false\n\u003e  3000.00 | false\n\u003e  5000.00 | false\n\u003e   800.00 | false\n\u003e   950.00 | false\n794,798c794,795\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[false], expr#4\u003d[null], expr#5\u003d[\u003d($t4, $t4)], expr#6\u003d[IS NULL($t4)], expr#7\u003d[OR($t5, $t6)], cs\u003d[$t3], $condition\u003d[$t7])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n809,822c806,819\n\u003c  1100.00 | null\n\u003c  1250.00 | null\n\u003c  1250.00 | null\n\u003c  1300.00 | null\n\u003c  1500.00 | null\n\u003c  1600.00 | null\n\u003c  2450.00 | null\n\u003c  2850.00 | null\n\u003c  2975.00 | null\n\u003c  3000.00 | null\n\u003c  3000.00 | null\n\u003c  5000.00 | null\n\u003c   800.00 | null\n\u003c   950.00 | null\n---\n\u003e  1100.00 | false\n\u003e  1250.00 | false\n\u003e  1250.00 | false\n\u003e  1300.00 | false\n\u003e  1500.00 | false\n\u003e  1600.00 | false\n\u003e  2450.00 | false\n\u003e  2850.00 | false\n\u003e  2975.00 | false\n\u003e  3000.00 | false\n\u003e  3000.00 | false\n\u003e  5000.00 | false\n\u003e   800.00 | false\n\u003e   950.00 | false\n830,834c827,828\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[false], expr#4\u003d[123], expr#5\u003d[null], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n845,858c839,852\n\u003c  1100.00 | null\n\u003c  1250.00 | null\n\u003c  1250.00 | null\n\u003c  1300.00 | null\n\u003c  1500.00 | null\n\u003c  1600.00 | null\n\u003c  2450.00 | null\n\u003c  2850.00 | null\n\u003c  2975.00 | null\n\u003c  3000.00 | null\n\u003c  3000.00 | null\n\u003c  5000.00 | null\n\u003c   800.00 | null\n\u003c   950.00 | null\n---\n\u003e  1100.00 | false\n\u003e  1250.00 | false\n\u003e  1250.00 | false\n\u003e  1300.00 | false\n\u003e  1500.00 | false\n\u003e  1600.00 | false\n\u003e  2450.00 | false\n\u003e  2850.00 | false\n\u003e  2975.00 | false\n\u003e  3000.00 | false\n\u003e  3000.00 | false\n\u003e  5000.00 | false\n\u003e   800.00 | false\n\u003e   950.00 | false\n866,870c860,861\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[1], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n881,894c872,885\n\u003c  1100.00 | null\n\u003c  1250.00 | null\n\u003c  1250.00 | null\n\u003c  1300.00 | null\n\u003c  1500.00 | null\n\u003c  1600.00 | null\n\u003c  2450.00 | null\n\u003c  2850.00 | null\n\u003c  2975.00 | null\n\u003c  3000.00 | null\n\u003c  3000.00 | null\n\u003c  5000.00 | null\n\u003c   800.00 | null\n\u003c   950.00 | null\n---\n\u003e  1100.00 | false\n\u003e  1250.00 | false\n\u003e  1250.00 | false\n\u003e  1300.00 | false\n\u003e  1500.00 | false\n\u003e  1600.00 | false\n\u003e  2450.00 | false\n\u003e  2850.00 | false\n\u003e  2975.00 | false\n\u003e  3000.00 | false\n\u003e  3000.00 | false\n\u003e  5000.00 | false\n\u003e   800.00 | false\n\u003e   950.00 | false\n902,906c893,894\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[\u003d($t4, $t0)], expr#6\u003d[IS NULL($t4)], expr#7\u003d[OR($t5, $t6)], cs\u003d[$t3], $condition\u003d[$t7])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n917,930c905,918\n\u003c  1100.00 | null\n\u003c  1250.00 | null\n\u003c  1250.00 | null\n\u003c  1300.00 | null\n\u003c  1500.00 | null\n\u003c  1600.00 | null\n\u003c  2450.00 | null\n\u003c  2850.00 | null\n\u003c  2975.00 | null\n\u003c  3000.00 | null\n\u003c  3000.00 | null\n\u003c  5000.00 | null\n\u003c   800.00 | null\n\u003c   950.00 | null\n---\n\u003e  1100.00 | false\n\u003e  1250.00 | false\n\u003e  1250.00 | false\n\u003e  1300.00 | false\n\u003e  1500.00 | false\n\u003e  1600.00 | false\n\u003e  2450.00 | false\n\u003e  2850.00 | false\n\u003e  2975.00 | false\n\u003e  3000.00 | false\n\u003e  3000.00 | false\n\u003e  5000.00 | false\n\u003e   800.00 | false\n\u003e   950.00 | false\n941c929\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[IS NULL($t4)], expr#9\u003d[OR($t6, $t7, $t8)], cs\u003d[$t3], $condition\u003d[$t9])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[CAST($t0):TINYINT], expr#5\u003d[IS NULL($t4)], cs\u003d[$t3], $condition\u003d[$t5])\n1023,1036c1011,1024\n\u003c  1100.00 | null\n\u003c  1250.00 | null\n\u003c  1250.00 | null\n\u003c  1300.00 | null\n\u003c  1500.00 | null\n\u003c  1600.00 | null\n\u003c  2450.00 | null\n\u003c  2850.00 | null\n\u003c  2975.00 | null\n\u003c  3000.00 | null\n\u003c  3000.00 | null\n\u003c  5000.00 | null\n\u003c   800.00 | null\n\u003c   950.00 | null\n---\n\u003e  1100.00 | true\n\u003e  1250.00 | true\n\u003e  1250.00 | true\n\u003e  1300.00 | true\n\u003e  1500.00 | true\n\u003e  1600.00 | true\n\u003e  2450.00 | true\n\u003e  2850.00 | true\n\u003e  2975.00 | true\n\u003e  3000.00 | true\n\u003e  3000.00 | true\n\u003e  5000.00 | true\n\u003e   800.00 | true\n\u003e   950.00 | true\n1044,1048c1032,1033\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[false], expr#4\u003d[null], expr#5\u003d[\u003d($t4, $t4)], expr#6\u003d[IS NULL($t4)], expr#7\u003d[OR($t5, $t6)], cs\u003d[$t3], $condition\u003d[$t7])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n1059,1072c1044,1057\n\u003c  1100.00 | null\n\u003c  1250.00 | null\n\u003c  1250.00 | null\n\u003c  1300.00 | null\n\u003c  1500.00 | null\n\u003c  1600.00 | null\n\u003c  2450.00 | null\n\u003c  2850.00 | null\n\u003c  2975.00 | null\n\u003c  3000.00 | null\n\u003c  3000.00 | null\n\u003c  5000.00 | null\n\u003c   800.00 | null\n\u003c   950.00 | null\n---\n\u003e  1100.00 | true\n\u003e  1250.00 | true\n\u003e  1250.00 | true\n\u003e  1300.00 | true\n\u003e  1500.00 | true\n\u003e  1600.00 | true\n\u003e  2450.00 | true\n\u003e  2850.00 | true\n\u003e  2975.00 | true\n\u003e  3000.00 | true\n\u003e  3000.00 | true\n\u003e  5000.00 | true\n\u003e   800.00 | true\n\u003e   950.00 | true\n1080,1084c1065,1066\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[false], expr#4\u003d[123], expr#5\u003d[null], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n1095,1108c1077,1090\n\u003c  1100.00 | null\n\u003c  1250.00 | null\n\u003c  1250.00 | null\n\u003c  1300.00 | null\n\u003c  1500.00 | null\n\u003c  1600.00 | null\n\u003c  2450.00 | null\n\u003c  2850.00 | null\n\u003c  2975.00 | null\n\u003c  3000.00 | null\n\u003c  3000.00 | null\n\u003c  5000.00 | null\n\u003c   800.00 | null\n\u003c   950.00 | null\n---\n\u003e  1100.00 | true\n\u003e  1250.00 | true\n\u003e  1250.00 | true\n\u003e  1300.00 | true\n\u003e  1500.00 | true\n\u003e  1600.00 | true\n\u003e  2450.00 | true\n\u003e  2850.00 | true\n\u003e  2975.00 | true\n\u003e  3000.00 | true\n\u003e  3000.00 | true\n\u003e  5000.00 | true\n\u003e   800.00 | true\n\u003e   950.00 | true\n1116,1120c1098,1099\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[1], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n1131,1144c1110,1123\n\u003c  1100.00 | null\n\u003c  1250.00 | null\n\u003c  1250.00 | null\n\u003c  1300.00 | null\n\u003c  1500.00 | null\n\u003c  1600.00 | null\n\u003c  2450.00 | null\n\u003c  2850.00 | null\n\u003c  2975.00 | null\n\u003c  3000.00 | null\n\u003c  3000.00 | null\n\u003c  5000.00 | null\n\u003c   800.00 | null\n\u003c   950.00 | null\n---\n\u003e  1100.00 | true\n\u003e  1250.00 | true\n\u003e  1250.00 | true\n\u003e  1300.00 | true\n\u003e  1500.00 | true\n\u003e  1600.00 | true\n\u003e  2450.00 | true\n\u003e  2850.00 | true\n\u003e  2975.00 | true\n\u003e  3000.00 | true\n\u003e  3000.00 | true\n\u003e  5000.00 | true\n\u003e   800.00 | true\n\u003e   950.00 | true\n1152,1156c1131,1132\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[\u003d($t4, $t0)], expr#6\u003d[IS NULL($t4)], expr#7\u003d[OR($t5, $t6)], cs\u003d[$t3], $condition\u003d[$t7])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n1167,1180c1143,1156\n\u003c  1100.00 | null\n\u003c  1250.00 | null\n\u003c  1250.00 | null\n\u003c  1300.00 | null\n\u003c  1500.00 | null\n\u003c  1600.00 | null\n\u003c  2450.00 | null\n\u003c  2850.00 | null\n\u003c  2975.00 | null\n\u003c  3000.00 | null\n\u003c  3000.00 | null\n\u003c  5000.00 | null\n\u003c   800.00 | null\n\u003c   950.00 | null\n---\n\u003e  1100.00 | true\n\u003e  1250.00 | true\n\u003e  1250.00 | true\n\u003e  1300.00 | true\n\u003e  1500.00 | true\n\u003e  1600.00 | true\n\u003e  2450.00 | true\n\u003e  2850.00 | true\n\u003e  2975.00 | true\n\u003e  3000.00 | true\n\u003e  3000.00 | true\n\u003e  5000.00 | true\n\u003e   800.00 | true\n\u003e   950.00 | true\n1191c1167\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[IS NULL($t4)], expr#9\u003d[OR($t6, $t7, $t8)], cs\u003d[$t3], $condition\u003d[$t9])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[CAST($t0):TINYINT], expr#5\u003d[IS NULL($t4)], cs\u003d[$t3], $condition\u003d[$t5])\n1273,1286c1249,1262\n\u003c  1100.00 | true\n\u003c  1250.00 | true\n\u003c  1250.00 | true\n\u003c  1300.00 | true\n\u003c  1500.00 | true\n\u003c  1600.00 | true\n\u003c  2450.00 | true\n\u003c  2850.00 | true\n\u003c  2975.00 | true\n\u003c  3000.00 | true\n\u003c  3000.00 | true\n\u003c  5000.00 | true\n\u003c   800.00 | true\n\u003c   950.00 | true\n---\n\u003e  1100.00 | false\n\u003e  1250.00 | false\n\u003e  1250.00 | false\n\u003e  1300.00 | false\n\u003e  1500.00 | false\n\u003e  1600.00 | false\n\u003e  2450.00 | false\n\u003e  2850.00 | false\n\u003e  2975.00 | false\n\u003e  3000.00 | false\n\u003e  3000.00 | false\n\u003e  5000.00 | false\n\u003e   800.00 | false\n\u003e   950.00 | false\n1294,1298c1270,1271\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[\u003d($t4, $t0)], expr#6\u003d[IS NULL($t4)], expr#7\u003d[OR($t5, $t6)], cs\u003d[$t3], $condition\u003d[$t7])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n1324,1330c1297\n\u003c EnumerableCalc(expr#0..2\u003d[{inputs}], SAL\u003d[$t2])\n\u003c   EnumerableJoin(condition\u003d[true], joinType\u003d[inner])\n\u003c     EnumerableAggregate(group\u003d[{0}])\n\u003c       EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[123], expr#5\u003d[null], expr#6\u003d[\u003d($t4, $t5)], cs\u003d[$t3], $condition\u003d[$t6])\n\u003c         EnumerableTableScan(table\u003d[[scott, DEPT]])\n\u003c     EnumerableCalc(expr#0..7\u003d[{inputs}], EMPNO\u003d[$t0], SAL\u003d[$t5])\n\u003c       EnumerableTableScan(table\u003d[[scott, EMP]])\n---\n\u003e EnumerableValues(tuples\u003d[[]])\n1343,1349c1310\n\u003c EnumerableCalc(expr#0..2\u003d[{inputs}], SAL\u003d[$t2])\n\u003c   EnumerableJoin(condition\u003d[true], joinType\u003d[inner])\n\u003c     EnumerableAggregate(group\u003d[{0}])\n\u003c       EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[1], expr#6\u003d[\u003d($t4, $t5)], cs\u003d[$t3], $condition\u003d[$t6])\n\u003c         EnumerableTableScan(table\u003d[[scott, DEPT]])\n\u003c     EnumerableCalc(expr#0..7\u003d[{inputs}], EMPNO\u003d[$t0], SAL\u003d[$t5])\n\u003c       EnumerableTableScan(table\u003d[[scott, EMP]])\n---\n\u003e EnumerableValues(tuples\u003d[[]])\n1362,1368c1323\n\u003c EnumerableCalc(expr#0..2\u003d[{inputs}], SAL\u003d[$t2])\n\u003c   EnumerableJoin(condition\u003d[true], joinType\u003d[inner])\n\u003c     EnumerableAggregate(group\u003d[{0}])\n\u003c       EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[\u003d($t4, $t0)], cs\u003d[$t3], $condition\u003d[$t5])\n\u003c         EnumerableTableScan(table\u003d[[scott, DEPT]])\n\u003c     EnumerableCalc(expr#0..7\u003d[{inputs}], EMPNO\u003d[$t0], SAL\u003d[$t5])\n\u003c       EnumerableTableScan(table\u003d[[scott, EMP]])\n---\n\u003e EnumerableValues(tuples\u003d[[]])\n1381,1387c1336\n\u003c EnumerableCalc(expr#0..2\u003d[{inputs}], SAL\u003d[$t2])\n\u003c   EnumerableJoin(condition\u003d[true], joinType\u003d[inner])\n\u003c     EnumerableAggregate(group\u003d[{0}])\n\u003c       EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], cs\u003d[$t3], $condition\u003d[$t6])\n\u003c         EnumerableTableScan(table\u003d[[scott, DEPT]])\n\u003c     EnumerableCalc(expr#0..7\u003d[{inputs}], EMPNO\u003d[$t0], SAL\u003d[$t5])\n\u003c       EnumerableTableScan(table\u003d[[scott, EMP]])\n---\n\u003e EnumerableValues(tuples\u003d[[]])\n1462,1463c1411,1426\n\u003c -----\n\u003c (0 rows)\n---\n\u003e ---------\n\u003e  1100.00\n\u003e  1250.00\n\u003e  1250.00\n\u003e  1300.00\n\u003e  1500.00\n\u003e  1600.00\n\u003e  2450.00\n\u003e  2850.00\n\u003e  2975.00\n\u003e  3000.00\n\u003e  3000.00\n\u003e  5000.00\n\u003e   800.00\n\u003e   950.00\n\u003e (14 rows)\n1470,1474c1433,1434\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[false], expr#4\u003d[null], expr#5\u003d[\u003d($t4, $t4)], expr#6\u003d[IS NULL($t4)], expr#7\u003d[OR($t5, $t6)], cs\u003d[$t3], $condition\u003d[$t7])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n1483,1484c1443,1458\n\u003c -----\n\u003c (0 rows)\n---\n\u003e ---------\n\u003e  1100.00\n\u003e  1250.00\n\u003e  1250.00\n\u003e  1300.00\n\u003e  1500.00\n\u003e  1600.00\n\u003e  2450.00\n\u003e  2850.00\n\u003e  2975.00\n\u003e  3000.00\n\u003e  3000.00\n\u003e  5000.00\n\u003e   800.00\n\u003e   950.00\n\u003e (14 rows)\n1491,1495c1465,1466\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[false], expr#4\u003d[123], expr#5\u003d[null], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n1504,1505c1475,1490\n\u003c -----\n\u003c (0 rows)\n---\n\u003e ---------\n\u003e  1100.00\n\u003e  1250.00\n\u003e  1250.00\n\u003e  1300.00\n\u003e  1500.00\n\u003e  1600.00\n\u003e  2450.00\n\u003e  2850.00\n\u003e  2975.00\n\u003e  3000.00\n\u003e  3000.00\n\u003e  5000.00\n\u003e   800.00\n\u003e   950.00\n\u003e (14 rows)\n1512,1516c1497,1498\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[1], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n1525,1526c1507,1522\n\u003c -----\n\u003c (0 rows)\n---\n\u003e ---------\n\u003e  1100.00\n\u003e  1250.00\n\u003e  1250.00\n\u003e  1300.00\n\u003e  1500.00\n\u003e  1600.00\n\u003e  2450.00\n\u003e  2850.00\n\u003e  2975.00\n\u003e  3000.00\n\u003e  3000.00\n\u003e  5000.00\n\u003e   800.00\n\u003e   950.00\n\u003e (14 rows)\n1533,1537c1529,1530\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[\u003d($t4, $t0)], expr#6\u003d[IS NULL($t4)], expr#7\u003d[OR($t5, $t6)], cs\u003d[$t3], $condition\u003d[$t7])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n1546,1547c1539,1554\n\u003c -----\n\u003c (0 rows)\n---\n\u003e ---------\n\u003e  1100.00\n\u003e  1250.00\n\u003e  1250.00\n\u003e  1300.00\n\u003e  1500.00\n\u003e  1600.00\n\u003e  2450.00\n\u003e  2850.00\n\u003e  2975.00\n\u003e  3000.00\n\u003e  3000.00\n\u003e  5000.00\n\u003e   800.00\n\u003e   950.00\n\u003e (14 rows)\n1557c1564\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[IS NULL($t4)], expr#9\u003d[OR($t6, $t7, $t8)], cs\u003d[$t3], $condition\u003d[$t9])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[CAST($t0):TINYINT], expr#5\u003d[IS NULL($t4)], cs\u003d[$t3], $condition\u003d[$t5])\n1609,1624c1616,1617\n\u003c ---------\n\u003c  1100.00\n\u003c  1250.00\n\u003c  1250.00\n\u003c  1300.00\n\u003c  1500.00\n\u003c  1600.00\n\u003c  2450.00\n\u003c  2850.00\n\u003c  2975.00\n\u003c  3000.00\n\u003c  3000.00\n\u003c  5000.00\n\u003c   800.00\n\u003c   950.00\n\u003c (14 rows)\n---\n\u003e -----\n\u003e (0 rows)\n1631,1635c1624,1625\n\u003c     EnumerableLimit(fetch\u003d[1])\n\u003c       EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003c         EnumerableAggregate(group\u003d[{0}], c\u003d[COUNT()])\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[\u003d($t4, $t0)], expr#6\u003d[IS NULL($t4)], expr#7\u003d[OR($t5, $t6)], cs\u003d[$t3], $condition\u003d[$t7])\n\u003c             EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableSort(sort0\u003d[$0], dir0\u003d[DESC])\n\u003e       EnumerableValues(tuples\u003d[[]])\n1650c1640,1644\n\u003c EnumerableValues(tuples\u003d[[]])\n---\n\u003e EnumerableCalc(expr#0..3\u003d[{inputs}], SAL\u003d[$t1])\n\u003e   EnumerableCorrelate(correlation\u003d[$cor0], joinType\u003d[inner], requiredColumns\u003d[{}])\n\u003e     EnumerableCalc(expr#0..7\u003d[{inputs}], EMPNO\u003d[$t0], SAL\u003d[$t5], DEPTNO\u003d[$t7])\n\u003e       EnumerableTableScan(table\u003d[[scott, EMP]])\n\u003e     EnumerableValues(tuples\u003d[[]])\n1663,1668c1657\n\u003c EnumerableCalc(expr#0..3\u003d[{inputs}], SAL\u003d[$t2])\n\u003c   EnumerableJoin(condition\u003d[\u003d($0, $3)], joinType\u003d[inner])\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[123], expr#4\u003d[null], expr#5\u003d[\u003d($t3, $t4)], DEPTNO\u003d[$t0], $condition\u003d[$t5])\n\u003c       EnumerableTableScan(table\u003d[[scott, DEPT]])\n\u003c     EnumerableCalc(expr#0..7\u003d[{inputs}], EMPNO\u003d[$t0], SAL\u003d[$t5], DEPTNO\u003d[$t7])\n\u003c       EnumerableTableScan(table\u003d[[scott, EMP]])\n---\n\u003e EnumerableValues(tuples\u003d[[]])\n1681,1684c1670,1671\n\u003c EnumerableCalc(expr#0..3\u003d[{inputs}], SAL\u003d[$t2])\n\u003c   EnumerableJoin(condition\u003d[\u003d($0, $3)], joinType\u003d[inner])\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[null], expr#4\u003d[1], expr#5\u003d[\u003d($t3, $t4)], DEPTNO\u003d[$t0], $condition\u003d[$t5])\n\u003c       EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e EnumerableCalc(expr#0..3\u003d[{inputs}], SAL\u003d[$t1])\n\u003e   EnumerableCorrelate(correlation\u003d[$cor0], joinType\u003d[inner], requiredColumns\u003d[{}])\n1686a1674\n\u003e     EnumerableValues(tuples\u003d[[]])\n1699,1702c1687,1688\n\u003c EnumerableCalc(expr#0..3\u003d[{inputs}], SAL\u003d[$t2])\n\u003c   EnumerableJoin(condition\u003d[\u003d($0, $3)], joinType\u003d[inner])\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[null], expr#4\u003d[\u003d($t3, $t0)], DEPTNO\u003d[$t0], $condition\u003d[$t4])\n\u003c       EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e EnumerableCalc(expr#0..3\u003d[{inputs}], SAL\u003d[$t1])\n\u003e   EnumerableCorrelate(correlation\u003d[$cor0], joinType\u003d[inner], requiredColumns\u003d[{}])\n1704a1691\n\u003e     EnumerableValues(tuples\u003d[[]])\n1717,1720c1704,1705\n\u003c EnumerableCalc(expr#0..3\u003d[{inputs}], SAL\u003d[$t2])\n\u003c   EnumerableJoin(condition\u003d[\u003d($0, $3)], joinType\u003d[inner])\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[null], expr#4\u003d[CAST($t0):TINYINT], expr#5\u003d[\u003d($t3, $t4)], DEPTNO\u003d[$t0], $condition\u003d[$t5])\n\u003c       EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e EnumerableCalc(expr#0..3\u003d[{inputs}], SAL\u003d[$t1])\n\u003e   EnumerableCorrelate(correlation\u003d[$cor0], joinType\u003d[inner], requiredColumns\u003d[{}])\n1722a1708\n\u003e     EnumerableValues(tuples\u003d[[]])\n1781,1782c1767\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[false], expr#4\u003d[null], expr#5\u003d[IS NULL($t4)], cs\u003d[$t3], DEPTNO\u003d[$t0], $condition\u003d[$t5])\n\u003c       EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableValues(tuples\u003d[[]])\n1791,1792c1776,1791\n\u003c -----\n\u003c (0 rows)\n---\n\u003e ---------\n\u003e  1100.00\n\u003e  1250.00\n\u003e  1250.00\n\u003e  1300.00\n\u003e  1500.00\n\u003e  1600.00\n\u003e  2450.00\n\u003e  2850.00\n\u003e  2975.00\n\u003e  3000.00\n\u003e  3000.00\n\u003e  5000.00\n\u003e   800.00\n\u003e   950.00\n\u003e (14 rows)\n1799,1800c1798\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[false], expr#4\u003d[123], expr#5\u003d[null], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], DEPTNO\u003d[$t0], $condition\u003d[$t8])\n\u003c       EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableValues(tuples\u003d[[]])\n1813,1814c1811,1812\n\u003c EnumerableCalc(expr#0..4\u003d[{inputs}], expr#5\u003d[false], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[true], expr#8\u003d[null], expr#9\u003d[IS NULL($t8)], expr#10\u003d[null], expr#11\u003d[IS NOT NULL($t4)], expr#12\u003d[CASE($t6, $t7, $t9, $t10, $t11, $t7, $t5)], expr#13\u003d[NOT($t12)], SAL\u003d[$t1], $condition\u003d[$t13])\n\u003c   EnumerableJoin(condition\u003d[\u003d($2, $3)], joinType\u003d[left])\n---\n\u003e EnumerableCalc(expr#0..3\u003d[{inputs}], expr#4\u003d[false], expr#5\u003d[\u003d($t3, $t4)], expr#6\u003d[true], expr#7\u003d[null], expr#8\u003d[IS NULL($t7)], expr#9\u003d[null], expr#10\u003d[IS NOT NULL($t3)], expr#11\u003d[CASE($t5, $t6, $t8, $t9, $t10, $t6, $t4)], expr#12\u003d[NOT($t11)], SAL\u003d[$t1], $condition\u003d[$t12])\n\u003e   EnumerableCorrelate(correlation\u003d[$cor0], joinType\u003d[left], requiredColumns\u003d[{}])\n1817,1818c1815\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[1], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], DEPTNO\u003d[$t0], $f1\u003d[$t3], $condition\u003d[$t8])\n\u003c       EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableValues(tuples\u003d[[]])\n1831,1832c1828,1829\n\u003c EnumerableCalc(expr#0..4\u003d[{inputs}], expr#5\u003d[false], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[true], expr#8\u003d[null], expr#9\u003d[IS NULL($t8)], expr#10\u003d[null], expr#11\u003d[IS NOT NULL($t4)], expr#12\u003d[CASE($t6, $t7, $t9, $t10, $t11, $t7, $t5)], expr#13\u003d[NOT($t12)], SAL\u003d[$t1], $condition\u003d[$t13])\n\u003c   EnumerableJoin(condition\u003d[\u003d($2, $3)], joinType\u003d[left])\n---\n\u003e EnumerableCalc(expr#0..3\u003d[{inputs}], expr#4\u003d[false], expr#5\u003d[\u003d($t3, $t4)], expr#6\u003d[true], expr#7\u003d[null], expr#8\u003d[IS NULL($t7)], expr#9\u003d[null], expr#10\u003d[IS NOT NULL($t3)], expr#11\u003d[CASE($t5, $t6, $t8, $t9, $t10, $t6, $t4)], expr#12\u003d[NOT($t11)], SAL\u003d[$t1], $condition\u003d[$t12])\n\u003e   EnumerableCorrelate(correlation\u003d[$cor0], joinType\u003d[left], requiredColumns\u003d[{}])\n1835,1836c1832\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[\u003d($t4, $t0)], expr#6\u003d[IS NULL($t4)], expr#7\u003d[OR($t5, $t6)], DEPTNO1\u003d[$t0], $f1\u003d[$t3], $condition\u003d[$t7])\n\u003c       EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableValues(tuples\u003d[[]])\n1853c1849\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[IS NULL($t4)], expr#9\u003d[OR($t6, $t7, $t8)], cs\u003d[$t3], DEPTNO\u003d[$t0], $condition\u003d[$t9])\n---\n\u003e     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[CAST($t0):TINYINT], expr#5\u003d[IS NULL($t4)], cs\u003d[$t3], DEPTNO\u003d[$t0], $condition\u003d[$t5])\n1939,1940c1935,1936\n\u003c EnumerableCalc(expr#0..4\u003d[{inputs}], expr#5\u003d[false], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[null], expr#8\u003d[null], expr#9\u003d[IS NULL($t8)], expr#10\u003d[IS NOT NULL($t4)], expr#11\u003d[true], expr#12\u003d[CASE($t6, $t7, $t9, $t7, $t10, $t11, $t5)], expr#13\u003d[IS NULL($t12)], SAL\u003d[$t1], $condition\u003d[$t13])\n\u003c   EnumerableJoin(condition\u003d[\u003d($2, $3)], joinType\u003d[left])\n---\n\u003e EnumerableCalc(expr#0..3\u003d[{inputs}], expr#4\u003d[false], expr#5\u003d[\u003d($t3, $t4)], expr#6\u003d[null], expr#7\u003d[null], expr#8\u003d[IS NULL($t7)], expr#9\u003d[IS NOT NULL($t3)], expr#10\u003d[true], expr#11\u003d[CASE($t5, $t6, $t8, $t6, $t9, $t10, $t4)], expr#12\u003d[IS NULL($t11)], SAL\u003d[$t1], $condition\u003d[$t12])\n\u003e   EnumerableCorrelate(correlation\u003d[$cor0], joinType\u003d[left], requiredColumns\u003d[{}])\n1943,1944c1939\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[\u003d($t4, $t0)], expr#6\u003d[IS NULL($t4)], expr#7\u003d[OR($t5, $t6)], DEPTNO1\u003d[$t0], $f1\u003d[$t3], $condition\u003d[$t7])\n\u003c       EnumerableTableScan(table\u003d[[scott, DEPT]])\n---\n\u003e     EnumerableValues(tuples\u003d[[]])\n",
        "isError": false
      }
    ]
  },
  "type": "only_fail"
}