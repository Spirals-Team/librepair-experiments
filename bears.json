{
  "repository": {
    "name": "salesforce/Argus",
    "githubId": 44994636,
    "url": "https://github.com/salesforce/Argus",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": true,
    "pullRequestId": 896
  },
  "builds": {
    "buggyBuild": {
      "id": 422453373,
      "url": "http://travis-ci.org/salesforce/Argus/builds/422453373",
      "date": "Aug 30, 2018 11:12:26 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Aug 30, 2018 11:43:08 AM",
    "reproductionDateEnd": "Aug 30, 2018 11:50:41 AM",
    "totalDuration": 449,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 14,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          14
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 175,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          3,
          172
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 194,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          194
        ]
      }
    },
    "projectRootPomPath": "./workspace/salesforce/Argus/422453373/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "tests": {
    "failingModule": "/root/workspace/salesforce/Argus/422453373/ArgusCore",
    "overallMetrics": {
      "numberRunning": 690,
      "numberPassing": 527,
      "numberFailing": 0,
      "numberErroring": 163,
      "numberSkipping": 4,
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "isError": true,
          "occurrences": 163
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "numberRunning": 13,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 13,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.util.AlertUtilsTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.tsdb.AbstractTSDBServiceTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.SchedulingServiceTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.OAuthServiceTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.system.SystemConfiguratorTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.NamespaceServiceTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.NotifierTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.MonitorServiceTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.GlobalInterlockServiceTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.CallbackServiceTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "numberRunning": 37,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 37,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.DefaultDiscoveryServiceTest",
        "numberRunning": 7,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.CachedDiscoveryServiceTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.ElasticSearchSchemaServiceTest",
        "numberRunning": 9,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 9,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "numberRunning": 14,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 14,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.tsdb.MetricFederationTest",
        "numberRunning": 7,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.UserServiceTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.MQServiceTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AuditServiceTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "numberRunning": 17,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 17,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.AbstractSchemaServiceTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.ChartServiceTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "com.salesforce.dva.argus.service.ManagementServiceTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "com.salesforce.dva.argus.service.NotifierTest",
        "testMethod": "testUpdatingTriggerName",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.MonitorServiceTest",
        "testMethod": "testAlertsCreatedOnStartMonitoring",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testExecuteScheduledAlerts_AlertWithMultipleMetricsNotificationSentForEach",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.ChartServiceTest",
        "testMethod": "testDeleteChart",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testGetTriggerFiredDatapointTimeWhenMissingTimeStamps5",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.MQServiceTest",
        "testMethod": "testPutAndBulkGetMessages",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.ElasticSearchSchemaServiceTest",
        "testMethod": "testGetUniqueUsingScopeAndMetricSchemaIndex",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.MonitorServiceTest",
        "testMethod": "test_MonitoringDashboardNotNull",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testAssertSubsystemUsePermitted_NonIndefiniteSuspension",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testGetTriggerFiredDatapointTimeWhenOneDatapointAndInertiaOne",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.AbstractSchemaServiceTest",
        "testMethod": "testPutNothingCached",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.MonitorServiceTest",
        "testMethod": "testServiceIsSingleton",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.ChartServiceTest",
        "testMethod": "testCreateChart",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testCountSharedAlertsMetaPagedWithSearchText",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testExecuteScheduledAlerts_ForOneTimeSeriesMultipleTriggers",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.tsdb.MetricFederationTest",
        "testMethod": "testEndPointFederationForkJoinSumDownsamplerWithNoTag",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testGetTriggerFiredDatapointTimeWhenMissingTimeStamps4",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testExecuteScheduledAlerts_ClearNotification",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.DefaultDiscoveryServiceTest",
        "testMethod": "testWildcardQueriesMatchMultipleTags",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AuditServiceTest",
        "testMethod": "testFindByHostName",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "findAlertsModifiedAfterDate",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testGetTriggerFiredDatapointTimeWhenMissingTimeStampsReturnNull",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testSharedAlertWhenTwoSharedAlert",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testFindAlertsByOwnerPaged",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testAlertSerDes",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testFindSharedAlertsMeta",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.UserServiceTest",
        "testMethod": "testDefaultUserExistence",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.DefaultDiscoveryServiceTest",
        "testMethod": "testNonWildcardQuery",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testCountPrivateAlertsForPrivilegedUser",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "testMethod": "testFindDashboardsByOwnerMeta",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testfindAlertsByOwnerMeta",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.tsdb.MetricFederationTest",
        "testMethod": "testEndPointFederationForkJoinSumDownsamplerWithTag",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AuditServiceTest",
        "testMethod": "testFindByJPAEntity",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testGetTriggerFiredDatapointTimeWhenMissingTimeStamps3",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.OAuthServiceTest",
        "testMethod": "CreateAuthorizationCodeWithMissingArguments",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testSharedAlertWhenOneSharedAlert",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.OAuthServiceTest",
        "testMethod": "testAcceptOauthModifiedParams",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testUpdatePolicyCounterEnablesAlert",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.NotifierTest",
        "testMethod": "testTemplateNaming",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testFindPrivateAlertsPagedForPrivilegedUserWithSearchText",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testTriggerInertiaSetting",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.UserServiceTest",
        "testMethod": "testUniqueUserCount",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.AbstractSchemaServiceTest",
        "testMethod": "testPutEverythingCached",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "testMethod": "testFindSharedDashboardsMetaByVersion",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.ElasticSearchSchemaServiceTest",
        "testMethod": "testPutCreateUsingScopeAndMetricSchemaIndex",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "testMethod": "testFindSharedDashboardsMetaByOwnerAndByVersion",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testWardenDashboard",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testDeletedTriggersInNotifications",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testAlertDeleteCreateAnotherAlertWithSameName",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.NamespaceServiceTest",
        "testMethod": "testUserIsPermitted",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.MonitorServiceTest",
        "testMethod": "testEnableDisableMonitoring",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.MonitorServiceTest",
        "testMethod": "testConcurrentUpdates",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.OAuthServiceTest",
        "testMethod": "testAcceptOauth",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.MQServiceTest",
        "testMethod": "testPutAndBulkGetMessagesMultiThredaing",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.DefaultDiscoveryServiceTest",
        "testMethod": "testWildcardQueriesNoMatch",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testGetTriggerFiredDatapointTimeWhenOneDatapointAndZeroInertia",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.GlobalInterlockServiceTest",
        "testMethod": "testObtainOnExpiredScheduleLock",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.tsdb.MetricFederationTest",
        "testMethod": "testEndPointFederationForkJoinMaxDownsampler",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testModifyPolicyCounterEnablesAlert",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.DefaultDiscoveryServiceTest",
        "testMethod": "testWildcardQueriesMatchWithDownsampling",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testDisableWarden",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.OAuthServiceTest",
        "testMethod": "testAcceptOauthInvalidParams",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testExecuteScheduledAlerts_Scenario1",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.NamespaceServiceTest",
        "testMethod": "testNamespaceUnique",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.AbstractSchemaServiceTest",
        "testMethod": "testNumHoursUntilNextFlushBloomFilter",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AuditServiceTest",
        "testMethod": "testFindAll",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testExecuteScheduledAlerts_ForOneTimeSeries",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "testMethod": "testFindDashboardsMetaByVersion",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "testMethod": "testDashboard_FindShareDelete",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "testMethod": "testFindSharedDashboardsMeta",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.ChartServiceTest",
        "testMethod": "testGetChartByPrimaryKey",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "testMethod": "testFindSharedDashboardsByOwnerAndByVersion",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.tsdb.MetricFederationTest",
        "testMethod": "testEndPointFederationForkJoinCountDownsamplerWithNoTag",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testGetTriggerFiredDatapointTimeWehnNoDatapoints",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testCountSharedAlertsMetaPaged",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "testMethod": "testDashboardCrud",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testfindAlertsByOwner",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AuditServiceTest",
        "testMethod": "testUpdateAudit",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.NamespaceServiceTest",
        "testMethod": "testCreateNamespace",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testWardenAlertUsesUpdatedPolicyLimitForUser",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.DefaultDiscoveryServiceTest",
        "testMethod": "testWildcardQueriesMatchExceedingLimit",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testFindSharedAlertsMetaPaged",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.UserServiceTest",
        "testMethod": "testUserCrud",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testFindSharedAlertsByOwner",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.tsdb.MetricFederationTest",
        "testMethod": "testEndPointFederationForkJoinMinDownsampler",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.MQServiceTest",
        "testMethod": "testServiceIsSingleton",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AuditServiceTest",
        "testMethod": "testCreateAudit",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "testMethod": "testFindSharedDashboardsMetaByOwner",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.ElasticSearchSchemaServiceTest",
        "testMethod": "testUpsertWhenSomeDocsExistShouldUpdateMTSFieldForExistingDocs",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testAlertDelete",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.NotifierTest",
        "testMethod": "testDBNotifier",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "testMethod": "testFindDashboardsByOwnerMetaAndByVersion",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testFindPrivateAlertsPagedForPrivilegedUser",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "findAllAlerts",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.UserServiceTest",
        "testMethod": "testAdminUserExistence",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testAlertsCountContext",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.ElasticSearchSchemaServiceTest",
        "testMethod": "testGetUniqueUsingMetricTagvRegexSchemaIndex",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.SchedulingServiceTest",
        "testMethod": "testAlertSchedulingWithGlobalInterlock",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "org/apache/kafka/common/protocol/SecurityProtocol",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.util.AlertUtilsTest",
        "testMethod": "testAbsoluteTimeStampsInExpression",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "testMethod": "testDashboard_FindShareDeleteByVersion",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.MonitorServiceTest",
        "testMethod": "test_getCounterFromMetricName",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.OAuthServiceTest",
        "testMethod": "testCreateAuthorizationCode",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.system.SystemConfiguratorTest",
        "testMethod": "testLifecycle",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.GlobalInterlockServiceTest",
        "testMethod": "testObtainRefreshLock",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.CallbackServiceTest",
        "testMethod": "testCallbackNotifier",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.tsdb.MetricFederationTest",
        "testMethod": "testEndPointFederationForkJoinCountDownsampler",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.ElasticSearchSchemaServiceTest",
        "testMethod": "testUpsertWhenAllDocsExistShouldUpdateMTSFieldForAllDocs",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.GlobalInterlockServiceTest",
        "testMethod": "testReleaseNonexistentScheduleLock",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testEnableWarden",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.tsdb.MetricFederationTest",
        "testMethod": "testTimeFederationFork",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testAssertSubsystemUsePermitted_NoSuspension",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.CachedDiscoveryServiceTest",
        "testMethod": "testWildcardExpansionWithinLimit",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.NotifierTest",
        "testMethod": "testAbsoluteTimeStampsInExpression",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.ChartServiceTest",
        "testMethod": "testGetChartsByOwner",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testFindAlertByNameAndOwner",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testCountAlertsByOwner",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.util.AlertUtilsTest",
        "testMethod": "isScopePresentInWhiteListTest",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testCountPrivateAlertsForNonPrivilegedUser",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testCountPrivateAlertsForPrivilegedUserWithSearchText",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.NamespaceServiceTest",
        "testMethod": "testAddAdditionalUsersToNamespace",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testFindPrivateAlertsPagedForNonPrivilegedUser",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.tsdb.AbstractTSDBServiceTest",
        "testMethod": "testCyclingIterator",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testAssertSubsystemUsePermitted_ExpiredSuspension",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testUpdateNotification",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.ElasticSearchSchemaServiceTest",
        "testMethod": "testPutUpdateUsingScopeAndMetricSchemaIndex",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.GlobalInterlockServiceTest",
        "testMethod": "testLockExclusivity",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testUpdateAlert",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.CachedDiscoveryServiceTest",
        "testMethod": "testWildcardExpansionExceedingLimit",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testSuspendUser",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "findAlertsInRange",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testAlertEnqueue",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testExecuteScheduledAlerts_OnCooldown",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.ManagementServiceTest",
        "testMethod": "testPrivilegeGrant",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testFindSharedAlertsMetaByOwner",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.ElasticSearchSchemaServiceTest",
        "testMethod": "testGetUniqueUsingMetricNamespaceRegexSchemaIndex",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testFindSharedAlertsMetaPagedWithSearchText",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "findFullAlertObjectRetrieval",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testGetTriggerFiredDatapointTimeWhenMissingTimeStamps2",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testAssertSubsystemUsePermitted_AdminUser",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.ChartServiceTest",
        "testMethod": "testDeleteChartById",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testGetTriggerFiredDatapointTime",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.ElasticSearchSchemaServiceTest",
        "testMethod": "testUpsertWhenAllNewDocsShouldNotUpdateMTSField",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "testMethod": "testFindSharedDashboardsByOwner",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testServiceIsSingleton",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testDeleteAlert",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testSuspendAdminUser",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DashboardServiceTest",
        "testMethod": "testFindDashboardsMeta",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.ChartServiceTest",
        "testMethod": "testGetChartsForEntity",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.WardenServiceTest",
        "testMethod": "testSubSystemSuspensionLevels",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.MQServiceTest",
        "testMethod": "testBulkPutAndGetMessages",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.AbstractSchemaServiceTest",
        "testMethod": "testPutPartialCached",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.DefaultDiscoveryServiceTest",
        "testMethod": "testWildcardQueriesMatchWithinLimit",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testFindAlertsByOwnerPagedWithSearchText",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.GlobalInterlockServiceTest",
        "testMethod": "testObtainReleaseLock",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testGetTriggerFiredDatapointTimeWhenMissingTimeStamps",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
        "testMethod": "testExecuteScheduledAlerts_ForMoreThanOneTimeSeries",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.DefaultDiscoveryServiceTest",
        "testMethod": "testWildcardQueriesMatchMultipleTags1",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.schema.ElasticSearchSchemaServiceTest",
        "testMethod": "testGetUniqueUsingScopeSchemaIndex",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testFindAllAlertsMeta",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AlertServiceTest",
        "testMethod": "testCountAlertsByOwnerWithSearchText",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.AuditServiceTest",
        "testMethod": "testFindByMessage",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.NamespaceServiceTest",
        "testMethod": "testFindNamespaceByPrimaryKey",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      },
      {
        "testClass": "com.salesforce.dva.argus.service.NamespaceServiceTest",
        "testMethod": "testAdditionalUserIsPermitted",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class kafka.server.KafkaConfig$",
        "isError": true
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "salesforce/Argus",
      "branchName": "develop",
      "sha": "f31a1c66a5209e7a81715d65df11ec1f5f58a1c7",
      "url": "http://github.com/salesforce/Argus/commit/f31a1c66a5209e7a81715d65df11ec1f5f58a1c7",
      "date": "Aug 30, 2018 11:00:27 AM"
    },
    "buggyBuildForkRepo": {
      "repoName": "salesforce/Argus",
      "branchName": "snyk-fix-k1ftd1",
      "sha": "acd5cd730bca4bb1badaad5f22c5f088b32bc38c",
      "url": "https://github.com/salesforce/Argus/commit/acd5cd730bca4bb1badaad5f22c5f088b32bc38c",
      "date": "Aug 30, 2018 11:00:27 AM"
    },
    "buggyBuildBaseRepo": {
      "repoName": "salesforce/Argus",
      "branchName": "develop",
      "sha": "b86ea0333003c20dc910f1f000006e7c50507449",
      "url": "https://github.com/salesforce/Argus/commit/b86ea0333003c20dc910f1f000006e7c50507449",
      "date": "Aug 28, 2018 12:20:18 AM"
    }
  },
  "projectMetrics": {
    "numberModules": 5,
    "numberSourceFiles": 346,
    "numberTestFiles": 115,
    "numberLibrariesFailingModule": 191
  },
  "type": "only_fail"
}