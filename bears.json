{
  "tests": {
    "failingModule": "/root/workspace/Respekto/posesor/406938622/posesor-webapi",
    "overallMetrics": {
      "numberRunning": 43,
      "numberPassing": 10,
      "numberFailing": 0,
      "numberErroring": 33,
      "numberSkipping": 0,
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "isError": true,
          "occurrences": 10
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "isError": true,
          "occurrences": 23
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "net.posesor.charges.ChargesEndpointShould",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "net.posesor.payments.PaymentAddShould",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "net.posesor.payments.PaymentUpdateShould",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "net.posesor.SecurityEndpointShould",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "net.posesor.allocations.SettlementEndpointShould",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "net.posesor.allocations.SettlementShould",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "net.posesor.payments.AutocompleteShould",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "net.posesor.SubjectOperationsShould",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "net.posesor.expenses.ExpensesEndpointShould",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "net.posesor.payments.PaymentsEndpointShould",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "net.posesor.payments.PaymentsOperationsShould",
        "numberRunning": 7,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "net.posesor.ChargesShould",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "net.posesor.expenses.ExpensesEndpointShould",
        "testMethod": "post",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.charges.ChargesEndpointShould",
        "testMethod": "getById",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.ChargesShould",
        "testMethod": "buildSubjectsList",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.charges.ChargesEndpointShould",
        "testMethod": "post",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.SubjectOperationsShould",
        "testMethod": "shouldInsertNewSubject",
        "failureName": "org.springframework.dao.DataAccessResourceFailureException",
        "detail": "Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
        "isError": true
      },
      {
        "testClass": "net.posesor.expenses.ExpensesEndpointShould",
        "testMethod": "getById",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.SubjectOperationsShould",
        "testMethod": "shouldDistinguishSubjectWithSameNamesOwnedByDifferentPrincipals",
        "failureName": "org.springframework.dao.DataAccessResourceFailureException",
        "detail": "Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.PaymentsOperationsShould",
        "testMethod": "remove",
        "failureName": "org.springframework.dao.DataAccessResourceFailureException",
        "detail": "Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.PaymentsOperationsShould",
        "testMethod": "updateDocument",
        "failureName": "org.springframework.dao.DataAccessResourceFailureException",
        "detail": "Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
        "isError": true
      },
      {
        "testClass": "net.posesor.SecurityEndpointShould",
        "testMethod": "beAcceptedAsDemoUser",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.PaymentUpdateShould",
        "testMethod": "updatedDtoReplacedOldOne",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.charges.ChargesEndpointShould",
        "testMethod": "put",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.PaymentsOperationsShould",
        "testMethod": "insertDocument",
        "failureName": "org.springframework.dao.DataAccessResourceFailureException",
        "detail": "Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.PaymentsOperationsShould",
        "testMethod": "getAll",
        "failureName": "org.springframework.dao.DataAccessResourceFailureException",
        "detail": "Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.PaymentsEndpointShould",
        "testMethod": "deletePayment",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.AutocompleteShould",
        "testMethod": "returnPaymentTitleFromPayment",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.expenses.ExpensesEndpointShould",
        "testMethod": "getAll",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.PaymentsEndpointShould",
        "testMethod": "returnNotFoundWhenLocationIsNonExisting",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.PaymentsOperationsShould",
        "testMethod": "getbyPaimentId",
        "failureName": "org.springframework.dao.DataAccessResourceFailureException",
        "detail": "Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
        "isError": true
      },
      {
        "testClass": "net.posesor.allocations.SettlementShould",
        "testMethod": "reflectDocumentSubjectChangeAndRestore",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.SecurityEndpointShould",
        "testMethod": "beRejectedAsInvalidUser",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.PaymentsOperationsShould",
        "testMethod": "getLatest",
        "failureName": "org.springframework.dao.DataAccessResourceFailureException",
        "detail": "Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference\u003dprimary}. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference\u003dprimary}. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
        "isError": true
      },
      {
        "testClass": "net.posesor.expenses.ExpensesEndpointShould",
        "testMethod": "delete",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.PaymentAddShould",
        "testMethod": "exposePaymentInAllPayments",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.charges.ChargesEndpointShould",
        "testMethod": "getTemplate",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.allocations.SettlementEndpointShould",
        "testMethod": "removeUnsettledValueWhenOriginatingDocumentIsRemoved",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.AutocompleteShould",
        "testMethod": "returnBankAccountFromPayment",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.PaymentsEndpointShould",
        "testMethod": "getAllEntries",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.PaymentsOperationsShould",
        "testMethod": "getByPaymentTitle",
        "failureName": "org.springframework.dao.DataAccessResourceFailureException",
        "detail": "Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
        "isError": true
      },
      {
        "testClass": "net.posesor.expenses.ExpensesEndpointShould",
        "testMethod": "put",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.payments.PaymentAddShould",
        "testMethod": "createReachablePayment",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "net.posesor.SubjectOperationsShould",
        "testMethod": "shouldReturnExistingSubject",
        "failureName": "org.springframework.dao.DataAccessResourceFailureException",
        "detail": "Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches WritableServerSelector. Client view of cluster state is {type\u003dUNKNOWN, servers\u003d[{address\u003dlocalhost:27017, type\u003dUNKNOWN, state\u003dCONNECTING, exception\u003d{com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
        "isError": true
      },
      {
        "testClass": "net.posesor.charges.ChargesEndpointShould",
        "testMethod": "delete",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      }
    ]
  },
  "projectMetrics": {
    "numberModules": 5,
    "numberSourceFiles": 118,
    "numberTestFiles": 30,
    "numberLibrariesFailingModule": 117
  },
  "repository": {
    "name": "Respekto/posesor",
    "githubId": 64332602,
    "url": "https://github.com/Respekto/posesor",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 406938622,
      "url": "http://travis-ci.org/Respekto/posesor/builds/406938622",
      "date": "Jul 23, 2018 1:04:05 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Jul 23, 2018 1:04:29 AM",
    "reproductionDateEnd": "Jul 23, 2018 2:22:16 AM",
    "totalDuration": 4662,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 5,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          5
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 109,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          109
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 1896,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          1896
        ]
      }
    },
    "projectRootPomPath": "./workspace/Respekto/posesor/406938622/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "commits": {
    "buggyBuild": {
      "repoName": "Respekto/posesor",
      "branchName": "develop",
      "sha": "ecd2233a3bc7ccc464ebd604066948a19bd05c69",
      "url": "http://github.com/Respekto/posesor/commit/ecd2233a3bc7ccc464ebd604066948a19bd05c69",
      "date": "Jun 5, 2018 10:04:13 PM"
    }
  },
  "type": "only_fail"
}