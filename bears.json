{
  "repository": {
    "name": "jtablesaw/tablesaw",
    "githubId": 48880766,
    "url": "https://github.com/jtablesaw/tablesaw",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 417690798,
      "url": "http://travis-ci.org/jtablesaw/tablesaw/builds/417690798",
      "date": "Aug 18, 2018 2:12:21 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Aug 18, 2018 2:12:30 PM",
    "reproductionDateEnd": "Aug 18, 2018 2:20:44 PM",
    "totalDuration": 489,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 15,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          15
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 72,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          72
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 17,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          17
        ]
      }
    },
    "projectRootPomPath": "./workspace/jtablesaw/tablesaw/417690798/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "commits": {
    "buggyBuild": {
      "repoName": "jtablesaw/tablesaw",
      "branchName": "numeric-col",
      "sha": "985c32e4733d2a7443cf0eafabed229cfc86c2b7",
      "url": "http://github.com/jtablesaw/tablesaw/commit/985c32e4733d2a7443cf0eafabed229cfc86c2b7",
      "date": "Aug 18, 2018 2:09:31 PM"
    }
  },
  "projectMetrics": {
    "numberModules": 4,
    "numberSourceFiles": 191,
    "numberTestFiles": 77,
    "numberLibrariesFailingModule": 28
  },
  "tests": {
    "failingModule": "/root/workspace/jtablesaw/tablesaw/417690798/core",
    "overallMetrics": {
      "numberRunning": 594,
      "numberPassing": 479,
      "numberFailing": 3,
      "numberErroring": 112,
      "numberSkipping": 4,
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "isError": true,
          "occurrences": 13
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "isError": false,
          "occurrences": 1
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 2
        },
        {
          "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
          "isError": true,
          "occurrences": 98
        },
        {
          "failureName": "java.lang.ExceptionInInitializerError",
          "isError": true,
          "occurrences": 1
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "tech.tablesaw.index.LongIndexTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.TableFilteringTest",
        "numberRunning": 12,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 12,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.api.NumberColumnTest",
        "numberRunning": 43,
        "numberPassing": 41,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 3
      },
      {
        "testClass": "tech.tablesaw.api.TableQueryTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.io.html.HtmlTableWriterTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "numberRunning": 14,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 14,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.columns.AbstractColumnTest",
        "numberRunning": 3,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceGroupTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.api.RowTest",
        "numberRunning": 7,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.columns.numbers.NumberFiltersTest",
        "numberRunning": 16,
        "numberPassing": 15,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.io.csv.CsvReaderTest",
        "numberRunning": 24,
        "numberPassing": 13,
        "numberFailing": 1,
        "numberErroring": 10,
        "numberSkipping": 1
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "numberRunning": 35,
        "numberPassing": 20,
        "numberFailing": 0,
        "numberErroring": 15,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.aggregate.CrossTabTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "numberRunning": 16,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 16,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.util.DoubleArraysTest",
        "numberRunning": 2,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "numberRunning": 15,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 15,
        "numberSkipping": 0
      },
      {
        "testClass": "tech.tablesaw.api.QueryHelperTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "tech.tablesaw.TableFilteringTest",
        "testMethod": "testSampleRows",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testBooleanAggregateFunctions",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "test2ColumnGroupMean",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "addColumn",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "print",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceGroupTest",
        "testMethod": "testViewGroupCreation",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "rowCount",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.io.csv.CsvReaderTest",
        "testMethod": "testWithColumnSKIP",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column stop_id(position:0): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "setName",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "leftOuterJoinDuplicateKeysSecondTable",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class tech.tablesaw.joining.DataFrameJoinerTest",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.RowTest",
        "testMethod": "columnNames",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testPairs",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testDetect",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.io.csv.CsvReaderTest",
        "testMethod": "testBoundary2",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column column1(position:0): DoubleStringParser doesn\u0027t support parsing to floats",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.io.csv.CsvReaderTest",
        "testMethod": "testWithBusData",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column stop_id(position:0): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testDoWithEachRow",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testGroupMean4",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "rightOuterJoinWithDuplicateColumnNames",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class tech.tablesaw.joining.DataFrameJoinerTest",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.CrossTabTest",
        "testMethod": "testColumnPercents",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableQueryTest",
        "testMethod": "testWithAnd",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.TableFilteringTest",
        "testMethod": "testFilter2",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "removeColumns",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "innerJoinDuplicateKeysSecondTable",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class tech.tablesaw.joining.DataFrameJoinerTest",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testComplexSummarizing",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.RowTest",
        "testMethod": "testGetDouble",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.index.LongIndexTest",
        "testMethod": "testLTE",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.NumberColumnTest",
        "testMethod": "testCumSum",
        "failureName": "java.lang.AssertionError",
        "detail": "cumSum() operation at index:3 failed expected:\u003c131.0\u003e but was:\u003cNaN\u003e",
        "isError": false
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "columnCount",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.RowTest",
        "testMethod": "testGetDate",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.columns.numbers.NumberFiltersTest",
        "testMethod": "testIsBetweenInclusive",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.index.LongIndexTest",
        "testMethod": "testLT",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testSampleSplit",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.CrossTabTest",
        "testMethod": "testRowPercents",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testBooleanFunctions",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "column",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "innerJoinWithDuplicateColumnNames",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class tech.tablesaw.joining.DataFrameJoinerTest",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.RowTest",
        "testMethod": "testGetPackedDate",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testLast",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.TableFilteringTest",
        "testMethod": "testFilter4",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testPairs2",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testDoWithEachRow2",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.TableFilteringTest",
        "testMethod": "testSampleProportion",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "name",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "first",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "get",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "reduce",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testRollWithNrows2",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.io.csv.CsvReaderTest",
        "testMethod": "testDateWithFormatter2",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 0 and column C2(position:2): DoubleStringParser doesn\u0027t support parsing to floats",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.io.csv.CsvReaderTest",
        "testMethod": "testReadFailure2",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column Test(position:0): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testSummarize",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column State No(position:3): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testDropDuplicateRows",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.io.csv.CsvReaderTest",
        "testMethod": "testReadFailure",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column Test(position:0): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.TableFilteringTest",
        "testMethod": "testSelectRange",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.io.csv.CsvReaderTest",
        "testMethod": "testBoundary1",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column column1(position:0): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "rightOuterJoinWithDoubles",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class tech.tablesaw.joining.DataFrameJoinerTest",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "columnIndex",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.TableFilteringTest",
        "testMethod": "testRejectRows",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testDateMin",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testApplyWithNonNumericResults",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testGroupMean3",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.TableFilteringTest",
        "testMethod": "testFilter3",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "leftOuterJoinWithDoubles",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class tech.tablesaw.joining.DataFrameJoinerTest",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.TableFilteringTest",
        "testMethod": "testRejectWithMissingValues",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.index.LongIndexTest",
        "testMethod": "testGet",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.util.DoubleArraysTest",
        "testMethod": "testTo2dArray",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column State No(position:3): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testGroupMean",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "innerJoinDuplicateKeysFirstTable",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class tech.tablesaw.joining.DataFrameJoinerTest",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.columns.AbstractColumnTest",
        "testMethod": "doWithEach",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testRowSort",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.CrossTabTest",
        "testMethod": "testCounts2",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "leftOuterJoinWithDoubles2",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class tech.tablesaw.joining.DataFrameJoinerTest",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.CrossTabTest",
        "testMethod": "testTablePercents",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "fullOuterJoin",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class tech.tablesaw.joining.DataFrameJoinerTest",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.io.html.HtmlTableWriterTest",
        "testMethod": "testWrite",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceGroupTest",
        "testMethod": "testCustomFunction",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.TableFilteringTest",
        "testMethod": "testRejectRange",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.RowTest",
        "testMethod": "testGetString",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "innerJoin",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class tech.tablesaw.joining.DataFrameJoinerTest",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testGroupMeanByStep",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "asTable",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.CrossTabTest",
        "testMethod": "testCounts3",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testMultipleColumnTypes",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.RowTest",
        "testMethod": "testGetInt",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.io.csv.CsvReaderTest",
        "testMethod": "testPrintStructure",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c... 0     date         [INTEGER,]    // 1     approva...\u003e but was:\u003c... 0     date         [DOUBLE, ]    // 1     approva...\u003e",
        "isError": false
      },
      {
        "testClass": "tech.tablesaw.api.QueryHelperTest",
        "testMethod": "test2",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testPercentileFunctions",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.io.csv.CsvReaderTest",
        "testMethod": "testBushDataWithoutSamplingForTypeDetection",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "innerJoinWithDoubles",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class tech.tablesaw.joining.DataFrameJoinerTest",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "leftOuterJoin",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class tech.tablesaw.joining.DataFrameJoinerTest",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "leftOuterJoinDuplicateKeysFirstTable",
        "failureName": "java.lang.ExceptionInInitializerError",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.QueryHelperTest",
        "testMethod": "test1",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testSelect2",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.TableFilteringTest",
        "testMethod": "testSelectRows",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testIterable",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testRowToString",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.TableFilteringTest",
        "testMethod": "testReject",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.TableTest",
        "testMethod": "testSelect1",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.CrossTabTest",
        "testMethod": "testCounts1",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.TableFilteringTest",
        "testMethod": "testFilter1",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testGroupMean2",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.index.LongIndexTest",
        "testMethod": "testGTE",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceGroupTest",
        "testMethod": "testViewTwoColumn",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceGroupTest",
        "testMethod": "asTableList",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.joining.DataFrameJoinerTest",
        "testMethod": "leftOuterJoinWithDuplicateColumnNames",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class tech.tablesaw.joining.DataFrameJoinerTest",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testMultipleColumnTypesWithApply",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.io.csv.CsvReaderTest",
        "testMethod": "testWithColumnSKIPWithoutHeader",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 0 and column C0(position:0): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "columnNames",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "columns",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.table.TableSliceTest",
        "testMethod": "clear",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.index.LongIndexTest",
        "testMethod": "testGT",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.io.csv.CsvReaderTest",
        "testMethod": "testWithMissingValue",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column Sales(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.aggregate.AggregateFunctionsTest",
        "testMethod": "testSummaryWithACalculatedColumn",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.NumberColumnTest",
        "testMethod": "testCumProd",
        "failureName": "java.lang.AssertionError",
        "detail": "cumProd() operation at index:3 failed expected:\u003c6.0\u003e but was:\u003cNaN\u003e",
        "isError": false
      },
      {
        "testClass": "tech.tablesaw.api.RowTest",
        "testMethod": "testGetDate2",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      },
      {
        "testClass": "tech.tablesaw.api.QueryHelperTest",
        "testMethod": "test3",
        "failureName": "tech.tablesaw.io.csv.AddCellToColumnException",
        "detail": "Error while adding cell from row 1 and column approval(position:1): DoubleStringParser doesn\u0027t support parsing to booleans",
        "isError": true
      }
    ]
  },
  "type": "only_fail"
}