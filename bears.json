{
  "repository": {
    "name": "julianhyde/calcite",
    "githubId": 22561571,
    "url": "https://github.com/julianhyde/calcite",
    "isFork": true,
    "original": {
      "name": "apache/calcite",
      "githubId": 21193524,
      "url": "https://github.com/apache/calcite"
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 422668961,
      "url": "http://travis-ci.org/julianhyde/calcite/builds/422668961",
      "date": "Aug 30, 2018 7:45:01 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Aug 30, 2018 7:46:24 PM",
    "reproductionDateEnd": "Aug 30, 2018 8:23:04 PM",
    "totalDuration": 2193,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 30,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          30
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 227,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          227
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 762,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          762
        ]
      }
    },
    "projectRootPomPath": "./workspace/julianhyde/calcite/422668961/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "commits": {
    "buggyBuild": {
      "repoName": "julianhyde/calcite",
      "branchName": "master",
      "sha": "6fb6f7296b17563a6dbd1398b291fa786668f2e1",
      "url": "http://github.com/julianhyde/calcite/commit/6fb6f7296b17563a6dbd1398b291fa786668f2e1",
      "date": "Aug 30, 2018 7:23:05 PM"
    }
  },
  "projectMetrics": {
    "numberModules": 19,
    "numberSourceFiles": 1511,
    "numberTestFiles": 215,
    "numberLibrariesFailingModule": 48
  },
  "tests": {
    "failingModule": "/root/workspace/julianhyde/calcite/422668961/core",
    "overallMetrics": {
      "numberRunning": 4680,
      "numberPassing": 4678,
      "numberFailing": 2,
      "numberErroring": 0,
      "numberSkipping": 112,
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 2
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "numberRunning": 16,
        "numberPassing": 14,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[9: quidem(sql/winagg.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/julianhyde/calcite/422668961/core/target/test-classes/sql/surefire/sql/winagg.iq /root/workspace/julianhyde/calcite/422668961/core/target/test-classes/sql/winagg.iq\n442,444c442,443\n\u003c |     10 | 100 | 110 |\n\u003c |     10 | 150 | 110 |\n\u003c |     20 |     | 200 |\n---\n\u003e |     10 | 110 | 110 |\n\u003e |     10 | 110 | 110 |\n",
        "isError": false
      },
      {
        "testClass": "org.apache.calcite.test.CoreQuidemTest",
        "testMethod": "test[5: quidem(sql/sub-query.iq)]",
        "failureName": "java.lang.AssertionError",
        "detail": "Files differ: /root/workspace/julianhyde/calcite/422668961/core/target/test-classes/sql/surefire/sql/sub-query.iq /root/workspace/julianhyde/calcite/422668961/core/target/test-classes/sql/sub-query.iq\n941c941\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[IS NULL($t4)], expr#9\u003d[OR($t6, $t7, $t8)], cs\u003d[$t3], $condition\u003d[$t9])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n1011c1011\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], cs\u003d[$t3], $condition\u003d[$t6])\n1191c1191\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[IS NULL($t4)], expr#9\u003d[OR($t6, $t7, $t8)], cs\u003d[$t3], $condition\u003d[$t9])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n1261c1261\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], cs\u003d[$t3], $condition\u003d[$t6])\n1557c1557\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[IS NULL($t4)], expr#9\u003d[OR($t6, $t7, $t8)], cs\u003d[$t3], $condition\u003d[$t9])\n1599c1599\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], cs\u003d[$t3], $condition\u003d[$t6])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n1853c1853\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], DEPTNO\u003d[$t0], $condition\u003d[$t8])\n---\n\u003e     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], DEPTNO\u003d[$t0], $f1\u003d[$t3], $condition\u003d[$t8])\n1911c1911\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], cs\u003d[$t3], DEPTNO\u003d[$t0], $condition\u003d[$t6])\n---\n\u003e     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], DEPTNO\u003d[$t0], $f1\u003d[$t3], $condition\u003d[$t6])\n",
        "isError": false
      }
    ]
  },
  "type": "only_fail"
}