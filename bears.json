{
  "repository": {
    "name": "nosan/embedded-cassandra",
    "githubId": 137877866,
    "url": "https://github.com/nosan/embedded-cassandra",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 401464670,
      "url": "http://travis-ci.org/nosan/embedded-cassandra/builds/401464670",
      "date": "Jul 8, 2018 11:46:12 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Jul 8, 2018 11:48:51 AM",
    "reproductionDateEnd": "Jul 8, 2018 3:41:23 PM",
    "totalDuration": 13947,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 5,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          5
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 107,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          107
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 72,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          72
        ]
      },
      "fixing": {
        "nbSteps": 3,
        "totalDuration": 13742,
        "stepNames": [
          "Nopol",
          "NPEFix",
          "AstorJMut"
        ],
        "stepDurations": [
          13513,
          0,
          229
        ]
      }
    }
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "projectMetrics": {
    "numberSourceFiles": 30,
    "numberTestFiles": 22,
    "numberLibraries": 31
  },
  "tests": {
    "failingModule": "/root/workspace/nosan/embedded-cassandra/401464670/embedded-cassandra",
    "overallMetrics": {
      "numberRunning": 36,
      "numberPassing": 27,
      "numberFailing": 3,
      "numberErroring": 6,
      "numberSkipping": 1,
      "failures": [
        {
          "failureName": "java.io.IOException",
          "isError": true,
          "occurrences": 6
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 3
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "com.github.nosan.embedded.cassandra.CassandraTests",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 1,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "com.github.nosan.embedded.cassandra.process.CassandraStarterTests",
        "numberRunning": 7,
        "numberPassing": 1,
        "numberFailing": 2,
        "numberErroring": 4,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "com.github.nosan.embedded.cassandra.CassandraTests",
        "testMethod": "shouldStartCassandraUsingDefaultConfiguration",
        "failureName": "java.io.IOException",
        "detail": "Could not start a process.\u003cEOF\u003e",
        "isError": true
      },
      {
        "testClass": "com.github.nosan.embedded.cassandra.CassandraTests",
        "testMethod": "shouldBeAbleToRestartCassandra",
        "failureName": "java.io.IOException",
        "detail": "Could not start a process.\u003cEOF\u003e",
        "isError": true
      },
      {
        "testClass": "com.github.nosan.embedded.cassandra.CassandraTests",
        "testMethod": "shouldNotStartCassandraIfCassandraHasBeenAlreadyStarted",
        "failureName": "java.lang.AssertionError",
        "detail": "\nExpected: (an instance of java.io.IOException and exception with message a string containing \"Cassandra has already been started\")\n     but: exception with message a string containing \"Cassandra has already been started\" message was \"Could not start a process.\u003cEOF\u003e\"\nStacktrace was: java.io.IOException: Could not start a process.\u003cEOF\u003e\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:102)\n at de.flapdoodle.embed.process.runtime.AbstractProcess.\u003cinit\u003e(AbstractProcess.java:116)\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.\u003cinit\u003e(CassandraProcess.java:64)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)\n at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)\n at com.github.nosan.embedded.cassandra.Cassandra.start(Cassandra.java:110)\n at com.github.nosan.embedded.cassandra.CassandraTests.start(CassandraTests.java:74)\n at com.github.nosan.embedded.cassandra.CassandraTests.shouldNotStartCassandraIfCassandraHasBeenAlreadyStarted(CassandraTests.java:60)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\n",
        "isError": false
      },
      {
        "testClass": "com.github.nosan.embedded.cassandra.process.CassandraStarterTests",
        "testMethod": "shouldBePossibleToStartMultiplyInstances",
        "failureName": "java.io.IOException",
        "detail": "Could not start a process.\u003cEOF\u003e",
        "isError": true
      },
      {
        "testClass": "com.github.nosan.embedded.cassandra.process.CassandraStarterTests",
        "testMethod": "shouldStartCassandraWithNativeTrasnport",
        "failureName": "java.io.IOException",
        "detail": "Could not start a process.\u003cEOF\u003e",
        "isError": true
      },
      {
        "testClass": "com.github.nosan.embedded.cassandra.process.CassandraStarterTests",
        "testMethod": "shouldStartCassandraUsingRpcTransport",
        "failureName": "java.io.IOException",
        "detail": "Could not start a process.\u003cEOF\u003e",
        "isError": true
      },
      {
        "testClass": "com.github.nosan.embedded.cassandra.process.CassandraStarterTests",
        "testMethod": "shouldFailWithInvalidConfigurationError",
        "failureName": "java.lang.AssertionError",
        "detail": "\nExpected: (an instance of java.io.IOException and exception with message a string containing \"Missing required directive CommitLogSync\")\n     but: exception with message a string containing \"Missing required directive CommitLogSync\" message was \"Could not start a process.\u003cEOF\u003e\"\nStacktrace was: java.io.IOException: Could not start a process.\u003cEOF\u003e\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:102)\n at de.flapdoodle.embed.process.runtime.AbstractProcess.\u003cinit\u003e(AbstractProcess.java:116)\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.\u003cinit\u003e(CassandraProcess.java:64)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)\n at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.start(CassandraStarterTests.java:135)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.start(CassandraStarterTests.java:126)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.shouldFailWithInvalidConfigurationError(CassandraStarterTests.java:87)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\n",
        "isError": false
      },
      {
        "testClass": "com.github.nosan.embedded.cassandra.process.CassandraStarterTests",
        "testMethod": "shouldBeRestartedUsingNativeTransportPort",
        "failureName": "java.io.IOException",
        "detail": "Could not start a process.\u003cEOF\u003e",
        "isError": true
      },
      {
        "testClass": "com.github.nosan.embedded.cassandra.process.CassandraStarterTests",
        "testMethod": "shouldStartCassandraWithDisableRpcAndNativeTransportPorts",
        "failureName": "java.lang.AssertionError",
        "detail": "\nExpected: (an instance of java.net.ConnectException and exception with message a string containing \"Connection refused\")\n     but: an instance of java.net.ConnectException \u003cjava.io.IOException: Could not start a process.\u003cEOF\u003e\u003e is a java.io.IOException\nStacktrace was: java.io.IOException: Could not start a process.\u003cEOF\u003e\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:102)\n at de.flapdoodle.embed.process.runtime.AbstractProcess.\u003cinit\u003e(AbstractProcess.java:116)\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.\u003cinit\u003e(CassandraProcess.java:64)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)\n at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.start(CassandraStarterTests.java:135)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.shouldStartCassandraWithDisableRpcAndNativeTransportPorts(CassandraStarterTests.java:119)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\n",
        "isError": false
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "nosan/embedded-cassandra",
      "branchName": "refactoring-process",
      "sha": "10df1fbb90bd9d704a9b4cac07b1a2d13e4526b8",
      "url": "http://github.com/nosan/embedded-cassandra/commit/10df1fbb90bd9d704a9b4cac07b1a2d13e4526b8",
      "date": "Jul 8, 2018 11:38:43 AM"
    }
  },
  "type": "only_fail"
}