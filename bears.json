{
  "repository": {
    "name": "voyages-sncf-technologies/hesperides",
    "githubId": 71227768,
    "url": "https://github.com/voyages-sncf-technologies/hesperides",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": true,
    "pullRequestId": 284
  },
  "builds": {
    "buggyBuild": {
      "id": 404815275,
      "url": "http://travis-ci.org/voyages-sncf-technologies/hesperides/builds/404815275",
      "date": "Jul 17, 2018 12:06:05 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Jul 17, 2018 12:06:17 PM",
    "reproductionDateEnd": "Jul 17, 2018 12:18:47 PM",
    "totalDuration": 744,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 8,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          8
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 244,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          3,
          241
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 444,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          444
        ]
      },
      "fixing": {
        "nbSteps": 3,
        "totalDuration": 0,
        "stepNames": [
          "Nopol",
          "NPEFix",
          "AstorJMut"
        ],
        "stepDurations": [
          0,
          0,
          0
        ]
      }
    },
    "projectRootPomPath": "./workspace/voyages-sncf-technologies/hesperides/404815275/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "projectMetrics": {
    "numberModules": 11,
    "numberSourceFiles": 133,
    "numberTestFiles": 64,
    "numberLibrariesFailingModule": 126
  },
  "tests": {
    "failingModule": "/root/workspace/voyages-sncf-technologies/hesperides/404815275/tests/bdd",
    "overallMetrics": {
      "numberRunning": 382,
      "numberPassing": 364,
      "numberFailing": 10,
      "numberErroring": 8,
      "numberSkipping": 8,
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 10
        },
        {
          "failureName": "org.springframework.web.client.HttpClientErrorException",
          "isError": true,
          "occurrences": 8
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "Scenario: get a model from a module with templates that have ambiguous properties",
        "numberRunning": 6,
        "numberPassing": 4,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "Scenario: get a model from a module after updating its template",
        "numberRunning": 4,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 2
      },
      {
        "testClass": "Scenario: get a model from a module after delete its template",
        "numberRunning": 4,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 2
      },
      {
        "testClass": "Scenario: get a model from a techno after updating its template",
        "numberRunning": 4,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 2
      },
      {
        "testClass": "Scenario: get a model from a techno with templates that have ambiguous properties",
        "numberRunning": 6,
        "numberPassing": 4,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "Scenario: get a model from a module with a template that has ambiguous properties",
        "numberRunning": 6,
        "numberPassing": 4,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "Scenario: get a model from a techno with a template that has ambiguous properties",
        "numberRunning": 6,
        "numberPassing": 4,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "Scenario: get a model from a techno after delete its template",
        "numberRunning": 4,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 2
      },
      {
        "testClass": "Scenario: create a copy of an existing module",
        "numberRunning": 11,
        "numberPassing": 9,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "Scenario: get a model from a techno after updating its template",
        "testMethod": "And a template in this techno containing properties that have been updated",
        "failureName": "org.springframework.web.client.HttpClientErrorException",
        "detail": "400 null",
        "isError": true
      },
      {
        "testClass": "Scenario: get a model from a module after updating its template",
        "testMethod": "And a template in this module containing properties that have been updated",
        "failureName": "org.springframework.web.client.HttpClientErrorException",
        "detail": "400 null",
        "isError": true
      },
      {
        "testClass": "Scenario: get a model from a techno with a template that has ambiguous properties",
        "testMethod": "Scenario: get a model from a techno with a template that has ambiguous properties",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cfalse\u003e but was:\u003ctrue\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a techno after delete its template",
        "testMethod": "And a template in this techno containing properties but that is being deleted",
        "failureName": "org.springframework.web.client.HttpClientErrorException",
        "detail": "400 null",
        "isError": true
      },
      {
        "testClass": "Scenario: get a model from a techno with a template that has ambiguous properties",
        "testMethod": "Then the model of this techno contains all the properties with the same name from this template",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cfalse\u003e but was:\u003ctrue\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a module with templates that have ambiguous properties",
        "testMethod": "Scenario: get a model from a module with templates that have ambiguous properties",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003ctrue\u003e but was:\u003cfalse\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a module after delete its template",
        "testMethod": "Scenario: get a model from a module after delete its template",
        "failureName": "org.springframework.web.client.HttpClientErrorException",
        "detail": "400 null",
        "isError": true
      },
      {
        "testClass": "Scenario: create a copy of an existing module",
        "testMethod": "And the model of the module is also duplicated",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c2\u003e but was:\u003c1\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: create a copy of an existing module",
        "testMethod": "Scenario: create a copy of an existing module",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c2\u003e but was:\u003c1\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a techno after updating its template",
        "testMethod": "Scenario: get a model from a techno after updating its template",
        "failureName": "org.springframework.web.client.HttpClientErrorException",
        "detail": "400 null",
        "isError": true
      },
      {
        "testClass": "Scenario: get a model from a techno with templates that have ambiguous properties",
        "testMethod": "Scenario: get a model from a techno with templates that have ambiguous properties",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003ctrue\u003e but was:\u003cfalse\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a module with templates that have ambiguous properties",
        "testMethod": "Then the model of this module contains all the properties with the same name from these templates",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003ctrue\u003e but was:\u003cfalse\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a techno after delete its template",
        "testMethod": "Scenario: get a model from a techno after delete its template",
        "failureName": "org.springframework.web.client.HttpClientErrorException",
        "detail": "400 null",
        "isError": true
      },
      {
        "testClass": "Scenario: get a model from a module after updating its template",
        "testMethod": "Scenario: get a model from a module after updating its template",
        "failureName": "org.springframework.web.client.HttpClientErrorException",
        "detail": "400 null",
        "isError": true
      },
      {
        "testClass": "Scenario: get a model from a module with a template that has ambiguous properties",
        "testMethod": "Then the model of this module contains all the properties with the same name from this template",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cfalse\u003e but was:\u003ctrue\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a module with a template that has ambiguous properties",
        "testMethod": "Scenario: get a model from a module with a template that has ambiguous properties",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cfalse\u003e but was:\u003ctrue\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a techno with templates that have ambiguous properties",
        "testMethod": "Then the model of this techno contains all the properties with the same name from these templates",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003ctrue\u003e but was:\u003cfalse\u003e",
        "isError": false
      },
      {
        "testClass": "Scenario: get a model from a module after delete its template",
        "testMethod": "And a template in this module containing properties but that is being deleted",
        "failureName": "org.springframework.web.client.HttpClientErrorException",
        "detail": "400 null",
        "isError": true
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "voyages-sncf-technologies/hesperides",
      "branchName": "develop",
      "sha": "b88fbf2086518ca7df262bf6600cf7c0ac0ec72d",
      "url": "http://github.com/voyages-sncf-technologies/hesperides/commit/b88fbf2086518ca7df262bf6600cf7c0ac0ec72d",
      "date": "Jul 17, 2018 11:45:25 AM"
    },
    "buggyBuildForkRepo": {
      "repoName": "thomaslhostis/hesperides",
      "branchName": "feature/fixmodel",
      "sha": "461100c2fe92690793c1233775ebc58060b36325",
      "url": "https://github.com/thomaslhostis/hesperides/commit/461100c2fe92690793c1233775ebc58060b36325",
      "date": "Jul 17, 2018 11:45:25 AM"
    },
    "buggyBuildBaseRepo": {
      "repoName": "voyages-sncf-technologies/hesperides",
      "branchName": "develop",
      "sha": "c67374b405fd710ecfdd9bb80c162cbf07d4daea",
      "url": "https://github.com/voyages-sncf-technologies/hesperides/commit/c67374b405fd710ecfdd9bb80c162cbf07d4daea",
      "date": "Jul 17, 2018 11:22:12 AM"
    }
  },
  "type": "only_fail"
}