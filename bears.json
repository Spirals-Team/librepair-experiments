{
  "repository": {
    "name": "SonarSource/sonar-java",
    "githubId": 5674787,
    "url": "https://github.com/SonarSource/sonar-java",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 413973182,
      "url": "http://travis-ci.org/SonarSource/sonar-java/builds/413973182",
      "date": "Aug 9, 2018 11:42:30 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Aug 9, 2018 11:46:42 AM",
    "reproductionDateEnd": "Aug 9, 2018 11:59:10 AM",
    "totalDuration": 744,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 69,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          69
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 191,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          191
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 399,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          399
        ]
      }
    },
    "projectRootPomPath": "./workspace/SonarSource/sonar-java/413973182/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "commits": {
    "buggyBuild": {
      "repoName": "SonarSource/sonar-java",
      "branchName": "SONARJAVA-2820",
      "sha": "51530e3b618460f30da5cc87fe26990b685f18c7",
      "url": "http://github.com/SonarSource/sonar-java/commit/51530e3b618460f30da5cc87fe26990b685f18c7",
      "date": "Aug 9, 2018 11:36:03 AM"
    }
  },
  "projectMetrics": {
    "numberModules": 20,
    "numberSourceFiles": 979,
    "numberTestFiles": 856,
    "numberLibrariesFailingModule": 58
  },
  "tests": {
    "failingModule": "/root/workspace/SonarSource/sonar-java/413973182/java-jacoco",
    "overallMetrics": {
      "numberRunning": 2590,
      "numberPassing": 2580,
      "numberFailing": 2,
      "numberErroring": 8,
      "numberSkipping": 0,
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 2
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "isError": true,
          "occurrences": 8
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "org.sonar.plugins.jacoco.JaCoCoSensorTest",
        "numberRunning": 16,
        "numberPassing": 9,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "org.sonar.plugins.jacoco.JacocoReportReaderTest",
        "numberRunning": 5,
        "numberPassing": 4,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.sonar.plugins.jacoco.JaCoCoReportMergerTest",
        "numberRunning": 5,
        "numberPassing": 3,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "org.sonar.plugins.jacoco.JaCoCoSensorTest",
        "testMethod": "test_read_execution_data_after_6_2_using_correct_prop",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "org/jacoco/previous/core/data/ExecutionDataReader",
        "isError": true
      },
      {
        "testClass": "org.sonar.plugins.jacoco.JaCoCoSensorTest",
        "testMethod": "test_read_execution_data_after_6_2_using_deprecated_it_prop",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "org/jacoco/previous/core/data/ExecutionDataReader",
        "isError": true
      },
      {
        "testClass": "org.sonar.plugins.jacoco.JaCoCoReportMergerTest",
        "testMethod": "merge_different_format_should_fail_",
        "failureName": "java.lang.AssertionError",
        "detail": "\nExpected: (an instance of java.lang.IllegalStateException and exception with message a string containing \"You are trying to merge two different JaCoCo binary formats. Please use only one version of JaCoCo.\")\n     but: an instance of java.lang.IllegalStateException \u003cjava.lang.NoClassDefFoundError: org/jacoco/previous/core/data/ExecutionDataReader\u003e is a java.lang.NoClassDefFoundError\nStacktrace was: java.lang.NoClassDefFoundError: org/jacoco/previous/core/data/ExecutionDataReader\n at org.sonar.plugins.jacoco.JacocoReportReader.readJacocoReport(JacocoReportReader.java:74)\n at org.sonar.plugins.jacoco.JaCoCoReportMerger.loadSourceFiles(JaCoCoReportMerger.java:75)\n at org.sonar.plugins.jacoco.JaCoCoReportMerger.mergeReports(JaCoCoReportMerger.java:52)\n at org.sonar.plugins.jacoco.JaCoCoReportMergerTest.merge(JaCoCoReportMergerTest.java:91)\n at org.sonar.plugins.jacoco.JaCoCoReportMergerTest.merge_different_format_should_fail_(JaCoCoReportMergerTest.java:65)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:369)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:275)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:239)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:160)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)\n at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)\n",
        "isError": false
      },
      {
        "testClass": "org.sonar.plugins.jacoco.JaCoCoSensorTest",
        "testMethod": "test_read_execution_data_for_lines_covered_by_tests_v0_7_4",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "org/jacoco/previous/core/data/ExecutionDataReader",
        "isError": true
      },
      {
        "testClass": "org.sonar.plugins.jacoco.JaCoCoReportMergerTest",
        "testMethod": "merge_different_format_should_fail",
        "failureName": "java.lang.AssertionError",
        "detail": "\nExpected: (an instance of java.lang.IllegalStateException and exception with message a string containing \"You are trying to merge two different JaCoCo binary formats. Please use only one version of JaCoCo.\")\n     but: an instance of java.lang.IllegalStateException \u003cjava.lang.NoClassDefFoundError: org/jacoco/previous/core/data/ExecutionDataReader\u003e is a java.lang.NoClassDefFoundError\nStacktrace was: java.lang.NoClassDefFoundError: org/jacoco/previous/core/data/ExecutionDataReader\n at org.sonar.plugins.jacoco.JacocoReportReader.readJacocoReport(JacocoReportReader.java:74)\n at org.sonar.plugins.jacoco.JaCoCoReportMerger.loadSourceFiles(JaCoCoReportMerger.java:75)\n at org.sonar.plugins.jacoco.JaCoCoReportMerger.mergeReports(JaCoCoReportMerger.java:52)\n at org.sonar.plugins.jacoco.JaCoCoReportMergerTest.merge(JaCoCoReportMergerTest.java:91)\n at org.sonar.plugins.jacoco.JaCoCoReportMergerTest.merge_different_format_should_fail(JaCoCoReportMergerTest.java:58)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:369)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:275)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:239)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:160)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)\n at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)\n",
        "isError": false
      },
      {
        "testClass": "org.sonar.plugins.jacoco.JaCoCoSensorTest",
        "testMethod": "test_read_execution_data_for_lines_covered_by_tests_v0_7_4_incompatible",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "org/jacoco/previous/core/data/ExecutionDataReader",
        "isError": true
      },
      {
        "testClass": "org.sonar.plugins.jacoco.JaCoCoSensorTest",
        "testMethod": "test_read_execution_data_for_lines_covered_by_tests",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "org/jacoco/previous/core/data/ExecutionDataReader",
        "isError": true
      },
      {
        "testClass": "org.sonar.plugins.jacoco.JaCoCoSensorTest",
        "testMethod": "test_read_execution_data_after_6_2_using_deprecated_prop",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "org/jacoco/previous/core/data/ExecutionDataReader",
        "isError": true
      },
      {
        "testClass": "org.sonar.plugins.jacoco.JaCoCoSensorTest",
        "testMethod": "no_warning_with_both_prop_set",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "org/jacoco/previous/core/data/ExecutionDataReader",
        "isError": true
      },
      {
        "testClass": "org.sonar.plugins.jacoco.JacocoReportReaderTest",
        "testMethod": "not_existing_class_files_should_not_be_analyzed_for_previous",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "org/jacoco/previous/core/analysis/Analyzer",
        "isError": true
      }
    ]
  },
  "type": "only_fail"
}