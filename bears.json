{
  "repository": {
    "name": "pabender/JMRI",
    "githubId": 42846096,
    "url": "https://github.com/pabender/JMRI",
    "isFork": true,
    "original": {
      "name": "JMRI/JMRI",
      "githubId": 42789514,
      "url": "https://github.com/JMRI/JMRI"
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 419916947,
      "url": "http://travis-ci.org/pabender/JMRI/builds/419916947",
      "date": "Aug 24, 2018 3:39:57 AM"
    }
  },
  "commits": {
    "buggyBuild": {
      "repoName": "pabender/JMRI",
      "branchName": "testcreation",
      "sha": "1db7bfb575c558286864d884e9e4ceacb9944b62",
      "url": "http://github.com/pabender/JMRI/commit/1db7bfb575c558286864d884e9e4ceacb9944b62",
      "date": "Aug 24, 2018 3:01:34 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Aug 24, 2018 3:40:12 AM",
    "reproductionDateEnd": "Aug 24, 2018 6:18:24 AM",
    "totalDuration": 9486,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 454,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          454
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 140,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          1,
          139
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 2259,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          2259
        ]
      }
    },
    "projectRootPomPath": "./workspace/pabender/JMRI/419916947/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "tests": {
    "failingModule": "/root/workspace/pabender/JMRI/419916947",
    "overallMetrics": {
      "numberRunning": 33152,
      "numberPassing": 33138,
      "numberFailing": 10,
      "numberErroring": 4,
      "numberSkipping": 2068,
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "isError": true,
          "occurrences": 4
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 10
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "jmri.jmrix.dccpp.DCCppOpsModeProgrammerTest",
        "numberRunning": 6,
        "numberPassing": 4,
        "numberFailing": 1,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "jmri.jmrix.lenz.li100.LI100XNetProgrammerTest",
        "numberRunning": 21,
        "numberPassing": 20,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "jmri.jmrix.loconet.spjfile.SpjFileTest",
        "numberRunning": 3,
        "numberPassing": 2,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "jmri.jmrix.srcp.SRCPProgrammerTest",
        "numberRunning": 5,
        "numberPassing": 4,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "jmri.jmrix.lenz.hornbyelite.EliteXNetProgrammerTest",
        "numberRunning": 23,
        "numberPassing": 21,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "jmri.jmrix.can.cbus.CbusProgrammerTest",
        "numberRunning": 10,
        "numberPassing": 8,
        "numberFailing": 1,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "jmri.jmrix.dccpp.DCCppProgrammerTest",
        "numberRunning": 11,
        "numberPassing": 9,
        "numberFailing": 1,
        "numberErroring": 1,
        "numberSkipping": 2
      },
      {
        "testClass": "jmri.jmrix.openlcb.OlcbProgrammerTest",
        "numberRunning": 5,
        "numberPassing": 3,
        "numberFailing": 1,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "jmri.jmrix.nce.NceProgrammerTest",
        "numberRunning": 6,
        "numberPassing": 5,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 13
      }
    ],
    "failureDetails": [
      {
        "testClass": "jmri.jmrix.can.cbus.CbusProgrammerTest",
        "testMethod": "testSetGetMode",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Invalid requested mode: Register",
        "isError": true
      },
      {
        "testClass": "jmri.jmrix.lenz.hornbyelite.EliteXNetProgrammerTest",
        "testMethod": "testReadCvHighSequence",
        "failureName": "java.lang.AssertionError",
        "detail": "mode message sent expected:\u003c1\u003e but was:\u003c2\u003e",
        "isError": false
      },
      {
        "testClass": "jmri.jmrix.nce.NceProgrammerTest",
        "testMethod": "testDefault",
        "failureName": "java.lang.AssertionError",
        "detail": "Check Default expected:\u003cDirect\u003e but was:\u003cPaged\u003e",
        "isError": false
      },
      {
        "testClass": "jmri.jmrix.dccpp.DCCppOpsModeProgrammerTest",
        "testMethod": "testDefault",
        "failureName": "java.lang.AssertionError",
        "detail": "Check Default expected:\u003cDirect\u003e but was:\u003cOps Byte\u003e",
        "isError": false
      },
      {
        "testClass": "jmri.jmrix.openlcb.OlcbProgrammerTest",
        "testMethod": "testDefault",
        "failureName": "java.lang.AssertionError",
        "detail": "Check Default expected:\u003cDirect\u003e but was:\u003cOpenLCB\u003e",
        "isError": false
      },
      {
        "testClass": "jmri.jmrix.dccpp.DCCppProgrammerTest",
        "testMethod": "testDefault",
        "failureName": "java.lang.AssertionError",
        "detail": "Check Default expected:\u003cDirect\u003e but was:\u003cDirect Byte\u003e",
        "isError": false
      },
      {
        "testClass": "jmri.jmrix.dccpp.DCCppOpsModeProgrammerTest",
        "testMethod": "testSetGetMode",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Invalid requested mode: Register",
        "isError": true
      },
      {
        "testClass": "jmri.jmrix.openlcb.OlcbProgrammerTest",
        "testMethod": "testSetGetMode",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Invalid requested mode: Register",
        "isError": true
      },
      {
        "testClass": "jmri.jmrix.srcp.SRCPProgrammerTest",
        "testMethod": "testDefault",
        "failureName": "java.lang.AssertionError",
        "detail": "Check Default expected:\u003cDirect\u003e but was:\u003cDirect Byte\u003e",
        "isError": false
      },
      {
        "testClass": "jmri.jmrix.dccpp.DCCppProgrammerTest",
        "testMethod": "testSetGetMode",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Invalid requested mode: Register",
        "isError": true
      },
      {
        "testClass": "jmri.jmrix.lenz.li100.LI100XNetProgrammerTest",
        "testMethod": "testReadCvHighSequence",
        "failureName": "java.lang.AssertionError",
        "detail": "\"Receive Called by Programmer\" did not occur in time",
        "isError": false
      },
      {
        "testClass": "jmri.jmrix.loconet.spjfile.SpjFileTest",
        "testMethod": "testPlayWav",
        "failureName": "java.lang.AssertionError",
        "detail": "Unexpected ERROR or higher messages emitted",
        "isError": false
      },
      {
        "testClass": "jmri.jmrix.lenz.hornbyelite.EliteXNetProgrammerTest",
        "testMethod": "testWriteHighCvSequence",
        "failureName": "java.lang.AssertionError",
        "detail": "mode message sent expected:\u003c1\u003e but was:\u003c2\u003e",
        "isError": false
      },
      {
        "testClass": "jmri.jmrix.can.cbus.CbusProgrammerTest",
        "testMethod": "testDefault",
        "failureName": "java.lang.AssertionError",
        "detail": "Check Default expected:\u003cDirect\u003e but was:\u003cCBUSNODEVARMODE\u003e",
        "isError": false
      }
    ]
  },
  "projectMetrics": {
    "numberModules": 1,
    "numberSourceFiles": 4064,
    "numberTestFiles": 4516,
    "numberLibrariesFailingModule": 138
  },
  "type": "only_fail"
}