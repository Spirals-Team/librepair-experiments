{
  "projectMetrics": {
    "numberModules": 1,
    "numberSourceFiles": 615,
    "numberTestFiles": 695,
    "numberLibrariesFailingModule": 30
  },
  "repository": {
    "name": "INRIA/spoon",
    "githubId": 14176513,
    "url": "https://github.com/INRIA/spoon",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": true,
    "pullRequestId": 2245
  },
  "builds": {
    "buggyBuild": {
      "id": 405295582,
      "url": "http://travis-ci.org/INRIA/spoon/builds/405295582",
      "date": "Jul 18, 2018 12:51:09 PM"
    }
  },
  "commits": {
    "buggyBuild": {
      "repoName": "INRIA/spoon",
      "branchName": "master",
      "sha": "2d24df40a731fadd450ee9d6d0ae9bbe9e0cc0ce",
      "url": "http://github.com/INRIA/spoon/commit/2d24df40a731fadd450ee9d6d0ae9bbe9e0cc0ce",
      "date": "Jul 18, 2018 12:35:01 PM"
    },
    "buggyBuildForkRepo": {
      "repoName": "surli/spoon",
      "branchName": "anonymous-class-name",
      "sha": "09c05adda68bc725124f2a1152243a7feecbba76",
      "url": "https://github.com/surli/spoon/commit/09c05adda68bc725124f2a1152243a7feecbba76",
      "date": "Jul 18, 2018 12:35:01 PM"
    },
    "buggyBuildBaseRepo": {
      "repoName": "INRIA/spoon",
      "branchName": "master",
      "sha": "97b9e128f5646a01e777f1454e8f3c60d7f7a979",
      "url": "https://github.com/INRIA/spoon/commit/97b9e128f5646a01e777f1454e8f3c60d7f7a979",
      "date": "Jul 18, 2018 9:43:04 AM"
    }
  },
  "tests": {
    "failingModule": "/root/workspace/INRIA/spoon/405295582",
    "overallMetrics": {
      "numberRunning": 1531,
      "numberPassing": 1495,
      "numberFailing": 26,
      "numberErroring": 10,
      "numberSkipping": 4,
      "failures": [
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "isError": true,
          "occurrences": 3
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 16
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true,
          "occurrences": 4
        },
        {
          "failureName": "spoon.SpoonException",
          "isError": true,
          "occurrences": 1
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "isError": false,
          "occurrences": 10
        },
        {
          "failureName": "java.lang.Exception",
          "isError": true,
          "occurrences": 1
        },
        {
          "failureName": "spoon.support.SpoonClassNotFoundException",
          "isError": true,
          "occurrences": 1
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "numberRunning": 5,
        "numberPassing": 3,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "numberRunning": 16,
        "numberPassing": 15,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "numberRunning": 8,
        "numberPassing": 7,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.staticFieldAccess.StaticAccessTest",
        "numberRunning": 2,
        "numberPassing": 1,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.testing.CtElementAssertTest",
        "numberRunning": 5,
        "numberPassing": 4,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.api.APITest",
        "numberRunning": 23,
        "numberPassing": 22,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "numberRunning": 8,
        "numberPassing": 7,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
        "numberRunning": 7,
        "numberPassing": 5,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "numberRunning": 31,
        "numberPassing": 29,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.MavenLauncherTest",
        "numberRunning": 6,
        "numberPassing": 4,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "numberRunning": 28,
        "numberPassing": 27,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "numberRunning": 43,
        "numberPassing": 40,
        "numberFailing": 3,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "numberRunning": 13,
        "numberPassing": 12,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.secondaryclasses.ClassesTest",
        "numberRunning": 6,
        "numberPassing": 4,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "numberRunning": 17,
        "numberPassing": 11,
        "numberFailing": 1,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.visibility.VisibilityTest",
        "numberRunning": 5,
        "numberPassing": 2,
        "numberFailing": 3,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.compilationunit.GetBinaryFilesTest",
        "numberRunning": 5,
        "numberPassing": 4,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "numberRunning": 45,
        "numberPassing": 41,
        "numberFailing": 4,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.main.MainTest",
        "numberRunning": 14,
        "numberPassing": 13,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "spoon.test.secondaryclasses.ClassesTest",
        "testMethod": "testAnonymousClass",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c[]1\u003e but was:\u003c[\u003canonymous\u003e]1\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.secondaryclasses.ClassesTest",
        "testMethod": "testIsAnonymousMethodInCtClass",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c...sses.AnonymousClass$[]1\u003e but was:\u003c...sses.AnonymousClass$[\u003canonymous\u003e]1\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testAnonymousClassesHaveAnEmptyStringForItsNameInNoClasspath",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c[]1\u003e but was:\u003c[\u003canonymous\u003e]1\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.MavenLauncherTest",
        "testMethod": "mavenLauncherTestMultiModulesAndVariables",
        "failureName": "java.lang.AssertionError",
        "detail": "Content of classpath: ",
        "isError": false
      },
      {
        "testClass": "spoon.test.compilationunit.GetBinaryFilesTest",
        "testMethod": "testAnonymousClasses",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c4\u003e but was:\u003c2\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testTargetsOfInvInInnerClass",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.MavenLauncherTest",
        "testMethod": "spoonMavenLauncherTest",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c23\u003e but was:\u003c0\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testGenerateClassWithSelfReferences",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c[spoon.test.generated.ACloneOfAClassWithMethodsAndRefs, void, boolean, spoon.test.generated.ACloneOfAClassWithMethodsAndRefs$1Bar, java.lang.Object, int, spoon.test.generated.ACloneOfAClassWithMethodsAndRefs$Local]\u003e but was:\u003c[spoon.test.generated.ACloneOfAClassWithMethodsAndRefs, void, boolean, spoon.test.generated.ACloneOfAClassWithMethodsAndRefs$\u003canonymous\u003e1Bar, java.lang.Object, int, spoon.test.generated.ACloneOfAClassWithMethodsAndRefs$Local]\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testGenerateMethodWithSelfReferences",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c[spoon.test.generated.ACloneOfAClassWithMethodsAndRefs, void, spoon.test.generated.ACloneOfAClassWithMethodsAndRefs$1Bar, java.lang.Object, spoon.test.generated.ACloneOfAClassWithMethodsAndRefs$Local]\u003e but was:\u003c[spoon.test.generated.ACloneOfAClassWithMethodsAndRefs, void, spoon.test.generated.ACloneOfAClassWithMethodsAndRefs$\u003canonymous\u003e1Bar, java.lang.Object, spoon.test.generated.ACloneOfAClassWithMethodsAndRefs$Local]\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.testing.CtElementAssertTest",
        "testMethod": "testEqualityBetweenTwoDifferentCtElement",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cjava.lang.NullPointerException\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverridingMethodFromAbstractClass",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c...ses.AbstractTostada$[]1\u003e but was:\u003c...ses.AbstractTostada$[\u003canonymous\u003e]1\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testCtThisAccess",
        "failureName": "java.lang.IndexOutOfBoundsException",
        "detail": "Index: 0, Size: 0",
        "isError": true
      },
      {
        "testClass": "spoon.test.visibility.VisibilityTest",
        "testMethod": "testFullyQualifiedNameOfTypeReferenceWithGeneric",
        "failureName": "java.lang.AssertionError",
        "detail": "Can\u0027t compile testclasses because Syntax error on token \"1D\", invalid Type at /root/workspace/INRIA/spoon/405295582/target/spooned/spoon/test/visibility_generics/testclasses/spoon/test/visibility/testclasses/A2.java:45",
        "isError": false
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "testMethod": "testAllTypeReferencesToALocalTypeShouldNotStartWithNumber",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testTypeDeclaredInAnonymousClass",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testTargetsOfInvInAnonymousClass",
        "failureName": "java.lang.IndexOutOfBoundsException",
        "detail": "Index: 0, Size: 0",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testNewClassGenerics",
        "failureName": "java.lang.AssertionError",
        "detail": "Can\u0027t compile testclasses because Syntax error, insert \"enum Identifier\" to complete EnumHeaderName at /root/workspace/INRIA/spoon/405295582/target/spooned/spoon/test/generics/testclasses/Mole.java:7",
        "isError": false
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testInvocationGenerics",
        "failureName": "java.lang.AssertionError",
        "detail": "Can\u0027t compile testclasses because Syntax error, insert \"enum Identifier\" to complete EnumHeaderName at /root/workspace/INRIA/spoon/405295582/target/spooned/spoon/test/generics/testclasses/Mole.java:7",
        "isError": false
      },
      {
        "testClass": "spoon.test.visibility.VisibilityTest",
        "testMethod": "testInvocationVisibilityInFieldDeclaration",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "spoon.test.main.MainTest",
        "testMethod": "testMain_checkShadow",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "testNewInstance",
        "failureName": "spoon.SpoonException",
        "detail": "java.lang.ClassNotFoundException: \u003canonymous\u003e1X",
        "isError": true
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "testMethod": "testSrcMainJava",
        "failureName": "spoon.support.SpoonClassNotFoundException",
        "detail": "cannot load class: spoon.pattern.PatternParameterConfigurator$\u003canonymous\u003e1Result",
        "isError": true
      },
      {
        "testClass": "spoon.test.visibility.VisibilityTest",
        "testMethod": "testVisibilityOfClassesNamedByClassesInJavaLangPackage",
        "failureName": "java.lang.AssertionError",
        "detail": "Can\u0027t compile testclasses because Syntax error on token \"1D\", invalid Type at /root/workspace/INRIA/spoon/405295582/target/spooned/spoon/test/visibility_package/testclasses/spoon/test/visibility/testclasses/A.java:25",
        "isError": false
      },
      {
        "testClass": "spoon.test.staticFieldAccess.StaticAccessTest",
        "testMethod": "testProcessAndCompile",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testTargetsOfFieldAccessInInnerClass",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testGenericsOnLocalType",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003cnew []Cook\u003cjava.lang.Strin...\u003e but was:\u003cnew [\u003canonymous\u003e1]Cook\u003cjava.lang.Strin...\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
        "testMethod": "testCtNewClassInNoClasspath",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c[]1\u003e but was:\u003c[\u003canonymous\u003e]1\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testTargetsOfFieldInAnonymousClass",
        "failureName": "java.lang.IndexOutOfBoundsException",
        "detail": "Index: 0, Size: 0",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "testMethod": "testSubInheritanceHierarchyFunction",
        "failureName": "java.lang.AssertionError",
        "detail": "The spoon.test.refactoring.parameter.testclasses.TypeB$1 not found",
        "isError": false
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testClassDeclaredInALambda",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c...d.testclasses.Tapas$[1$]InnerSubscriber\u003e but was:\u003c...d.testclasses.Tapas$[\u003canonymous\u003e1$\u003canonymous\u003e]InnerSubscriber\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testConstructorCallGenerics",
        "failureName": "java.lang.AssertionError",
        "detail": "Can\u0027t compile testclasses because Syntax error, insert \"enum Identifier\" to complete EnumHeaderName at /root/workspace/INRIA/spoon/405295582/target/spooned/spoon/test/generics/testclasses/Mole.java:7",
        "isError": false
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
        "testMethod": "testMoreThan9NewClass",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c...ss.testclasses.Foo2$[]12\u003e but was:\u003c...ss.testclasses.Foo2$[\u003canonymous\u003e]12\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testSetterInNodes",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "testMethod": "testCtParameterRemoveRefactoring",
        "failureName": "java.lang.AssertionError",
        "detail": "Can\u0027t compile testclasses because Syntax error on token \"method1\", AnnotationName expected after this token at /root/workspace/INRIA/spoon/405295582/target/spooned/spoon/test/refactoring/parameter/testclasses/TypeB.java:39",
        "isError": false
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverridingMethodFromSubClassOfAbstractClass",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c...ses.AbstractTostada$[]1\u003e but was:\u003c...ses.AbstractTostada$[\u003canonymous\u003e]1\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverridingMethodFromSubClassOfInterface",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c...ses.AbstractTostada$[]1\u003e but was:\u003c...ses.AbstractTostada$[\u003canonymous\u003e]1\u003e",
        "isError": false
      }
    ]
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Jul 18, 2018 12:51:47 PM",
    "reproductionDateEnd": "Jul 18, 2018 1:17:49 PM",
    "totalDuration": 1556,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 11,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          11
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 88,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          5,
          83
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 1013,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          1013
        ]
      }
    },
    "projectRootPomPath": "./workspace/INRIA/spoon/405295582/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "type": "only_fail"
}