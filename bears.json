{
  "repository": {
    "name": "SpoonLabs/nopol",
    "githubId": 35675774,
    "url": "https://github.com/SpoonLabs/nopol",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": true,
    "pullRequestId": 169
  },
  "builds": {
    "buggyBuild": {
      "id": 411626453,
      "url": "http://travis-ci.org/SpoonLabs/nopol/builds/411626453",
      "date": "Aug 3, 2018 10:29:40 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Aug 3, 2018 10:29:52 AM",
    "reproductionDateEnd": "Aug 3, 2018 10:42:40 AM",
    "totalDuration": 764,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 73,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          73
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 104,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          4,
          100
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 33,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          33
        ]
      }
    },
    "projectRootPomPath": "./workspace/SpoonLabs/nopol/411626453/nopol/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "commits": {
    "buggyBuild": {
      "repoName": "SpoonLabs/nopol",
      "branchName": "master",
      "sha": "dc371c7b09f519c7061441f2d4151e34aedf24bc",
      "url": "http://github.com/SpoonLabs/nopol/commit/dc371c7b09f519c7061441f2d4151e34aedf24bc",
      "date": "Aug 3, 2018 9:48:03 AM"
    },
    "buggyBuildForkRepo": {
      "repoName": "surli/nopol",
      "branchName": "improve-patch-generation",
      "sha": "3b1dd71fb4eae22ff16e128e5779e03bc2c9d10c",
      "url": "https://github.com/surli/nopol/commit/3b1dd71fb4eae22ff16e128e5779e03bc2c9d10c",
      "date": "Aug 3, 2018 9:48:03 AM"
    },
    "buggyBuildBaseRepo": {
      "repoName": "SpoonLabs/nopol",
      "branchName": "master",
      "sha": "a1bb7f773a213284c9875954d0fbfd546b06e02d",
      "url": "https://github.com/SpoonLabs/nopol/commit/a1bb7f773a213284c9875954d0fbfd546b06e02d",
      "date": "Jul 18, 2018 3:31:39 PM"
    }
  },
  "projectMetrics": {
    "numberModules": 1,
    "numberSourceFiles": 0,
    "numberTestFiles": 0,
    "numberLibrariesFailingModule": 50
  },
  "tests": {
    "failingModule": "/root/workspace/SpoonLabs/nopol/411626453/nopol",
    "overallMetrics": {
      "numberRunning": 352,
      "numberPassing": 290,
      "numberFailing": 8,
      "numberErroring": 54,
      "numberSkipping": 11,
      "failures": [
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "isError": true,
          "occurrences": 14
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "isError": true,
          "occurrences": 37
        },
        {
          "failureName": "spoon.compiler.InvalidClassPathException",
          "isError": true,
          "occurrences": 2
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true,
          "occurrences": 1
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "isError": false,
          "occurrences": 8
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "fr.inria.lille.localization.CocospoonLocalizerTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "numberRunning": 14,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 14,
        "numberSkipping": 1
      },
      {
        "testClass": "fr.inria.lille.commons.synthesis.CodeSynthesisTest",
        "numberRunning": 16,
        "numberPassing": 8,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "fr.inria.lille.commons.trace.ValuesCollectorTest",
        "numberRunning": 22,
        "numberPassing": 21,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 4
      },
      {
        "testClass": "fr.inria.lille.repair.infinitel.InfinitelTest",
        "numberRunning": 10,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 10,
        "numberSkipping": 3
      },
      {
        "testClass": "fr.inria.lille.commons.smt.SMTLibTest",
        "numberRunning": 31,
        "numberPassing": 26,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 1
      },
      {
        "testClass": "fr.inria.lille.diff.PatchGeneratorTest",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 8,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "fr.inria.lille.repair.synthesis.DynamothCodeGenesisTest",
        "numberRunning": 10,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 10,
        "numberSkipping": 0
      },
      {
        "testClass": "fr.inria.lille.localization.GzoltarLocalizerTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "fr.inria.lille.evo.TestPatchEvo",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "fr.inria.lille.localization.DumbLocalizerTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "fr.inria.lille.repair.synthesis.DynamothCodeGenesisTest",
        "testMethod": "test2",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.infinitel.InfinitelTest",
        "testMethod": "bookkeepingInLoopsOfExample3",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "testAPI",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.synthesis.DynamothCodeGenesisTest",
        "testMethod": "test8",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.commons.smt.SMTLibTest",
        "testMethod": "noSlutionForAProblemWithoutSolution",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.commons.synthesis.CodeSynthesisTest",
        "testMethod": "scriptResolutionWithoutComponents",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.diff.PatchGeneratorTest",
        "testMethod": "preconditionInvocationInElseTest",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
        "isError": false
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "example1Fix",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.synthesis.DynamothCodeGenesisTest",
        "testMethod": "test6",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.synthesis.DynamothCodeGenesisTest",
        "testMethod": "test4",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.infinitel.InfinitelTest",
        "testMethod": "theReturnMustBeForTheWhile",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.commons.synthesis.CodeSynthesisTest",
        "testMethod": "scriptResolutionWithOneTheory",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.diff.PatchGeneratorTest",
        "testMethod": "preconditionMultiLineStatementTest",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
        "isError": false
      },
      {
        "testClass": "fr.inria.lille.repair.synthesis.DynamothCodeGenesisTest",
        "testMethod": "test13",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.infinitel.InfinitelTest",
        "testMethod": "infinitelExample2",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "preconditionThenConditional",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.commons.smt.SMTLibTest",
        "testMethod": "problemWithNegativeIntegers",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.commons.synthesis.CodeSynthesisTest",
        "testMethod": "testSynthesisTernaryOperator",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.diff.PatchGeneratorTest",
        "testMethod": "preconditionElseIfTest",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
        "isError": false
      },
      {
        "testClass": "fr.inria.lille.repair.infinitel.InfinitelTest",
        "testMethod": "numberOfReturnsInExample1",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "preconditionThenConditionalPrecondition",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "conditionalThenPreconditionalUsePrecond",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.commons.smt.SMTLibTest",
        "testMethod": "allSolutionsOfAModel3",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.infinitel.InfinitelTest",
        "testMethod": "theBreakMustBeForTheWhile",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.synthesis.DynamothCodeGenesisTest",
        "testMethod": "test3",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.infinitel.InfinitelTest",
        "testMethod": "infinitelExample5",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.localization.DumbLocalizerTest",
        "testMethod": "testDumbLocalizerWithPatch",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.infinitel.InfinitelTest",
        "testMethod": "nestedLoopIsNotInfiniteInExample3",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "example8Fix",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.commons.trace.ValuesCollectorTest",
        "testMethod": "collectConstantsWorth",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "example2Fix",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.infinitel.InfinitelTest",
        "testMethod": "numberOfBreaksInExample3",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.infinitel.InfinitelTest",
        "testMethod": "infinitelExample4",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "example5Fix",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "testSkippingRegressionStepLeadToAPatch",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.synthesis.DynamothCodeGenesisTest",
        "testMethod": "test12",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.synthesis.DynamothCodeGenesisTest",
        "testMethod": "test5",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "example6Fix",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.synthesis.DynamothCodeGenesisTest",
        "testMethod": "testKaliPatches",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "testIgnoreTestCouldCreateOtherPatches",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.commons.synthesis.CodeSynthesisTest",
        "testMethod": "scriptResolutionWithoutInputs",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.diff.PatchGeneratorTest",
        "testMethod": "simpleConditionChangeTest",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
        "isError": false
      },
      {
        "testClass": "fr.inria.lille.commons.synthesis.CodeSynthesisTest",
        "testMethod": "synthesisWithCharactersInSpecifications",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.diff.PatchGeneratorTest",
        "testMethod": "preconditionInvocationInConditionTest",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
        "isError": false
      },
      {
        "testClass": "fr.inria.lille.repair.infinitel.InfinitelTest",
        "testMethod": "unbreakableLoops",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.evo.TestPatchEvo",
        "testMethod": "test",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.commons.synthesis.CodeSynthesisTest",
        "testMethod": "scriptResolutionWithOneTheoryBooleanOutput",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.commons.smt.SMTLibTest",
        "testMethod": "solutionForAProblemWithUniqueSolution",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.commons.synthesis.CodeSynthesisTest",
        "testMethod": "goldbachConjectureSynthesis",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.diff.PatchGeneratorTest",
        "testMethod": "preconditionInvocationTest",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
        "isError": false
      },
      {
        "testClass": "fr.inria.lille.localization.GzoltarLocalizerTest",
        "testMethod": "testGzoltarLocalizer",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.localization.CocospoonLocalizerTest",
        "testMethod": "testOchiaiCoCoSpoonLocalizer",
        "failureName": "spoon.compiler.InvalidClassPathException",
        "detail": "/root/workspace/SpoonLabs/nopol/411626453/nopol/../test-projects/target/classes does not exist, it is not a valid folder",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.commons.smt.SMTLibTest",
        "testMethod": "allSolutionsOfAModel",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.diff.PatchGeneratorTest",
        "testMethod": "simplePreconditionIfTest",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
        "isError": false
      },
      {
        "testClass": "fr.inria.lille.diff.PatchGeneratorTest",
        "testMethod": "conditionChangeElseIfTest",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
        "isError": false
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "example3Fix",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.localization.DumbLocalizerTest",
        "testMethod": "testDumbLocalizerWithPatch3",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "example7Fix",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.localization.DumbLocalizerTest",
        "testMethod": "testDumbLocalizer",
        "failureName": "spoon.compiler.InvalidClassPathException",
        "detail": "/root/workspace/SpoonLabs/nopol/411626453/nopol/../test-projects/target/classes does not exist, it is not a valid folder",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.commons.synthesis.CodeSynthesisTest",
        "testMethod": "scriptResolutionWithTwoTheories",
        "failureName": "org.smtlib.SolverProcess$ProverException",
        "detail": "The solver has not been started",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.synthesis.DynamothCodeGenesisTest",
        "testMethod": "test1",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      },
      {
        "testClass": "fr.inria.lille.repair.nopol.NopolTest",
        "testMethod": "conditionalThenPreconditionnal",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
        "isError": true
      }
    ]
  },
  "type": "only_fail"
}