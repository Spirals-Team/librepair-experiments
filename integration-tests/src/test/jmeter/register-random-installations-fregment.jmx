<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="TP - Register random installation" enabled="true">
      <stringProp name="TestPlan.comments">Requires parameters SERVER_HOST, SERVER_PORT, SERVER_PROTOCOL, CONTEXT_ROOT, IOS_TOKENID, AND_TOKENID, ALIAS</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TF - Register random installation" enabled="false"/>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SC - Register random installation" enabled="true"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${SERVER_HOST}</stringProp>
            <stringProp name="HTTPSampler.port">${SERVER_PORT}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">${SERVER_PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BS PreProcessor - Random Alias" enabled="true">
            <boolProp name="resetInterpreter">true</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">// Generate random string for Android tokens
public static String generateString(Random rng, int length, String characters) {
    char[] text = new char[length];
    for (int i = 0; i &lt; length; i++)
    {
        text[i] = characters.charAt(rng.nextInt(characters.length()));
    }
    return new String(text);
}

vars.put(&quot;ALIAS&quot;, this.generateString(new Random(), 16,&quot;abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ0123456789@&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SC - Register Android" enabled="true">
            <stringProp name="TestPlan.comments">Make sure pre processors are executed once.</stringProp>
          </GenericController>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BS PreProcessor - Android Token" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">true</boolProp>
              <stringProp name="script">// Generate random string for Android tokens
public static String generateString(Random rng, int length, String characters) {
    char[] text = new char[length];
    for (int i = 0; i &lt; length; i++)
    {
        text[i] = characters.charAt(rng.nextInt(characters.length()));
    }
    return new String(text);
}

vars.put(&quot;AND_TOKENID&quot;, this.generateString(new Random(), 101,&quot;abcdefghigklmnopqrstuvwxyz0123456789-_&quot;));
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="IC - Android Registraion" enabled="true">
              <stringProp name="IncludeController.includepath">./register-android-installation-fregment.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SC - Register iOS" enabled="true">
            <stringProp name="TestPlan.comments">Make sure pre processors are executed once.</stringProp>
          </GenericController>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BS PreProcessor - iOS Token" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">true</boolProp>
              <stringProp name="script">// Generate random string for Android tokens
public static String generateString(Random rng, int length, String characters) {
    char[] text = new char[length];
    for (int i = 0; i &lt; length; i++)
    {
        text[i] = characters.charAt(rng.nextInt(characters.length()));
    }
    return new String(text);
}

vars.put(&quot;IOS_TOKENID&quot;, this.generateString(new Random(), 64,&quot;abcdef0123456789-&quot;));
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="IC - iOS Registraion" enabled="true">
              <stringProp name="IncludeController.includepath">./register-ios-installation-fregment.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="IC- Enable Android" enabled="true">
            <stringProp name="IncludeController.includepath">./enable-android-installation-fregment.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="IC - Enable iOS" enabled="true">
            <stringProp name="IncludeController.includepath">./enable-ios-installation-fregment.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
