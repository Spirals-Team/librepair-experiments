/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.gbif.pipelines.io.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RankedName extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RankedName\",\"namespace\":\"org.gbif.pipelines.io.avro\",\"fields\":[{\"name\":\"key\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rank\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"Rank\",\"symbols\":[\"DOMAIN\",\"SUPERKINGDOM\",\"KINGDOM\",\"SUBKINGDOM\",\"INFRAKINGDOM\",\"SUPERPHYLUM\",\"PHYLUM\",\"SUBPHYLUM\",\"INFRAPHYLUM\",\"SUPERCLASS\",\"CLASS\",\"SUBCLASS\",\"INFRACLASS\",\"PARVCLASS\",\"SUPERLEGION\",\"LEGION\",\"SUBLEGION\",\"INFRALEGION\",\"SUPERCOHORT\",\"COHORT\",\"SUBCOHORT\",\"INFRACOHORT\",\"MAGNORDER\",\"SUPERORDER\",\"GRANDORDER\",\"ORDER\",\"SUBORDER\",\"INFRAORDER\",\"PARVORDER\",\"SUPERFAMILY\",\"FAMILY\",\"SUBFAMILY\",\"INFRAFAMILY\",\"SUPERTRIBE\",\"TRIBE\",\"SUBTRIBE\",\"INFRATRIBE\",\"SUPRAGENERIC_NAME\",\"GENUS\",\"SUBGENUS\",\"INFRAGENUS\",\"SECTION\",\"SUBSECTION\",\"SERIES\",\"SUBSERIES\",\"INFRAGENERIC_NAME\",\"SPECIES_AGGREGATE\",\"SPECIES\",\"INFRASPECIFIC_NAME\",\"GREX\",\"SUBSPECIES\",\"CULTIVAR_GROUP\",\"CONVARIETY\",\"INFRASUBSPECIFIC_NAME\",\"PROLES\",\"RACE\",\"NATIO\",\"ABERRATION\",\"MORPH\",\"VARIETY\",\"SUBVARIETY\",\"FORM\",\"SUBFORM\",\"PATHOVAR\",\"BIOVAR\",\"CHEMOVAR\",\"MORPHOVAR\",\"PHAGOVAR\",\"SEROVAR\",\"CHEMOFORM\",\"FORMA_SPECIALIS\",\"CULTIVAR\",\"STRAIN\",\"OTHER\",\"UNRANKED\"]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Integer key;
  @Deprecated public java.lang.String name;
  @Deprecated public org.gbif.pipelines.io.avro.Rank rank;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public RankedName() {}

  /**
   * All-args constructor.
   */
  public RankedName(java.lang.Integer key, java.lang.String name, org.gbif.pipelines.io.avro.Rank rank) {
    this.key = key;
    this.name = name;
    this.rank = rank;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return key;
    case 1: return name;
    case 2: return rank;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: key = (java.lang.Integer)value$; break;
    case 1: name = (java.lang.String)value$; break;
    case 2: rank = (org.gbif.pipelines.io.avro.Rank)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'key' field.
   */
  public java.lang.Integer getKey() {
    return key;
  }

  /**
   * Sets the value of the 'key' field.
   * @param value the value to set.
   */
  public void setKey(java.lang.Integer value) {
    this.key = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'rank' field.
   */
  public org.gbif.pipelines.io.avro.Rank getRank() {
    return rank;
  }

  /**
   * Sets the value of the 'rank' field.
   * @param value the value to set.
   */
  public void setRank(org.gbif.pipelines.io.avro.Rank value) {
    this.rank = value;
  }

  /** Creates a new RankedName RecordBuilder */
  public static org.gbif.pipelines.io.avro.RankedName.Builder newBuilder() {
    return new org.gbif.pipelines.io.avro.RankedName.Builder();
  }
  
  /** Creates a new RankedName RecordBuilder by copying an existing Builder */
  public static org.gbif.pipelines.io.avro.RankedName.Builder newBuilder(org.gbif.pipelines.io.avro.RankedName.Builder other) {
    return new org.gbif.pipelines.io.avro.RankedName.Builder(other);
  }
  
  /** Creates a new RankedName RecordBuilder by copying an existing RankedName instance */
  public static org.gbif.pipelines.io.avro.RankedName.Builder newBuilder(org.gbif.pipelines.io.avro.RankedName other) {
    return new org.gbif.pipelines.io.avro.RankedName.Builder(other);
  }
  
  /**
   * RecordBuilder for RankedName instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RankedName>
    implements org.apache.avro.data.RecordBuilder<RankedName> {

    private java.lang.Integer key;
    private java.lang.String name;
    private org.gbif.pipelines.io.avro.Rank rank;

    /** Creates a new Builder */
    private Builder() {
      super(org.gbif.pipelines.io.avro.RankedName.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.gbif.pipelines.io.avro.RankedName.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.key)) {
        this.key = data().deepCopy(fields()[0].schema(), other.key);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.rank)) {
        this.rank = data().deepCopy(fields()[2].schema(), other.rank);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing RankedName instance */
    private Builder(org.gbif.pipelines.io.avro.RankedName other) {
            super(org.gbif.pipelines.io.avro.RankedName.SCHEMA$);
      if (isValidValue(fields()[0], other.key)) {
        this.key = data().deepCopy(fields()[0].schema(), other.key);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.rank)) {
        this.rank = data().deepCopy(fields()[2].schema(), other.rank);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'key' field */
    public java.lang.Integer getKey() {
      return key;
    }
    
    /** Sets the value of the 'key' field */
    public org.gbif.pipelines.io.avro.RankedName.Builder setKey(java.lang.Integer value) {
      validate(fields()[0], value);
      this.key = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'key' field has been set */
    public boolean hasKey() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'key' field */
    public org.gbif.pipelines.io.avro.RankedName.Builder clearKey() {
      key = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.String getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public org.gbif.pipelines.io.avro.RankedName.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'name' field */
    public org.gbif.pipelines.io.avro.RankedName.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'rank' field */
    public org.gbif.pipelines.io.avro.Rank getRank() {
      return rank;
    }
    
    /** Sets the value of the 'rank' field */
    public org.gbif.pipelines.io.avro.RankedName.Builder setRank(org.gbif.pipelines.io.avro.Rank value) {
      validate(fields()[2], value);
      this.rank = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'rank' field has been set */
    public boolean hasRank() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'rank' field */
    public org.gbif.pipelines.io.avro.RankedName.Builder clearRank() {
      rank = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public RankedName build() {
      try {
        RankedName record = new RankedName();
        record.key = fieldSetFlags()[0] ? this.key : (java.lang.Integer) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.rank = fieldSetFlags()[2] ? this.rank : (org.gbif.pipelines.io.avro.Rank) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
