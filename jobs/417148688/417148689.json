{
  "@type": "job",
  "@href": "/v3/job/417148689",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "delete_log": false,
    "debug": false,
    "cancel": false,
    "restart": false
  },
  "id": 417148689,
  "allow_failure": false,
  "number": "218.1",
  "state": "failed",
  "started_at": "2018-08-17T07:58:45Z",
  "finished_at": "2018-08-17T08:01:52Z",
  "build": {
    "@type": "build",
    "@href": "/v3/build/417148688",
    "@representation": "minimal",
    "id": 417148688,
    "number": "218",
    "state": "failed",
    "duration": 187,
    "event_type": "push",
    "previous_state": "errored",
    "pull_request_title": null,
    "pull_request_number": null,
    "started_at": "2018-08-17T07:58:45Z",
    "finished_at": "2018-08-17T08:01:52Z",
    "private": false
  },
  "queue": "builds.ec2",
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/14830922",
    "@representation": "minimal",
    "id": 14830922,
    "name": "riak-java-client",
    "slug": "leusonmario/riak-java-client"
  },
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 125320841,
    "sha": "416a901ff1de8e4eb559db21ac5045078d278e86",
    "ref": "refs/heads/develop",
    "message": "Fixing tombstone support\n\nThere were a number of issues with the client as to how tombstones\nwere being handled. These changes create (IMHO) sane and consistent\nbehavior regardless of protocol (HTTP/PB)\n\n1) Tombstones will be returned if the returnDeletedVClock(true) method is\ncalled on StoreObject / FetchObject. If this is not called, tombstones will\neither not be retrieved in the case of PB or silently discarded in the\ncase of HTTP. They will not be passed to the Converter or the ConflictResolver\n\n2) Regardless of whether there is only a tombstone or a set of siblings\nthat contain a tombstone, an object will be returned from the underlying\noriginal clients if tombstones have been requested. This solves a problem\nwhere previously two different behaviors occured depending on which of the\nabove was the case.\n\n3) The default JSONConverter will no longer crash if a tombstone is passed\nto it; a new instance of their POJO will be created and returned. In addition\nas a convenience a new annotation (@RiakTombstone) is available. The user\ncan annotate a boolean field in their POJO which will be set to true if\nthe object represents a tombstone.\n\n4) The IRiakObject interface and our DefaultRiakObject now have a isDeleted()\nmethod. This will return true if the object represents a tombstone.",
    "compare_url": "https://github.com/leusonmario/riak-java-client/compare/f8f52e1800e4...416a901ff1de",
    "committed_at": null
  },
  "owner": {
    "@type": "user",
    "@href": "/v3/user/387815",
    "@representation": "minimal",
    "id": 387815,
    "login": "leusonmario"
  },
  "stage": null,
  "created_at": "2018-08-17T07:58:11.256Z",
  "updated_at": "2018-08-17T08:01:52.688Z",
  "private": false
}