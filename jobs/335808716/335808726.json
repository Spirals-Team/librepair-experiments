{
  "@type": "job",
  "@href": "/v3/job/335808726",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "delete_log": false,
    "debug": false,
    "cancel": false,
    "restart": false
  },
  "id": 335808726,
  "allow_failure": false,
  "number": "29010.10",
  "state": "passed",
  "started_at": "2018-01-31T20:28:38Z",
  "finished_at": "2018-01-31T21:03:52Z",
  "build": {
    "@type": "build",
    "@href": "/v3/build/335808716",
    "@representation": "minimal",
    "id": 335808716,
    "number": "29010",
    "state": "failed",
    "duration": 18154,
    "event_type": "pull_request",
    "previous_state": "failed",
    "pull_request_title": "Fix potential deadlock in QueryContext::setMemoryPool",
    "pull_request_number": 9869,
    "started_at": "2018-01-31T20:28:23Z",
    "finished_at": "2018-01-31T21:09:10Z",
    "private": false
  },
  "queue": "builds.gce",
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/1504827",
    "@representation": "minimal",
    "id": 1504827,
    "name": "presto",
    "slug": "prestodb/presto"
  },
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 99818130,
    "sha": "835ab4b8020d43fd44c27fb2feb3be055bf23b6a",
    "ref": "refs/pull/9869/merge",
    "message": "Fix potential deadlock in QueryContext::setMemoryPool\n\nPreviously when setMemoryPool is called while an operator is allocating memory\nit's possible that these two threads deadlock as they acquire the monitors in\ndifferent orders. The thread calling setMemoryPool was acquiring the monitor of\nthe QueryContext instance/this first and then the monitor of the user/revocable\nmemory contexts in the queryMemoryContext. However, the driver threads reserving memory\nwere acquiring the monitors of the user/revocable memory contexts first, and\nthen the monitor of the QueryContext instance.\n\nThis change solve the issue by preventing locking of the user/revocable memory contexts\nin the queryMemoryContext by getting the same information from the MemoryPool.",
    "compare_url": "https://github.com/prestodb/presto/pull/9869",
    "committed_at": "2018-01-31T20:25:14Z"
  },
  "owner": {
    "@type": "organization",
    "@href": "/v3/org/61142",
    "@representation": "minimal",
    "id": 61142,
    "login": "prestodb"
  },
  "stage": null,
  "created_at": "2018-01-31T20:27:53.179Z",
  "updated_at": "2018-06-04T01:09:37.781Z",
  "private": false
}