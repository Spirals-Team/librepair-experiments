{
  "@type": "job",
  "@href": "/v3/job/348489722",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "delete_log": false,
    "debug": false,
    "cancel": false,
    "restart": false
  },
  "id": 348489722,
  "allow_failure": false,
  "number": "1682.1",
  "state": "passed",
  "started_at": "2018-03-03T01:18:18Z",
  "finished_at": "2018-03-03T01:31:53Z",
  "build": {
    "@type": "build",
    "@href": "/v3/build/348489721",
    "@representation": "minimal",
    "id": 348489721,
    "number": "1682",
    "state": "failed",
    "duration": 10728,
    "event_type": "push",
    "previous_state": "passed",
    "pull_request_title": null,
    "pull_request_number": null,
    "started_at": "2018-03-03T05:26:21Z",
    "finished_at": "2018-03-03T05:29:29Z",
    "private": false
  },
  "queue": "builds.gce",
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/5021489",
    "@representation": "minimal",
    "id": 5021489,
    "name": "mariadb-connector-j",
    "slug": "MariaDB/mariadb-connector-j"
  },
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 103690959,
    "sha": "86020a2f05aacf938cf95be0942f2b9c03b0d541",
    "ref": "refs/heads/develop",
    "message": "[CONJ-583] Additional to ensure connection state when using intermediate proxy.\nIf a failover occurs during this internal queries, and there is some intermediate proxy that doesn't do is the job, even writing to socket doesn't permit to ensure socket state, leaving the driver hanging indefinitely.\nSocket timeout is set for internal connection queries",
    "compare_url": "https://github.com/MariaDB/mariadb-connector-j/compare/ae52eee61dd6...86020a2f05aa",
    "committed_at": "2018-03-03T00:07:01Z"
  },
  "owner": {
    "@type": "organization",
    "@href": "/v3/org/134792",
    "@representation": "minimal",
    "id": 134792,
    "login": "MariaDB"
  },
  "stage": null,
  "created_at": "2018-03-03T00:07:12.146Z",
  "updated_at": "2018-06-04T06:26:54.069Z",
  "private": false
}