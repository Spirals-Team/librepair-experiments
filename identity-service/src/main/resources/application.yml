spring.application:
    name: identity-service

server:
  port: ${IDENTITY_SERVICE_PORT:9002}
  contextPath: /uaa

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

security.provider: oauth2-local #could be oauth2-server, ldap, openid, kerberos etc.

install:
  data_dir: /Users/jayeshkapadnis/Projects/hashmap/HashmapAnalyticsFramework/identity-service/src/main/resources

# JWT Token parameters
security.jwt:
  tokenExpirationTime: "${JWT_TOKEN_EXPIRATION_TIME:9000000}" # Number of seconds (15 mins)
  refreshTokenExpTime: "${JWT_REFRESH_TOKEN_EXPIRATION_TIME:36000000}" # Seconds (1 hour)
  tokenIssuer: "${JWT_TOKEN_ISSUER:hashmapinc.com}"
  tokenSigningKey: "${JWT_TOKEN_SIGNING_KEY:hashmapIncDefaultSigningKey}"

oauth2.clients:
  ui:
    clientSecret: ${UI_PASSWORD:password}
    grantTypes:
      - refresh_token
      - password
    scopes:
      - ui
      - server
  workflow-service:
    clientSecret: ${WORKFLOW_SERVICE_PASSWORD:password}
    grantTypes:
      - refresh_token
      - client_credentials
    scopes:
      - server
  functions-service:
      clientSecret: password
      grantTypes:
        - refresh_token
        - client_credentials
      scopes:
        - server
  metadata-service:
      clientSecret: ${METADATA_SERVICE_PASSWORD:password}
      grantTypes:
        - refresh_token
        - client_credentials
      scopes:
        - server
  tempus:
       clientSecret: ${TEMPUS_SERVICE_PASSWORD:tempus}
       grantTypes:
        - refresh_token
        - client_credentials
        - password
       scopes:
        - server

users:
  provider: database

#spring.jpa.properties.javax.persistence.schema-generation.create-source: metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action: create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target: create.sql

# HSQLDB DAO Configuration
spring:
  data:
    jpa:
      repositories:
        enabled: "true"
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: "create"
      #show_sql: true
      #format_sql: true
    database-platform: "${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.HSQLDialect}"
  datasource:
    driverClassName: "${SPRING_DRIVER_CLASS_NAME:org.hsqldb.jdbc.JDBCDriver}"
    url: "${SPRING_DATASOURCE_URL:jdbc:hsqldb:file:${SQL_DATA_FOLDER:/tmp}/identity;sql.enforce_size=false}"
    username: "${SPRING_DATASOURCE_USERNAME:sa}"
    password: "${SPRING_DATASOURCE_PASSWORD:}"