spring.application:
    name: identity-service-test

eureka:
  client:
    enabled: false

security.provider: oauth2-local #could be oauth2-server, ldap, openid, kerberos etc.

install:
  data_dir: /Users/jayeshkapadnis/Projects/hashmap/HashmapAnalyticsFramework/identity-service/src/main/resources

# JWT Token parameters
security.jwt:
  tokenExpirationTime: "9000000" # Number of seconds (15 mins)
  refreshTokenExpTime: "36000000" # Seconds (1 hour)
  tokenIssuer: "hashmapinc.com"
  tokenSigningKey: "defaultSigningKey"

oauth2.clients:
  ui:
    clientSecret: password
    grantTypes:
      - refresh_token
      - password
      - client_credentials
    scopes:
      - ui
      - server

users:
  provider: database

#spring.jpa.properties.javax.persistence.schema-generation.create-source: metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action: create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target: create.sql

# HSQLDB DAO Configuration
spring:
  data:
    jpa:
      repositories:
        enabled: "true"
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: "create"
      #show_sql: true
      #format_sql: true
    database-platform: "org.hibernate.dialect.HSQLDialect"
  datasource:
    driverClassName: "org.hsqldb.jdbc.JDBCDriver"
    url: "jdbc:hsqldb:file:/tmp/identityTestDB;sql.enforce_size=false"
    username: "sa"
    password: ""