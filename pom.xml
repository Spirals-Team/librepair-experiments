<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>io.vertx</groupId>
    <artifactId>vertx-ext-parent</artifactId>
    <version>34</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>

  <artifactId>vertx-mysql-postgresql-client</artifactId>
  <version>3.6.0-SNAPSHOT</version>

  <name>Vert.x MySQL/PostgreSQL Client</name>

  <properties>
    <stack.version>3.6.0-SNAPSHOT</stack.version>
    <scala.version>2.12.4</scala.version>
    <asyncdriver.version>0.2.21</asyncdriver.version>
    <!-- Empty host => uses embedded DB -->
    <postgresqlHost></postgresqlHost>
    <postgresqlPort>5432</postgresqlPort>
    <postgresqlSslPort>54321</postgresqlSslPort>
    <postgresqlDatabase>testdb</postgresqlDatabase>
    <postgresqlUsername>vertx</postgresqlUsername>
    <postgresqlPassword>password</postgresqlPassword>
    <mysqlHost></mysqlHost>
    <mysqlPort>3306</mysqlPort>
    <mysqlDatabase>testdb</mysqlDatabase>
    <mysqlUsername>vertx</mysqlUsername>
    <mysqlPassword>password</mysqlPassword>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-dependencies</artifactId>
        <version>${stack.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.21</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-sql-common</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-unit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.mauricio</groupId>
      <artifactId>postgresql-async_2.12</artifactId>
      <version>${asyncdriver.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-all</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.github.mauricio</groupId>
      <artifactId>mysql-async_2.12</artifactId>
      <version>${asyncdriver.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-all</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-codegen</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-docgen</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
      <version>4.12</version>
    </dependency>
    <dependency>
      <groupId>com.jayway.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>1.6.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.10.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>ru.yandex.qatools.embed</groupId>
      <artifactId>postgresql-embedded</artifactId>
      <version>2.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.wix</groupId>
      <artifactId>wix-embedded-mysql</artifactId>
      <version>4.1.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <systemPropertyVariables>
              <vertx.test.timeout>60</vertx.test.timeout>
              <io.netty.leakDetectionLevel>PARANOID</io.netty.leakDetectionLevel>
              <postgresql.host>${postgresqlHost}</postgresql.host>
              <postgresql.port>${postgresqlPort}</postgresql.port>
              <postgresql.ssl.port>${postgresqlSslPort}</postgresql.ssl.port>
              <postgresql.database>${postgresqlDatabase}</postgresql.database>
              <postgresql.username>${postgresqlUsername}</postgresql.username>
              <postgresql.password>${postgresqlPassword}</postgresql.password>
              <mysql.host>${mysqlHost}</mysql.host>
              <mysql.port>${mysqlPort}</mysql.port>
              <mysql.database>${mysqlDatabase}</mysql.database>
              <mysql.username>${mysqlUsername}</mysql.username>
              <mysql.password>${mysqlPassword}</mysql.password>
            </systemPropertyVariables>
            <argLine>-server -Xms128m -Xmx1024m -XX:NewRatio=2</argLine>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <!-- To launch the database in docker container using docker-machine, execute:
       mvn clean install -Pdocker -Dhost=(docker-machine ip default)
       where `default` is the docker machine you use.
      -->
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <execution>
                <id>start-db</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>${project.basedir}/src/test/resources/docker</workingDirectory>
                  <executable>./start-db.sh</executable>
                </configuration>
              </execution>

              <execution>
                <id>stop-db</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>${project.basedir}/src/test/resources/docker</workingDirectory>
                  <executable>./stop-db.sh</executable>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
