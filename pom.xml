<?xml version="1.0"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.javawebinar</groupId>
    <artifactId>topjava</artifactId>
    <packaging>war</packaging>

    <version>4.0-SNAPSHOT</version>

    <name>Calories Management</name>
    <url>http://topjava.herokuapp.com/</url>

    <properties>
        <!-- Plugins: compiler -->
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <!-- Plugins: compiler, resources -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <version.logback>1.2.3</version.logback>
        <version.slf4j>1.7.25</version.slf4j>
        <version.janino>3.0.6</version.janino>
        <version.guava>23.6-jre</version.guava>
        <version.javax.servlet-api>3.1.0</version.javax.servlet-api>
        <version.jstl>1.2</version.jstl>
        <version.spring>4.3.13.RELEASE</version.spring>
        <version.hibernate>5.2.12.Final</version.hibernate>
        <version.hibernate-validator>6.0.7.Final</version.hibernate-validator>
        <version.javax-el>3.0.0</version.javax-el>
        <version.postgresql>42.1.4</version.postgresql>
        <version.h2>1.4.196</version.h2>
        <version.junit>4.12</version.junit>
        <!--<version.hamcrest>2.0.0.0</version.hamcrest>-->
        <version.hamcrest>1.3</version.hamcrest>
        <version.mockito>2.13.0</version.mockito>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- https://docs.spring.io/spring/docs/4.3.12.RELEASE/spring-framework-reference/htmlsingle/#overview-maven-bom -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${version.spring}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- https://docs.spring.io/spring/docs/4.3.12.RELEASE/spring-framework-reference/htmlsingle/#overview-avoiding-commons-logging -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${version.slf4j}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${version.slf4j}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${version.slf4j}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${version.logback}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- https://logback.qos.ch/setup.html#janino -->
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>${version.janino}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${version.guava}</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${version.javax.servlet-api}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- moved to javax.servlet.jsp.jstl:jstl:1.2 -->
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${version.jstl}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${version.hibernate}</version>
        </dependency>
        <!--
         - http://hibernate.org/validator/documentation/getting-started/#project-set-up
         - In order to use Hibernate Validator, In order to use Hibernate Validator.
         - This transitively pulls in the dependency to the Bean Validation API
         - (javax.validation:validation-api:2.0.1.Final).
         -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${version.hibernate-validator}</version>
        </dependency>
        <!--
         - http://hibernate.org/validator/documentation/getting-started/#unified-expression-language-el
         - Hibernate Validator also requires an implementation of the Unified Expression Language (JSR 341)
         - for evaluating dynamic expressions in constraint violation messages.
         - In a Java SE environment, you have to add an implementation as dependency to your POM file.
         - For instance, you can add the following dependency to use the JSR 341 reference implementation:
        -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
            <version>${version.javax-el}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${version.postgresql}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${version.h2}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
<!--
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-junit</artifactId>
            <version>${version.hamcrest}</version>
            <scope>test</scope>
        </dependency>
-->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>${version.hamcrest}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${version.mockito}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>clean package</defaultGoal>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <!-- See https://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html on plugin's config -->
                <configuration>
                    <!-- https://maven.apache.org/plugins/maven-compiler-plugin/non-javac-compilers.html -->
                    <compilerId>javac-with-errorprone</compilerId>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                    <!-- maven-compiler-plugin defaults to targeting Java 5, but this javac only supports >=6 -->
                    <source>8</source>
                    <target>8</target>
                    <optimize>true</optimize>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-compiler-javac-errorprone</artifactId>
                        <version>2.8.2</version>
                    </dependency>
                    <!--
                     - override plexus-compiler-javac-errorprone's dependency
                     - on Error Prone with the latest version
                     -->
                    <dependency>
                        <groupId>com.google.errorprone</groupId>
                        <artifactId>error_prone_core</artifactId>
                        <version>2.1.2</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <executions>
                    <execution>
                        <id>run</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>deploy</id>
                        <goals>
                            <goal>deploy-only</goal>
                        </goals>
                        <configuration>
                            <url>http://localhost:8080/manager/text</url>
                            <username>manager</username>
                            <password>manager</password>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
