Comparing source compatibility of /root/workspace/apache/flink/383515229/flink-core/target/flink-core-1.6-SNAPSHOT.jar against /root/./workspace/apache/flink/383515229/.m2/org/apache/flink/flink-core/1.4.0/flink-core-1.4.0.jar
***  MODIFIED CLASS: PUBLIC STATIC org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW INTERFACE: java.io.Serializable
	+++  NEW FIELD: PUBLIC(+) boolean isZipped
	+++  NEW FIELD: PUBLIC(+) byte[] blobKey
	+++  NEW CONSTRUCTOR: PUBLIC(+) DistributedCache$DistributedCacheEntry(java.lang.String, java.lang.Boolean, byte[], boolean)
	+++  NEW CONSTRUCTOR: PUBLIC(+) DistributedCache$DistributedCacheEntry(java.lang.String, java.lang.Boolean, byte[])
===  UNCHANGED CLASS: PUBLIC org.apache.flink.api.common.ExecutionConfig  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL int PARALLELISM_AUTO_MAX
		+++  NEW ANNOTATION: java.lang.Deprecated
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.BroadcastVariableInitializer  (not serializable)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.CoGroupFunction  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.CombineFunction  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.CrossFunction  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.FilterFunction  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.FlatJoinFunction  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.FlatMapFunction  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.FoldFunction  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.GroupCombineFunction  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.GroupReduceFunction  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.JoinFunction  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.MapFunction  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.MapPartitionFunction  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.Partitioner  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.common.functions.ReduceFunction  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
***  MODIFIED CLASS: PUBLIC ABSTRACT org.apache.flink.api.common.io.FileInputFormat  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	===  UNCHANGED METHOD: PUBLIC org.apache.flink.core.fs.Path getFilePath()
		+++  NEW ANNOTATION: java.lang.Deprecated
	+++  NEW METHOD: PUBLIC(+) org.apache.flink.core.fs.Path[] getFilePaths()
	+++  NEW METHOD: PUBLIC(+) void setFilePaths(java.lang.String[])
	+++  NEW METHOD: PUBLIC(+) void setFilePaths(org.apache.flink.core.fs.Path[])
	+++  NEW METHOD: PUBLIC(+) boolean supportsMultiPaths()
		+++  NEW ANNOTATION: java.lang.Deprecated
***  MODIFIED CLASS: PUBLIC ABSTRACT org.apache.flink.api.common.io.FileOutputFormat  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	***  MODIFIED METHOD: PUBLIC (<- PRIVATE) STATIC void initDefaultsFromConfiguration(org.apache.flink.configuration.Configuration)
***  MODIFIED CLASS: PUBLIC org.apache.flink.api.common.serialization.TypeInformationSerializationSchema  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW CONSTRUCTOR: PUBLIC(+) TypeInformationSerializationSchema(org.apache.flink.api.common.typeinfo.TypeInformation, org.apache.flink.api.common.typeutils.TypeSerializer)
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.flink.api.java.functions.KeySelector  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
***  MODIFIED CLASS: PUBLIC org.apache.flink.core.fs.Path  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW METHOD: PUBLIC(+) STATIC(+) org.apache.flink.core.fs.Path fromLocalFile(java.io.File)
+++  NEW INTERFACE: PUBLIC(+) ABSTRACT(+) org.apache.flink.util.function.FunctionWithException  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- -1.-1
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) java.lang.Object apply(java.lang.Object)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
+++  NEW INTERFACE: PUBLIC(+) ABSTRACT(+) org.apache.flink.util.function.RunnableWithException  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- -1.-1
	+++  NEW INTERFACE: org.apache.flink.util.function.ThrowingRunnable
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) void run()
		+++  NEW EXCEPTION: java.lang.Exception
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
+++  NEW INTERFACE: PUBLIC(+) ABSTRACT(+) org.apache.flink.util.function.SupplierWithException  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- -1.-1
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) java.lang.Object get()
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
+++  NEW INTERFACE: PUBLIC(+) ABSTRACT(+) org.apache.flink.util.function.ThrowingConsumer  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- -1.-1
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) void accept(java.lang.Object)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
