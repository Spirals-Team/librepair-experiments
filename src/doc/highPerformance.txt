Database 
读写分离 master slave syncronize 解决读瓶颈
垂直分库 解决写瓶颈
水平分库（sharding）
应用层：即各类业务应用系统
数据访问层：统一的数据访问接口，对上层应用层屏蔽读写分库、分库、缓存等技术细节。
数据层：对DB数据进行分片，并可动态的添加shard分片。

水平分库的技术关键点在于数据访问层的设计，数据访问层主要包含三部分：

ID生成器：生成每张表的主键
数据源路由：将每次DB操作路由到不同的shard数据源上
缓存： 采用Redis实现数据的缓存，提升性能

Reference：http://www.wtoutiao.com/p/1ef7Ps6.html