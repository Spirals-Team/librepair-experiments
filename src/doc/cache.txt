http://www.tuicool.com/articles/m2qAfqn

bean validation
http://jinnianshilongnian.iteye.com/blog/1990081


@Service
public class CacheDemoServiceImpl implements CacheDemoService {

  /**
   * 缓存的key
   */
  public static final String THING_ALL_KEY   = "\"thing_all\"";
  /**
   * value属性表示使用哪个缓存策略，缓存策略在ehcache.xml
   */
  public static final String DEMO_CACHE_NAME = "demo";
   
  @CacheEvict(value = DEMO_CACHE_NAME,key = THING_ALL_KEY)
  @Override
  public void create(Thing thing){
    Long id = getNextId ();
    thing.setId (id);
    data.put (id, thing);
  } 
    
   @Cacheable(value = DEMO_CACHE_NAME,key = "#thing.getId()+'thing'")
  @Override
  public Thing findById(Long id){
    System.err.println ("没有走缓存！" + id);
    return data.get (id);
  }

    @Cacheable(value = DEMO_CACHE_NAME,key = THING_ALL_KEY)
  @Override
  public List<Thing> findAll(){
    return Lists.newArrayList (data.values ());
  }
   
   
    @Override
  @CachePut(value = DEMO_CACHE_NAME,key = "#thing.getId()+'thing'")
  @CacheEvict(value = DEMO_CACHE_NAME,key = THING_ALL_KEY)
  public Thing update(Thing thing){
    System.out.println (thing);
    data.put (thing.getId (), thing);
    return thing;
  }

  @CacheEvict(value = DEMO_CACHE_NAME)
  @Override
  public void delete(Long id){
    data.remove (id);
  }
   
}