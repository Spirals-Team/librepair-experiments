<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">
	<property name="LOG_FILE_MAX_SIZE" value="1MB" />
	<property name="LOG_FILE_MAX_HISTORY" value="1" />
	<property name="LOG_TOTOAL_SIZE_CAP" value="50MB" />

	<conversionRule conversionWord="clr"
		converterClass="org.springframework.boot.logging.logback.ColorConverter" />
	<conversionRule conversionWord="wex"
		converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
	<conversionRule conversionWord="wEx"
		converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
	<property name="CONSOLE_LOG_PATTERN"
		value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />
	<property name="FILE_LOG_PATTERN"
		value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />

	<logger name="org.apache.catalina.startup.DigesterFactory"
		level="ERROR" />
	<logger name="org.apache.catalina.util.LifecycleBase" level="ERROR" />
	<logger name="org.apache.coyote.http11.Http11NioProtocol" level="WARN" />
	<logger name="org.apache.sshd.common.util.SecurityUtils" level="WARN" />
	<logger name="org.apache.tomcat.util.net.NioSelectorPool" level="WARN" />
	<logger name="org.eclipse.jetty.util.component.AbstractLifeCycle"
		level="ERROR" />
	<logger name="org.hibernate.validator.internal.util.Version"
		level="WARN" />



	<property name="LOG_FILE"
		value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/spring.log}" />
	<!-- Append Starter -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>${CONSOLE_LOG_PATTERN}</pattern>
		</encoder>
	</appender>

	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- Support multiple-JVM writing to the same log file -->
    		<!-- <prudent>true</prudent> -->
		<encoder>
			<pattern>${FILE_LOG_PATTERN}</pattern>
		</encoder>
		<file>${LOG_FILE}</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz</fileNamePattern>
			<!-- each file should be at most 10MB, keep 10 days' worth of history 
				, but at most 500MB total size -->
			<maxFileSize>${LOG_FILE_MAX_SIZE:-10MB}</maxFileSize>
			<maxHistory>${LOG_FILE_MAX_HISTORY:-10}</maxHistory>
			<totalSizeCap>${LOG_TOTOAL_SIZE_CAP:-50MB}</totalSizeCap>
		</rollingPolicy>
	</appender>

	<appender name="ASYNCCONSOLE" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="CONSOLE" />
		<!-- <queueSize>500</queueSize> <maxFlushTime>1000</maxFlushTime> -->
	</appender>

	<appender name="ASYNCFILE" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="FILE" />
		<!-- <queueSize>500</queueSize> <maxFlushTime>1000</maxFlushTime> -->
	</appender>

	<root level="DEBUG">
		<appender-ref ref="ASYNCCONSOLE" />
		<appender-ref ref="ASYNCFILE" />
	</root>
</configuration>