array [1..3] of int: X_INTRODUCED_16 = [100,90,10];
array [1..3] of int: X_INTRODUCED_18 = [-100,-90,-10];
array [1..3] of int: X_INTRODUCED_29 = [111,85,10];
array [1..3] of int: X_INTRODUCED_31 = [-111,-85,-10];
array [1..3] of int: X_INTRODUCED_43 = [9999999,2,10];
array [1..3] of int: X_INTRODUCED_45 = [-9999999,-2,-10];
array [1..13] of int: X_INTRODUCED_59 = [1,-100,-111,-9999999,-90,-85,-2,-10,-10,-10,-10,-5,-3];
array [1..3] of int: X_INTRODUCED_61 = [1,1,1];
var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..10000435: total:: output_var:: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
array [1..9] of var int: x:: output_array([1..3,1..3]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8];
array [1..13] of var int: X_INTRODUCED_58 ::var_is_introduced  = [total,X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_21,X_INTRODUCED_34,X_INTRODUCED_48];
constraint int_lin_eq(X_INTRODUCED_59,X_INTRODUCED_58,0):: defines_var(total);
constraint int_lin_eq(X_INTRODUCED_61,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2],1);
constraint int_lin_eq(X_INTRODUCED_61,[X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5],1);
constraint int_lin_eq(X_INTRODUCED_61,[X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8],1);
constraint int_lin_le_reif(X_INTRODUCED_16,[X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_6],149,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint int_lin_le_reif(X_INTRODUCED_18,[X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_6],-1,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint array_bool_and([X_INTRODUCED_17,X_INTRODUCED_19],X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint bool2int(X_INTRODUCED_20,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_lin_le_reif(X_INTRODUCED_29,[X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_7],49,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_le_reif(X_INTRODUCED_31,[X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_7],-1,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint array_bool_and([X_INTRODUCED_30,X_INTRODUCED_32],X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint bool2int(X_INTRODUCED_33,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_lin_le_reif(X_INTRODUCED_43,[X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_8],99,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_lin_le_reif(X_INTRODUCED_45,[X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_8],-1,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint array_bool_and([X_INTRODUCED_44,X_INTRODUCED_46],X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint bool2int(X_INTRODUCED_47,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
solve  minimize total;
