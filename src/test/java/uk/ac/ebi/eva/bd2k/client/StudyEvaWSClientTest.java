/*
 * Copyright 2017 EMBL - European Bioinformatics Institute
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package uk.ac.ebi.eva.bd2k.client;

import org.junit.Before;
import org.junit.Test;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.test.web.client.MockRestServiceServer;
import org.springframework.web.client.RestTemplate;

import uk.ac.ebi.eva.bd2k.model.VariantStudy;

import java.net.URI;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.springframework.test.web.client.match.MockRestRequestMatchers.method;
import static org.springframework.test.web.client.match.MockRestRequestMatchers.requestTo;
import static org.springframework.test.web.client.response.MockRestResponseCreators.withSuccess;

public class StudyEvaWSClientTest {

    private RestTemplate restTemplate;

    private static final String STUDY_WS_URL = "MOCKSERVER/eva/webservices/rest/v1/meta/studies/all";

    @Before
    public void setUp() throws Exception {
        restTemplate = new RestTemplate();
        String body = Files.readAllLines(
                Paths.get(this.getClass().getResource("/allStudiesWSResponse.json").toURI())).stream().reduce((s, s2) -> s + s2).get();
        MockRestServiceServer server = MockRestServiceServer.bindTo(restTemplate).build();
        server.expect(requestTo(STUDY_WS_URL)).andExpect(method(HttpMethod.GET)).andRespond(withSuccess(body, MediaType.APPLICATION_JSON));
    }

    @Test
    public void getAllStudies() throws Exception {
        StudyClient evaStudyWSClient = new StudyEvaWSClient(STUDY_WS_URL, restTemplate);
        List<VariantStudy> studies = evaStudyWSClient.getAllStudies();

        assertEquals(3, studies.size());

        checkStudy("PRJEB629", "Sequencing of five barley cultivars.", "Hordeum vulgare subsp. vulgare",
                   "IPK-Gatersleben", "Hordeum vulgare subsp. vulgare",
                   new URI("http://plants.ensembl.org/Hordeum_vulgare/Info/Index"), "unspecified",
                   "Whole Genome Sequencing", studies);
        checkStudy("PRJEB13625",
                   "Whole genome resequencing of the human parasite Schistosoma mansoni reveals population history and effects of selection",
                   "Whole genome sequences of S. mansoni and S. rodhaini aligned to S. masoni v5.2 reference. Samples collected from Africa and Carribean to faciliate coalescence modelling of population history",
                   "Wellcome Trust Sanger Institute", "Schistosoma mansoni", new URI("http://parasite.wormbase.org/"),
                   "Illumina Genome Analyzer IIx", "Whole Genome Sequencing", studies);
        checkStudy("PRJEB9374",
                   "Detection and characterization of small insertions and deletions in modern layer chicken genomes",
                   "The present project reports on the detection and characterisation of high quality InDels (Small insertions and deletions) from the whole-genome analysis of several modern layer chicken lines from diverse breeds. The data was generated by Illumina sequencing of 163 chickens originating from 11 commercial and 5 experimental layer lines. The InDel calling was performed with SAMtools and Dindel package followed by stringent filtration. This study provides an in-depth characterisation of the InDels by adopting different approaches such as annotation against known genes, prediction of deleteriousness of nonframeshift variants, etc.",
                   "The Roslin Institute and Royal (Dick) School of Veterinary Studies", "Gallus gallus",
                   new URI("http://www.roslin.ed.ac.uk/about-roslin/"), "Illumina", "Whole Genome Sequencing", studies);
    }

    private void checkStudy(String id, String name, String description, String center, String species, URI url,
                            String platform, String experimentType, List<VariantStudy> studies) {
        VariantStudy study = studies.stream().filter(s -> s.getId().equals(id)).findFirst().get();
        assertEquals(name, study.getName());
        assertEquals(description, study.getDescription());
        assertEquals(center, study.getCenter());
        assertEquals(species, study.getSpeciesScientificName());
        assertEquals(url, study.getUrl());
        assertEquals(platform, study.getPlatform());
        assertEquals(experimentType, study.getExperimentType());
    }

}