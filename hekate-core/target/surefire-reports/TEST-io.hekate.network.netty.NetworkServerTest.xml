<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="io.hekate.network.netty.NetworkServerTest" time="11.3" tests="96" errors="0" skipped="8" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.121-b13"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/root/workspace/hekate-io/hekate/383632883"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="skip.gulp" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="findbugs.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/root/workspace/hekate-io/hekate/383632883"/>
    <property name="checkstyle.skip" value="true"/>
    <property name="java.runtime.version" value="1.8.0_121-8u121-b13-1~bpo8+1-b13"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="skip.npm" value="true"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="gpg.skip" value="true"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="cobertura.skip" value="true"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="license.skip" value="true"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="org.slf4j.simpleLogger.levelInBrackets" value="true"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="skip.bower" value="true"/>
    <property name="maven.repo.local" value="/root/./workspace/hekate-io/hekate/383632883/.m2"/>
    <property name="os.version" value="3.10.0-862.2.3.el7.x86_64"/>
    <property name="user.home" value="/root"/>
    <property name="user.timezone" value="Europe/Paris"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="root"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="skipITs" value="true"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -B -D enforcer.skip=true -D dependency-check.skip=true -D skipITs=true -D cobertura.skip=true -D maven.repo.local=/root/./workspace/hekate-io/hekate/383632883/.m2 -D rat.skip=true -D findbugs.skip=true -D skip.bower=true -D gpg.skip=true -D checkstyle.skip=true -D skip.gulp=true -D license.skip=true -D skip.npm=true test"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="dependency-check.skip" value="true"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_121"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="enforcer.skip" value="true"/>
    <property name="rat.skip" value="true"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="org.slf4j.simpleLogger.showThreadName" value="false"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="testPortAssignment[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.009"/>
  <testcase name="testInvalidProtocolVersion[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.013"/>
  <testcase name="testAutoAccept[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.312"/>
  <testcase name="testStartStop[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.01"/>
  <testcase name="testHandlerContext[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.021"/>
  <testcase name="testMultipleServers[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.016"/>
  <testcase name="testUnregisterHandlerWithClients[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.013"/>
  <testcase name="testGetConnected[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.134"/>
  <testcase name="testAddressChangeOnFailover[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.313"/>
  <testcase name="testServerClientInExternalThread[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.142"/>
  <testcase name="testInvalidMagicBytes[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.013"/>
  <testcase name="testMultipleStop[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.307"/>
  <testcase name="testFailover[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.314"/>
  <testcase name="testWrongMessageType[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.013"/>
  <testcase name="testDuplicatedProtocolFailure[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.007"/>
  <testcase name="testInvalidAddress[0: transport=NIO]" classname="io.hekate.network.netty.NetworkServerTest" time="0.007"/>
  <testcase name="testPortAssignment[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.007"/>
  <testcase name="testInvalidProtocolVersion[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0">
    <skipped/>
    <system-out><![CDATA[#######################################
# Starting: testInvalidProtocolVersion[1: transport=NIO, ssl=JDK](io.hekate.network.netty.NetworkServerTest) [start-time=13:38:20.606]
#--------------------------------------
#--------------------------------------
# Finished: testInvalidProtocolVersion[1: transport=NIO, ssl=JDK](io.hekate.network.netty.NetworkServerTest) [duration=7ms]
#######################################


]]></system-out>
  </testcase>
  <testcase name="testAutoAccept[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.63"/>
  <testcase name="testStartStop[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.01"/>
  <testcase name="testHandlerContext[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.055"/>
  <testcase name="testMultipleServers[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.016"/>
  <testcase name="testUnregisterHandlerWithClients[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.056"/>
  <testcase name="testGetConnected[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.216"/>
  <testcase name="testAddressChangeOnFailover[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.31"/>
  <testcase name="testServerClientInExternalThread[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.18"/>
  <testcase name="testInvalidMagicBytes[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0">
    <skipped/>
    <system-out><![CDATA[#######################################
# Starting: testInvalidMagicBytes[1: transport=NIO, ssl=JDK](io.hekate.network.netty.NetworkServerTest) [start-time=13:38:22.091]
#--------------------------------------
#--------------------------------------
# Finished: testInvalidMagicBytes[1: transport=NIO, ssl=JDK](io.hekate.network.netty.NetworkServerTest) [duration=7ms]
#######################################


]]></system-out>
  </testcase>
  <testcase name="testMultipleStop[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.308"/>
  <testcase name="testFailover[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.309"/>
  <testcase name="testWrongMessageType[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.027"/>
  <testcase name="testDuplicatedProtocolFailure[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.006"/>
  <testcase name="testInvalidAddress[1: transport=NIO, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.007"/>
  <testcase name="testPortAssignment[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.006"/>
  <testcase name="testInvalidProtocolVersion[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0">
    <skipped/>
    <system-out><![CDATA[#######################################
# Starting: testInvalidProtocolVersion[2: transport=NIO, ssl=OPEN_SSL](io.hekate.network.netty.NetworkServerTest) [start-time=13:38:22.763]
#--------------------------------------
#--------------------------------------
# Finished: testInvalidProtocolVersion[2: transport=NIO, ssl=OPEN_SSL](io.hekate.network.netty.NetworkServerTest) [duration=5ms]
#######################################


]]></system-out>
  </testcase>
  <testcase name="testAutoAccept[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.315"/>
  <testcase name="testStartStop[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.01"/>
  <testcase name="testHandlerContext[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.036"/>
  <testcase name="testMultipleServers[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.015"/>
  <testcase name="testUnregisterHandlerWithClients[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.046"/>
  <testcase name="testGetConnected[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.245"/>
  <testcase name="testAddressChangeOnFailover[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.31"/>
  <testcase name="testServerClientInExternalThread[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.165"/>
  <testcase name="testInvalidMagicBytes[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0">
    <skipped/>
    <system-out><![CDATA[#######################################
# Starting: testInvalidMagicBytes[2: transport=NIO, ssl=OPEN_SSL](io.hekate.network.netty.NetworkServerTest) [start-time=13:38:23.912]
#--------------------------------------
#--------------------------------------
# Finished: testInvalidMagicBytes[2: transport=NIO, ssl=OPEN_SSL](io.hekate.network.netty.NetworkServerTest) [duration=6ms]
#######################################


]]></system-out>
  </testcase>
  <testcase name="testMultipleStop[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.308"/>
  <testcase name="testFailover[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.311"/>
  <testcase name="testWrongMessageType[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.018"/>
  <testcase name="testDuplicatedProtocolFailure[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.007"/>
  <testcase name="testInvalidAddress[2: transport=NIO, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.009"/>
  <testcase name="testPortAssignment[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.007"/>
  <testcase name="testInvalidProtocolVersion[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.012"/>
  <testcase name="testAutoAccept[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.331"/>
  <testcase name="testStartStop[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.008"/>
  <testcase name="testHandlerContext[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.021"/>
  <testcase name="testMultipleServers[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.012"/>
  <testcase name="testUnregisterHandlerWithClients[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.04"/>
  <testcase name="testGetConnected[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.187"/>
  <testcase name="testAddressChangeOnFailover[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.308"/>
  <testcase name="testServerClientInExternalThread[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.163"/>
  <testcase name="testInvalidMagicBytes[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.011"/>
  <testcase name="testMultipleStop[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.307"/>
  <testcase name="testFailover[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.307"/>
  <testcase name="testWrongMessageType[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.008"/>
  <testcase name="testDuplicatedProtocolFailure[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.006"/>
  <testcase name="testInvalidAddress[3: transport=EPOLL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.006"/>
  <testcase name="testPortAssignment[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.007"/>
  <testcase name="testInvalidProtocolVersion[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0">
    <skipped/>
    <system-out><![CDATA[#######################################
# Starting: testInvalidProtocolVersion[4: transport=EPOLL, ssl=JDK](io.hekate.network.netty.NetworkServerTest) [start-time=13:38:26.314]
#--------------------------------------
#--------------------------------------
# Finished: testInvalidProtocolVersion[4: transport=EPOLL, ssl=JDK](io.hekate.network.netty.NetworkServerTest) [duration=7ms]
#######################################


]]></system-out>
  </testcase>
  <testcase name="testAutoAccept[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.63"/>
  <testcase name="testStartStop[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.01"/>
  <testcase name="testHandlerContext[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.046"/>
  <testcase name="testMultipleServers[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.014"/>
  <testcase name="testUnregisterHandlerWithClients[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.061"/>
  <testcase name="testGetConnected[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.217"/>
  <testcase name="testAddressChangeOnFailover[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.309"/>
  <testcase name="testServerClientInExternalThread[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.178"/>
  <testcase name="testInvalidMagicBytes[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0">
    <skipped/>
    <system-out><![CDATA[#######################################
# Starting: testInvalidMagicBytes[4: transport=EPOLL, ssl=JDK](io.hekate.network.netty.NetworkServerTest) [start-time=13:38:27.787]
#--------------------------------------
#--------------------------------------
# Finished: testInvalidMagicBytes[4: transport=EPOLL, ssl=JDK](io.hekate.network.netty.NetworkServerTest) [duration=7ms]
#######################################


]]></system-out>
  </testcase>
  <testcase name="testMultipleStop[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.306"/>
  <testcase name="testFailover[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.308"/>
  <testcase name="testWrongMessageType[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.025"/>
  <testcase name="testDuplicatedProtocolFailure[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.006"/>
  <testcase name="testInvalidAddress[4: transport=EPOLL, ssl=JDK]" classname="io.hekate.network.netty.NetworkServerTest" time="0.006"/>
  <testcase name="testPortAssignment[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.006"/>
  <testcase name="testInvalidProtocolVersion[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0">
    <skipped/>
    <system-out><![CDATA[#######################################
# Starting: testInvalidProtocolVersion[5: transport=EPOLL, ssl=OPEN_SSL](io.hekate.network.netty.NetworkServerTest) [start-time=13:38:28.454]
#--------------------------------------
#--------------------------------------
# Finished: testInvalidProtocolVersion[5: transport=EPOLL, ssl=OPEN_SSL](io.hekate.network.netty.NetworkServerTest) [duration=5ms]
#######################################


]]></system-out>
  </testcase>
  <testcase name="testAutoAccept[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.314"/>
  <testcase name="testStartStop[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.01"/>
  <testcase name="testHandlerContext[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.056"/>
  <testcase name="testMultipleServers[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.014"/>
  <testcase name="testUnregisterHandlerWithClients[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.053"/>
  <testcase name="testGetConnected[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.221"/>
  <testcase name="testAddressChangeOnFailover[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.309"/>
  <testcase name="testServerClientInExternalThread[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.164"/>
  <testcase name="testInvalidMagicBytes[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0">
    <skipped/>
    <system-out><![CDATA[#######################################
# Starting: testInvalidMagicBytes[5: transport=EPOLL, ssl=OPEN_SSL](io.hekate.network.netty.NetworkServerTest) [start-time=13:38:29.601]
#--------------------------------------
#--------------------------------------
# Finished: testInvalidMagicBytes[5: transport=EPOLL, ssl=OPEN_SSL](io.hekate.network.netty.NetworkServerTest) [duration=6ms]
#######################################


]]></system-out>
  </testcase>
  <testcase name="testMultipleStop[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.308"/>
  <testcase name="testFailover[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.308"/>
  <testcase name="testWrongMessageType[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.012"/>
  <testcase name="testDuplicatedProtocolFailure[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.007"/>
  <testcase name="testInvalidAddress[5: transport=EPOLL, ssl=OPEN_SSL]" classname="io.hekate.network.netty.NetworkServerTest" time="0.007"/>
</testsuite>