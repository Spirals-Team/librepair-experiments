[INFO ] fr.inria.main.evolution.AstorMain.setupLogging(AstorMain.java:273) - Log file at: ./workspace/aspectran/aspectran/396667362/repairnator.astor.mutation.log
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:810) - Source folders: [/root/workspace/aspectran/aspectran/396667362/core/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:829) - Source Test folders: [/root/workspace/aspectran/aspectran/396667362/core/src/test/java]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:74) - -Executing Gzoltar classpath: /root/./output_astor/AstorMain-core//bin//default from 22 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:148) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:168) - -gz-Adding classpath: [/root/./workspace/aspectran/aspectran/396667362/.m2/org/apache/ant/ant-launcher/1.9.6/ant-launcher-1.9.6.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/com/zaxxer/HikariCP-java6/2.3.13/HikariCP-java6-2.3.13.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar, /root/./output_astor/AstorMain-core//bin//default, /root/./workspace/aspectran/aspectran/396667362/.m2/org/opentest4j/opentest4j/1.1.0/opentest4j-1.1.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/awaitility/awaitility/3.1.0/awaitility-3.1.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/apache/logging/log4j/log4j-core/2.11.0/log4j-core-2.11.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/junit/junit/4.12/junit-4.12.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/com/coverity/security/coverity-escapers/1.1/coverity-escapers-1.1.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/junit/platform/junit-platform-engine/1.2.0/junit-platform-engine-1.2.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/slf4j/log4j-over-slf4j/1.7.25/log4j-over-slf4j-1.7.25.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/com/mitchellbosecke/pebble/2.4.0/pebble-2.4.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/apache/logging/log4j/log4j-api/2.11.0/log4j-api-2.11.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/javassist/javassist/3.23.0-GA/javassist-3.23.0-GA.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/com/google/guava/guava/16.0.1/guava-16.0.1.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/junit/vintage/junit-vintage-engine/5.2.0/junit-vintage-engine-5.2.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/cglib/cglib/3.2.6/cglib-3.2.6.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/freemarker/freemarker/2.3.28/freemarker-2.3.28.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/apache/ant/ant/1.9.6/ant-1.9.6.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/log4j/log4j/1.2.17/log4j-1.2.17.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/junit/platform/junit-platform-commons/1.2.0/junit-platform-commons-1.2.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/ow2/asm/asm/6.0/asm-6.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:205) - Test failt: com.aspectran.core.context.builder.ActivityContextBuilderTest#test1HybridLoading
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:205) - Test failt: com.aspectran.core.context.config.AspectranConfigTest#aspectranConfigTest
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:205) - Test failt: com.aspectran.core.component.bean.CallTest#testBeanCall
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:205) - Test failt: com.aspectran.core.component.bean.CallTest#testTemplateCall
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:217) - Gzoltar Test Result Total:35, fails: 4, GZoltar suspicious 8808, with positive susp 6961
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:265) - Gzoltar found: 1000 with susp > 0.1, we consider: 1000
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:1063) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:76) - building model: /root/./output_astor/AstorMain-core//src//default, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:88) - Classpath for building SpoonModel [/root/./workspace/aspectran/aspectran/396667362/.m2/org/javassist/javassist/3.23.0-GA/javassist-3.23.0-GA.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/cglib/cglib/3.2.6/cglib-3.2.6.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/ow2/asm/asm/6.0/asm-6.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/apache/ant/ant/1.9.6/ant-1.9.6.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/apache/ant/ant-launcher/1.9.6/ant-launcher-1.9.6.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/com/zaxxer/HikariCP-java6/2.3.13/HikariCP-java6-2.3.13.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/slf4j/log4j-over-slf4j/1.7.25/log4j-over-slf4j-1.7.25.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/apache/logging/log4j/log4j-api/2.11.0/log4j-api-2.11.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/apache/logging/log4j/log4j-core/2.11.0/log4j-core-2.11.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/log4j/log4j/1.2.17/log4j-1.2.17.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/freemarker/freemarker/2.3.28/freemarker-2.3.28.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/com/mitchellbosecke/pebble/2.4.0/pebble-2.4.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/com/google/guava/guava/16.0.1/guava-16.0.1.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/com/coverity/security/coverity-escapers/1.1/coverity-escapers-1.1.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/junit/vintage/junit-vintage-engine/5.2.0/junit-vintage-engine-5.2.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/junit/platform/junit-platform-engine/1.2.0/junit-platform-engine-1.2.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/junit/platform/junit-platform-commons/1.2.0/junit-platform-commons-1.2.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/opentest4j/opentest4j/1.1.0/opentest4j-1.1.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/junit/junit/4.12/junit-4.12.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/awaitility/awaitility/3.1.0/awaitility-3.1.0.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /root/./workspace/aspectran/aspectran/396667362/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:1067) - 
---- Initial suspicious size: 1000
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isAdder(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=24, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isAdder(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=25, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isAdder(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=26, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isAdder(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=28, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isAdder(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=29, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isAdder(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=30, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isAdder(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=32, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isAdder(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=33, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isGetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=42, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isGetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=43, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isGetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=44, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isGetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=46, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isGetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=47, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isGetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=48, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isGetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=50, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isGetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=51, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isGetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=52, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isGetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=54, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isGetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=55, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isGetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=59, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{getParameterCount(Ljava/lang/reflect/Method;)I 0.0, lineNumber=63, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isSetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=72, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isSetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=73, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isSetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=74, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isSetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=76, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isSetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=77, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isSetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=78, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isSetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=80, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isSetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=81, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isSetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=82, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{isSetter(Ljava/lang/reflect/Method;)Z 0.0, lineNumber=84, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{getPropertyName(Ljava/lang/reflect/Method;)Ljava/lang/String; 0.0, lineNumber=92, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{getPropertyName(Ljava/lang/reflect/Method;)Ljava/lang/String; 0.0, lineNumber=93, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{getPropertyName(Ljava/lang/reflect/Method;)Ljava/lang/String; 0.0, lineNumber=94, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{getPropertyName(Ljava/lang/reflect/Method;)Ljava/lang/String; 0.0, lineNumber=95, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{getPropertyName(Ljava/lang/reflect/Method;)Ljava/lang/String; 0.0, lineNumber=97, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{getPropertyName(Ljava/lang/reflect/Method;)Ljava/lang/String; 0.0, lineNumber=98, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{getPropertyName(Ljava/lang/reflect/Method;)Ljava/lang/String; 0.0, lineNumber=100, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{getPropertyName(Ljava/lang/reflect/Method;)Ljava/lang/String; 0.0, lineNumber=101, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{getPropertyName(Ljava/lang/reflect/Method;)Ljava/lang/String; 0.0, lineNumber=103, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{toLowerCamelCase(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=115, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{toLowerCamelCase(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=118, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{toLowerCamelCase(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=121, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{toLowerCamelCase(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=124, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{toLowerCamelCase(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=125, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{toLowerCamelCase(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=126, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{getSubstringIfPrefixMatches(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=130, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{getSubstringIfPrefixMatches(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=131, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.beans.BeanUtil, methodName=ch.qos.logback.core.joran.util.beans.BeanUtil{getSubstringIfPrefixMatches(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=133, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.spi.EventPlayer, methodName=ch.qos.logback.core.joran.spi.EventPlayer{play(Ljava/util/List;)V 0.0, lineNumber=44, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.spi.EventPlayer, methodName=ch.qos.logback.core.joran.spi.EventPlayer{play(Ljava/util/List;)V 0.0, lineNumber=46, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.spi.EventPlayer, methodName=ch.qos.logback.core.joran.spi.EventPlayer{play(Ljava/util/List;)V 0.0, lineNumber=47, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.spi.EventPlayer, methodName=ch.qos.logback.core.joran.spi.EventPlayer{play(Ljava/util/List;)V 0.0, lineNumber=49, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.spi.EventPlayer, methodName=ch.qos.logback.core.joran.spi.EventPlayer{play(Ljava/util/List;)V 0.0, lineNumber=50, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.spi.EventPlayer, methodName=ch.qos.logback.core.joran.spi.EventPlayer{play(Ljava/util/List;)V 0.0, lineNumber=52, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.spi.EventPlayer, methodName=ch.qos.logback.core.joran.spi.EventPlayer{play(Ljava/util/List;)V 0.0, lineNumber=54, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.spi.EventPlayer, methodName=ch.qos.logback.core.joran.spi.EventPlayer{play(Ljava/util/List;)V 0.0, lineNumber=56, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.spi.EventPlayer, methodName=ch.qos.logback.core.joran.spi.EventPlayer{play(Ljava/util/List;)V 0.0, lineNumber=57, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.spi.EventPlayer, methodName=ch.qos.logback.core.joran.spi.EventPlayer{play(Ljava/util/List;)V 0.0, lineNumber=59, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.spi.EventPlayer, methodName=ch.qos.logback.core.joran.spi.EventPlayer{play(Ljava/util/List;)V 0.0, lineNumber=61, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.spi.EventPlayer, methodName=ch.qos.logback.core.joran.spi.EventPlayer{play(Ljava/util/List;)V 0.0, lineNumber=62, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.spi.EventPlayer, methodName=ch.qos.logback.core.joran.spi.EventPlayer{play(Ljava/util/List;)V 0.0, lineNumber=66, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.mitchellbosecke.pebble.extension.i18n.I18nExtension, methodName=com.mitchellbosecke.pebble.extension.i18n.I18nExtension{getFunctions()Ljava/util/Map; 0.0, lineNumber=21, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.mitchellbosecke.pebble.extension.i18n.I18nExtension, methodName=com.mitchellbosecke.pebble.extension.i18n.I18nExtension{getFunctions()Ljava/util/Map; 0.0, lineNumber=22, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.mitchellbosecke.pebble.extension.i18n.I18nExtension, methodName=com.mitchellbosecke.pebble.extension.i18n.I18nExtension{getFunctions()Ljava/util/Map; 0.0, lineNumber=23, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=39, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=40, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=42, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=44, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=46, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=54, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=56, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=58, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=59, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=63, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=64, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=65, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=69, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=70, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=71, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=72, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=73, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=75, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V 0.0, lineNumber=76, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V 0.0, lineNumber=79, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V 0.0, lineNumber=82, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V 0.0, lineNumber=83, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V 0.0, lineNumber=87, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.joran.action.LoggerAction, methodName=ch.qos.logback.classic.joran.action.LoggerAction{end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V 0.0, lineNumber=89, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{startConverters(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=27, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{startConverters(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=28, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{startConverters(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=30, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{startConverters(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=31, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{startConverters(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=32, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{startConverters(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=33, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{startConverters(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=34, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{startConverters(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=35, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{startConverters(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=36, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{startConverters(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=37, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{startConverters(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=39, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{startConverters(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=41, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{findTail(Lch/qos/logback/core/pattern/Converter;)Lch/qos/logback/core/pattern/Converter; 0.0, lineNumber=44, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{findTail(Lch/qos/logback/core/pattern/Converter;)Lch/qos/logback/core/pattern/Converter; 0.0, lineNumber=45, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{findTail(Lch/qos/logback/core/pattern/Converter;)Lch/qos/logback/core/pattern/Converter; 0.0, lineNumber=46, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{findTail(Lch/qos/logback/core/pattern/Converter;)Lch/qos/logback/core/pattern/Converter; 0.0, lineNumber=47, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{findTail(Lch/qos/logback/core/pattern/Converter;)Lch/qos/logback/core/pattern/Converter; 0.0, lineNumber=48, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{findTail(Lch/qos/logback/core/pattern/Converter;)Lch/qos/logback/core/pattern/Converter; 0.0, lineNumber=50, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{findTail(Lch/qos/logback/core/pattern/Converter;)Lch/qos/logback/core/pattern/Converter; 0.0, lineNumber=52, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{findTail(Lch/qos/logback/core/pattern/Converter;)Lch/qos/logback/core/pattern/Converter; 0.0, lineNumber=53, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{setContextForConverters(Lch/qos/logback/core/Context;Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=57, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{setContextForConverters(Lch/qos/logback/core/Context;Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=58, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{setContextForConverters(Lch/qos/logback/core/Context;Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=59, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{setContextForConverters(Lch/qos/logback/core/Context;Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=60, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{setContextForConverters(Lch/qos/logback/core/Context;Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=62, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.ConverterUtil, methodName=ch.qos.logback.core.pattern.ConverterUtil{setContextForConverters(Lch/qos/logback/core/Context;Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=64, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/net/URL;)V 0.0, lineNumber=44, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/net/URL;)V 0.0, lineNumber=46, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/net/URL;)V 0.0, lineNumber=47, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/net/URL;)V 0.0, lineNumber=50, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/net/URL;)V 0.0, lineNumber=52, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/net/URL;)V 0.0, lineNumber=53, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/net/URL;)V 0.0, lineNumber=59, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/net/URL;)V 0.0, lineNumber=61, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/net/URL;)V 0.0, lineNumber=66, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/net/URL;)V 0.0, lineNumber=69, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{informContextOfURLUsedForConfiguration(Lch/qos/logback/core/Context;Ljava/net/URL;)V 0.0, lineNumber=100, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{informContextOfURLUsedForConfiguration(Lch/qos/logback/core/Context;Ljava/net/URL;)V 0.0, lineNumber=101, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/io/InputStream;Ljava/lang/String;)V 0.0, lineNumber=108, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/io/InputStream;Ljava/lang/String;)V 0.0, lineNumber=109, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/io/InputStream;Ljava/lang/String;)V 0.0, lineNumber=110, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/io/InputStream;Ljava/lang/String;)V 0.0, lineNumber=111, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{getBeanDescriptionCache()Lch/qos/logback/core/joran/util/beans/BeanDescriptionCache; 0.0, lineNumber=114, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{getBeanDescriptionCache()Lch/qos/logback/core/joran/util/beans/BeanDescriptionCache; 0.0, lineNumber=115, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{getBeanDescriptionCache()Lch/qos/logback/core/joran/util/beans/BeanDescriptionCache; 0.0, lineNumber=117, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{initialElementPath()Lch/qos/logback/core/joran/spi/ElementPath; 0.0, lineNumber=129, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{buildInterpreter()V 0.0, lineNumber=133, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{buildInterpreter()V 0.0, lineNumber=134, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{buildInterpreter()V 0.0, lineNumber=135, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{buildInterpreter()V 0.0, lineNumber=136, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{buildInterpreter()V 0.0, lineNumber=137, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{buildInterpreter()V 0.0, lineNumber=138, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{buildInterpreter()V 0.0, lineNumber=139, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{buildInterpreter()V 0.0, lineNumber=140, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Lorg/xml/sax/InputSource;)V 0.0, lineNumber=146, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Lorg/xml/sax/InputSource;)V 0.0, lineNumber=150, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Lorg/xml/sax/InputSource;)V 0.0, lineNumber=151, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Lorg/xml/sax/InputSource;)V 0.0, lineNumber=152, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Lorg/xml/sax/InputSource;)V 0.0, lineNumber=154, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Lorg/xml/sax/InputSource;)V 0.0, lineNumber=155, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Lorg/xml/sax/InputSource;)V 0.0, lineNumber=156, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Lorg/xml/sax/InputSource;)V 0.0, lineNumber=157, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Lorg/xml/sax/InputSource;)V 0.0, lineNumber=159, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/util/List;)V 0.0, lineNumber=162, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/util/List;)V 0.0, lineNumber=164, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/util/List;)V 0.0, lineNumber=165, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/util/List;)V 0.0, lineNumber=166, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{doConfigure(Ljava/util/List;)V 0.0, lineNumber=167, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{registerSafeConfiguration(Ljava/util/List;)V 0.0, lineNumber=176, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.GenericConfigurator, methodName=ch.qos.logback.core.joran.GenericConfigurator{registerSafeConfiguration(Ljava/util/List;)V 0.0, lineNumber=177, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.encoder.LayoutWrappingEncoder, methodName=ch.qos.logback.core.encoder.LayoutWrappingEncoder{headerBytes()[B 0.0, lineNumber=80, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.encoder.LayoutWrappingEncoder, methodName=ch.qos.logback.core.encoder.LayoutWrappingEncoder{headerBytes()[B 0.0, lineNumber=83, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.encoder.LayoutWrappingEncoder, methodName=ch.qos.logback.core.encoder.LayoutWrappingEncoder{headerBytes()[B 0.0, lineNumber=84, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.encoder.LayoutWrappingEncoder, methodName=ch.qos.logback.core.encoder.LayoutWrappingEncoder{headerBytes()[B 0.0, lineNumber=85, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.encoder.LayoutWrappingEncoder, methodName=ch.qos.logback.core.encoder.LayoutWrappingEncoder{headerBytes()[B 0.0, lineNumber=86, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.encoder.LayoutWrappingEncoder, methodName=ch.qos.logback.core.encoder.LayoutWrappingEncoder{headerBytes()[B 0.0, lineNumber=92, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.encoder.LayoutWrappingEncoder, methodName=ch.qos.logback.core.encoder.LayoutWrappingEncoder{start()V 0.0, lineNumber=124, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.encoder.LayoutWrappingEncoder, methodName=ch.qos.logback.core.encoder.LayoutWrappingEncoder{start()V 0.0, lineNumber=134, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.encoder.LayoutWrappingEncoder, methodName=ch.qos.logback.core.encoder.LayoutWrappingEncoder{start()V 0.0, lineNumber=135, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.encoder.LayoutWrappingEncoder, methodName=ch.qos.logback.core.encoder.LayoutWrappingEncoder{appendIfNotNull(Ljava/lang/StringBuilder;Ljava/lang/String;)V 0.0, lineNumber=142, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.encoder.LayoutWrappingEncoder, methodName=ch.qos.logback.core.encoder.LayoutWrappingEncoder{appendIfNotNull(Ljava/lang/StringBuilder;Ljava/lang/String;)V 0.0, lineNumber=145, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.encoder.LayoutWrappingEncoder, methodName=ch.qos.logback.core.encoder.LayoutWrappingEncoder{setParent(Lch/qos/logback/core/Appender;)V 0.0, lineNumber=154, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.encoder.LayoutWrappingEncoder, methodName=ch.qos.logback.core.encoder.LayoutWrappingEncoder{setParent(Lch/qos/logback/core/Appender;)V 0.0, lineNumber=155, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.subst.Node, methodName=ch.qos.logback.core.subst.Node{append(Lch/qos/logback/core/subst/Node;)V 0.0, lineNumber=39, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.subst.Node, methodName=ch.qos.logback.core.subst.Node{append(Lch/qos/logback/core/subst/Node;)V 0.0, lineNumber=41, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.subst.Node, methodName=ch.qos.logback.core.subst.Node{append(Lch/qos/logback/core/subst/Node;)V 0.0, lineNumber=43, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.subst.Node, methodName=ch.qos.logback.core.subst.Node{append(Lch/qos/logback/core/subst/Node;)V 0.0, lineNumber=44, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.subst.Node, methodName=ch.qos.logback.core.subst.Node{append(Lch/qos/logback/core/subst/Node;)V 0.0, lineNumber=45, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.subst.Node, methodName=ch.qos.logback.core.subst.Node{append(Lch/qos/logback/core/subst/Node;)V 0.0, lineNumber=47, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=freemarker.cache.SoftCacheStorage, methodName=freemarker.cache.SoftCacheStorage{isConcurrent()Z 0.0, lineNumber=59, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=freemarker.cache.SoftCacheStorage, methodName=freemarker.cache.SoftCacheStorage{clear()V 0.0, lineNumber=84, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=freemarker.cache.SoftCacheStorage, methodName=freemarker.cache.SoftCacheStorage{clear()V 0.0, lineNumber=85, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=freemarker.cache.SoftCacheStorage, methodName=freemarker.cache.SoftCacheStorage{clear()V 0.0, lineNumber=86, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=freemarker.cache.SoftCacheStorage, methodName=freemarker.cache.SoftCacheStorage{processQueue()V 0.0, lineNumber=100, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=freemarker.cache.SoftCacheStorage, methodName=freemarker.cache.SoftCacheStorage{processQueue()V 0.0, lineNumber=101, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=freemarker.cache.SoftCacheStorage, methodName=freemarker.cache.SoftCacheStorage{processQueue()V 0.0, lineNumber=102, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=freemarker.cache.SoftCacheStorage, methodName=freemarker.cache.SoftCacheStorage{getAtomicRemoveMethod()Ljava/lang/reflect/Method; 0.0, lineNumber=134, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.mitchellbosecke.pebble.extension.escaper.EscapeFilter, methodName=com.mitchellbosecke.pebble.extension.escaper.EscapeFilter{buildDefaultStrategies()V 0.0, lineNumber=35, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.mitchellbosecke.pebble.extension.escaper.EscapeFilter, methodName=com.mitchellbosecke.pebble.extension.escaper.EscapeFilter{buildDefaultStrategies()V 0.0, lineNumber=43, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.mitchellbosecke.pebble.extension.escaper.EscapeFilter, methodName=com.mitchellbosecke.pebble.extension.escaper.EscapeFilter{buildDefaultStrategies()V 0.0, lineNumber=51, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.mitchellbosecke.pebble.extension.escaper.EscapeFilter, methodName=com.mitchellbosecke.pebble.extension.escaper.EscapeFilter{buildDefaultStrategies()V 0.0, lineNumber=59, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.mitchellbosecke.pebble.extension.escaper.EscapeFilter, methodName=com.mitchellbosecke.pebble.extension.escaper.EscapeFilter{buildDefaultStrategies()V 0.0, lineNumber=67, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.mitchellbosecke.pebble.extension.escaper.EscapeFilter, methodName=com.mitchellbosecke.pebble.extension.escaper.EscapeFilter{buildDefaultStrategies()V 0.0, lineNumber=74, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.util.Loader, methodName=ch.qos.logback.core.util.Loader{getResources(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/Set; 0.0, lineNumber=71, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.util.Loader, methodName=ch.qos.logback.core.util.Loader{getResources(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/Set; 0.0, lineNumber=72, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.util.Loader, methodName=ch.qos.logback.core.util.Loader{getResources(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/Set; 0.0, lineNumber=73, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.util.Loader, methodName=ch.qos.logback.core.util.Loader{getResources(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/Set; 0.0, lineNumber=74, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.util.Loader, methodName=ch.qos.logback.core.util.Loader{getResources(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/Set; 0.0, lineNumber=75, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.util.Loader, methodName=ch.qos.logback.core.util.Loader{getResources(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/Set; 0.0, lineNumber=76, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.util.Loader, methodName=ch.qos.logback.core.util.Loader{getResources(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/Set; 0.0, lineNumber=77, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.util.Loader, methodName=ch.qos.logback.core.util.Loader{getResource(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/net/URL; 0.0, lineNumber=88, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.util.Loader, methodName=ch.qos.logback.core.util.Loader{getClassLoaderOfObject(Ljava/lang/Object;)Ljava/lang/ClassLoader; 0.0, lineNumber=131, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.util.Loader, methodName=ch.qos.logback.core.util.Loader{getClassLoaderOfObject(Ljava/lang/Object;)Ljava/lang/ClassLoader; 0.0, lineNumber=134, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.util.Loader, methodName=ch.qos.logback.core.util.Loader{getClassLoaderOfClass(Ljava/lang/Class;)Ljava/lang/ClassLoader; 0.0, lineNumber=162, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.util.Loader, methodName=ch.qos.logback.core.util.Loader{getClassLoaderOfClass(Ljava/lang/Class;)Ljava/lang/ClassLoader; 0.0, lineNumber=163, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.util.Loader, methodName=ch.qos.logback.core.util.Loader{getClassLoaderOfClass(Ljava/lang/Class;)Ljava/lang/ClassLoader; 0.0, lineNumber=166, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=freemarker.ext.util.ModelCache, methodName=freemarker.ext.util.ModelCache{setUseCache(Z)V 0.0, lineNumber=48, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=freemarker.ext.util.ModelCache, methodName=freemarker.ext.util.ModelCache{setUseCache(Z)V 0.0, lineNumber=49, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=freemarker.ext.util.ModelCache, methodName=freemarker.ext.util.ModelCache{setUseCache(Z)V 0.0, lineNumber=53, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=freemarker.ext.util.ModelCache, methodName=freemarker.ext.util.ModelCache{setUseCache(Z)V 0.0, lineNumber=54, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=freemarker.ext.util.ModelCache, methodName=freemarker.ext.util.ModelCache{setUseCache(Z)V 0.0, lineNumber=56, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{initEvaluatorMap()V 0.0, lineNumber=88, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{initEvaluatorMap()V 0.0, lineNumber=89, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{updateLoggerContextVO()V 0.0, lineNumber=96, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{updateLoggerContextVO()V 0.0, lineNumber=97, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{setName(Ljava/lang/String;)V 0.0, lineNumber=107, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{setName(Ljava/lang/String;)V 0.0, lineNumber=108, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{setName(Ljava/lang/String;)V 0.0, lineNumber=109, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=125, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{setPackagingDataEnabled(Z)V 0.0, lineNumber=202, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{setPackagingDataEnabled(Z)V 0.0, lineNumber=203, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{isPackagingDataEnabled()Z 0.0, lineNumber=206, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{fireOnLevelChange(Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;)V 0.0, lineNumber=317, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{fireOnLevelChange(Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;)V 0.0, lineNumber=320, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{canBeBuiltFromSimpleString(Ljava/lang/Class;)Z 0.0, lineNumber=34, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{canBeBuiltFromSimpleString(Ljava/lang/Class;)Z 0.0, lineNumber=35, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{canBeBuiltFromSimpleString(Ljava/lang/Class;)Z 0.0, lineNumber=37, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{canBeBuiltFromSimpleString(Ljava/lang/Class;)Z 0.0, lineNumber=38, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{canBeBuiltFromSimpleString(Ljava/lang/Class;)Z 0.0, lineNumber=39, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{canBeBuiltFromSimpleString(Ljava/lang/Class;)Z 0.0, lineNumber=41, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{canBeBuiltFromSimpleString(Ljava/lang/Class;)Z 0.0, lineNumber=43, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{canBeBuiltFromSimpleString(Ljava/lang/Class;)Z 0.0, lineNumber=46, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{convertArg(Lch/qos/logback/core/spi/ContextAware;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; 0.0, lineNumber=54, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{convertArg(Lch/qos/logback/core/spi/ContextAware;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; 0.0, lineNumber=57, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{convertArg(Lch/qos/logback/core/spi/ContextAware;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; 0.0, lineNumber=58, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{convertArg(Lch/qos/logback/core/spi/ContextAware;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; 0.0, lineNumber=59, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{isOfTypeCharset(Ljava/lang/Class;)Z 0.0, lineNumber=86, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{getValueOfMethod(Ljava/lang/Class;)Ljava/lang/reflect/Method; 0.0, lineNumber=101, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{getValueOfMethod(Ljava/lang/Class;)Ljava/lang/reflect/Method; 0.0, lineNumber=102, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{getValueOfMethod(Ljava/lang/Class;)Ljava/lang/reflect/Method; 0.0, lineNumber=103, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{followsTheValueOfConvention(Ljava/lang/Class;)Z 0.0, lineNumber=110, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{followsTheValueOfConvention(Ljava/lang/Class;)Z 0.0, lineNumber=111, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.joran.util.StringToObjectConverter, methodName=ch.qos.logback.core.joran.util.StringToObjectConverter{followsTheValueOfConvention(Ljava/lang/Class;)Z 0.0, lineNumber=112, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.CompositeConverter, methodName=ch.qos.logback.core.pattern.CompositeConverter{setChildConverter(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=37, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.CompositeConverter, methodName=ch.qos.logback.core.pattern.CompositeConverter{setChildConverter(Lch/qos/logback/core/pattern/Converter;)V 0.0, lineNumber=38, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=com.mitchellbosecke.pebble.operator.UnaryOperatorImpl, methodName=com.mitchellbosecke.pebble.operator.UnaryOperatorImpl{getSymbol()Ljava/lang/String; 0.0, lineNumber=34, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.PatternLayoutBase, methodName=ch.qos.logback.core.pattern.PatternLayoutBase{getEffectiveConverterMap()Ljava/util/Map; 0.0, lineNumber=51, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.PatternLayoutBase, methodName=ch.qos.logback.core.pattern.PatternLayoutBase{getEffectiveConverterMap()Ljava/util/Map; 0.0, lineNumber=54, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.PatternLayoutBase, methodName=ch.qos.logback.core.pattern.PatternLayoutBase{getEffectiveConverterMap()Ljava/util/Map; 0.0, lineNumber=55, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.PatternLayoutBase, methodName=ch.qos.logback.core.pattern.PatternLayoutBase{getEffectiveConverterMap()Ljava/util/Map; 0.0, lineNumber=56, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.PatternLayoutBase, methodName=ch.qos.logback.core.pattern.PatternLayoutBase{getEffectiveConverterMap()Ljava/util/Map; 0.0, lineNumber=60, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:217) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.core.pattern.PatternLayoutBase, methodName=ch.qos.logback.core.pattern.PatternLayoutBase{getEffectiveConverterMap()Ljava/util/Map; 0.0, lineNumber=61, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:129) - Total suspicious from FL: 1000,  110
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:138) - Total ModPoint created: 110
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 110, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:63) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:64) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:workingDirectory= /root/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jvm4testexecution= /usr/lib/jvm/java-8-openjdk-amd64/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:operatorspace= mutationspace
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:binjavafolder= /target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:runexternalvalidator= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:preservelinenumbers= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:tmax2= 960000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:tmax1= 120000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:targetelementprocessor= if-conditions
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:srctestfolder= src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxnumbersolutions= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:javacompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:projectIdentifier= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:bintestfolder= /target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxGeneration= 200
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxtime= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:mode= mutation
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-8-openjdk-amd64/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:timezone= Europe/Paris
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:limitbysuspicious= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:dependenciespath= /root/./workspace/aspectran/aspectran/396667362/.m2/org/javassist/javassist/3.23.0-GA/javassist-3.23.0-GA.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/cglib/cglib/3.2.6/cglib-3.2.6.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/ow2/asm/asm/6.0/asm-6.0.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/apache/ant/ant/1.9.6/ant-1.9.6.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/apache/ant/ant-launcher/1.9.6/ant-launcher-1.9.6.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/com/zaxxer/HikariCP-java6/2.3.13/HikariCP-java6-2.3.13.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/slf4j/log4j-over-slf4j/1.7.25/log4j-over-slf4j-1.7.25.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/apache/logging/log4j/log4j-api/2.11.0/log4j-api-2.11.0.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/apache/logging/log4j/log4j-core/2.11.0/log4j-core-2.11.0.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/log4j/log4j/1.2.17/log4j-1.2.17.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/freemarker/freemarker/2.3.28/freemarker-2.3.28.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/com/mitchellbosecke/pebble/2.4.0/pebble-2.4.0.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/com/coverity/security/coverity-escapers/1.1/coverity-escapers-1.1.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/junit/vintage/junit-vintage-engine/5.2.0/junit-vintage-engine-5.2.0.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/junit/platform/junit-platform-engine/1.2.0/junit-platform-engine-1.2.0.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/junit/platform/junit-platform-commons/1.2.0/junit-platform-commons-1.2.0.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/opentest4j/opentest4j/1.1.0/opentest4j-1.1.0.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/junit/junit/4.12/junit-4.12.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/awaitility/awaitility/3.1.0/awaitility-3.1.0.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/./workspace/aspectran/aspectran/396667362/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logfilepath= ./workspace/aspectran/aspectran/396667362/repairnator.astor.mutation.log
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:seed= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:location= /root/workspace/aspectran/aspectran/396667362/core
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:68) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `((this.parameterValueType) >= (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `((this.parameterValueType) > (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((this[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `((this.parameterValueType) <= (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `((this.parameterValueType) < (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((this[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `(!((this.parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS))) && (([...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `((this.parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `((this.parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `((this.parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `((this.parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `((this.parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `((this.parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && (!((t[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `((this.parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) || ((thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterDefinition line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((paramete[...] ` -topatch--> `!(((this.parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((t[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 85 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterDefinition.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `value == null ` -topatch--> `value != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 114 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `value == null ` -topatch--> `value >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 114 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `value == null ` -topatch--> `value > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 114 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `value == null ` -topatch--> `value <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 114 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `value == null ` -topatch--> `value < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 114 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `value == null ` -topatch--> `!(value == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 114 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `(vlen == 0) && ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `(vlen != 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `(vlen >= 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `(vlen > 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `(vlen <= 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `(vlen < 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `(!(vlen == 0)) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) != (-1))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) >= (-1))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) > (-1))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) <= (-1))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) < (-1))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `(vlen == 0) || (!((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponFormat line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)) ` -topatch--> `!((vlen == 0) || ((value.indexOf(com.aspectran.core.util.apon.AponFormat.ESCAPE_CHAR)) == (-1)))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 119 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponFormat.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 298, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.getParameterValueType()) == (com.aspectran.core.util.apon.ParameterValueType.VARIABL[...] ` -topatch--> `(parameterValue.getParameterValueType()) != (com.aspectran.core.util.apon.ParameterValueType.VARIABL[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 298 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 298, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.getParameterValueType()) == (com.aspectran.core.util.apon.ParameterValueType.VARIABL[...] ` -topatch--> `(parameterValue.getParameterValueType()) >= (com.aspectran.core.util.apon.ParameterValueType.VARIABL[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 298 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 298, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.getParameterValueType()) == (com.aspectran.core.util.apon.ParameterValueType.VARIABL[...] ` -topatch--> `(parameterValue.getParameterValueType()) > (com.aspectran.core.util.apon.ParameterValueType.VARIABLE[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 298 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 298, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.getParameterValueType()) == (com.aspectran.core.util.apon.ParameterValueType.VARIABL[...] ` -topatch--> `(parameterValue.getParameterValueType()) <= (com.aspectran.core.util.apon.ParameterValueType.VARIABL[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 298 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 298, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.getParameterValueType()) == (com.aspectran.core.util.apon.ParameterValueType.VARIABL[...] ` -topatch--> `(parameterValue.getParameterValueType()) < (com.aspectran.core.util.apon.ParameterValueType.VARIABLE[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 298 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 298, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.getParameterValueType()) == (com.aspectran.core.util.apon.ParameterValueType.VARIABL[...] ` -topatch--> `!((parameterValue.getParameterValueType()) == (com.aspectran.core.util.apon.ParameterValueType.VARIA[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 298 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 300, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.getParameterValueType()) != parameterValueType ` -topatch--> `(parameterValue.getParameterValueType()) == parameterValueType` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 300 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 300, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.getParameterValueType()) != parameterValueType ` -topatch--> `(parameterValue.getParameterValueType()) >= parameterValueType` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 300 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 300, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.getParameterValueType()) != parameterValueType ` -topatch--> `(parameterValue.getParameterValueType()) > parameterValueType` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 300 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 300, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.getParameterValueType()) != parameterValueType ` -topatch--> `(parameterValue.getParameterValueType()) <= parameterValueType` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 300 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 300, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.getParameterValueType()) != parameterValueType ` -topatch--> `(parameterValue.getParameterValueType()) < parameterValueType` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 300 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 300, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.getParameterValueType()) != parameterValueType ` -topatch--> `!((parameterValue.getParameterValueType()) != parameterValueType)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 300 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 384, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `java.util.Objects.equals(value, s) ` -topatch--> `!(java.util.Objects.equals(value, s))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 384 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.AspectranNodeParser line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `inputStream != null ` -topatch--> `inputStream == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 104 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/AspectranNodeParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.AspectranNodeParser line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `inputStream != null ` -topatch--> `inputStream >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 104 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/AspectranNodeParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.AspectranNodeParser line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `inputStream != null ` -topatch--> `inputStream > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 104 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/AspectranNodeParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.AspectranNodeParser line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `inputStream != null ` -topatch--> `inputStream <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 104 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/AspectranNodeParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.AspectranNodeParser line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `inputStream != null ` -topatch--> `inputStream < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 104 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/AspectranNodeParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.AspectranNodeParser line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `inputStream != null ` -topatch--> `!(inputStream != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 104 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/AspectranNodeParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.ClassUtils line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!(java.lang.reflect.Modifier.isPublic(ctor.getModifiers())) ` -topatch--> `java.lang.reflect.Modifier.isPublic(ctor.getModifiers())` (spoon.support.reflect.code.CtInvocationImpl) at l: 115 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/ClassUtils.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(predefined)) && (value != null) ` -topatch--> `(this.predefined) && (value != null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(predefined)) && (value != null) ` -topatch--> `(!(this.predefined)) && (value == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(predefined)) && (value != null) ` -topatch--> `(!(this.predefined)) && (value >= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(predefined)) && (value != null) ` -topatch--> `(!(this.predefined)) && (value > null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(predefined)) && (value != null) ` -topatch--> `(!(this.predefined)) && (value <= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(predefined)) && (value != null) ` -topatch--> `(!(this.predefined)) && (value < null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(predefined)) && (value != null) ` -topatch--> `(!(this.predefined)) && (!(value != null))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(predefined)) && (value != null) ` -topatch--> `(!(this.predefined)) || (value != null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(predefined)) && (value != null) ` -topatch--> `!((!(this.predefined)) && (value != null))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((!(predefined)) && (!(array))) && ((this.value) != null) ` -topatch--> `((this.predefined) && (!(this.array))) && ((this.value) != null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 188 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((!(predefined)) && (!(array))) && ((this.value) != null) ` -topatch--> `((!(this.predefined)) && (this.array)) && ((this.value) != null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 188 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((!(predefined)) && (!(array))) && ((this.value) != null) ` -topatch--> `((!(this.predefined)) || (!(this.array))) && ((this.value) != null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 188 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((!(predefined)) && (!(array))) && ((this.value) != null) ` -topatch--> `(!((!(this.predefined)) && (!(this.array)))) && ((this.value) != null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 188 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((!(predefined)) && (!(array))) && ((this.value) != null) ` -topatch--> `((!(this.predefined)) && (!(this.array))) && ((this.value) == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 188 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((!(predefined)) && (!(array))) && ((this.value) != null) ` -topatch--> `((!(this.predefined)) && (!(this.array))) && ((this.value) >= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 188 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((!(predefined)) && (!(array))) && ((this.value) != null) ` -topatch--> `((!(this.predefined)) && (!(this.array))) && ((this.value) > null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 188 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((!(predefined)) && (!(array))) && ((this.value) != null) ` -topatch--> `((!(this.predefined)) && (!(this.array))) && ((this.value) <= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 188 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((!(predefined)) && (!(array))) && ((this.value) != null) ` -topatch--> `((!(this.predefined)) && (!(this.array))) && ((this.value) < null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 188 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((!(predefined)) && (!(array))) && ((this.value) != null) ` -topatch--> `((!(this.predefined)) && (!(this.array))) && (!((this.value) != null))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 188 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((!(predefined)) && (!(array))) && ((this.value) != null) ` -topatch--> `((!(this.predefined)) && (!(this.array))) || ((this.value) != null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 188 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((!(predefined)) && (!(array))) && ((this.value) != null) ` -topatch--> `!(((!(this.predefined)) && (!(this.array))) && ((this.value) != null))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 188 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 195, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtFieldReadImpl) `array ` -topatch--> `!(this.array)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 195 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(list) == null ` -topatch--> `(this.list) != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 212 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(list) == null ` -topatch--> `(this.list) >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 212 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(list) == null ` -topatch--> `(this.list) > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 212 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(list) == null ` -topatch--> `(this.list) <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 212 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(list) == null ` -topatch--> `(this.list) < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 212 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(list) == null ` -topatch--> `!((this.list) == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 212 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 397, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE) ` -topatch--> `(this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 397 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 397, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE) ` -topatch--> `(this.parameterValueType) >= (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 397 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 397, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE) ` -topatch--> `(this.parameterValueType) > (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 397 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 397, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE) ` -topatch--> `(this.parameterValueType) <= (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 397 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 397, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE) ` -topatch--> `(this.parameterValueType) < (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 397 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 397, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE) ` -topatch--> `!((this.parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 397 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 402, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parametersClass) == null ` -topatch--> `(this.parametersClass) != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 402 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 402, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parametersClass) == null ` -topatch--> `(this.parametersClass) >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 402 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 402, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parametersClass) == null ` -topatch--> `(this.parametersClass) > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 402 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 402, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parametersClass) == null ` -topatch--> `(this.parametersClass) <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 402 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 402, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parametersClass) == null ` -topatch--> `(this.parametersClass) < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 402 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 402, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parametersClass) == null ` -topatch--> `!((this.parametersClass) == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 402 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `((this.parameterValueType) == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `((this.parameterValueType) >= (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `((this.parameterValueType) > (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.p[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `((this.parameterValueType) <= (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `((this.parameterValueType) < (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.p[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `(!((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE))) && ((th[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && (!((thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) || ((this.[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.ParameterValue line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((this.[...] ` -topatch--> `!(((this.parameterValueType) != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)) && ((thi[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 419 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/ParameterValue.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(addable)) && (p == null) ` -topatch--> `(this.addable) && (p == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(addable)) && (p == null) ` -topatch--> `(!(this.addable)) && (p != null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(addable)) && (p == null) ` -topatch--> `(!(this.addable)) && (p >= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(addable)) && (p == null) ` -topatch--> `(!(this.addable)) && (p > null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(addable)) && (p == null) ` -topatch--> `(!(this.addable)) && (p <= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(addable)) && (p == null) ` -topatch--> `(!(this.addable)) && (p < null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(addable)) && (p == null) ` -topatch--> `(!(this.addable)) && (!(p == null))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(addable)) && (p == null) ` -topatch--> `(!(this.addable)) || (p == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(addable)) && (p == null) ` -topatch--> `!((!(this.addable)) && (p == null))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 500, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `p == null ` -topatch--> `p != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 500 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 500, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `p == null ` -topatch--> `p >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 500 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 500, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `p == null ` -topatch--> `p > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 500 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 500, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `p == null ` -topatch--> `p <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 500 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 500, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `p == null ` -topatch--> `p < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 500 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AbstractParameters line: 500, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `p == null ` -topatch--> `!(p == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 500 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AbstractParameters.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 87, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameters == null ` -topatch--> `parameters != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 87 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 87, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameters == null ` -topatch--> `parameters >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 87 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 87, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameters == null ` -topatch--> `parameters > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 87 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 87, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameters == null ` -topatch--> `parameters <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 87 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 87, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameters == null ` -topatch--> `parameters < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 87 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 87, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameters == null ` -topatch--> `!(parameters == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 87 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) && (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen != 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen >= 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen > 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) &[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen <= 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen < 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) &[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(!(tlen == 0)) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || (((tline.charAt(0)) != (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || (((tline.charAt(0)) >= (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || (((tline.charAt(0)) > (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) &[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || (((tline.charAt(0)) <= (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || (((tline.charAt(0)) < (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) &[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || ((!((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `(tlen == 0) || (!(((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)) [...] ` -topatch--> `!((tlen == 0) || (((tline.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.COMMENT_LINE_START)[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 128 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket != (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket >= (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket > (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket <= (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket < (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `!(openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 132 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_CLOSE) == cchar ` -topatch--> `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_CLOSE) != cchar` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 136 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_CLOSE) == cchar ` -topatch--> `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_CLOSE) >= cchar` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 136 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_CLOSE) == cchar ` -topatch--> `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_CLOSE) > cchar` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 136 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_CLOSE) == cchar ` -topatch--> `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_CLOSE) <= cchar` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 136 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_CLOSE) == cchar ` -topatch--> `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_CLOSE) < cchar` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 136 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_CLOSE) == cchar ` -topatch--> `!((com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_CLOSE) == cchar)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 136 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `tlen == 1 ` -topatch--> `tlen != 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 140 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `tlen == 1 ` -topatch--> `tlen >= 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 140 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `tlen == 1 ` -topatch--> `tlen > 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 140 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `tlen == 1 ` -topatch--> `tlen <= 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 140 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `tlen == 1 ` -topatch--> `tlen < 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 140 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `tlen == 1 ` -topatch--> `!(tlen == 1)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 140 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `(openBracket != (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `(openBracket >= (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `(openBracket > (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.core[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `(openBracket <= (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `(openBracket < (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.core[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `(!(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN))) && ((com.aspectran.[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && (!((com.aspectran.c[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) || ((com.aspectran.cor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.cor[...] ` -topatch--> `!((openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)) && ((com.aspectran.c[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 141 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 147, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `index == (-1) ` -topatch--> `index != (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 147 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 147, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `index == (-1) ` -topatch--> `index >= (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 147 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 147, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `index == (-1) ` -topatch--> `index > (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 147 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 147, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `index == (-1) ` -topatch--> `index <= (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 147 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 147, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `index == (-1) ` -topatch--> `index < (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 147 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 147, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `index == (-1) ` -topatch--> `!(index == (-1))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 147 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 151, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `index == 0 ` -topatch--> `index != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 151 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 151, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `index == 0 ` -topatch--> `index >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 151 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 151, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `index == 0 ` -topatch--> `index > 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 151 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 151, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `index == 0 ` -topatch--> `index <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 151 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 151, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `index == 0 ` -topatch--> `index < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 151 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 151, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `index == 0 ` -topatch--> `!(index == 0)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 151 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 163, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue != null ` -topatch--> `parameterValue == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 163 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 163, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue != null ` -topatch--> `parameterValue >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 163 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 163, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue != null ` -topatch--> `parameterValue > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 163 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 163, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue != null ` -topatch--> `parameterValue <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 163 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 163, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue != null ` -topatch--> `parameterValue < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 163 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 163, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue != null ` -topatch--> `!(parameterValue != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 163 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 183, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE) ` -topatch--> `parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 183 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 183, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE) ` -topatch--> `parameterValueType >= (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 183 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 183, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE) ` -topatch--> `parameterValueType > (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 183 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 183, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE) ` -topatch--> `parameterValueType <= (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 183 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 183, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE) ` -topatch--> `parameterValueType < (com.aspectran.core.util.apon.ParameterValueType.VARIABLE)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 183 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 183, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE) ` -topatch--> `!(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.VARIABLE))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 183 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 186, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType != null ` -topatch--> `parameterValueType == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 186 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 186, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType != null ` -topatch--> `parameterValueType >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 186 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 186, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType != null ` -topatch--> `parameterValueType > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 186 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 186, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType != null ` -topatch--> `parameterValueType <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 186 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 186, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType != null ` -topatch--> `parameterValueType < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 186 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 186, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType != null ` -topatch--> `!(parameterValueType != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 186 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue == null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue >= null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue > null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue <= null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue < null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((!(parameterValue != null)) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.Apo[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue != null) && (parameterValue.isArray())) && ((com.aspectran.core.util.apon.AponForma[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue != null) || (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `(!((parameterValue != null) && (!(parameterValue.isArray())))) && ((com.aspectran.core.util.apon.Apo[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue != null) && (!(parameterValue.isArray()))) && (!((com.aspectran.core.util.apon.Apon[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `((parameterValue != null) && (!(parameterValue.isArray()))) || ((com.aspectran.core.util.apon.AponFo[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.AponFo[...] ` -topatch--> `!(((parameterValue != null) && (!(parameterValue.isArray()))) && ((com.aspectran.core.util.apon.Apon[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 187 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType >= (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType > (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspectr[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType <= (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType < (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspectr[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(!(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS))) && ((com.asp[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && (!((com.aspe[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) || ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `!((parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspe[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType >= (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType > (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.cor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType <= (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType < (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.cor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(!(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT))) && ((com.aspectran[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && (!((com.aspectran.[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) || ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `!((parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 194 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 200, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue != null) && (!(parameterValue.isArray())) ` -topatch--> `(parameterValue == null) && (!(parameterValue.isArray()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 200 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 200, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue != null) && (!(parameterValue.isArray())) ` -topatch--> `(parameterValue >= null) && (!(parameterValue.isArray()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 200 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 200, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue != null) && (!(parameterValue.isArray())) ` -topatch--> `(parameterValue > null) && (!(parameterValue.isArray()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 200 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 200, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue != null) && (!(parameterValue.isArray())) ` -topatch--> `(parameterValue <= null) && (!(parameterValue.isArray()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 200 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 200, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue != null) && (!(parameterValue.isArray())) ` -topatch--> `(parameterValue < null) && (!(parameterValue.isArray()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 200 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 200, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue != null) && (!(parameterValue.isArray())) ` -topatch--> `(!(parameterValue != null)) && (!(parameterValue.isArray()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 200 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 200, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue != null) && (!(parameterValue.isArray())) ` -topatch--> `(parameterValue != null) && (parameterValue.isArray())` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 200 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 200, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue != null) && (!(parameterValue.isArray())) ` -topatch--> `(parameterValue != null) || (!(parameterValue.isArray()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 200 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 200, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue != null) && (!(parameterValue.isArray())) ` -topatch--> `!((parameterValue != null) && (!(parameterValue.isArray())))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 200 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType >= (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType > (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspectr[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType <= (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType < (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspectr[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(!(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS))) && ((com.asp[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && (!((com.aspe[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) || ((com.aspect[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspect[...] ` -topatch--> `!((parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)) && ((com.aspe[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType >= (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType > (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.cor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType <= (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType < (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.cor[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(!(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT))) && ((com.aspectran[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && (!((com.aspectran.[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) || ((com.aspectran.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.co[...] ` -topatch--> `!((parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT)) && ((com.aspectran.[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue == null) || (parameterValue.isArray())) && (parameterValueType == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue == null) && (parameterValue.isArray())) || (parameterValueType == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue != null) || (parameterValue.isArray())) || (parameterValueType == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue >= null) || (parameterValue.isArray())) || (parameterValueType == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue > null) || (parameterValue.isArray())) || (parameterValueType == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue <= null) || (parameterValue.isArray())) || (parameterValueType == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue < null) || (parameterValue.isArray())) || (parameterValueType == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((!(parameterValue == null)) || (parameterValue.isArray())) || (parameterValueType == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue == null) || (!(parameterValue.isArray()))) || (parameterValueType == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `(!((parameterValue == null) || (parameterValue.isArray()))) || (parameterValueType == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType != null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType >= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType > null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType <= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType < null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `((parameterValue == null) || (parameterValue.isArray())) || (!(parameterValueType == null))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null) ` -topatch--> `!(((parameterValue == null) || (parameterValue.isArray())) || (parameterValueType == null))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 209 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) == cchar ` -topatch--> `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) != cchar` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) == cchar ` -topatch--> `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) >= cchar` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) == cchar ` -topatch--> `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) > cchar` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) == cchar ` -topatch--> `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) <= cchar` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) == cchar ` -topatch--> `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) < cchar` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) == cchar ` -topatch--> `!((com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) == cchar)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == null ` -topatch--> `parameterValueType != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 215 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == null ` -topatch--> `parameterValueType >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 215 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == null ` -topatch--> `parameterValueType > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 215 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == null ` -topatch--> `parameterValueType <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 215 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == null ` -topatch--> `parameterValueType < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 215 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == null ` -topatch--> `!(parameterValueType == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 215 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS) ` -topatch--> `parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 223 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS) ` -topatch--> `parameterValueType >= (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 223 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS) ` -topatch--> `parameterValueType > (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 223 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS) ` -topatch--> `parameterValueType <= (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 223 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS) ` -topatch--> `parameterValueType < (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 223 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS) ` -topatch--> `!(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.PARAMETERS))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 223 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue == null ` -topatch--> `parameterValue != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 224 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue == null ` -topatch--> `parameterValue >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 224 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue == null ` -topatch--> `parameterValue > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 224 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue == null ` -topatch--> `parameterValue <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 224 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue == null ` -topatch--> `parameterValue < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 224 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue == null ` -topatch--> `!(parameterValue == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 224 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT) ` -topatch--> `parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.TEXT)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 231 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT) ` -topatch--> `parameterValueType >= (com.aspectran.core.util.apon.ParameterValueType.TEXT)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 231 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT) ` -topatch--> `parameterValueType > (com.aspectran.core.util.apon.ParameterValueType.TEXT)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 231 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT) ` -topatch--> `parameterValueType <= (com.aspectran.core.util.apon.ParameterValueType.TEXT)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 231 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT) ` -topatch--> `parameterValueType < (com.aspectran.core.util.apon.ParameterValueType.TEXT)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 231 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT) ` -topatch--> `!(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.TEXT))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 231 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 244, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `vlen == 0 ` -topatch--> `vlen != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 244 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 244, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `vlen == 0 ` -topatch--> `vlen >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 244 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 244, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `vlen == 0 ` -topatch--> `vlen > 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 244 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 244, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `vlen == 0 ` -topatch--> `vlen <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 244 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 244, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `vlen == 0 ` -topatch--> `vlen < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 244 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 244, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `vlen == 0 ` -topatch--> `!(vlen == 0)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 244 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 249, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == null ` -topatch--> `parameterValueType != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 249 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 249, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == null ` -topatch--> `parameterValueType >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 249 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 249, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == null ` -topatch--> `parameterValueType > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 249 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 249, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == null ` -topatch--> `parameterValueType <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 249 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 249, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == null ` -topatch--> `parameterValueType < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 249 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 249, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == null ` -topatch--> `!(parameterValueType == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 249 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 290, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `com.aspectran.core.util.apon.AponFormat.NULL.equals(value) ` -topatch--> `!(com.aspectran.core.util.apon.AponFormat.NULL.equals(value))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 290 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 294, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue == null ` -topatch--> `parameterValue != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 294 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 294, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue == null ` -topatch--> `parameterValue >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 294 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 294, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue == null ` -topatch--> `parameterValue > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 294 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 294, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue == null ` -topatch--> `parameterValue <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 294 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 294, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue == null ` -topatch--> `parameterValue < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 294 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 294, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValue == null ` -topatch--> `!(parameterValue == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 294 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 306, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `value == null ` -topatch--> `value != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 306 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 306, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `value == null ` -topatch--> `value >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 306 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 306, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `value == null ` -topatch--> `value > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 306 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 306, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `value == null ` -topatch--> `value <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 306 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 306, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `value == null ` -topatch--> `value < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 306 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 306, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `value == null ` -topatch--> `!(value == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 306 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 309, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.STRING) ` -topatch--> `parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.STRING)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 309 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 309, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.STRING) ` -topatch--> `parameterValueType >= (com.aspectran.core.util.apon.ParameterValueType.STRING)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 309 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 309, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.STRING) ` -topatch--> `parameterValueType > (com.aspectran.core.util.apon.ParameterValueType.STRING)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 309 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 309, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.STRING) ` -topatch--> `parameterValueType <= (com.aspectran.core.util.apon.ParameterValueType.STRING)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 309 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 309, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.STRING) ` -topatch--> `parameterValueType < (com.aspectran.core.util.apon.ParameterValueType.STRING)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 309 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 309, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.STRING) ` -topatch--> `!(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.STRING))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 309 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) && ((value.charAt[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `((value.charAt(0)) != (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `((value.charAt(0)) >= (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `((value.charAt(0)) > (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt([...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `((value.charAt(0)) <= (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `((value.charAt(0)) < (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt([...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `(!((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR))) || ((value.cha[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || (!((value.char[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.charAt[...] ` -topatch--> `!(((value.charAt(0)) == (com.aspectran.core.util.apon.AponFormat.DOUBLE_QUOTE_CHAR)) || ((value.char[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 310 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 314, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.BOOLEAN) ` -topatch--> `parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.BOOLEAN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 314 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 314, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.BOOLEAN) ` -topatch--> `parameterValueType >= (com.aspectran.core.util.apon.ParameterValueType.BOOLEAN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 314 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 314, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.BOOLEAN) ` -topatch--> `parameterValueType > (com.aspectran.core.util.apon.ParameterValueType.BOOLEAN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 314 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 314, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.BOOLEAN) ` -topatch--> `parameterValueType <= (com.aspectran.core.util.apon.ParameterValueType.BOOLEAN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 314 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 314, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.BOOLEAN) ` -topatch--> `parameterValueType < (com.aspectran.core.util.apon.ParameterValueType.BOOLEAN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 314 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 314, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.BOOLEAN) ` -topatch--> `!(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.BOOLEAN))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 314 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 316, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.INT) ` -topatch--> `parameterValueType != (com.aspectran.core.util.apon.ParameterValueType.INT)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 316 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 316, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.INT) ` -topatch--> `parameterValueType >= (com.aspectran.core.util.apon.ParameterValueType.INT)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 316 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 316, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.INT) ` -topatch--> `parameterValueType > (com.aspectran.core.util.apon.ParameterValueType.INT)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 316 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 316, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.INT) ` -topatch--> `parameterValueType <= (com.aspectran.core.util.apon.ParameterValueType.INT)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 316 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 316, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.INT) ` -topatch--> `parameterValueType < (com.aspectran.core.util.apon.ParameterValueType.INT)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 316 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 316, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.INT) ` -topatch--> `!(parameterValueType == (com.aspectran.core.util.apon.ParameterValueType.INT))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 316 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 328, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.isArray()) && (parameterValue.isBracketed()) ` -topatch--> `(!(parameterValue.isArray())) && (parameterValue.isBracketed())` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 328 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 328, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.isArray()) && (parameterValue.isBracketed()) ` -topatch--> `(parameterValue.isArray()) && (!(parameterValue.isBracketed()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 328 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 328, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.isArray()) && (parameterValue.isBracketed()) ` -topatch--> `(parameterValue.isArray()) || (parameterValue.isBracketed())` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 328 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 328, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(parameterValue.isArray()) && (parameterValue.isBracketed()) ` -topatch--> `!((parameterValue.isArray()) && (parameterValue.isBracketed()))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 328 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 329, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket != (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 329 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 329, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket != (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket >= (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 329 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 329, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket != (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket > (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 329 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 329, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket != (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket <= (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 329 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 329, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket != (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket < (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 329 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 329, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket != (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `!(openBracket != (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 329 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 336, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN) ` -topatch--> `openBracket != (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 336 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 336, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN) ` -topatch--> `openBracket >= (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 336 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 336, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN) ` -topatch--> `openBracket > (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 336 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 336, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN) ` -topatch--> `openBracket <= (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 336 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 336, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN) ` -topatch--> `openBracket < (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 336 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 336, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN) ` -topatch--> `!(openBracket == (com.aspectran.core.util.apon.AponFormat.CURLY_BRACKET_OPEN))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 336 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 338, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket != (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 338 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 338, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket >= (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 338 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 338, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket > (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 338 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 338, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket <= (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 338 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 338, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `openBracket < (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 338 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 338, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN) ` -topatch--> `!(openBracket == (com.aspectran.core.util.apon.AponFormat.SQUARE_BRACKET_OPEN))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 338 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 400, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(reader) != null ` -topatch--> `(this.reader) == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 400 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 400, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(reader) != null ` -topatch--> `(this.reader) >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 400 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 400, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(reader) != null ` -topatch--> `(this.reader) > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 400 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 400, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(reader) != null ` -topatch--> `(this.reader) <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 400 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 400, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(reader) != null ` -topatch--> `(this.reader) < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 400 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.util.apon.AponReader line: 400, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(reader) != null ` -topatch--> `!((this.reader) != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 400 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/util/apon/AponReader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.FileRuleAppender line: 59, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(basePath) == null ` -topatch--> `(this.basePath) != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 59 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/FileRuleAppender.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.FileRuleAppender line: 59, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(basePath) == null ` -topatch--> `(this.basePath) >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 59 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/FileRuleAppender.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.FileRuleAppender line: 59, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(basePath) == null ` -topatch--> `(this.basePath) > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 59 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/FileRuleAppender.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.FileRuleAppender line: 59, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(basePath) == null ` -topatch--> `(this.basePath) <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 59 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/FileRuleAppender.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.FileRuleAppender line: 59, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(basePath) == null ` -topatch--> `(this.basePath) < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 59 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/FileRuleAppender.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.FileRuleAppender line: 59, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(basePath) == null ` -topatch--> `!((this.basePath) == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 59 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/FileRuleAppender.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.FileRuleAppender line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!(file.isFile()) ` -topatch--> `file.isFile()` (spoon.support.reflect.code.CtInvocationImpl) at l: 84 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/FileRuleAppender.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `appender != null ` -topatch--> `appender == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 66 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `appender != null ` -topatch--> `appender >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 66 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `appender != null ` -topatch--> `appender > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 66 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `appender != null ` -topatch--> `appender <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 66 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `appender != null ` -topatch--> `appender < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 66 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `appender != null ` -topatch--> `!(appender != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 66 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.PARAMETERS) ` -topatch--> `(appender.getAppenderType()) != (com.aspectran.core.context.rule.type.AppenderType.PARAMETERS)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 67 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.PARAMETERS) ` -topatch--> `(appender.getAppenderType()) >= (com.aspectran.core.context.rule.type.AppenderType.PARAMETERS)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 67 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.PARAMETERS) ` -topatch--> `(appender.getAppenderType()) > (com.aspectran.core.context.rule.type.AppenderType.PARAMETERS)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 67 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.PARAMETERS) ` -topatch--> `(appender.getAppenderType()) <= (com.aspectran.core.context.rule.type.AppenderType.PARAMETERS)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 67 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.PARAMETERS) ` -topatch--> `(appender.getAppenderType()) < (com.aspectran.core.context.rule.type.AppenderType.PARAMETERS)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 67 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.PARAMETERS) ` -topatch--> `!((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.PARAMETERS))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 67 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(hybridLoad) && ((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.[...] ` -topatch--> `(!(this.hybridLoad)) && ((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.Appen[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(hybridLoad) && ((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.[...] ` -topatch--> `(this.hybridLoad) && ((appender.getAppenderType()) != (com.aspectran.core.context.rule.type.Appender[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(hybridLoad) && ((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.[...] ` -topatch--> `(this.hybridLoad) && ((appender.getAppenderType()) >= (com.aspectran.core.context.rule.type.Appender[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(hybridLoad) && ((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.[...] ` -topatch--> `(this.hybridLoad) && ((appender.getAppenderType()) > (com.aspectran.core.context.rule.type.AppenderT[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(hybridLoad) && ((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.[...] ` -topatch--> `(this.hybridLoad) && ((appender.getAppenderType()) <= (com.aspectran.core.context.rule.type.Appender[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(hybridLoad) && ((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.[...] ` -topatch--> `(this.hybridLoad) && ((appender.getAppenderType()) < (com.aspectran.core.context.rule.type.AppenderT[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(hybridLoad) && ((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.[...] ` -topatch--> `(this.hybridLoad) && (!((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.Append[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(hybridLoad) && ((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.[...] ` -topatch--> `(this.hybridLoad) || ((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.Appender[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(hybridLoad) && ((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.[...] ` -topatch--> `!((this.hybridLoad) && ((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.Append[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!hybridon ` -topatch--> `hybridon` (spoon.support.reflect.code.CtVariableReadImpl) at l: 88 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(aspectranNodeParser) == null ` -topatch--> `(this.aspectranNodeParser) != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 89 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(aspectranNodeParser) == null ` -topatch--> `(this.aspectranNodeParser) >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 89 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(aspectranNodeParser) == null ` -topatch--> `(this.aspectranNodeParser) > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 89 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(aspectranNodeParser) == null ` -topatch--> `(this.aspectranNodeParser) <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 89 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(aspectranNodeParser) == null ` -topatch--> `(this.aspectranNodeParser) < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 89 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(aspectranNodeParser) == null ` -topatch--> `!((this.aspectranNodeParser) == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 89 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.AssistantLocal line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `ds != null ` -topatch--> `ds == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 80 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/AssistantLocal.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.AssistantLocal line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `ds != null ` -topatch--> `ds >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 80 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/AssistantLocal.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.AssistantLocal line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `ds != null ` -topatch--> `ds > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 80 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/AssistantLocal.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.AssistantLocal line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `ds != null ` -topatch--> `ds <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 80 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/AssistantLocal.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.AssistantLocal line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `ds != null ` -topatch--> `ds < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 80 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/AssistantLocal.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.AssistantLocal line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `ds != null ` -topatch--> `!(ds != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 80 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/AssistantLocal.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.HybridActivityContextParser line: 38, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rootConfigLocation == null ` -topatch--> `rootConfigLocation != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 38 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/HybridActivityContextParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.HybridActivityContextParser line: 38, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rootConfigLocation == null ` -topatch--> `rootConfigLocation >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 38 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/HybridActivityContextParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.HybridActivityContextParser line: 38, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rootConfigLocation == null ` -topatch--> `rootConfigLocation > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 38 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/HybridActivityContextParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.HybridActivityContextParser line: 38, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rootConfigLocation == null ` -topatch--> `rootConfigLocation <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 38 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/HybridActivityContextParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.HybridActivityContextParser line: 38, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rootConfigLocation == null ` -topatch--> `rootConfigLocation < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 38 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/HybridActivityContextParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.HybridActivityContextParser line: 38, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rootConfigLocation == null ` -topatch--> `!(rootConfigLocation == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 38 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/HybridActivityContextParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.AbstractActivityContextParser line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `rootConfigLocation.startsWith(com.aspectran.core.util.ResourceUtils.CLASSPATH_URL_PREFIX) ` -topatch--> `!(rootConfigLocation.startsWith(com.aspectran.core.util.ResourceUtils.CLASSPATH_URL_PREFIX))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 71 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/AbstractActivityContextParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.AbstractActivityContextParser line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `rootConfigLocation.toLowerCase().endsWith(".apon") ` -topatch--> `!(rootConfigLocation.toLowerCase().endsWith(".apon"))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 80 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/AbstractActivityContextParser.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.AbstractRuleAppender line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `resourceName.toLowerCase().endsWith(".apon") ` -topatch--> `!(resourceName.toLowerCase().endsWith(".apon"))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 92 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/AbstractRuleAppender.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.builder.HybridActivityContextBuilder line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rootConfigLocation != null ` -topatch--> `rootConfigLocation == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 116 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/builder/HybridActivityContextBuilder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.builder.HybridActivityContextBuilder line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rootConfigLocation != null ` -topatch--> `rootConfigLocation >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 116 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/builder/HybridActivityContextBuilder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.builder.HybridActivityContextBuilder line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rootConfigLocation != null ` -topatch--> `rootConfigLocation > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 116 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/builder/HybridActivityContextBuilder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.builder.HybridActivityContextBuilder line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rootConfigLocation != null ` -topatch--> `rootConfigLocation <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 116 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/builder/HybridActivityContextBuilder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.builder.HybridActivityContextBuilder line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rootConfigLocation != null ` -topatch--> `rootConfigLocation < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 116 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/builder/HybridActivityContextBuilder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.builder.HybridActivityContextBuilder line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rootConfigLocation != null ` -topatch--> `!(rootConfigLocation != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 116 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/builder/HybridActivityContextBuilder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 519, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(java.lang.System.getSecurityManager()) == null ` -topatch--> `(java.lang.System.getSecurityManager()) != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 519 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 519, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(java.lang.System.getSecurityManager()) == null ` -topatch--> `(java.lang.System.getSecurityManager()) >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 519 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 519, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(java.lang.System.getSecurityManager()) == null ` -topatch--> `(java.lang.System.getSecurityManager()) > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 519 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 519, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(java.lang.System.getSecurityManager()) == null ` -topatch--> `(java.lang.System.getSecurityManager()) <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 519 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 519, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(java.lang.System.getSecurityManager()) == null ` -topatch--> `(java.lang.System.getSecurityManager()) < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 519 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 519, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(java.lang.System.getSecurityManager()) == null ` -topatch--> `!((java.lang.System.getSecurityManager()) == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 519 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 526, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `cl == null ` -topatch--> `cl != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 526 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 526, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `cl == null ` -topatch--> `cl >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 526 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 526, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `cl == null ` -topatch--> `cl > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 526 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 526, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `cl == null ` -topatch--> `cl <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 526 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 526, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `cl == null ` -topatch--> `cl < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 526 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 526, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `cl == null ` -topatch--> `!(cl == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 526 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 529, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `cl == null ` -topatch--> `cl != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 529 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 529, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `cl == null ` -topatch--> `cl >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 529 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 529, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `cl == null ` -topatch--> `cl > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 529 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 529, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `cl == null ` -topatch--> `cl <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 529 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 529, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `cl == null ` -topatch--> `cl < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 529 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.resource.AspectranClassLoader line: 529, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `cl == null ` -topatch--> `!(cl == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 529 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/resource/AspectranClassLoader.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.type.DefaultSettingType line: 53, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `type.alias.equals(alias) ` -topatch--> `!(type.alias.equals(alias))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 53 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/type/DefaultSettingType.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.ScheduleJobRule line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `transletName == null ` -topatch--> `transletName != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 82 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/ScheduleJobRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.ScheduleJobRule line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `transletName == null ` -topatch--> `transletName >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 82 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/ScheduleJobRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.ScheduleJobRule line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `transletName == null ` -topatch--> `transletName > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 82 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/ScheduleJobRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.ScheduleJobRule line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `transletName == null ` -topatch--> `transletName <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 82 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/ScheduleJobRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.ScheduleJobRule line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `transletName == null ` -topatch--> `transletName < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 82 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/ScheduleJobRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.ScheduleJobRule line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `transletName == null ` -topatch--> `!(transletName == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 82 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/ScheduleJobRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.ScheduleJobRule line: 90, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `method != null ` -topatch--> `method == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 90 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/ScheduleJobRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.ScheduleJobRule line: 90, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `method != null ` -topatch--> `method >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 90 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/ScheduleJobRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.ScheduleJobRule line: 90, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `method != null ` -topatch--> `method > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 90 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/ScheduleJobRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.ScheduleJobRule line: 90, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `method != null ` -topatch--> `method <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 90 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/ScheduleJobRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.ScheduleJobRule line: 90, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `method != null ` -topatch--> `method < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 90 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/ScheduleJobRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.ScheduleJobRule line: 90, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `method != null ` -topatch--> `!(method != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 90 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/ScheduleJobRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 91, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `beanRule.isFactoryBean() ` -topatch--> `!(beanRule.isFactoryBean())` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 91 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 150, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `evaluator == null ` -topatch--> `evaluator != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 150 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 150, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `evaluator == null ` -topatch--> `evaluator >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 150 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 150, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `evaluator == null ` -topatch--> `evaluator > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 150 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 150, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `evaluator == null ` -topatch--> `evaluator <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 150 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 150, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `evaluator == null ` -topatch--> `evaluator < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 150 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 150, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `evaluator == null ` -topatch--> `!(evaluator == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 150 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 242, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(beanProxifierType) == (com.aspectran.core.context.rule.type.BeanProxifierType.JAVASSIST) ` -topatch--> `(this.beanProxifierType) != (com.aspectran.core.context.rule.type.BeanProxifierType.JAVASSIST)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 242 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 242, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(beanProxifierType) == (com.aspectran.core.context.rule.type.BeanProxifierType.JAVASSIST) ` -topatch--> `(this.beanProxifierType) >= (com.aspectran.core.context.rule.type.BeanProxifierType.JAVASSIST)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 242 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 242, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(beanProxifierType) == (com.aspectran.core.context.rule.type.BeanProxifierType.JAVASSIST) ` -topatch--> `(this.beanProxifierType) > (com.aspectran.core.context.rule.type.BeanProxifierType.JAVASSIST)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 242 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 242, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(beanProxifierType) == (com.aspectran.core.context.rule.type.BeanProxifierType.JAVASSIST) ` -topatch--> `(this.beanProxifierType) <= (com.aspectran.core.context.rule.type.BeanProxifierType.JAVASSIST)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 242 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 242, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(beanProxifierType) == (com.aspectran.core.context.rule.type.BeanProxifierType.JAVASSIST) ` -topatch--> `(this.beanProxifierType) < (com.aspectran.core.context.rule.type.BeanProxifierType.JAVASSIST)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 242 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 242, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(beanProxifierType) == (com.aspectran.core.context.rule.type.BeanProxifierType.JAVASSIST) ` -topatch--> `!((this.beanProxifierType) == (com.aspectran.core.context.rule.type.BeanProxifierType.JAVASSIST))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 242 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 243, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `log.isTraceEnabled() ` -topatch--> `!(this.log.isTraceEnabled())` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 243 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `bean instanceof com.aspectran.core.component.bean.aware.CurrentActivityAware ` -topatch--> `!(bean instanceof com.aspectran.core.component.bean.aware.CurrentActivityAware)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 325 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 328, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `bean instanceof com.aspectran.core.component.bean.aware.ActivityContextAware ` -topatch--> `!(bean instanceof com.aspectran.core.component.bean.aware.ActivityContextAware)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 328 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 331, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `bean instanceof com.aspectran.core.component.bean.aware.ApplicationAdapterAware ` -topatch--> `!(bean instanceof com.aspectran.core.component.bean.aware.ApplicationAdapterAware)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 331 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 334, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `bean instanceof com.aspectran.core.component.bean.aware.ClassLoaderAware ` -topatch--> `!(bean instanceof com.aspectran.core.component.bean.aware.ClassLoaderAware)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 334 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `bean instanceof com.aspectran.core.component.bean.aware.EnvironmentAware ` -topatch--> `!(bean instanceof com.aspectran.core.component.bean.aware.EnvironmentAware)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 337 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 345, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `beanRule.isInitializableBean() ` -topatch--> `!(beanRule.isInitializableBean())` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 345 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `exposedBean == null ` -topatch--> `exposedBean != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 385 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `exposedBean == null ` -topatch--> `exposedBean >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 385 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `exposedBean == null ` -topatch--> `exposedBean > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 385 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `exposedBean == null ` -topatch--> `exposedBean <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 385 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `exposedBean == null ` -topatch--> `exposedBean < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 385 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.component.bean.AbstractBeanFactory line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `exposedBean == null ` -topatch--> `!(exposedBean == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 385 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/component/bean/AbstractBeanFactory.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.TransletNodeletAdder line: 153, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!(irm.isEmpty()) ` -topatch--> `irm.isEmpty()` (spoon.support.reflect.code.CtInvocationImpl) at l: 153 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/TransletNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.TransletNodeletAdder line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!(irm.isEmpty()) ` -topatch--> `irm.isEmpty()` (spoon.support.reflect.code.CtInvocationImpl) at l: 140 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/TransletNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.TransletNodeletAdder line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `style != null ` -topatch--> `style == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/TransletNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.TransletNodeletAdder line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `style != null ` -topatch--> `style >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/TransletNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.TransletNodeletAdder line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `style != null ` -topatch--> `style > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/TransletNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.TransletNodeletAdder line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `style != null ` -topatch--> `style <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/TransletNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.TransletNodeletAdder line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `style != null ` -topatch--> `style < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/TransletNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.TransletNodeletAdder line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `style != null ` -topatch--> `!(style != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/TransletNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.TransletNodeletAdder line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `com.aspectran.core.util.StringUtils.hasText(text) ` -topatch--> `!(com.aspectran.core.util.StringUtils.hasText(text))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 78 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/TransletNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(beanActionRule.getArgumentItemRuleMap()) == null ` -topatch--> `(beanActionRule.getArgumentItemRuleMap()) != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 165 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(beanActionRule.getArgumentItemRuleMap()) == null ` -topatch--> `(beanActionRule.getArgumentItemRuleMap()) >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 165 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(beanActionRule.getArgumentItemRuleMap()) == null ` -topatch--> `(beanActionRule.getArgumentItemRuleMap()) > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 165 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(beanActionRule.getArgumentItemRuleMap()) == null ` -topatch--> `(beanActionRule.getArgumentItemRuleMap()) <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 165 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(beanActionRule.getArgumentItemRuleMap()) == null ` -topatch--> `(beanActionRule.getArgumentItemRuleMap()) < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 165 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(beanActionRule.getArgumentItemRuleMap()) == null ` -topatch--> `!((beanActionRule.getArgumentItemRuleMap()) == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 165 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `m1 != null ` -topatch--> `m1 == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 170 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `m1 != null ` -topatch--> `m1 >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 170 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `m1 != null ` -topatch--> `m1 > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 170 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `m1 != null ` -topatch--> `m1 <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 170 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `m1 != null ` -topatch--> `m1 < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 170 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `m1 != null ` -topatch--> `!(m1 != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 170 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `m2 == null ` -topatch--> `m2 != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `m2 == null ` -topatch--> `m2 >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `m2 == null ` -topatch--> `m2 > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `m2 == null ` -topatch--> `m2 <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `m2 == null ` -topatch--> `m2 < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.assistant.BeanReferenceInspector line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `m2 == null ` -topatch--> `!(m2 == null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 175 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/assistant/BeanReferenceInspector.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.BeanNodeletAdder line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!(irm.isEmpty()) ` -topatch--> `irm.isEmpty()` (spoon.support.reflect.code.CtInvocationImpl) at l: 137 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/BeanNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.BeanNodeletAdder line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `com.aspectran.core.util.StringUtils.hasText(text) ` -topatch--> `!(com.aspectran.core.util.StringUtils.hasText(text))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 140 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/BeanNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.ScheduleNodeletAdder line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanIdOrClass != null ` -topatch--> `beanIdOrClass == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 77 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/ScheduleNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.ScheduleNodeletAdder line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanIdOrClass != null ` -topatch--> `beanIdOrClass >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 77 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/ScheduleNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.ScheduleNodeletAdder line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanIdOrClass != null ` -topatch--> `beanIdOrClass > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 77 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/ScheduleNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.ScheduleNodeletAdder line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanIdOrClass != null ` -topatch--> `beanIdOrClass <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 77 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/ScheduleNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.ScheduleNodeletAdder line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanIdOrClass != null ` -topatch--> `beanIdOrClass < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 77 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/ScheduleNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.parser.xml.ScheduleNodeletAdder line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanIdOrClass != null ` -topatch--> `!(beanIdOrClass != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 77 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/parser/xml/ScheduleNodeletAdder.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.RequestRule line: 211, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `allowedMethod != null ` -topatch--> `allowedMethod == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 211 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/RequestRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.RequestRule line: 211, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `allowedMethod != null ` -topatch--> `allowedMethod >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 211 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/RequestRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.RequestRule line: 211, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `allowedMethod != null ` -topatch--> `allowedMethod > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 211 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/RequestRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.RequestRule line: 211, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `allowedMethod != null ` -topatch--> `allowedMethod <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 211 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/RequestRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.RequestRule line: 211, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `allowedMethod != null ` -topatch--> `allowedMethod < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 211 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/RequestRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.RequestRule line: 211, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `allowedMethod != null ` -topatch--> `!(allowedMethod != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 211 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/RequestRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.RequestRule line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `encoding != null ` -topatch--> `encoding == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 218 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/RequestRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.RequestRule line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `encoding != null ` -topatch--> `encoding >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 218 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/RequestRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.RequestRule line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `encoding != null ` -topatch--> `encoding > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 218 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/RequestRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.RequestRule line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `encoding != null ` -topatch--> `encoding <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 218 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/RequestRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.RequestRule line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `encoding != null ` -topatch--> `encoding < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 218 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/RequestRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.RequestRule line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `encoding != null ` -topatch--> `!(encoding != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 218 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/RequestRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.activity.process.ContentList line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtVariableReadImpl) `omittable ` -topatch--> `!omittable` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 75 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/activity/process/ContentList.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 189, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassDelimiterIndex == (-1) ` -topatch--> `beanClassDelimiterIndex != (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 189 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 189, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassDelimiterIndex == (-1) ` -topatch--> `beanClassDelimiterIndex >= (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 189 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 189, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassDelimiterIndex == (-1) ` -topatch--> `beanClassDelimiterIndex > (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 189 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 189, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassDelimiterIndex == (-1) ` -topatch--> `beanClassDelimiterIndex <= (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 189 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 189, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassDelimiterIndex == (-1) ` -topatch--> `beanClassDelimiterIndex < (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 189 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 189, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassDelimiterIndex == (-1) ` -topatch--> `!(beanClassDelimiterIndex == (-1))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 189 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassDelimiterIndex == 0 ` -topatch--> `beanClassDelimiterIndex != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassDelimiterIndex == 0 ` -topatch--> `beanClassDelimiterIndex >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassDelimiterIndex == 0 ` -topatch--> `beanClassDelimiterIndex > 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassDelimiterIndex == 0 ` -topatch--> `beanClassDelimiterIndex <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassDelimiterIndex == 0 ` -topatch--> `beanClassDelimiterIndex < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassDelimiterIndex == 0 ` -topatch--> `!(beanClassDelimiterIndex == 0)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 191 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 198, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassPattern != null ` -topatch--> `beanClassPattern == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 198 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 198, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassPattern != null ` -topatch--> `beanClassPattern >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 198 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 198, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassPattern != null ` -topatch--> `beanClassPattern > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 198 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 198, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassPattern != null ` -topatch--> `beanClassPattern <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 198 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 198, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassPattern != null ` -topatch--> `beanClassPattern < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 198 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 198, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassPattern != null ` -topatch--> `!(beanClassPattern != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 198 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `methodNameDelimiterIndex == 0 ` -topatch--> `methodNameDelimiterIndex != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `methodNameDelimiterIndex == 0 ` -topatch--> `methodNameDelimiterIndex >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `methodNameDelimiterIndex == 0 ` -topatch--> `methodNameDelimiterIndex > 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `methodNameDelimiterIndex == 0 ` -topatch--> `methodNameDelimiterIndex <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `methodNameDelimiterIndex == 0 ` -topatch--> `methodNameDelimiterIndex < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `methodNameDelimiterIndex == 0 ` -topatch--> `!(methodNameDelimiterIndex == 0)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 201 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `methodNameDelimiterIndex > 0 ` -topatch--> `methodNameDelimiterIndex == 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `methodNameDelimiterIndex > 0 ` -topatch--> `methodNameDelimiterIndex != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `methodNameDelimiterIndex > 0 ` -topatch--> `methodNameDelimiterIndex >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `methodNameDelimiterIndex > 0 ` -topatch--> `methodNameDelimiterIndex <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `methodNameDelimiterIndex > 0 ` -topatch--> `methodNameDelimiterIndex < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `methodNameDelimiterIndex > 0 ` -topatch--> `!(methodNameDelimiterIndex > 0)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 204 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(transletNamePattern != null) && (!(transletNamePattern.isEmpty())) ` -topatch--> `(transletNamePattern == null) && (!(transletNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(transletNamePattern != null) && (!(transletNamePattern.isEmpty())) ` -topatch--> `(transletNamePattern >= null) && (!(transletNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(transletNamePattern != null) && (!(transletNamePattern.isEmpty())) ` -topatch--> `(transletNamePattern > null) && (!(transletNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(transletNamePattern != null) && (!(transletNamePattern.isEmpty())) ` -topatch--> `(transletNamePattern <= null) && (!(transletNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(transletNamePattern != null) && (!(transletNamePattern.isEmpty())) ` -topatch--> `(transletNamePattern < null) && (!(transletNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(transletNamePattern != null) && (!(transletNamePattern.isEmpty())) ` -topatch--> `(!(transletNamePattern != null)) && (!(transletNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(transletNamePattern != null) && (!(transletNamePattern.isEmpty())) ` -topatch--> `(transletNamePattern != null) && (transletNamePattern.isEmpty())` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(transletNamePattern != null) && (!(transletNamePattern.isEmpty())) ` -topatch--> `(transletNamePattern != null) || (!(transletNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(transletNamePattern != null) && (!(transletNamePattern.isEmpty())) ` -topatch--> `!((transletNamePattern != null) && (!(transletNamePattern.isEmpty())))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 210 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 214, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassPattern != null ` -topatch--> `beanClassPattern == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 214 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 214, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassPattern != null ` -topatch--> `beanClassPattern >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 214 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 214, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassPattern != null ` -topatch--> `beanClassPattern > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 214 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 214, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassPattern != null ` -topatch--> `beanClassPattern <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 214 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 214, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassPattern != null ` -topatch--> `beanClassPattern < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 214 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 214, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `beanClassPattern != null ` -topatch--> `!(beanClassPattern != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 214 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `beanClassPattern.startsWith(com.aspectran.core.context.rule.BeanRule.CLASS_DIRECTIVE_PREFIX) ` -topatch--> `!(beanClassPattern.startsWith(com.aspectran.core.context.rule.BeanRule.CLASS_DIRECTIVE_PREFIX))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 215 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 221, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!(beanClassPattern.isEmpty()) ` -topatch--> `beanClassPattern.isEmpty()` (spoon.support.reflect.code.CtInvocationImpl) at l: 221 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 227, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(methodNamePattern != null) && (!(methodNamePattern.isEmpty())) ` -topatch--> `(methodNamePattern == null) && (!(methodNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 227 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 227, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(methodNamePattern != null) && (!(methodNamePattern.isEmpty())) ` -topatch--> `(methodNamePattern >= null) && (!(methodNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 227 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 227, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(methodNamePattern != null) && (!(methodNamePattern.isEmpty())) ` -topatch--> `(methodNamePattern > null) && (!(methodNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 227 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 227, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(methodNamePattern != null) && (!(methodNamePattern.isEmpty())) ` -topatch--> `(methodNamePattern <= null) && (!(methodNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 227 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 227, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(methodNamePattern != null) && (!(methodNamePattern.isEmpty())) ` -topatch--> `(methodNamePattern < null) && (!(methodNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 227 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 227, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(methodNamePattern != null) && (!(methodNamePattern.isEmpty())) ` -topatch--> `(!(methodNamePattern != null)) && (!(methodNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 227 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 227, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(methodNamePattern != null) && (!(methodNamePattern.isEmpty())) ` -topatch--> `(methodNamePattern != null) && (methodNamePattern.isEmpty())` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 227 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 227, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(methodNamePattern != null) && (!(methodNamePattern.isEmpty())) ` -topatch--> `(methodNamePattern != null) || (!(methodNamePattern.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 227 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.PointcutPatternRule line: 227, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(methodNamePattern != null) && (!(methodNamePattern.isEmpty())) ` -topatch--> `!((methodNamePattern != null) && (!(methodNamePattern.isEmpty())))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 227 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/PointcutPatternRule.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(appender.getLastModified()) == (aponFile.lastModified()) ` -topatch--> `(appender.getLastModified()) != (aponFile.lastModified())` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 78 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(appender.getLastModified()) == (aponFile.lastModified()) ` -topatch--> `(appender.getLastModified()) >= (aponFile.lastModified())` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 78 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(appender.getLastModified()) == (aponFile.lastModified()) ` -topatch--> `(appender.getLastModified()) > (aponFile.lastModified())` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 78 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(appender.getLastModified()) == (aponFile.lastModified()) ` -topatch--> `(appender.getLastModified()) <= (aponFile.lastModified())` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 78 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(appender.getLastModified()) == (aponFile.lastModified()) ` -topatch--> `(appender.getLastModified()) < (aponFile.lastModified())` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 78 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(appender.getLastModified()) == (aponFile.lastModified()) ` -topatch--> `!((appender.getLastModified()) == (aponFile.lastModified()))` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 78 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `((appender.getAppenderType()) != (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `((appender.getAppenderType()) >= (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `((appender.getAppenderType()) > (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appen[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `((appender.getAppenderType()) <= (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `((appender.getAppenderType()) < (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appen[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `(!((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE))) && ((a[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && (!((ap[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) || ((appe[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((appe[...] ` -topatch--> `!(((appender.getAppenderType()) == (com.aspectran.core.context.rule.type.AppenderType.FILE)) && ((ap[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 106 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(encoding) != null ` -topatch--> `(this.encoding) == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 131 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(encoding) != null ` -topatch--> `(this.encoding) >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 131 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(encoding) != null ` -topatch--> `(this.encoding) > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 131 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(encoding) != null ` -topatch--> `(this.encoding) <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 131 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(encoding) != null ` -topatch--> `(this.encoding) < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) at l: 131 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.aspectran.core.context.rule.appender.HybridRuleAppendHandler line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(encoding) != null ` -topatch--> `!((this.encoding) != null)` (spoon.support.reflect.code.CtUnaryOperatorImpl) at l: 131 on /root/output_astor/AstorMain-core/src/default/com/aspectran/core/context/rule/appender/HybridRuleAppendHandler.java
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:232) - Time Repair Loop (s): 705.16
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:234) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:300) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:246) - 
 --SOLUTIONS DESCRIPTION--


[ERROR] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:50) - Unexpected character (E) at position 0.
[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:93) - Storing ing JSON at /root/./output_astor/AstorMain-core//astor_output.json
[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:94) - astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":398,"NR_FAILLING_COMPILATIONS":272,"NR_GENERATIONS":null,"TOTAL_TIME":705.16,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[]}
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:197) - Time Total(s): 725.88
