{"executions":[{"result":{"success":false,"error":"initializationError(org.jgrapht.alg.cycle.ChordalityInspectorTest): org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\nclass java.lang.Exception: org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\n    at org.junit.runners.Parameterized.parametersMethodReturnedWrongType(Parameterized.java:343)\n    at org.junit.runners.Parameterized.allParameters(Parameterized.java:296)\n    at org.junit.runners.Parameterized.<init>(Parameterized.java:282)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:-2)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:29)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:21)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:26)\n    at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:31)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:204)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:164)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testPerfectEliminationOrder[1]","class":"org.jgrapht.alg.cycle.ChordalityInspectorTest"},"endDate":1530833070761,"diff":"","startDate":1530833070113},{"result":{"success":false,"error":"completeGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList$Bucket.access$3(LexBreadthFirstIterator.java:28)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:877)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isCompleteAnIntervalGraph(IntervalGraphRecognizerTest.java:202)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.completeGraphTest(IntervalGraphRecognizerTest.java:212)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"completeGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833071237,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1887,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,7 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -477,3 +481,5 @@\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n@@ -483,5 +489,7 @@\n                 \n-                for(Integer i : newBucket.vertices) {\n-                    V updatedVertex = vertexNumbering.get(i);\n-                    bucketMap.put(updatedVertex, newBucket);\n+                if (newBucket != null) {\n+                    for(Integer i : newBucket.vertices) {\n+                        V updatedVertex = vertexNumbering.get(i);\n+                        bucketMap.put(updatedVertex, newBucket);\n+                    }\n                 }\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833071075},{"result":{"success":false,"error":"linearGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isLinearAnIntervalGraph(IntervalGraphRecognizerTest.java:252)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.linearGraphTest(IntervalGraphRecognizerTest.java:262)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"linearGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833071880,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( head.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833071785},{"result":{"success":false,"error":"testForbiddenSubgraphBiclawWithAT(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphBiclawWithAT(IntervalGraphRecognizerTest.java:71)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphBiclawWithAT","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833071423,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( head.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833071275},{"result":{"success":false,"error":"testForbiddenSubgraphCn(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList$Bucket.access$3(LexBreadthFirstIterator.java:28)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:877)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isCnAnIntervalGraph(IntervalGraphRecognizerTest.java:177)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphCn(IntervalGraphRecognizerTest.java:189)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphCn","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833071275,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1887,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,7 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -477,3 +481,5 @@\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n@@ -483,5 +489,7 @@\n                 \n-                for(Integer i : newBucket.vertices) {\n-                    V updatedVertex = vertexNumbering.get(i);\n-                    bucketMap.put(updatedVertex, newBucket);\n+                if (newBucket != null) {\n+                    for(Integer i : newBucket.vertices) {\n+                        V updatedVertex = vertexNumbering.get(i);\n+                        bucketMap.put(updatedVertex, newBucket);\n+                    }\n                 }\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833071237},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily2(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:154)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:164)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily2","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833071601,"decisions":[{"epsilon":0,"nbUse":39,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( head.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833071423},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:118)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:128)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833071075,"decisions":[{"epsilon":0,"nbUse":24,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":3,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( head.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833070761},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBoland(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBoland(IntervalGraphRecognizerTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBoland","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833071785,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( head.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833071601},{"result":{"success":false,"error":"testAsIntervalGraphMappingForUndirectedGraph(org.jgrapht.graph.interval.IntervalGraphMappingTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList$Bucket.access$3(LexBreadthFirstIterator.java:28)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:877)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.graph.interval.IntervalGraphMapping.asIntervalGraphMapping(IntervalGraphMapping.java:213)\n    at org.jgrapht.graph.interval.IntervalGraphMappingTest.testAsIntervalGraphMappingForUndirectedGraph(IntervalGraphMappingTest.java:90)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testAsIntervalGraphMappingForUndirectedGraph","class":"org.jgrapht.graph.interval.IntervalGraphMappingTest"},"endDate":1530833071940,"decisions":[{"epsilon":0,"nbUse":32,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":17,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,7 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -477,3 +481,5 @@\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n@@ -483,5 +489,7 @@\n                 \n-                for(Integer i : newBucket.vertices) {\n-                    V updatedVertex = vertexNumbering.get(i);\n-                    bucketMap.put(updatedVertex, newBucket);\n+                if (newBucket != null) {\n+                    for(Integer i : newBucket.vertices) {\n+                        V updatedVertex = vertexNumbering.get(i);\n+                        bucketMap.put(updatedVertex, newBucket);\n+                    }\n                 }\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833071880},{"result":{"success":false,"error":"testEvents(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testEvents(LexBreadthFirstIteratorTest.java:54)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testEvents","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833072204,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( head.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833072106},{"result":{"success":false,"error":"testLexicographicalBfsIterator2(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator2(LexBreadthFirstIteratorTest.java:108)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator2","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833072031,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( head.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833071940},{"result":{"success":false,"error":"testLexicographicalBfsIterator4(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator4(LexBreadthFirstIteratorTest.java:192)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator4","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833072106,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( head.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833072031},{"result":{"success":false,"error":"initializationError(org.jgrapht.alg.cycle.ChordalityInspectorTest): org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\nclass java.lang.Exception: org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\n    at org.junit.runners.Parameterized.parametersMethodReturnedWrongType(Parameterized.java:343)\n    at org.junit.runners.Parameterized.allParameters(Parameterized.java:296)\n    at org.junit.runners.Parameterized.<init>(Parameterized.java:282)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:-2)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:29)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:21)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:26)\n    at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:31)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:204)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:164)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testPerfectEliminationOrder[1]","class":"org.jgrapht.alg.cycle.ChordalityInspectorTest"},"endDate":1530833072212,"diff":"","startDate":1530833072206},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"completeGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833125376,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1887,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1881,"decisionType":"NEW","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":171,"decisionType":"NEW","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,8 +472,18 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                        }\n+                    }\n                 }\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n@@ -483,2 +493,5 @@\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 for(Integer i : newBucket.vertices) {\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18602,"line":475,"executionCount":0,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18925,"line":484,"executionCount":0,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833072368},{"result":{"success":false,"error":"linearGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isLinearAnIntervalGraph(IntervalGraphRecognizerTest.java:252)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.linearGraphTest(IntervalGraphRecognizerTest.java:262)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"linearGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833146208,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"this.head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( this.head.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833146123},{"result":{"success":false,"error":"testForbiddenSubgraphBiclawWithAT(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphBiclawWithAT(IntervalGraphRecognizerTest.java:71)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphBiclawWithAT","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833145847,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833145747},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphCn","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833145747,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1887,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1881,"decisionType":"NEW","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":171,"decisionType":"NEW","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,8 +472,18 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                        }\n+                    }\n                 }\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n@@ -483,2 +493,5 @@\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 for(Integer i : newBucket.vertices) {\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18602,"line":475,"executionCount":0,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18925,"line":484,"executionCount":0,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833125376},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily2(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:154)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:164)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily2","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833145966,"decisions":[{"epsilon":0,"nbUse":39,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833145847},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:118)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:128)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833072367,"decisions":[{"epsilon":0,"nbUse":24,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":3,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833072212},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBoland(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBoland(IntervalGraphRecognizerTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBoland","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833146123,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":23,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833145966},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testAsIntervalGraphMappingForUndirectedGraph","class":"org.jgrapht.graph.interval.IntervalGraphMappingTest"},"endDate":1530833146483,"decisions":[{"epsilon":0,"nbUse":32,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":17,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,8 +472,18 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                        }\n+                    }\n                 }\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n@@ -483,2 +493,5 @@\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 for(Integer i : newBucket.vertices) {\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18602,"line":475,"executionCount":0,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18925,"line":484,"executionCount":0,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833146208},{"result":{"success":false,"error":"testEvents(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testEvents(LexBreadthFirstIteratorTest.java:54)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testEvents","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833146731,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833146637},{"result":{"success":false,"error":"testLexicographicalBfsIterator2(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator2(LexBreadthFirstIteratorTest.java:108)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator2","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833146564,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833146483},{"result":{"success":false,"error":"testLexicographicalBfsIterator4(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator4(LexBreadthFirstIteratorTest.java:192)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator4","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833146637,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833146564},{"result":{"success":false,"error":"initializationError(org.jgrapht.alg.cycle.ChordalityInspectorTest): org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\nclass java.lang.Exception: org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\n    at org.junit.runners.Parameterized.parametersMethodReturnedWrongType(Parameterized.java:343)\n    at org.junit.runners.Parameterized.allParameters(Parameterized.java:296)\n    at org.junit.runners.Parameterized.<init>(Parameterized.java:282)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:-2)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:29)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:21)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:26)\n    at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:31)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:204)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:164)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testPerfectEliminationOrder[1]","class":"org.jgrapht.alg.cycle.ChordalityInspectorTest"},"endDate":1530833146742,"diff":"","startDate":1530833146733},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"completeGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833205113,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1887,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1881,"decisionType":"NEW","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":171,"decisionType":"NEW","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,8 +472,19 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    } else {\n+                        if (bucket == null) {\n+                            return null;\n+                        }\n+                        newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    }\n                 }\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n@@ -483,2 +494,5 @@\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 for(Integer i : newBucket.vertices) {\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18602,"line":475,"executionCount":0,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18925,"line":484,"executionCount":0,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833146898},{"result":{"success":false,"error":"linearGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isLinearAnIntervalGraph(IntervalGraphRecognizerTest.java:252)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.linearGraphTest(IntervalGraphRecognizerTest.java:262)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"linearGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833227836,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833227744},{"result":{"success":false,"error":"testForbiddenSubgraphBiclawWithAT(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphBiclawWithAT(IntervalGraphRecognizerTest.java:71)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphBiclawWithAT","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833227308,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833227165},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphCn","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833227165,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1887,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1881,"decisionType":"NEW","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":171,"decisionType":"NEW","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,8 +472,19 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    } else {\n+                        if (bucket == null) {\n+                            return null;\n+                        }\n+                        newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    }\n                 }\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n@@ -483,2 +494,5 @@\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 for(Integer i : newBucket.vertices) {\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18602,"line":475,"executionCount":0,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18925,"line":484,"executionCount":0,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833205113},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily2(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:154)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:164)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily2","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833227503,"decisions":[{"epsilon":0,"nbUse":39,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833227309},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:118)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:128)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833146898,"decisions":[{"epsilon":0,"nbUse":24,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":3,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833146742},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBoland(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBoland(IntervalGraphRecognizerTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBoland","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833227744,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":23,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833227503},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testAsIntervalGraphMappingForUndirectedGraph","class":"org.jgrapht.graph.interval.IntervalGraphMappingTest"},"endDate":1530833228158,"decisions":[{"epsilon":0,"nbUse":32,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":17,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,8 +472,19 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    } else {\n+                        if (bucket == null) {\n+                            return null;\n+                        }\n+                        newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    }\n                 }\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n@@ -483,2 +494,5 @@\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 for(Integer i : newBucket.vertices) {\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18602,"line":475,"executionCount":0,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18925,"line":484,"executionCount":0,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833227836},{"result":{"success":false,"error":"testEvents(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testEvents(LexBreadthFirstIteratorTest.java:54)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testEvents","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833228439,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833228332},{"result":{"success":false,"error":"testLexicographicalBfsIterator2(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator2(LexBreadthFirstIteratorTest.java:108)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator2","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833228252,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833228158},{"result":{"success":false,"error":"testLexicographicalBfsIterator4(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator4(LexBreadthFirstIteratorTest.java:192)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator4","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833228332,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833228252},{"result":{"success":false,"error":"initializationError(org.jgrapht.alg.cycle.ChordalityInspectorTest): org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\nclass java.lang.Exception: org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\n    at org.junit.runners.Parameterized.parametersMethodReturnedWrongType(Parameterized.java:343)\n    at org.junit.runners.Parameterized.allParameters(Parameterized.java:296)\n    at org.junit.runners.Parameterized.<init>(Parameterized.java:282)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:-2)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:29)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:21)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:26)\n    at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:31)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:204)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:164)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testPerfectEliminationOrder[1]","class":"org.jgrapht.alg.cycle.ChordalityInspectorTest"},"endDate":1530833228466,"diff":"","startDate":1530833228441},{"result":{"success":false,"error":"completeGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:861)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearchStar(LexBreadthFirstSearch.java:133)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:130)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isCompleteAnIntervalGraph(IntervalGraphRecognizerTest.java:202)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.completeGraphTest(IntervalGraphRecognizerTest.java:212)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"completeGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833229025,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1887,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,7 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -477,3 +481,5 @@\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n@@ -483,2 +489,5 @@\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 for(Integer i : newBucket.vertices) {\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18925,"line":484,"executionCount":0,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833228665},{"result":{"success":false,"error":"linearGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isLinearAnIntervalGraph(IntervalGraphRecognizerTest.java:252)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.linearGraphTest(IntervalGraphRecognizerTest.java:262)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"linearGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833229598,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833229505},{"result":{"success":false,"error":"testForbiddenSubgraphBiclawWithAT(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphBiclawWithAT(IntervalGraphRecognizerTest.java:71)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphBiclawWithAT","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833229325,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = head;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833229247},{"result":{"success":false,"error":"testForbiddenSubgraphCn(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:861)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearchStar(LexBreadthFirstSearch.java:133)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:130)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isCnAnIntervalGraph(IntervalGraphRecognizerTest.java:177)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphCn(IntervalGraphRecognizerTest.java:189)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphCn","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833229247,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1887,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,7 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -477,3 +481,5 @@\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n@@ -483,2 +489,5 @@\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 for(Integer i : newBucket.vertices) {\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18925,"line":484,"executionCount":0,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833229025},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily2(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:154)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:164)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily2","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833229414,"decisions":[{"epsilon":0,"nbUse":39,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = head;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833229326},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:118)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:128)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833228665,"decisions":[{"epsilon":0,"nbUse":24,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = head;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833228466},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBoland(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBoland(IntervalGraphRecognizerTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBoland","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833229505,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":23,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = head;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833229414},{"result":{"success":false,"error":"testAsIntervalGraphMappingForUndirectedGraph(org.jgrapht.graph.interval.IntervalGraphMappingTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:861)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearchStar(LexBreadthFirstSearch.java:133)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:130)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.graph.interval.IntervalGraphMapping.asIntervalGraphMapping(IntervalGraphMapping.java:213)\n    at org.jgrapht.graph.interval.IntervalGraphMappingTest.testAsIntervalGraphMappingForUndirectedGraph(IntervalGraphMappingTest.java:90)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testAsIntervalGraphMappingForUndirectedGraph","class":"org.jgrapht.graph.interval.IntervalGraphMappingTest"},"endDate":1530833229863,"decisions":[{"epsilon":0,"nbUse":32,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":17,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,7 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -477,3 +481,5 @@\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n@@ -483,2 +489,5 @@\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 for(Integer i : newBucket.vertices) {\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18925,"line":484,"executionCount":0,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833229598},{"result":{"success":false,"error":"testEvents(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testEvents(LexBreadthFirstIteratorTest.java:54)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testEvents","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833230022,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = head;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833229965},{"result":{"success":false,"error":"testLexicographicalBfsIterator2(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator2(LexBreadthFirstIteratorTest.java:98)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator2","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833229922,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = head;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833229864},{"result":{"success":false,"error":"testLexicographicalBfsIterator4(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator4(LexBreadthFirstIteratorTest.java:182)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator4","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833229965,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = head;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833229922},{"result":{"success":false,"error":"initializationError(org.jgrapht.alg.cycle.ChordalityInspectorTest): org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\nclass java.lang.Exception: org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\n    at org.junit.runners.Parameterized.parametersMethodReturnedWrongType(Parameterized.java:343)\n    at org.junit.runners.Parameterized.allParameters(Parameterized.java:296)\n    at org.junit.runners.Parameterized.<init>(Parameterized.java:282)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:-2)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:29)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:21)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:26)\n    at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:31)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:204)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:164)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testPerfectEliminationOrder[1]","class":"org.jgrapht.alg.cycle.ChordalityInspectorTest"},"endDate":1530833230030,"diff":"","startDate":1530833230023},{"result":{"success":false,"error":"completeGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeCalled(CallChecker.java:312)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:876)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isCompleteAnIntervalGraph(IntervalGraphRecognizerTest.java:202)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.completeGraphTest(IntervalGraphRecognizerTest.java:212)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"completeGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833230299,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,7 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -477,3 +481,5 @@\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833230169},{"result":{"success":false,"error":"linearGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isLinearAnIntervalGraph(IntervalGraphRecognizerTest.java:252)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.linearGraphTest(IntervalGraphRecognizerTest.java:262)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"linearGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833230641,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = head;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833230586},{"result":{"success":false,"error":"testForbiddenSubgraphBiclawWithAT(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphBiclawWithAT(IntervalGraphRecognizerTest.java:71)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphBiclawWithAT","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833230412,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = newBucket;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833230336},{"result":{"success":false,"error":"testForbiddenSubgraphCn(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeCalled(CallChecker.java:312)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:876)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isCnAnIntervalGraph(IntervalGraphRecognizerTest.java:177)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphCn(IntervalGraphRecognizerTest.java:189)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphCn","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833230336,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,7 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -477,3 +481,5 @@\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833230299},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily2(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:154)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:164)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily2","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833230498,"decisions":[{"epsilon":0,"nbUse":39,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = newBucket;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833230412},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:118)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:128)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833230169,"decisions":[{"epsilon":0,"nbUse":24,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = newBucket;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833230030},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBoland(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBoland(IntervalGraphRecognizerTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBoland","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833230586,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":23,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = newBucket;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833230498},{"result":{"success":false,"error":"testAsIntervalGraphMappingForUndirectedGraph(org.jgrapht.graph.interval.IntervalGraphMappingTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeCalled(CallChecker.java:312)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:876)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.graph.interval.IntervalGraphMapping.asIntervalGraphMapping(IntervalGraphMapping.java:213)\n    at org.jgrapht.graph.interval.IntervalGraphMappingTest.testAsIntervalGraphMappingForUndirectedGraph(IntervalGraphMappingTest.java:90)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testAsIntervalGraphMappingForUndirectedGraph","class":"org.jgrapht.graph.interval.IntervalGraphMappingTest"},"endDate":1530833230687,"decisions":[{"epsilon":0,"nbUse":32,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,7 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -477,3 +481,5 @@\n                 \n-                newBucket.insertBefore(bucket);\n+                if (newBucket != null) {\n+                    newBucket.insertBefore(bucket);\n+                }\n                 \n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833230641},{"result":{"success":false,"error":"testEvents(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testEvents(LexBreadthFirstIteratorTest.java:54)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testEvents","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833230843,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = newBucket;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833230780},{"result":{"success":false,"error":"testLexicographicalBfsIterator2(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator2(LexBreadthFirstIteratorTest.java:98)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator2","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833230739,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = newBucket;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833230687},{"result":{"success":false,"error":"testLexicographicalBfsIterator4(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator4(LexBreadthFirstIteratorTest.java:182)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator4","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833230780,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = newBucket;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833230739},{"result":{"success":false,"error":"initializationError(org.jgrapht.alg.cycle.ChordalityInspectorTest): org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\nclass java.lang.Exception: org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\n    at org.junit.runners.Parameterized.parametersMethodReturnedWrongType(Parameterized.java:343)\n    at org.junit.runners.Parameterized.allParameters(Parameterized.java:296)\n    at org.junit.runners.Parameterized.<init>(Parameterized.java:282)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:-2)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:29)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:21)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:26)\n    at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:31)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:204)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:164)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testPerfectEliminationOrder[1]","class":"org.jgrapht.alg.cycle.ChordalityInspectorTest"},"endDate":1530833230851,"diff":"","startDate":1530833230844},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"completeGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833288976,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1881,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":171,"decisionType":"NEW","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,7 +472,18 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                        }\n+                    }\n                 }\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 newBucket.insertBefore(bucket);\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18602,"line":475,"executionCount":0,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833231076},{"result":{"success":false,"error":"linearGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:893)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isLinearAnIntervalGraph(IntervalGraphRecognizerTest.java:252)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.linearGraphTest(IntervalGraphRecognizerTest.java:262)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"linearGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833310541,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                                   = newBucket;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833310486},{"result":{"success":false,"error":"testForbiddenSubgraphBiclawWithAT(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphBiclawWithAT(IntervalGraphRecognizerTest.java:71)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphBiclawWithAT","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833310156,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,14 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       != null) {\n+                            }\n+                        }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833310028},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphCn","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833310027,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1881,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":171,"decisionType":"NEW","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,7 +472,18 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                        }\n+                    }\n                 }\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 newBucket.insertBefore(bucket);\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18602,"line":475,"executionCount":0,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833288976},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily2(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:154)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:164)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily2","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833310319,"decisions":[{"epsilon":0,"nbUse":39,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,14 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       != null) {\n+                            }\n+                        }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833310156},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:118)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:128)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833231075,"decisions":[{"epsilon":0,"nbUse":24,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":3,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,14 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       != null) {\n+                            }\n+                        }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833230851},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBoland(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBoland(IntervalGraphRecognizerTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBoland","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833310485,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":23,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,14 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       != null) {\n+                            }\n+                        }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833310319},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testAsIntervalGraphMappingForUndirectedGraph","class":"org.jgrapht.graph.interval.IntervalGraphMappingTest"},"endDate":1530833310984,"decisions":[{"epsilon":0,"nbUse":32,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,7 +472,18 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                        }\n+                    }\n                 }\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 newBucket.insertBefore(bucket);\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18602,"line":475,"executionCount":0,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833310541},{"result":{"success":false,"error":"testEvents(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testEvents(LexBreadthFirstIteratorTest.java:54)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testEvents","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833311324,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,14 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       != null) {\n+                            }\n+                        }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833311202},{"result":{"success":false,"error":"testLexicographicalBfsIterator2(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator2(LexBreadthFirstIteratorTest.java:108)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator2","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833311065,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,14 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       != null) {\n+                            }\n+                        }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833310984},{"result":{"success":false,"error":"testLexicographicalBfsIterator4(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator4(LexBreadthFirstIteratorTest.java:192)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator4","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833311202,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,14 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       != null) {\n+                            }\n+                        }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833311065},{"result":{"success":false,"error":"initializationError(org.jgrapht.alg.cycle.ChordalityInspectorTest): org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\nclass java.lang.Exception: org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\n    at org.junit.runners.Parameterized.parametersMethodReturnedWrongType(Parameterized.java:343)\n    at org.junit.runners.Parameterized.allParameters(Parameterized.java:296)\n    at org.junit.runners.Parameterized.<init>(Parameterized.java:282)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:-2)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:29)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:21)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:26)\n    at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:31)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:204)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:164)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testPerfectEliminationOrder[1]","class":"org.jgrapht.alg.cycle.ChordalityInspectorTest"},"endDate":1530833311346,"diff":"","startDate":1530833311326},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"completeGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833375990,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1881,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":171,"decisionType":"NEW","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,7 +472,19 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    } else {\n+                        if (bucket == null) {\n+                            return null;\n+                        }\n+                        newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    }\n                 }\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 newBucket.insertBefore(bucket);\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18602,"line":475,"executionCount":0,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833311623},{"result":{"success":false,"error":"linearGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isLinearAnIntervalGraph(IntervalGraphRecognizerTest.java:252)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.linearGraphTest(IntervalGraphRecognizerTest.java:262)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"linearGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833396951,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,14 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       != null) {\n+                            }\n+                        }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833396869},{"result":{"success":false,"error":"testForbiddenSubgraphBiclawWithAT(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphBiclawWithAT(IntervalGraphRecognizerTest.java:71)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphBiclawWithAT","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833396541,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                            return null;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833396409},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphCn","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833396409,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1881,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":171,"decisionType":"NEW","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,7 +472,19 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    } else {\n+                        if (bucket == null) {\n+                            return null;\n+                        }\n+                        newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    }\n                 }\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 newBucket.insertBefore(bucket);\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18602,"line":475,"executionCount":0,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833375990},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily2(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:154)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:164)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily2","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833396722,"decisions":[{"epsilon":0,"nbUse":39,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"this.head","instanceType":"Variable"}}],"locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833396541},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:118)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:128)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833311623,"decisions":[{"epsilon":0,"nbUse":24,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":3,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                            return null;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833311346},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBoland(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBoland(IntervalGraphRecognizerTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBoland","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833396869,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":23,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                            return null;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833396722},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testAsIntervalGraphMappingForUndirectedGraph","class":"org.jgrapht.graph.interval.IntervalGraphMappingTest"},"endDate":1530833397243,"decisions":[{"epsilon":0,"nbUse":32,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,7 +472,19 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    } else {\n+                        if (bucket == null) {\n+                            return null;\n+                        }\n+                        newBucket = bucket.split(intersectionLists.get(bucket), intersectionListsB.get(bucket));\n+                    }\n                 }\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 newBucket.insertBefore(bucket);\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18602,"line":475,"executionCount":0,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833396951},{"result":{"success":false,"error":"testEvents(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testEvents(LexBreadthFirstIteratorTest.java:54)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testEvents","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833397470,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                            return null;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833397397},{"result":{"success":false,"error":"testLexicographicalBfsIterator2(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator2(LexBreadthFirstIteratorTest.java:108)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator2","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833397331,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                            return null;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833397243},{"result":{"success":false,"error":"testLexicographicalBfsIterator4(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator4(LexBreadthFirstIteratorTest.java:192)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator4","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833397396,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                            return null;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833397331},{"result":{"success":false,"error":"initializationError(org.jgrapht.alg.cycle.ChordalityInspectorTest): org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\nclass java.lang.Exception: org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\n    at org.junit.runners.Parameterized.parametersMethodReturnedWrongType(Parameterized.java:343)\n    at org.junit.runners.Parameterized.allParameters(Parameterized.java:296)\n    at org.junit.runners.Parameterized.<init>(Parameterized.java:282)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:-2)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:29)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:21)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:26)\n    at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:31)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:204)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:164)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testPerfectEliminationOrder[1]","class":"org.jgrapht.alg.cycle.ChordalityInspectorTest"},"endDate":1530833397485,"diff":"","startDate":1530833397472},{"result":{"success":false,"error":"completeGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:861)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearchStar(LexBreadthFirstSearch.java:133)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:130)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isCompleteAnIntervalGraph(IntervalGraphRecognizerTest.java:202)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.completeGraphTest(IntervalGraphRecognizerTest.java:212)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"completeGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833397970,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,7 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -477,2 +481,5 @@\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 newBucket.insertBefore(bucket);\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833397641},{"result":{"success":false,"error":"linearGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isLinearAnIntervalGraph(IntervalGraphRecognizerTest.java:252)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.linearGraphTest(IntervalGraphRecognizerTest.java:262)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"linearGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833398556,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                            return null;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833398495},{"result":{"success":false,"error":"testForbiddenSubgraphBiclawWithAT(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:892)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphBiclawWithAT(IntervalGraphRecognizerTest.java:71)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphBiclawWithAT","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833398268,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833398195},{"result":{"success":false,"error":"testForbiddenSubgraphCn(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:861)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearchStar(LexBreadthFirstSearch.java:133)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:130)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isCnAnIntervalGraph(IntervalGraphRecognizerTest.java:177)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphCn(IntervalGraphRecognizerTest.java:189)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphCn","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833398195,"decisions":[{"epsilon":0,"nbUse":3432,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,7 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -477,2 +481,5 @@\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 newBucket.insertBefore(bucket);\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833397970},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily2(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:855)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:154)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily2(IntervalGraphRecognizerTest.java:164)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily2","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833398414,"decisions":[{"epsilon":0,"nbUse":39,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,15 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    } else {\n+                        if (       == null) {\n+                            return null;\n+                        }\n+                                           }\n+                    }\n                 }\n","locations":[{"sourceEnd":19162,"line":490,"executionCount":0,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833398268},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBolandFamily(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:892)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:118)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBolandFamily(IntervalGraphRecognizerTest.java:128)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBolandFamily","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833397640,"decisions":[{"epsilon":0,"nbUse":24,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833397485},{"result":{"success":false,"error":"testForbiddenSubgraphLekkerkerkerBoland(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:892)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphLekkerkerkerBoland(IntervalGraphRecognizerTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphLekkerkerkerBoland","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833398495,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":23,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833398415},{"result":{"success":false,"error":"testAsIntervalGraphMappingForUndirectedGraph(org.jgrapht.graph.interval.IntervalGraphMappingTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:861)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearchStar(LexBreadthFirstSearch.java:133)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:130)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.graph.interval.IntervalGraphMapping.asIntervalGraphMapping(IntervalGraphMapping.java:213)\n    at org.jgrapht.graph.interval.IntervalGraphMappingTest.testAsIntervalGraphMappingForUndirectedGraph(IntervalGraphMappingTest.java:90)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testAsIntervalGraphMappingForUndirectedGraph","class":"org.jgrapht.graph.interval.IntervalGraphMappingTest"},"endDate":1530833398792,"decisions":[{"epsilon":0,"nbUse":32,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,7 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -477,2 +481,5 @@\n                 \n+                if (newBucket == null) {\n+                    return null;\n+                }\n                 newBucket.insertBefore(bucket);\n","locations":[{"sourceEnd":18733,"line":478,"executionCount":0,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833398556},{"result":{"success":false,"error":"testEvents(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:892)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testEvents(LexBreadthFirstIteratorTest.java:54)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testEvents","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833398940,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833398883},{"result":{"success":false,"error":"testLexicographicalBfsIterator2(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:892)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator2(LexBreadthFirstIteratorTest.java:98)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator2","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833398843,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833398792},{"result":{"success":false,"error":"testLexicographicalBfsIterator4(org.jgrapht.traverse.LexBreadthFirstIteratorTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:892)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIteratorTest.testLexicographicalBfsIterator4(LexBreadthFirstIteratorTest.java:182)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testLexicographicalBfsIterator4","class":"org.jgrapht.traverse.LexBreadthFirstIteratorTest"},"endDate":1530833398883,"decisions":[{"epsilon":0,"nbUse":19,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833398843},{"result":{"success":false,"error":"initializationError(org.jgrapht.alg.cycle.ChordalityInspectorTest): org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\nclass java.lang.Exception: org.jgrapht.alg.cycle.ChordalityInspectorTest.params() must return an Iterable of arrays.\n    at org.junit.runners.Parameterized.parametersMethodReturnedWrongType(Parameterized.java:343)\n    at org.junit.runners.Parameterized.allParameters(Parameterized.java:296)\n    at org.junit.runners.Parameterized.<init>(Parameterized.java:282)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:-2)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:29)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:21)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:26)\n    at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:31)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.run(NPEFixMojo.java:204)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.execute(NPEFixMojo.java:164)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testPerfectEliminationOrder[1]","class":"org.jgrapht.alg.cycle.ChordalityInspectorTest"},"endDate":1530833398947,"diff":"","startDate":1530833398941},{"result":{"success":false,"error":"completeGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:868)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isCompleteAnIntervalGraph(IntervalGraphRecognizerTest.java:202)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.completeGraphTest(IntervalGraphRecognizerTest.java:212)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"completeGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833399218,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,7 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket != null) {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833399091},{"result":{"success":false,"error":"linearGraphTest(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:892)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.isLinearAnIntervalGraph(IntervalGraphRecognizerTest.java:252)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.linearGraphTest(IntervalGraphRecognizerTest.java:262)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"linearGraphTest","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833399516,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":11,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,4 +494,10 @@\n                 \n-                if (bucket.isEmpty()) {\n-                    bucket.removeSelf();\n+                if (bucket == null) {\n+                    if ( newBucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n+                } else {\n+                    if (bucket.isEmpty()) {\n+                        bucket.removeSelf();\n+                    }\n                 }\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},{"sourceEnd":19122,"line":489,"executionCount":0,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833399466},{"result":{"success":false,"error":"testForbiddenSubgraphBiclawWithAT(org.jgrapht.alg.interval.IntervalGraphRecognizerTest): null\nclass java.lang.NullPointerException: null\n    at org.jgrapht.traverse.LexBreadthFirstIterator$BucketList.updateBuckets(LexBreadthFirstIterator.java:891)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.advance(LexBreadthFirstIterator.java:1206)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.hasNext(LexBreadthFirstIterator.java:1128)\n    at org.jgrapht.traverse.LexBreadthFirstIterator.next(LexBreadthFirstIterator.java:1143)\n    at org.jgrapht.alg.interval.LexBreadthFirstSearch.lexBreadthFirstSearch(LexBreadthFirstSearch.java:47)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.computeIsIntervalGraph(IntervalGraphRecognizer.java:102)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.ensureComputationComplete(IntervalGraphRecognizer.java:245)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizer.isIntervalGraph(IntervalGraphRecognizer.java:256)\n    at org.jgrapht.alg.interval.IntervalGraphRecognizerTest.testForbiddenSubgraphBiclawWithAT(IntervalGraphRecognizerTest.java:71)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testForbiddenSubgraphBiclawWithAT","class":"org.jgrapht.alg.interval.IntervalGraphRecognizerTest"},"endDate":1530833399317,"decisions":[{"epsilon":0,"nbUse":34,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1B","value":{"variableName":"head","instanceType":"Variable"}}],"diff":"--- /LexBreadthFirstIterator.java\n+++ /LexBreadthFirstIterator.java\n@@ -472,3 +472,9 @@\n                 if(intersectionListsB == null) {\n-                    newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                    } else {\n+                        if (bucket == null) {\n+                            newBucket = head.split(intersectionLists.get(bucket), null);\n+                        } else {\n+                            newBucket = bucket.split(intersectionLists.get(bucket), null);\n+                        }\n+                    }\n                 } else {\n@@ -488,2 +494,5 @@\n                 \n+                if (bucket == null) {\n+                    bucket = head;\n+                }\n                 if (bucket.isEmpty()) {\n","locations":[{"sourceEnd":18494,"line":473,"executionCount":0,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"}],"startDate":1530833399251}],"endInit":1530833055978,"start":1530833069999,"end":1530833399695,"searchSpace":[{"epsilon":0,"nbUse":171,"decisionType":"NEW","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1887,"decisionType":"NEW","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":24,"decisionType":"NEW","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat1B","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat1B","value":{"variableName":"this.head","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":18733,"line":478,"sourceStart":18725,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":18602,"line":475,"sourceStart":18597,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":3,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat1A","value":{"variableName":"this.head","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat1B","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":3,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat1B","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat1B","value":{"variableName":"head","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat1B","value":{"variableName":"this.head","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat1B","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"this.head","instanceType":"Variable"}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":19162,"line":490,"sourceStart":19157,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat1A","value":{"variableName":"this.head","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat1B","value":{"variableName":"this.head","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":18925,"line":484,"sourceStart":18917,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat1A","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":18494,"line":473,"sourceStart":18489,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat1B","value":{"variableName":"newBucket","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":19122,"line":489,"sourceStart":19117,"class":"org.jgrapht.traverse.LexBreadthFirstIterator$BucketList"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}]}