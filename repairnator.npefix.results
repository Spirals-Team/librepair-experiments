{"executions":[{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534964951146,"diff":"","startDate":1534964941530},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534964941530,"diff":"","startDate":1534964938417},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534964951153,"diff":"","startDate":1534964951146},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534964957354,"diff":"","startDate":1534964952305},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534964952305,"diff":"","startDate":1534964951154},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534964957361,"diff":"","startDate":1534964957354},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534964963684,"diff":"","startDate":1534964959350},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534964959350,"diff":"","startDate":1534964957362},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534964963689,"diff":"","startDate":1534964963684},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534964969267,"diff":"","startDate":1534964964602},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534964964602,"diff":"","startDate":1534964963691},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534964969276,"diff":"","startDate":1534964969267},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534964974367,"diff":"","startDate":1534964970216},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534964970216,"diff":"","startDate":1534964969284},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534964974371,"diff":"","startDate":1534964974367},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534964978745,"diff":"","startDate":1534964975176},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534964975176,"diff":"","startDate":1534964974373},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534964978749,"diff":"","startDate":1534964978745},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534964983390,"diff":"","startDate":1534964979540},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534964979540,"diff":"","startDate":1534964978751},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534964983395,"diff":"","startDate":1534964983390},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534964988019,"diff":"","startDate":1534964984170},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534964984170,"diff":"","startDate":1534964983396},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534964988023,"diff":"","startDate":1534964988019},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534964992421,"diff":"","startDate":1534964988841},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534964988841,"diff":"","startDate":1534964988024},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534964992425,"diff":"","startDate":1534964992421},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534964996961,"diff":"","startDate":1534964993167},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534964993167,"diff":"","startDate":1534964992426},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534964996967,"diff":"","startDate":1534964996961},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965001523,"diff":"","startDate":1534964998180},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534964998180,"diff":"","startDate":1534964996969},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965001527,"diff":"","startDate":1534965001523},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965007147,"diff":"","startDate":1534965002279},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965002279,"diff":"","startDate":1534965001528},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965007151,"diff":"","startDate":1534965007147},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965011388,"diff":"","startDate":1534965007977},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965007977,"diff":"","startDate":1534965007153},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965011392,"diff":"","startDate":1534965011388},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965015459,"diff":"","startDate":1534965012112},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965012112,"diff":"","startDate":1534965011393},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965015463,"diff":"","startDate":1534965015459},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965019437,"diff":"","startDate":1534965016190},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965016190,"diff":"","startDate":1534965015464},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965019441,"diff":"","startDate":1534965019437},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965024448,"diff":"","startDate":1534965020145},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965020145,"diff":"","startDate":1534965019443},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965024454,"diff":"","startDate":1534965024448},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965029170,"diff":"","startDate":1534965025344},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965025344,"diff":"","startDate":1534965024455},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965029174,"diff":"","startDate":1534965029170},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965033400,"diff":"","startDate":1534965029996},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965029996,"diff":"","startDate":1534965029175},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965033405,"diff":"","startDate":1534965033400},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965037461,"diff":"","startDate":1534965034117},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965034117,"diff":"","startDate":1534965033406},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965037465,"diff":"","startDate":1534965037461},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965042086,"diff":"","startDate":1534965038343},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965038343,"diff":"","startDate":1534965037466},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965042090,"diff":"","startDate":1534965042086},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965046738,"diff":"","startDate":1534965043510},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965043510,"diff":"","startDate":1534965042091},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965046742,"diff":"","startDate":1534965046738},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965051577,"diff":"","startDate":1534965047476},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965047476,"diff":"","startDate":1534965046743},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965051581,"diff":"","startDate":1534965051577},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965057128,"diff":"","startDate":1534965052484},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965052484,"diff":"","startDate":1534965051582},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965057133,"diff":"","startDate":1534965057128},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965062117,"diff":"","startDate":1534965058300},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965058300,"diff":"","startDate":1534965057135},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965062123,"diff":"","startDate":1534965062117},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965068387,"diff":"","startDate":1534965063749},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965063749,"diff":"","startDate":1534965062125},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965068393,"diff":"","startDate":1534965068387},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965073015,"diff":"","startDate":1534965069520},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965069520,"diff":"","startDate":1534965068395},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965073022,"diff":"","startDate":1534965073015},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965076942,"diff":"","startDate":1534965073780},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965073780,"diff":"","startDate":1534965073023},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965076945,"diff":"","startDate":1534965076942},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965081186,"diff":"","startDate":1534965077843},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965077843,"diff":"","startDate":1534965076946},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965081190,"diff":"","startDate":1534965081186},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965085930,"diff":"","startDate":1534965081877},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965081877,"diff":"","startDate":1534965081191},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965085935,"diff":"","startDate":1534965085930},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965090429,"diff":"","startDate":1534965086687},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965086687,"diff":"","startDate":1534965085936},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965090433,"diff":"","startDate":1534965090429},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965094528,"diff":"","startDate":1534965091403},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965091403,"diff":"","startDate":1534965090434},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965094532,"diff":"","startDate":1534965094528},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965098482,"diff":"","startDate":1534965095247},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965095247,"diff":"","startDate":1534965094533},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965098486,"diff":"","startDate":1534965098482},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965102283,"diff":"","startDate":1534965099187},{"result":{"success":false,"error":"testRuntimeMetamodel(spoon.test.api.MetamodelTest): Incompatible getter and setter for CtTypeAccess.type\nclass spoon.SpoonException: Incompatible getter and setter for CtTypeAccess.type\n    at spoon.metamodel.MetamodelProperty.detectValueType(MetamodelProperty.java:204)\n    at spoon.metamodel.Metamodel.lambda$initializeConcept$4(Metamodel.java:449)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1505)\n    at spoon.metamodel.Metamodel.initializeConcept(Metamodel.java:445)\n    at spoon.metamodel.Metamodel.lambda$getOrCreateConcept$3(Metamodel.java:417)\n    at spoon.metamodel.Metamodel.getOrCreate(Metamodel.java:523)\n    at spoon.metamodel.Metamodel.getOrCreateConcept(Metamodel.java:415)\n    at spoon.metamodel.Metamodel.<init>(Metamodel.java:271)\n    at spoon.metamodel.Metamodel.getInstance(Metamodel.java:222)\n    at spoon.test.api.MetamodelTest.testRuntimeMetamodel(MetamodelTest.java:84)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testRuntimeMetamodel","class":"spoon.test.api.MetamodelTest"},"endDate":1534965099187,"diff":"","startDate":1534965098487},{"result":{"success":true,"type":"test"},"metadata":{"seed":10},"test":{"name":"testClearBoundsForTypeParameterReference","class":"spoon.test.reference.TypeReferenceTest"},"endDate":1534965102286,"diff":"","startDate":1534965102283},{"result":{"success":false,"error":"testSetterInNodes(spoon.test.api.APITest): null\nclass java.lang.NullPointerException: null\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.getExecutableDeclaration(CtExecutableReferenceImpl.java:169)\n    at spoon.support.reflect.reference.CtExecutableReferenceImpl.isOverriding(CtExecutableReferenceImpl.java:259)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:54)\n    at spoon.reflect.visitor.filter.InvocationFilter.matches(InvocationFilter.java:28)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:185)\n    at spoon.reflect.visitor.chain.CtQueryImpl$3.apply(CtQueryImpl.java:182)\n    at spoon.reflect.visitor.chain.CtQueryImpl$FunctionWrapper._accept(CtQueryImpl.java:526)\n    at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:319)\n    at spoon.reflect.visitor.filter.CtScannerFunction$Scanner.onElement(CtScannerFunction.java:87)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:148)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:90)\n    at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:304)\n    at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:48)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:113)\n    at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:487)\n    at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:46)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.doScan(EarlyTerminatingScanner.java:152)\n    at spoon.reflect.visitor.EarlyTerminatingScanner.scan(EarlyTerminatingScanner.java:128)\n    at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:174)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSetterInNodes","class":"spoon.test.api.APITest"},"endDate":1534965106513,"diff":"","startDate":1534965103247}],"endInit":1534964935420,"start":1534964938376,"end":1534965106516}