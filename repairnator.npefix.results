{"executions":[{"result":{"success":false,"error":"test[0](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): Arrays do not equal exp=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333] calculated=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]: arrays first differed at element [0]; expected:<0.3333333333333333> but was:<1.0>\nclass org.junit.internal.ArrayComparisonFailure: Arrays do not equal exp=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333] calculated=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]: arrays first differed at element [0]; expected:<0.3333333333333333> but was:<1.0>\n    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)\n    at org.junit.Assert.assertArrayEquals(Assert.java:419)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:197)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102705863,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":3,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705849},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): Arrays do not equal exp=[0.5, 0.14285714285714285, 0.2222222222222222, 0.5, 0.14285714285714285, 0.2222222222222222] calculated=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]: arrays first differed at element [0]; expected:<0.5> but was:<1.0>\nclass org.junit.internal.ArrayComparisonFailure: Arrays do not equal exp=[0.5, 0.14285714285714285, 0.2222222222222222, 0.5, 0.14285714285714285, 0.2222222222222222] calculated=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]: arrays first differed at element [0]; expected:<0.5> but was:<1.0>\n    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)\n    at org.junit.Assert.assertArrayEquals(Assert.java:419)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:197)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102705870,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705863},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): Arrays do not equal exp=[0.4166666666666667, 0.23809523809523808, 0.30303030303030304, 0.4166666666666667, 0.23809523809523808, 0.2777777777777778] calculated=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]: arrays first differed at element [0]; expected:<0.4166666666666667> but was:<1.0>\nclass org.junit.internal.ArrayComparisonFailure: Arrays do not equal exp=[0.4166666666666667, 0.23809523809523808, 0.30303030303030304, 0.4166666666666667, 0.23809523809523808, 0.2777777777777778] calculated=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]: arrays first differed at element [0]; expected:<0.4166666666666667> but was:<1.0>\n    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)\n    at org.junit.Assert.assertArrayEquals(Assert.java:419)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:197)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102705881,"decisions":[{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":4,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705870},{"result":{"success":false,"error":"test[0](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=0, fn=1] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=1, fp=0, fn=1]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=0, fn=1] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=1, fp=0, fn=1]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102705743,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705027},{"result":{"success":false,"error":"test[10](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=2, fn=2] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=1, fp=2, fn=2]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=2, fn=2] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=1, fp=2, fn=2]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[10]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102705840,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":3,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705831},{"result":{"success":false,"error":"test[11](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=1, fn=6] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=1, fp=1, fn=6]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=1, fn=6] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=1, fp=1, fn=6]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[11]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102705849,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705840},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=1, fn=0] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=1, fp=1, fn=0]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=1, fn=0] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=1, fp=1, fn=0]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102705755,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705743},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=0, fn=1] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=1, fp=0, fn=1]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=0, fn=1] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=1, fp=0, fn=1]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102705766,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705755},{"result":{"success":false,"error":"test[3](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=1, fn=0] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=2, fp=1, fn=0]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=1, fn=0] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=2, fp=1, fn=0]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[3]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102705777,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705766},{"result":{"success":false,"error":"test[4](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[4]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102705786,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705777},{"result":{"success":false,"error":"test[5](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[5]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102705796,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705786},{"result":{"success":false,"error":"test[6](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[6]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102705805,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705796},{"result":{"success":false,"error":"test[7](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=4, fn=0] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=1, fp=4, fn=0]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=4, fn=0] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=1, fp=4, fn=0]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[7]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102705814,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705805},{"result":{"success":false,"error":"test[8](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=2] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=2, fp=0, fn=2]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=2] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=2, fp=0, fn=2]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[8]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102705823,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705814},{"result":{"success":false,"error":"test[9](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=0, fp=1, fn=1] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=0, fp=1, fn=1]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=0, fp=1, fn=1] calculated=EvaluationCounts [tp=1, fp=0, fn=0] expected:<EvaluationCounts [tp=0, fp=1, fn=1]> but was:<EvaluationCounts [tp=1, fp=0, fn=0]>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[9]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102705831,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,3 +95,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n+                    }\n                 }\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705823},{"result":{"success":false,"error":"test[0](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): null\nclass java.lang.NullPointerException: null\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.calculateMeasures(HierarchicalFMeasureCalculator.java:59)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.evaluate(HierarchicalFMeasureCalculator.java:48)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:155)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102706466,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706456},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): null\nclass java.lang.NullPointerException: null\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.calculateMeasures(HierarchicalFMeasureCalculator.java:59)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.evaluate(HierarchicalFMeasureCalculator.java:48)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:155)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102706470,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706466},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): null\nclass java.lang.NullPointerException: null\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.calculateMeasures(HierarchicalFMeasureCalculator.java:59)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.evaluate(HierarchicalFMeasureCalculator.java:48)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:155)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102706477,"decisions":[{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706470},{"result":{"success":false,"error":"test[0](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertNotNull(Assert.java:621)\n    at org.junit.Assert.assertNotNull(Assert.java:631)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:286)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706385,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102705882},{"result":{"success":false,"error":"test[10](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertNotNull(Assert.java:621)\n    at org.junit.Assert.assertNotNull(Assert.java:631)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:286)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[10]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706450,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706444},{"result":{"success":false,"error":"test[11](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertNotNull(Assert.java:621)\n    at org.junit.Assert.assertNotNull(Assert.java:631)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:286)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[11]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706456,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706450},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertNotNull(Assert.java:621)\n    at org.junit.Assert.assertNotNull(Assert.java:631)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:286)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706392,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706385},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertNotNull(Assert.java:621)\n    at org.junit.Assert.assertNotNull(Assert.java:631)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:286)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706400,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706392},{"result":{"success":false,"error":"test[3](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertNotNull(Assert.java:621)\n    at org.junit.Assert.assertNotNull(Assert.java:631)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:286)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[3]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706406,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706400},{"result":{"success":false,"error":"test[4](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertNotNull(Assert.java:621)\n    at org.junit.Assert.assertNotNull(Assert.java:631)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:286)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[4]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706412,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706406},{"result":{"success":false,"error":"test[5](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertNotNull(Assert.java:621)\n    at org.junit.Assert.assertNotNull(Assert.java:631)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:286)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[5]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706419,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706412},{"result":{"success":false,"error":"test[6](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertNotNull(Assert.java:621)\n    at org.junit.Assert.assertNotNull(Assert.java:631)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:286)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[6]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706426,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706419},{"result":{"success":false,"error":"test[7](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertNotNull(Assert.java:621)\n    at org.junit.Assert.assertNotNull(Assert.java:631)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:286)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[7]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706432,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706426},{"result":{"success":false,"error":"test[8](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertNotNull(Assert.java:621)\n    at org.junit.Assert.assertNotNull(Assert.java:631)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:286)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[8]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706439,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706432},{"result":{"success":false,"error":"test[9](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertNotNull(Assert.java:621)\n    at org.junit.Assert.assertNotNull(Assert.java:631)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:286)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[9]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706444,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return null;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706439},{"result":{"success":false,"error":"test[0](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): Arrays do not equal exp=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.3333333333333333> but was:<NaN>\nclass org.junit.internal.ArrayComparisonFailure: Arrays do not equal exp=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.3333333333333333> but was:<NaN>\n    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)\n    at org.junit.Assert.assertArrayEquals(Assert.java:419)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:197)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102707051,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707037},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): Arrays do not equal exp=[0.5, 0.14285714285714285, 0.2222222222222222, 0.5, 0.14285714285714285, 0.2222222222222222] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.5> but was:<NaN>\nclass org.junit.internal.ArrayComparisonFailure: Arrays do not equal exp=[0.5, 0.14285714285714285, 0.2222222222222222, 0.5, 0.14285714285714285, 0.2222222222222222] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.5> but was:<NaN>\n    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)\n    at org.junit.Assert.assertArrayEquals(Assert.java:419)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:197)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102707056,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707051},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): Arrays do not equal exp=[0.4166666666666667, 0.23809523809523808, 0.30303030303030304, 0.4166666666666667, 0.23809523809523808, 0.2777777777777778] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.4166666666666667> but was:<NaN>\nclass org.junit.internal.ArrayComparisonFailure: Arrays do not equal exp=[0.4166666666666667, 0.23809523809523808, 0.30303030303030304, 0.4166666666666667, 0.23809523809523808, 0.2777777777777778] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.4166666666666667> but was:<NaN>\n    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)\n    at org.junit.Assert.assertArrayEquals(Assert.java:419)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:197)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102707061,"decisions":[{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707056},{"result":{"success":false,"error":"test[0](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706969,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706478},{"result":{"success":false,"error":"test[10](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[10]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707022,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707018},{"result":{"success":false,"error":"test[11](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[11]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707037,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707022},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706975,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706969},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706980,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706975},{"result":{"success":false,"error":"test[3](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[3]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706986,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706980},{"result":{"success":false,"error":"test[4](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[4]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706991,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706986},{"result":{"success":false,"error":"test[5](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[5]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102706996,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706991},{"result":{"success":false,"error":"test[6](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[6]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707002,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102706996},{"result":{"success":false,"error":"test[7](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[7]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707007,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707002},{"result":{"success":false,"error":"test[8](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[8]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707013,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707007},{"result":{"success":false,"error":"test[9](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[9]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707017,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return counts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707013},{"result":{"success":false,"error":"test[0](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): Arrays do not equal exp=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.3333333333333333> but was:<NaN>\nclass org.junit.internal.ArrayComparisonFailure: Arrays do not equal exp=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.3333333333333333> but was:<NaN>\n    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)\n    at org.junit.Assert.assertArrayEquals(Assert.java:419)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:197)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102708006,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707996},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): Arrays do not equal exp=[0.5, 0.14285714285714285, 0.2222222222222222, 0.5, 0.14285714285714285, 0.2222222222222222] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.5> but was:<NaN>\nclass org.junit.internal.ArrayComparisonFailure: Arrays do not equal exp=[0.5, 0.14285714285714285, 0.2222222222222222, 0.5, 0.14285714285714285, 0.2222222222222222] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.5> but was:<NaN>\n    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)\n    at org.junit.Assert.assertArrayEquals(Assert.java:419)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:197)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102708010,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708006},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): Arrays do not equal exp=[0.4166666666666667, 0.23809523809523808, 0.30303030303030304, 0.4166666666666667, 0.23809523809523808, 0.2777777777777778] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.4166666666666667> but was:<NaN>\nclass org.junit.internal.ArrayComparisonFailure: Arrays do not equal exp=[0.4166666666666667, 0.23809523809523808, 0.30303030303030304, 0.4166666666666667, 0.23809523809523808, 0.2777777777777778] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.4166666666666667> but was:<NaN>\n    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)\n    at org.junit.Assert.assertArrayEquals(Assert.java:419)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:197)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102708015,"decisions":[{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708010},{"result":{"success":false,"error":"test[0](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707915,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707063},{"result":{"success":false,"error":"test[10](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[10]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707990,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707984},{"result":{"success":false,"error":"test[11](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[11]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707996,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707990},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707925,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707915},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707933,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707925},{"result":{"success":false,"error":"test[3](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[3]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707940,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707933},{"result":{"success":false,"error":"test[4](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[4]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707948,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707941},{"result":{"success":false,"error":"test[5](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[5]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707957,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707948},{"result":{"success":false,"error":"test[6](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[6]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707964,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707957},{"result":{"success":false,"error":"test[7](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[7]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707970,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707964},{"result":{"success":false,"error":"test[8](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[8]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707977,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707970},{"result":{"success":false,"error":"test[9](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[9]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102707984,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return localCounts;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102707977},{"result":{"success":false,"error":"test[0](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): org.aksw.gerbil.transfer.nif.data.TypedSpanImpl cannot be cast to org.aksw.gerbil.matching.EvaluationCounts\nclass java.lang.ClassCastException: org.aksw.gerbil.transfer.nif.data.TypedSpanImpl cannot be cast to org.aksw.gerbil.matching.EvaluationCounts\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.calculateMeasures(HierarchicalFMeasureCalculator.java:61)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.evaluate(HierarchicalFMeasureCalculator.java:48)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:155)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102708562,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708553},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): org.aksw.gerbil.transfer.nif.data.TypedSpanImpl cannot be cast to org.aksw.gerbil.matching.EvaluationCounts\nclass java.lang.ClassCastException: org.aksw.gerbil.transfer.nif.data.TypedSpanImpl cannot be cast to org.aksw.gerbil.matching.EvaluationCounts\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.calculateMeasures(HierarchicalFMeasureCalculator.java:61)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.evaluate(HierarchicalFMeasureCalculator.java:48)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:155)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102708565,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708562},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): org.aksw.gerbil.transfer.nif.data.TypedSpanImpl cannot be cast to org.aksw.gerbil.matching.EvaluationCounts\nclass java.lang.ClassCastException: org.aksw.gerbil.transfer.nif.data.TypedSpanImpl cannot be cast to org.aksw.gerbil.matching.EvaluationCounts\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.calculateMeasures(HierarchicalFMeasureCalculator.java:61)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.evaluate(HierarchicalFMeasureCalculator.java:48)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:155)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102708571,"decisions":[{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708565},{"result":{"success":false,"error":"test[0](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=0, fn=1] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B]) expected:<EvaluationCounts [tp=1, fp=0, fn=1]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=0, fn=1] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B]) expected:<EvaluationCounts [tp=1, fp=0, fn=1]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102708498,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708016},{"result":{"success":false,"error":"test[10](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=2, fn=2] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/G, http://example.org/J, http://example.org/K]) expected:<EvaluationCounts [tp=1, fp=2, fn=2]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/G, http://example.org/J, http://example.org/K])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=2, fn=2] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/G, http://example.org/J, http://example.org/K]) expected:<EvaluationCounts [tp=1, fp=2, fn=2]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/G, http://example.org/J, http://example.org/K])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[10]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102708549,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708544},{"result":{"success":false,"error":"test[11](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=1, fn=6] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/D]) expected:<EvaluationCounts [tp=1, fp=1, fn=6]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/D])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=1, fn=6] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/D]) expected:<EvaluationCounts [tp=1, fp=1, fn=6]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/D])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[11]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102708553,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708549},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=1, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/C]) expected:<EvaluationCounts [tp=1, fp=1, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/C])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=1, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/C]) expected:<EvaluationCounts [tp=1, fp=1, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/C])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102708503,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708498},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=0, fn=1] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C]) expected:<EvaluationCounts [tp=1, fp=0, fn=1]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=0, fn=1] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C]) expected:<EvaluationCounts [tp=1, fp=0, fn=1]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102708509,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708503},{"result":{"success":false,"error":"test[3](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=1, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C]) expected:<EvaluationCounts [tp=2, fp=1, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=1, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C]) expected:<EvaluationCounts [tp=2, fp=1, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[3]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102708514,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708509},{"result":{"success":false,"error":"test[4](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B]) expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B]) expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[4]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102708519,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708514},{"result":{"success":false,"error":"test[5](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C]) expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C]) expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[5]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102708524,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708519},{"result":{"success":false,"error":"test[6](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B]) expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B]) expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[6]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102708528,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708524},{"result":{"success":false,"error":"test[7](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=4, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/E]) expected:<EvaluationCounts [tp=1, fp=4, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/E])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=4, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/E]) expected:<EvaluationCounts [tp=1, fp=4, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/E])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[7]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102708534,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708528},{"result":{"success":false,"error":"test[8](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=2] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/F, http://example.org/B]) expected:<EvaluationCounts [tp=2, fp=0, fn=2]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/F, http://example.org/B])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=2] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/F, http://example.org/B]) expected:<EvaluationCounts [tp=2, fp=0, fn=2]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/F, http://example.org/B])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[8]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102708539,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708534},{"result":{"success":false,"error":"test[9](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=0, fp=1, fn=1] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/D]) expected:<EvaluationCounts [tp=0, fp=1, fn=1]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/D])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=0, fp=1, fn=1] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/D]) expected:<EvaluationCounts [tp=0, fp=1, fn=1]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/D])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[9]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102708544,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return goldStandard;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708539},{"result":{"success":false,"error":"test[0](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): org.aksw.gerbil.transfer.nif.data.TypedSpanImpl cannot be cast to org.aksw.gerbil.matching.EvaluationCounts\nclass java.lang.ClassCastException: org.aksw.gerbil.transfer.nif.data.TypedSpanImpl cannot be cast to org.aksw.gerbil.matching.EvaluationCounts\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.calculateMeasures(HierarchicalFMeasureCalculator.java:61)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.evaluate(HierarchicalFMeasureCalculator.java:48)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:155)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102709119,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709111},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): org.aksw.gerbil.transfer.nif.data.TypedSpanImpl cannot be cast to org.aksw.gerbil.matching.EvaluationCounts\nclass java.lang.ClassCastException: org.aksw.gerbil.transfer.nif.data.TypedSpanImpl cannot be cast to org.aksw.gerbil.matching.EvaluationCounts\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.calculateMeasures(HierarchicalFMeasureCalculator.java:61)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.evaluate(HierarchicalFMeasureCalculator.java:48)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:155)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102709123,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709119},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): org.aksw.gerbil.transfer.nif.data.TypedSpanImpl cannot be cast to org.aksw.gerbil.matching.EvaluationCounts\nclass java.lang.ClassCastException: org.aksw.gerbil.transfer.nif.data.TypedSpanImpl cannot be cast to org.aksw.gerbil.matching.EvaluationCounts\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.calculateMeasures(HierarchicalFMeasureCalculator.java:61)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculator.evaluate(HierarchicalFMeasureCalculator.java:48)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:155)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102709128,"decisions":[{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709123},{"result":{"success":false,"error":"test[0](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=0, fn=1] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/C]) expected:<EvaluationCounts [tp=1, fp=0, fn=1]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/C])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=0, fn=1] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/C]) expected:<EvaluationCounts [tp=1, fp=0, fn=1]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/C])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709058,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102708572},{"result":{"success":false,"error":"test[10](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=2, fn=2] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/H, http://example.org/L, http://example.org/K]) expected:<EvaluationCounts [tp=1, fp=2, fn=2]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/H, http://example.org/L, http://example.org/K])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=2, fn=2] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/H, http://example.org/L, http://example.org/K]) expected:<EvaluationCounts [tp=1, fp=2, fn=2]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/H, http://example.org/L, http://example.org/K])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[10]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709107,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709102},{"result":{"success":false,"error":"test[11](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=1, fn=6] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/C]) expected:<EvaluationCounts [tp=1, fp=1, fn=6]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/C])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=1, fn=6] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/C]) expected:<EvaluationCounts [tp=1, fp=1, fn=6]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/C])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[11]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709111,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709107},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=1, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B]) expected:<EvaluationCounts [tp=1, fp=1, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=1, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B]) expected:<EvaluationCounts [tp=1, fp=1, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709063,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709058},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=0, fn=1] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/C]) expected:<EvaluationCounts [tp=1, fp=0, fn=1]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/C])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=0, fn=1] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/C]) expected:<EvaluationCounts [tp=1, fp=0, fn=1]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/C])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709069,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709063},{"result":{"success":false,"error":"test[3](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=1, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/A]) expected:<EvaluationCounts [tp=2, fp=1, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/A])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=1, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/A]) expected:<EvaluationCounts [tp=2, fp=1, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/A])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[3]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709075,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709069},{"result":{"success":false,"error":"test[4](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B]) expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B]) expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[4]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709079,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709075},{"result":{"success":false,"error":"test[5](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B]) expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B]) expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[5]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709084,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709079},{"result":{"success":false,"error":"test[6](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C]) expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C]) expected:<EvaluationCounts [tp=2, fp=0, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/B, http://example.org/C])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[6]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709089,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709084},{"result":{"success":false,"error":"test[7](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=1, fp=4, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/A]) expected:<EvaluationCounts [tp=1, fp=4, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/A])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=1, fp=4, fn=0] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/A]) expected:<EvaluationCounts [tp=1, fp=4, fn=0]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/A])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[7]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709093,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709089},{"result":{"success":false,"error":"test[8](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=2] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/E, http://example.org/D]) expected:<EvaluationCounts [tp=2, fp=0, fn=2]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/E, http://example.org/D])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=2, fp=0, fn=2] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/E, http://example.org/D]) expected:<EvaluationCounts [tp=2, fp=0, fn=2]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/E, http://example.org/D])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[8]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709098,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709093},{"result":{"success":false,"error":"test[9](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): Arrays do not equal exp=EvaluationCounts [tp=0, fp=1, fn=1] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/F]) expected:<EvaluationCounts [tp=0, fp=1, fn=1]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/F])>\nclass java.lang.AssertionError: Arrays do not equal exp=EvaluationCounts [tp=0, fp=1, fn=1] calculated=(0, 1, [http://example.org/entity_0], a [http://example.org/F]) expected:<EvaluationCounts [tp=0, fp=1, fn=1]> but was:<(0, 1, [http://example.org/entity_0], a [http://example.org/F])>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:288)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[9]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709102,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return annotatorResult;\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709098},{"result":{"success":false,"error":"test[0](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): Arrays do not equal exp=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.3333333333333333> but was:<NaN>\nclass org.junit.internal.ArrayComparisonFailure: Arrays do not equal exp=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.3333333333333333> but was:<NaN>\n    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)\n    at org.junit.Assert.assertArrayEquals(Assert.java:419)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:197)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102709744,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.util.ArrayList"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return new ArrayList();\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709734},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): Arrays do not equal exp=[0.5, 0.14285714285714285, 0.2222222222222222, 0.5, 0.14285714285714285, 0.2222222222222222] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.5> but was:<NaN>\nclass org.junit.internal.ArrayComparisonFailure: Arrays do not equal exp=[0.5, 0.14285714285714285, 0.2222222222222222, 0.5, 0.14285714285714285, 0.2222222222222222] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.5> but was:<NaN>\n    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)\n    at org.junit.Assert.assertArrayEquals(Assert.java:419)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:197)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102709748,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.util.ArrayList"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return new ArrayList();\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709744},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest): Arrays do not equal exp=[0.4166666666666667, 0.23809523809523808, 0.30303030303030304, 0.4166666666666667, 0.23809523809523808, 0.2777777777777778] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.4166666666666667> but was:<NaN>\nclass org.junit.internal.ArrayComparisonFailure: Arrays do not equal exp=[0.4166666666666667, 0.23809523809523808, 0.30303030303030304, 0.4166666666666667, 0.23809523809523808, 0.2777777777777778] calculated=[NaN, NaN, NaN, NaN, NaN, NaN]: arrays first differed at element [0]; expected:<0.4166666666666667> but was:<NaN>\n    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)\n    at org.junit.Assert.assertArrayEquals(Assert.java:419)\n    at org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest.test(HierarchicalFMeasureCalculatorTest.java:197)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.evaluate.impl.HierarchicalFMeasureCalculatorTest"},"endDate":1520102709754,"decisions":[{"epsilon":0,"nbUse":28,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.util.ArrayList"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return new ArrayList();\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709748},{"result":{"success":false,"error":"test[0](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[0]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709678,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.util.ArrayList"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return new ArrayList();\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709129},{"result":{"success":false,"error":"test[10](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[10]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709730,"decisions":[{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.util.ArrayList"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return new ArrayList();\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709725},{"result":{"success":false,"error":"test[11](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[11]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709734,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.util.ArrayList"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return new ArrayList();\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709730},{"result":{"success":false,"error":"test[1](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[1]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709684,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.util.ArrayList"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return new ArrayList();\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709678},{"result":{"success":false,"error":"test[2](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[2]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709689,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.util.ArrayList"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return new ArrayList();\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709684},{"result":{"success":false,"error":"test[3](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[3]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709695,"decisions":[{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.util.ArrayList"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return new ArrayList();\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709689},{"result":{"success":false,"error":"test[4](org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest): null\nclass java.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest.test(HierarchicalMatchingsCounterTest.java:287)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test[4]","class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounterTest"},"endDate":1520102709700,"decisions":[{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.util.ArrayList"}}],"diff":"--- /HierarchicalMatchingsCounter.java\n+++ /HierarchicalMatchingsCounter.java\n@@ -87,3 +87,5 @@\n                 for (String typeURI : types) {\n-                    inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    if (inferencer != null) {\n+                        inferencer.inferSubClasses(typeURI, classes, expectedClassesFactory);\n+                    }\n                 }\n@@ -93,2 +95,5 @@\n                 for (String typeURI : types) {\n+                    if (inferencer == null) {\n+                        return new ArrayList();\n+                    }\n                     inferencer.inferSubClasses(typeURI, classes, annotatorClassesFactory);\n","locations":[{"sourceEnd":4376,"line":94,"executionCount":0,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},{"sourceEnd":4058,"line":88,"executionCount":0,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"}],"startDate":1520102709695}],"endInit":1520102703380,"start":1520102705009,"end":1520102709754,"searchSpace":[{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":false,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":false,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.util.ArrayList"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":false,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":false,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":4376,"line":94,"sourceStart":4367,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.util.ArrayList"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":false,"strategy":"Strat4 VAR","value":{"variableName":"annotatorResult","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":false,"strategy":"Strat4 VAR","value":{"variableName":"goldStandard","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":false,"strategy":"Strat4 VAR","value":{"variableName":"counts","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":4058,"line":88,"sourceStart":4049,"class":"org.aksw.gerbil.matching.impl.HierarchicalMatchingsCounter"},"used":false,"strategy":"Strat4 VAR","value":{"variableName":"localCounts","instanceType":"Variable"}}]}