{"executions":[{"result":{"success":false,"error":"testSearchOrder(jmri.implementation.DefaultSignalAppearanceMapTest): Required nonnull default for jmri.SignalHeadManager does not exist.\nclass java.lang.NullPointerException: Required nonnull default for jmri.SignalHeadManager does not exist.\n    at jmri.InstanceManager.getDefault(InstanceManager.java:203)\n    at jmri.implementation.DefaultSignalAppearanceMapTest.setUp(DefaultSignalAppearanceMapTest.java:147)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)\n    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:285)\n\n\ntestSearchOrder(jmri.implementation.DefaultSignalAppearanceMapTest): Required nonnull default for jmri.SignalHeadManager does not exist.\nclass java.lang.NullPointerException: Required nonnull default for jmri.SignalHeadManager does not exist.\n    at jmri.InstanceManager.getDefault(InstanceManager.java:203)\n    at jmri.implementation.DefaultSignalAppearanceMapTest.tearDown(DefaultSignalAppearanceMapTest.java:153)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:285)\n    at com.github.tdurieux.repair.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:219)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSearchOrder","class":"jmri.implementation.DefaultSignalAppearanceMapTest"},"endDate":1535733650927,"diff":"","startDate":1535733648448},{"result":{"success":false,"error":"testSearchOrder(jmri.managers.DefaultSignalSystemManagerTest): null\nclass java.lang.NullPointerException: null\n    at jmri.util.NamedBeanComparator.compare(NamedBeanComparator.java:30)\n    at jmri.util.NamedBeanComparator.compare(NamedBeanComparator.java:23)\n    at java.util.TreeMap.compare(TreeMap.java:1295)\n    at java.util.TreeMap.put(TreeMap.java:538)\n    at java.util.TreeSet.add(TreeSet.java:255)\n    at jmri.managers.AbstractManager.register(AbstractManager.java:417)\n    at jmri.managers.DefaultSignalSystemManager.load(DefaultSignalSystemManager.java:87)\n    at jmri.managers.DefaultSignalSystemManager.<init>(DefaultSignalSystemManager.java:38)\n    at jmri.managers.DefaultSignalSystemManagerTest.testSearchOrder(DefaultSignalSystemManagerTest.java:30)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSearchOrder","class":"jmri.managers.DefaultSignalSystemManagerTest"},"endDate":1535733651491,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6614,"line":174,"sourceStart":6614,"class":"jmri.managers.AbstractManager"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /AbstractManager.java\n+++ /AbstractManager.java\n@@ -173,3 +173,5 @@\n     public void register(E s) {\n-        String systemName = s.getSystemName();\n+        if (s != null) {\n+            String systemName = s.getSystemName();\n+        }\n \n","locations":[{"sourceEnd":6614,"line":174,"executionCount":0,"sourceStart":6614,"class":"jmri.managers.AbstractManager"}],"startDate":1535733650927},{"result":{"success":false,"error":"testSearchOrder(jmri.implementation.DefaultSignalAppearanceMapTest): Required nonnull default for jmri.SignalHeadManager does not exist.\nclass java.lang.NullPointerException: Required nonnull default for jmri.SignalHeadManager does not exist.\n    at jmri.InstanceManager.getDefault(InstanceManager.java:203)\n    at jmri.implementation.DefaultSignalAppearanceMapTest.setUp(DefaultSignalAppearanceMapTest.java:147)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)\n    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:285)\n\n\ntestSearchOrder(jmri.implementation.DefaultSignalAppearanceMapTest): Required nonnull default for jmri.SignalHeadManager does not exist.\nclass java.lang.NullPointerException: Required nonnull default for jmri.SignalHeadManager does not exist.\n    at jmri.InstanceManager.getDefault(InstanceManager.java:203)\n    at jmri.implementation.DefaultSignalAppearanceMapTest.tearDown(DefaultSignalAppearanceMapTest.java:153)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:285)\n    at com.github.tdurieux.repair.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:219)\n\n\n","type":"test"},"metadata":{"seed":10},"test":{"name":"testSearchOrder","class":"jmri.implementation.DefaultSignalAppearanceMapTest"},"endDate":1535733651878,"diff":"","startDate":1535733651496},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSearchOrder","class":"jmri.managers.DefaultSignalSystemManagerTest"},"endDate":1535733652012,"decisions":[{"epsilon":0,"nbUse":40,"decisionType":"NEW","location":{"sourceEnd":6614,"line":174,"sourceStart":6614,"class":"jmri.managers.AbstractManager"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /AbstractManager.java\n+++ /AbstractManager.java\n@@ -173,2 +173,5 @@\n     public void register(E s) {\n+        if (s == null) {\n+            return null;\n+        }\n         String systemName = s.getSystemName();\n","locations":[{"sourceEnd":6614,"line":174,"executionCount":0,"sourceStart":6614,"class":"jmri.managers.AbstractManager"}],"startDate":1535733651878}],"endInit":1535733634596,"start":1535733648374,"end":1535733655324,"searchSpace":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6614,"line":174,"sourceStart":6614,"class":"jmri.managers.AbstractManager"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6614,"line":174,"sourceStart":6614,"class":"jmri.managers.AbstractManager"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}]}