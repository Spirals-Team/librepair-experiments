{"executions":[{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846789433,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846788824},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846789956,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846789434},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846790473,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new StmtIteratorImpl(null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846789957},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846791418,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new TrackingTripleIterator(null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846790475},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846791947,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new ResIteratorImpl(null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846791420},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at org.apache.jena.util.iterator.FilterIterator.hasNext(FilterIterator.java:55)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846792459,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new FilterIterator(null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846791948},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.Map1Iterator.hasNext(Map1Iterator.java:49)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846792971,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new Map1Iterator(null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846792460},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846793469,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new ResIteratorImpl(null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846792972},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846793963,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new StoreTripleIterator(null, null, null, null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846793470},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846794452,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new NiceIterator();\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846793964},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846794968,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new NullIterator();\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846794453},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846795495,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new TrackingTripleIterator(null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846794969},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846796295,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new StmtIteratorImpl(null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846795496},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846796783,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new ResIteratorImpl(null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846796296},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at org.apache.jena.util.iterator.FilterIterator.hasNext(FilterIterator.java:55)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846797373,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new FilterIterator(null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846796784},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846797890,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new ResIteratorImpl(null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846797374},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.Map1Iterator.hasNext(Map1Iterator.java:49)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846798425,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new Map1Iterator(null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846797891},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846798962,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new StoreTripleIterator(null, null, null, null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846798426},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846799479,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,62 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups != null) {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846798963},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846800039,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            return null;\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846799479},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeCalled(CallChecker.java:312)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:457)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846800621,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,57 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846800040},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846801181,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,22 +198,57 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n+        if (schema == null) {\n+            return null;\n+        }\n         Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846800622},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:452)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846801691,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,21 +198,53 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846801181},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846802219,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846801692},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846803057,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846802220},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846803552,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new TrackingTripleIterator(null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846803057},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846804070,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new StmtIteratorImpl(null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846803553},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846804563,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new ResIteratorImpl(null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846804071},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.Map1Iterator.hasNext(Map1Iterator.java:49)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846805051,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new Map1Iterator(null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846804564},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846805538,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new ResIteratorImpl(null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846805051},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at org.apache.jena.util.iterator.FilterIterator.hasNext(FilterIterator.java:55)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846806048,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new FilterIterator(null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846805538},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846806566,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,66 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new StoreTripleIterator(null, null, null, null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846806049},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846807088,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new NullIterator();\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846806567},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846807669,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new NiceIterator();\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846807088},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846808201,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new StmtIteratorImpl(null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846807670},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846808729,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new TrackingTripleIterator(null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846808202},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846809267,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new ResIteratorImpl(null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846808730},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846809806,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new ResIteratorImpl(null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846809268},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at org.apache.jena.util.iterator.FilterIterator.hasNext(FilterIterator.java:55)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846810375,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new FilterIterator(null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846809807},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.Map1Iterator.hasNext(Map1Iterator.java:49)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846811219,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new Map1Iterator(null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846810376},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846811708,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new StoreTripleIterator(null, null, null, null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846811220},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846812253,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,26 +198,62 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups != null) {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846811709},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846812765,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,60 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            return null;\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846812254},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeCalled(CallChecker.java:312)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:457)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846813264,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,23 +198,57 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846812766},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846813739,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,22 +198,57 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n+        if (schema == null) {\n+            return null;\n+        }\n         Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846813265},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:452)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846814215,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,21 +198,53 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846813740},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:445)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846814743,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,21 +198,53 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new TrackingTripleIterator(null).hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846814216},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:445)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846815243,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,21 +198,53 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new StmtIteratorImpl(null).hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846814744},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:445)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846815892,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,21 +198,53 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new ResIteratorImpl(null).hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846815244},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:445)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846816445,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,21 +198,53 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new ResIteratorImpl(null, null).hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846815892},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.Map1Iterator.hasNext(Map1Iterator.java:49)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:445)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846817021,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,21 +198,53 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new Map1Iterator(null, null).hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846816446},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at org.apache.jena.util.iterator.FilterIterator.hasNext(FilterIterator.java:55)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:445)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846817604,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,21 +198,53 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new FilterIterator(null, null).hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846817022},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:445)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846818108,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,21 +198,53 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n-        while (groups.hasNext()) {\n-            convertModelGroupDecl(groups.next());\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n         }\n+        if (groups == null) {\n+            while ( new StoreTripleIterator(null, null, null, null, null).hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        } else {\n+            while (groups.hasNext()) {\n+                convertModelGroupDecl(groups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846817604},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846818626,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846818109},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846819143,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846818627},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846819659,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new ResIteratorImpl(null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846819144},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846820176,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new TrackingTripleIterator(null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846819660},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846820706,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new StmtIteratorImpl(null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846820177},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at org.apache.jena.util.iterator.FilterIterator.hasNext(FilterIterator.java:55)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846821548,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new FilterIterator(null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846820707},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846822047,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new ResIteratorImpl(null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846821549},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.Map1Iterator.hasNext(Map1Iterator.java:49)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846822565,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new Map1Iterator(null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846822048},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846823060,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new StoreTripleIterator(null, null, null, null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846822566},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846823543,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new NiceIterator();\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846823061},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846824027,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new NullIterator();\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846823544},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846824559,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new ResIteratorImpl(null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846824028},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846825120,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new StmtIteratorImpl(null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846824559},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846825631,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new TrackingTripleIterator(null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846825121},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.Map1Iterator.hasNext(Map1Iterator.java:49)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846826196,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new Map1Iterator(null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846825631},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846826752,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new ResIteratorImpl(null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846826197},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at org.apache.jena.util.iterator.FilterIterator.hasNext(FilterIterator.java:55)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846827302,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new FilterIterator(null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846826753},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846827846,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new StoreTripleIterator(null, null, null, null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846827303},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846828395,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,10 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups != null) {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846827847},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846828940,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            return null;\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846828396},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeCalled(CallChecker.java:312)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:457)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846829508,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,5 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846828941},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846830023,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,2 +247,5 @@\n \n+        if (schema == null) {\n+            return null;\n+        }\n         Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846829509},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846830571,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846830023},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846831080,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new NiceIterator().hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846830572},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846831918,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new StmtIteratorImpl(null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846831080},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846832409,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new TrackingTripleIterator(null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846831919},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846832921,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new ResIteratorImpl(null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846832410},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at org.apache.jena.util.iterator.FilterIterator.hasNext(FilterIterator.java:55)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846833414,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new FilterIterator(null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846832922},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.Map1Iterator.hasNext(Map1Iterator.java:49)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846833900,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new Map1Iterator(null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846833415},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846834382,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new ResIteratorImpl(null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846833901},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846834871,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,14 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups == null) {\n+            while ( new StoreTripleIterator(null, null, null, null, null).hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        } else {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846834383},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846835402,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new NiceIterator();\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846834872},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846835940,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new NullIterator();\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846835403},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846836468,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new TrackingTripleIterator(null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846835941},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846836969,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new StmtIteratorImpl(null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846836469},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846837473,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new ResIteratorImpl(null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846836970},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846837972,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new ResIteratorImpl(null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846837474},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at org.apache.jena.util.iterator.FilterIterator.hasNext(FilterIterator.java:55)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846838470,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new FilterIterator(null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846837973},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.Map1Iterator.hasNext(Map1Iterator.java:49)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846839070,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new Map1Iterator(null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846838471},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846839719,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            attGroups = new StoreTripleIterator(null, null, null, null, null);\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846839072},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:458)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846840263,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,6 +247,10 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n-        while (attGroups.hasNext()) {\n-            convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n         }\n+        if (attGroups != null) {\n+            while (attGroups.hasNext()) {\n+                convertAttributeGroup((XSAttGroupDecl) attGroups.next());\n+            }\n+        }\n \n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846839721},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846840822,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,8 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n+        if (attGroups == null) {\n+            return null;\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7081,"line":210,"executionCount":0,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846840264},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeCalled(CallChecker.java:312)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:457)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846841366,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,3 +247,5 @@\n \n-        Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n+        }\n         while (attGroups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846840823},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846842185,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n@@ -208,2 +247,5 @@\n \n+        if (schema == null) {\n+            return null;\n+        }\n         Iterator<XSAttGroupDecl> attGroups = schema.iterateAttGroupDecls();\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":7032,"line":209,"executionCount":0,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846841367},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:452)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846842693,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NiceIterator();\n+        }\n         while (groups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846842186},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:452)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846843191,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new NullIterator();\n+        }\n         while (groups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846842693},{"result":{"success":false,"error":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass(tr.com.srdc.ontmalizer.test.XSD2OWLTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.jena.util.iterator.WrappedIterator.hasNext(WrappedIterator.java:90)\n    at tr.com.srdc.ontmalizer.XSD2OWLMapper.convertXSD2OWL(XSD2OWLMapper.java:445)\n    at tr.com.srdc.ontmalizer.test.XSD2OWLTest.createDefaultTextPropertyForMixedClasses_EmptyMixedClass(XSD2OWLTest.java:117)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"createDefaultTextPropertyForMixedClasses_EmptyMixedClass","class":"tr.com.srdc.ontmalizer.test.XSD2OWLTest"},"endDate":1526846843714,"decisions":[{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}],"diff":"--- /XSD2OWLMapper.java\n+++ /XSD2OWLMapper.java\n@@ -166,7 +166,17 @@\n         try {\n-            URI uri = new URI(schema.getTargetNamespace());\n-            if (uri.isAbsolute()) {\n-                mainURI = schema.getTargetNamespace();\n+            if (schema != null) {\n+                URI uri = new URI(schema.getTargetNamespace());\n+            }\n+            if (uri == null) {\n+                if ( new URI(null, null, null).isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             } else {\n-                mainURI = \"http://uri-not-absolute.com\";\n+                if (uri.isAbsolute()) {\n+                    mainURI = schema.getTargetNamespace();\n+                } else {\n+                    mainURI = \"http://uri-not-absolute.com\";\n+                }\n             }\n@@ -188,18 +198,47 @@\n     public void convertXSD2OWL() {\n-        Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n-        while (simpleTypes.hasNext()) {\n-            convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSSimpleType> simpleTypes = schema.iterateSimpleTypes();\n         }\n+        if (simpleTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        } else {\n+            while (simpleTypes.hasNext()) {\n+                convertSimpleType((XSSimpleType) simpleTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n-        while (complexTypes.hasNext()) {\n-            convertComplexType((XSComplexType) complexTypes.next(), null);\n+        if (schema != null) {\n+            Iterator<XSComplexType> complexTypes = schema.iterateComplexTypes();\n         }\n+        if (complexTypes == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        } else {\n+            while (complexTypes.hasNext()) {\n+                convertComplexType((XSComplexType) complexTypes.next(), null);\n+            }\n+        }\n \n-        Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n-        while (elements.hasNext()) {\n-            convertElement((XSElementDecl) elements.next(), null);\n+        if (schema != null) {\n+            Iterator<XSElementDecl> elements = schema.iterateElementDecls();\n         }\n+        if (elements == null) {\n+            while ( new NullIterator().hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        } else {\n+            while (elements.hasNext()) {\n+                convertElement((XSElementDecl) elements.next(), null);\n+            }\n+        }\n \n-        Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        if (schema != null) {\n+            Iterator<XSModelGroupDecl> groups = schema.iterateModelGroupDecls();\n+        }\n+        if (groups == null) {\n+            groups = new TrackingTripleIterator(null);\n+        }\n         while (groups.hasNext()) {\n","locations":[{"sourceEnd":6858,"line":204,"executionCount":0,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6520,"line":195,"executionCount":0,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6716,"line":200,"executionCount":0,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6669,"line":199,"executionCount":0,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5620,"line":168,"executionCount":0,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":5577,"line":167,"executionCount":0,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6319,"line":190,"executionCount":0,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6469,"line":194,"executionCount":0,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6270,"line":189,"executionCount":0,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},{"sourceEnd":6906,"line":205,"executionCount":0,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"}],"startDate":1526846843192}],"endInit":1526846783548,"start":1526846788802,"end":1526846843714,"searchSpace":[{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6858,"line":204,"sourceStart":6853,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":20,"decisionType":"NEW","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6469,"line":194,"sourceStart":6464,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String","int","java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"class java.lang.Integer","value":0},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6270,"line":189,"sourceStart":6265,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6669,"line":199,"sourceStart":6664,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7032,"line":209,"sourceStart":7027,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.StmtIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":100,"decisionType":"NEW","location":{"sourceEnd":5577,"line":167,"sourceStart":5572,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":22,"decisionType":"NEW","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NullIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5620,"line":168,"sourceStart":5618,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.lang.String","java.lang.String","java.lang.String","int","java.lang.String","java.lang.String","java.lang.String"],"instanceType":"New","class":"java.net.URI","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"class java.lang.Integer","value":0},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Function","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.Map1Iterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["org.apache.jena.graph.Graph","java.util.Iterator","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase","org.apache.jena.mem.NodeToTriplesMapBase"],"instanceType":"New","class":"org.apache.jena.mem.StoreTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"instanceType":"New","class":"org.apache.jena.util.iterator.NiceIterator"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6520,"line":195,"sourceStart":6509,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.function.Predicate","java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.util.iterator.FilterIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6319,"line":190,"sourceStart":6309,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.mem.TrackingTripleIterator","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6906,"line":205,"sourceStart":6901,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":7081,"line":210,"sourceStart":7073,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator","java.lang.Object"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"},{"instanceType":"Primitive","class":"null","value":"null"}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":6716,"line":200,"sourceStart":6709,"class":"tr.com.srdc.ontmalizer.XSD2OWLMapper"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["java.util.Iterator"],"instanceType":"New","class":"org.apache.jena.rdf.model.impl.ResIteratorImpl","parameters":[{"instanceType":"Primitive","class":"null","value":"null"}]}}]}