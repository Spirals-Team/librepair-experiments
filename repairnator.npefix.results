{"executions":[{"result":{"success":false,"error":"TestDatasetService_addDatasetVersionToCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_addDatasetVersionToCollection(ZebedeeDatasetServiceTest.java:245)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_addDatasetVersionToCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712923999,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && user.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712923989},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:224)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712923978,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && user.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712923966},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:118)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712923989,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && user.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712923978},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI(ZebedeeDatasetServiceTest.java:97)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712923966,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && user.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712923954},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:80)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712923902,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && user.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712923555},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:169)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712923926,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && user.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712923902},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(ZebedeeDatasetServiceTest.java:148)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712923942,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && user.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712923926},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:207)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712923954,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && user.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712923942},{"result":{"success":false,"error":"TestDatasetService_addDatasetVersionToCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_addDatasetVersionToCollection(ZebedeeDatasetServiceTest.java:245)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_addDatasetVersionToCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924283,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = user;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924273},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:224)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924264,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = user;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924254},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:118)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924273,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = user;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924264},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI(ZebedeeDatasetServiceTest.java:97)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924254,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = user;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924244},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:80)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924199,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = user;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924001},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:169)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924219,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = user;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924199},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(ZebedeeDatasetServiceTest.java:148)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924232,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = user;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924219},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:207)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924244,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = user;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924232},{"result":{"success":false,"error":"TestDatasetService_addDatasetVersionToCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_addDatasetVersionToCollection(ZebedeeDatasetServiceTest.java:245)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_addDatasetVersionToCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924582,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && new String().equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712924572},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:224)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924562,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && new String().equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712924552},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:118)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924572,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && new String().equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712924562},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI(ZebedeeDatasetServiceTest.java:97)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924552,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && new String().equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712924542},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:80)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924481,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && new String().equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712924285},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:169)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924505,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && new String().equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712924481},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(ZebedeeDatasetServiceTest.java:148)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924523,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && new String().equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712924505},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:207)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924542,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,10 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy == null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && new String().equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n+        } else {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","startDate":1521712924523},{"result":{"success":false,"error":"TestDatasetService_addDatasetVersionToCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_addDatasetVersionToCollection(ZebedeeDatasetServiceTest.java:245)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_addDatasetVersionToCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924856,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = new String();\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924846},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:224)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924837,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = new String();\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924827},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:118)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924846,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = new String();\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924837},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI(ZebedeeDatasetServiceTest.java:97)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924826,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = new String();\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924816},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:80)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924776,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = new String();\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924584},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:169)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924792,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = new String();\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924776},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(ZebedeeDatasetServiceTest.java:148)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924805,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = new String();\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924792},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass java.lang.NullPointerException: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:76)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:207)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712924816,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            lastEditedBy = new String();\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924805},{"result":{"success":false,"error":"TestDatasetService_addDatasetVersionToCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:80)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_addDatasetVersionToCollection(ZebedeeDatasetServiceTest.java:245)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_addDatasetVersionToCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925128,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,6 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy != null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925119},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:80)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:224)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925110,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,6 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy != null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925101},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:80)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:118)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925119,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,6 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy != null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925110},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:80)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI(ZebedeeDatasetServiceTest.java:97)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925101,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,6 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy != null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925092},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:80)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:80)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925053,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,6 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy != null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712924858},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:80)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:169)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925068,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,6 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy != null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925053},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:80)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(ZebedeeDatasetServiceTest.java:148)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925080,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,6 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy != null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925068},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:80)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:207)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925092,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,4 +47,6 @@\n         // The same user can't review edits they've submitted for review\n-        if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n-            throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+        if (lastEditedBy != null) {\n+            if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n+                throw new ForbiddenException(\"User \" + user + \"doesn't have permission to review a dataset they completed\");\n+            }\n         }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925080},{"result":{"success":false,"error":"TestDatasetService_addDatasetVersionToCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<Complete> but was:<null>\nclass java.lang.AssertionError: expected:<Complete> but was:<null>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_addDatasetVersionToCollection(ZebedeeDatasetServiceTest.java:257)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_addDatasetVersionToCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925443,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925429},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<Complete> but was:<null>\nclass java.lang.AssertionError: expected:<Complete> but was:<null>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:234)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925417,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"datasetID","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,18 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n+                    && ! datasetID.equals(collection.getId())) {\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        + \" to collection \" + collection.getId()\n+                        + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                } else {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925404},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925429,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925417},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925404,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"datasetID","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,18 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n+                    && ! datasetID.equals(collection.getId())) {\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        + \" to collection \" + collection.getId()\n+                        + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                } else {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925391},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<null> but was:<Complete>\nclass java.lang.AssertionError: expected:<null> but was:<Complete>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:85)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925339,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"datasetID","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,18 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n+                    && ! datasetID.equals(collection.getId())) {\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        + \" to collection \" + collection.getId()\n+                        + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                } else {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925130},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925359,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"datasetID","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,18 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n+                    && ! datasetID.equals(collection.getId())) {\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        + \" to collection \" + collection.getId()\n+                        + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                } else {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925339},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925375,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925359},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<null> but was:<Complete>\nclass java.lang.AssertionError: expected:<null> but was:<Complete>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:212)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925391,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925375},{"result":{"success":false,"error":"TestDatasetService_addDatasetVersionToCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<Complete> but was:<InProgress>\nclass java.lang.AssertionError: expected:<Complete> but was:<InProgress>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_addDatasetVersionToCollection(ZebedeeDatasetServiceTest.java:257)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_addDatasetVersionToCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925749,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"fieldName":"InProgress","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return ContentStatus.InProgress;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925736},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<Complete> but was:<null>\nclass java.lang.AssertionError: expected:<Complete> but was:<null>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:234)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925725,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,18 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n+                    && ! user.equals(collection.getId())) {\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        + \" to collection \" + collection.getId()\n+                        + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                } else {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925713},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925736,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"fieldName":"InProgress","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return ContentStatus.InProgress;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925725},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925713,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,18 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n+                    && ! user.equals(collection.getId())) {\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        + \" to collection \" + collection.getId()\n+                        + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                } else {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925701},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<null> but was:<Complete>\nclass java.lang.AssertionError: expected:<null> but was:<Complete>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:85)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925650,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,18 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n+                    && ! user.equals(collection.getId())) {\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        + \" to collection \" + collection.getId()\n+                        + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                } else {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925445},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925670,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,18 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n+                    && ! user.equals(collection.getId())) {\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        + \" to collection \" + collection.getId()\n+                        + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                } else {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925650},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925687,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"fieldName":"InProgress","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return ContentStatus.InProgress;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925670},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<InProgress> but was:<Complete>\nclass java.lang.AssertionError: expected:<InProgress> but was:<Complete>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:212)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925701,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"fieldName":"InProgress","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return ContentStatus.InProgress;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925687},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_addDatasetVersionToCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926068,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"fieldName":"Complete","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return ContentStatus.Complete;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926054},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<Complete> but was:<null>\nclass java.lang.AssertionError: expected:<Complete> but was:<null>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:234)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926042,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"datasetID","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,8 +121,14 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n-                    && !dataset.getCollection_id().equals(collection.getId())) {\n+            } else {\n+                String collection_id = dataset.getCollection_id();\n+                if (collection_id == null) {\n+                    collection_id = datasetID;\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n+                    && !collection_id.equals(collection.getId())) {\n                 throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n-                        + \" it is already in collection \" + dataset.getCollection_id());\n+                        + \" it is already in collection \" + collection_id);\n             }\n+            }\n \n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926029},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926054,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"fieldName":"Complete","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return ContentStatus.Complete;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926042},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926029,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"datasetID","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,8 +121,14 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n-                    && !dataset.getCollection_id().equals(collection.getId())) {\n+            } else {\n+                String collection_id = dataset.getCollection_id();\n+                if (collection_id == null) {\n+                    collection_id = datasetID;\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n+                    && !collection_id.equals(collection.getId())) {\n                 throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n-                        + \" it is already in collection \" + dataset.getCollection_id());\n+                        + \" it is already in collection \" + collection_id);\n             }\n+            }\n \n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926015},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<null> but was:<Complete>\nclass java.lang.AssertionError: expected:<null> but was:<Complete>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:85)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925961,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"datasetID","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,8 +121,14 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n-                    && !dataset.getCollection_id().equals(collection.getId())) {\n+            } else {\n+                String collection_id = dataset.getCollection_id();\n+                if (collection_id == null) {\n+                    collection_id = datasetID;\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n+                    && !collection_id.equals(collection.getId())) {\n                 throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n-                        + \" it is already in collection \" + dataset.getCollection_id());\n+                        + \" it is already in collection \" + collection_id);\n             }\n+            }\n \n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925751},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925983,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"datasetID","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,8 +121,14 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n-                    && !dataset.getCollection_id().equals(collection.getId())) {\n+            } else {\n+                String collection_id = dataset.getCollection_id();\n+                if (collection_id == null) {\n+                    collection_id = datasetID;\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n+                    && !collection_id.equals(collection.getId())) {\n                 throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n-                        + \" it is already in collection \" + dataset.getCollection_id());\n+                        + \" it is already in collection \" + collection_id);\n             }\n+            }\n \n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925961},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712925999,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"fieldName":"Complete","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return ContentStatus.Complete;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925983},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926015,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"fieldName":"Complete","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return ContentStatus.Complete;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712925999},{"result":{"success":false,"error":"TestDatasetService_addDatasetVersionToCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<Complete> but was:<Reviewed>\nclass java.lang.AssertionError: expected:<Complete> but was:<Reviewed>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_addDatasetVersionToCollection(ZebedeeDatasetServiceTest.java:257)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_addDatasetVersionToCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926754,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"fieldName":"Reviewed","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return ContentStatus.Reviewed;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926740},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<Complete> but was:<null>\nclass java.lang.AssertionError: expected:<Complete> but was:<null>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:234)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926729,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,8 +121,14 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n-                    && !dataset.getCollection_id().equals(collection.getId())) {\n+            } else {\n+                String collection_id = dataset.getCollection_id();\n+                if (collection_id == null) {\n+                    collection_id = user;\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n+                    && !collection_id.equals(collection.getId())) {\n                 throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n-                        + \" it is already in collection \" + dataset.getCollection_id());\n+                        + \" it is already in collection \" + collection_id);\n             }\n+            }\n \n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926715},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926740,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"fieldName":"Reviewed","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return ContentStatus.Reviewed;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926729},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926715,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,8 +121,14 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n-                    && !dataset.getCollection_id().equals(collection.getId())) {\n+            } else {\n+                String collection_id = dataset.getCollection_id();\n+                if (collection_id == null) {\n+                    collection_id = user;\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n+                    && !collection_id.equals(collection.getId())) {\n                 throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n-                        + \" it is already in collection \" + dataset.getCollection_id());\n+                        + \" it is already in collection \" + collection_id);\n             }\n+            }\n \n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926703},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<null> but was:<Complete>\nclass java.lang.AssertionError: expected:<null> but was:<Complete>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:85)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926652,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,8 +121,14 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n-                    && !dataset.getCollection_id().equals(collection.getId())) {\n+            } else {\n+                String collection_id = dataset.getCollection_id();\n+                if (collection_id == null) {\n+                    collection_id = user;\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n+                    && !collection_id.equals(collection.getId())) {\n                 throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n-                        + \" it is already in collection \" + dataset.getCollection_id());\n+                        + \" it is already in collection \" + collection_id);\n             }\n+            }\n \n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926070},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926671,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,8 +121,14 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n-                    && !dataset.getCollection_id().equals(collection.getId())) {\n+            } else {\n+                String collection_id = dataset.getCollection_id();\n+                if (collection_id == null) {\n+                    collection_id = user;\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n+                    && !collection_id.equals(collection.getId())) {\n                 throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n-                        + \" it is already in collection \" + dataset.getCollection_id());\n+                        + \" it is already in collection \" + collection_id);\n             }\n+            }\n \n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926652},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926688,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"fieldName":"Reviewed","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return ContentStatus.Reviewed;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926671},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<Reviewed> but was:<Complete>\nclass java.lang.AssertionError: expected:<Reviewed> but was:<Complete>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:212)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926703,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"fieldName":"Reviewed","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return ContentStatus.Reviewed;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926688},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_addDatasetVersionToCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927075,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"newState","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return newState;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927061},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<Complete> but was:<null>\nclass java.lang.AssertionError: expected:<Complete> but was:<null>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:234)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927049,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,18 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n+                    && ! new String().equals(collection.getId())) {\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        + \" to collection \" + collection.getId()\n+                        + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                } else {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927035},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927061,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"newState","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return newState;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927049},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927035,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,18 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n+                    && ! new String().equals(collection.getId())) {\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        + \" to collection \" + collection.getId()\n+                        + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                } else {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927022},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<null> but was:<Complete>\nclass java.lang.AssertionError: expected:<null> but was:<Complete>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:85)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926968,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,18 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n+                    && ! new String().equals(collection.getId())) {\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        + \" to collection \" + collection.getId()\n+                        + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                } else {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926756},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712926988,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,18 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n+                    && ! new String().equals(collection.getId())) {\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        + \" to collection \" + collection.getId()\n+                        + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                } else {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926968},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927006,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"newState","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return newState;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712926988},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927022,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"newState","instanceType":"Variable"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return newState;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927006},{"result":{"success":false,"error":"TestDatasetService_addDatasetVersionToCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:73)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_addDatasetVersionToCollection(ZebedeeDatasetServiceTest.java:245)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_addDatasetVersionToCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927388,"diff":"","startDate":1521712927378},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<Complete> but was:<null>\nclass java.lang.AssertionError: expected:<Complete> but was:<null>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:234)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927369,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,8 +121,14 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n-                    && !dataset.getCollection_id().equals(collection.getId())) {\n+            } else {\n+                String collection_id = dataset.getCollection_id();\n+                if (collection_id == null) {\n+                    collection_id = new String();\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n+                    && !collection_id.equals(collection.getId())) {\n                 throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n-                        + \" it is already in collection \" + dataset.getCollection_id());\n+                        + \" it is already in collection \" + collection_id);\n             }\n+            }\n \n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927355},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:73)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:118)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927378,"diff":"","startDate":1521712927369},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927355,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,8 +121,14 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n-                    && !dataset.getCollection_id().equals(collection.getId())) {\n+            } else {\n+                String collection_id = dataset.getCollection_id();\n+                if (collection_id == null) {\n+                    collection_id = new String();\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n+                    && !collection_id.equals(collection.getId())) {\n                 throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n-                        + \" it is already in collection \" + dataset.getCollection_id());\n+                        + \" it is already in collection \" + collection_id);\n             }\n+            }\n \n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927342},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): expected:<null> but was:<Complete>\nclass java.lang.AssertionError: expected:<null> but was:<Complete>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:85)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927294,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,8 +121,14 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n-                    && !dataset.getCollection_id().equals(collection.getId())) {\n+            } else {\n+                String collection_id = dataset.getCollection_id();\n+                if (collection_id == null) {\n+                    collection_id = new String();\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n+                    && !collection_id.equals(collection.getId())) {\n                 throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n-                        + \" it is already in collection \" + dataset.getCollection_id());\n+                        + \" it is already in collection \" + collection_id);\n             }\n+            }\n \n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927077},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927316,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,8 +121,14 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n-                    && !dataset.getCollection_id().equals(collection.getId())) {\n+            } else {\n+                String collection_id = dataset.getCollection_id();\n+                if (collection_id == null) {\n+                    collection_id = new String();\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n+                    && !collection_id.equals(collection.getId())) {\n                 throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n-                        + \" it is already in collection \" + dataset.getCollection_id());\n+                        + \" it is already in collection \" + collection_id);\n             }\n+            }\n \n","locations":[{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927294},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:73)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(ZebedeeDatasetServiceTest.java:148)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927330,"diff":"","startDate":1521712927316},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:73)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:207)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927342,"diff":"","startDate":1521712927330},{"result":{"success":false,"error":"TestDatasetService_addDatasetVersionToCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:73)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_addDatasetVersionToCollection(ZebedeeDatasetServiceTest.java:245)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_addDatasetVersionToCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927690,"diff":"","startDate":1521712927680},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:243)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:224)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927671,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,11 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() != null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":5356,"line":120,"executionCount":0,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927660},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:73)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:118)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927680,"diff":"","startDate":1521712927671},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:243)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI(ZebedeeDatasetServiceTest.java:97)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927660,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,11 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() != null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":5356,"line":120,"executionCount":0,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927648},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:243)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:80)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927603,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,11 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() != null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":5356,"line":120,"executionCount":0,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927390},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:243)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:169)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927622,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,7 +121,11 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() != null) {\n+                    if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n-                throw new ConflictException(\"cannot add dataset \" + datasetID\n+                        throw new ConflictException(\"cannot add dataset \" + datasetID\n                         + \" to collection \" + collection.getId()\n                         + \" it is already in collection \" + dataset.getCollection_id());\n+                    }\n+                }\n             }\n","locations":[{"sourceEnd":5356,"line":120,"executionCount":0,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927603},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:73)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI(ZebedeeDatasetServiceTest.java:148)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927635,"diff":"","startDate":1521712927622},{"result":{"success":false,"error":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:73)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection(ZebedeeDatasetServiceTest.java:207)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetVersionInCollection_UpdatesStateWhenAlreadyInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927648,"diff":"","startDate":1521712927635},{"result":{"success":false,"error":"TestDatasetService_addDatasetVersionToCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:73)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetVersionInCollection(ZebedeeDatasetService.java:325)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_addDatasetVersionToCollection(ZebedeeDatasetServiceTest.java:245)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_addDatasetVersionToCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927990,"diff":"","startDate":1521712927981},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): \nWanted but not invoked:\ncollectionDescription.addDataset(null);\n-> at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:228)\n\nHowever, there were other interactions with this mock:\ncollectionDescription.getDataset(\"321\");\n-> at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:133)\n\n\nclass org.mockito.exceptions.verification.WantedButNotInvoked: \nWanted but not invoked:\ncollectionDescription.addDataset(null);\n-> at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:228)\n\nHowever, there were other interactions with this mock:\ncollectionDescription.getDataset(\"321\");\n-> at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:133)\n\n\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection(ZebedeeDatasetServiceTest.java:228)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:89)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:282)\n    at com.github.tdurieux.npefix.maven.plugin.NPEFixMojo.multipleRuns(NPEFixMojo.java:228)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927972,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,3 +121,7 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    return null;\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n@@ -124,2 +131,3 @@\n             }\n+            }\n \n","locations":[{"sourceEnd":5356,"line":120,"executionCount":0,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927960},{"result":{"success":false,"error":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest): null\nclass fr.inria.spirals.npefix.resi.exception.NoMoreDecision: null\n    at fr.inria.spirals.npefix.resi.selector.ExplorerSelector.select(ExplorerSelector.java:108)\n    at fr.inria.spirals.npefix.resi.CallChecker.getDecision(CallChecker.java:75)\n    at fr.inria.spirals.npefix.resi.CallChecker.called(CallChecker.java:179)\n    at fr.inria.spirals.npefix.resi.CallChecker.beforeDeref(CallChecker.java:320)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updatedStateInCollection(ZebedeeDatasetService.java:73)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetService.updateDatasetInCollection(ZebedeeDatasetService.java:161)\n    at com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest.TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet(ZebedeeDatasetServiceTest.java:118)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_DoesNotSendCollectionIDToDatasetAPIIfAlreadySet","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927981,"diff":"","startDate":1521712927972},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"TestDatasetService_updateDatasetInCollection_SendsCollectionIDToDatasetAPI","class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetServiceTest"},"endDate":1521712927960,"decisions":[{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- /ZebedeeDatasetService.java\n+++ /ZebedeeDatasetService.java\n@@ -47,2 +47,5 @@\n         // The same user can't review edits they've submitted for review\n+        if (lastEditedBy == null) {\n+            return null;\n+        }\n         if (!currentState.equals(ContentStatus.Reviewed) && newState.equals(ContentStatus.Reviewed) && lastEditedBy.equalsIgnoreCase(user)) {\n@@ -118,3 +121,7 @@\n \n-            if (dataset.getState().equals(State.ASSOCIATED)\n+            } else {\n+                if (dataset.getCollection_id() == null) {\n+                    return null;\n+                }\n+                if (dataset.getState().equals(State.ASSOCIATED)\n                     && !dataset.getCollection_id().equals(collection.getId())) {\n@@ -124,2 +131,3 @@\n             }\n+            }\n \n","locations":[{"sourceEnd":5356,"line":120,"executionCount":0,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},{"sourceEnd":2009,"line":48,"executionCount":0,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"}],"startDate":1521712927949}],"endInit":1521712921280,"start":1521712923533,"end":1521712927991,"searchSpace":[{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"datasetID","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":true,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat1A","value":{"variableName":"user","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat1B","value":{"variableName":"datasetID","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat2A","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat2B","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat4 VAR","value":{"fieldName":"Complete","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat4 VAR","value":{"fieldName":"Reviewed","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat4 VAR","value":{"variableName":"newState","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat4 VAR","value":{"variableName":"collectionDataset","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat1B","value":{"variableName":"user","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat4 VAR","value":{"variableName":"updatedDataset","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat4 VAR","value":{"fieldName":"InProgress","instanceType":"StaticVariable","class":"com.github.onsdigital.zebedee.json.ContentStatus"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":5356,"line":120,"sourceStart":5331,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"com.github.onsdigital.zebedee.json.CollectionDataset"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2009,"line":48,"sourceStart":1998,"class":"com.github.onsdigital.zebedee.service.ZebedeeDatasetService"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}]}