<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="406" passed="406">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="3725" started-at="2018-06-01T11:20:26Z" finished-at="2018-06-01T11:20:29Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="3725" started-at="2018-06-01T11:20:26Z" finished-at="2018-06-01T11:20:29Z">
      <class name="org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="49" started-at="2018-06-01T13:20:27Z" finished-at="2018-06-01T13:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="331" started-at="2018-06-01T13:20:27Z" finished-at="2018-06-01T13:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testAddIntAttribute()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testAddIntAttribute" duration-ms="24" started-at="2018-06-01T13:20:27Z" finished-at="2018-06-01T13:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddIntAttribute -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:27Z" finished-at="2018-06-01T13:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="5" started-at="2018-06-01T13:20:27Z" finished-at="2018-06-01T13:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:27Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testAddMrefAttribute()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testAddMrefAttribute" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMrefAttribute -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testAfterCommitTransaction()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testAfterCommitTransaction" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAfterCommitTransaction -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testDeleteMrefAttr()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testDeleteMrefAttr" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteMrefAttr -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testDeleteMrefAttrInTransaction()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testDeleteMrefAttrInTransaction" duration-ms="78" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteMrefAttrInTransaction -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testDeleteStringAttr()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testDeleteStringAttr" duration-ms="5" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteStringAttr -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGetEntityTypeDescription()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testGetEntityTypeDescription" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntityTypeDescription -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGetEntityTypeDescriptionWithinNewTransactionFallbackToCommitted()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testGetEntityTypeDescriptionWithinNewTransactionFallbackToCommitted" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntityTypeDescriptionWithinNewTransactionFallbackToCommitted -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGetEntityTypeDescriptionWithinNewTransactionOverrideWithRegistered()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testGetEntityTypeDescriptionWithinNewTransactionOverrideWithRegistered" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntityTypeDescriptionWithinNewTransactionOverrideWithRegistered -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testRollbackTransaction()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testRollbackTransaction" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRollbackTransaction -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testUnregisterEntityType()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testUnregisterEntityType" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnregisterEntityType -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testUpdateMrefAttributeName()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testUpdateMrefAttributeName" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateMrefAttributeName -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testUpdateMrefToIntAttribute()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testUpdateMrefToIntAttribute" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateMrefToIntAttribute -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testUpdateStringToMrefAttribute()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="testUpdateStringToMrefAttribute" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateStringToMrefAttribute -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest@9b21bd3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.molgenis.data.postgresql.identifier.EntityTypeRegistryImplTest -->
      <class name="org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest">
        <test-method status="PASS" signature="generateSqlColumnDefaultConstraint(java.lang.String, org.molgenis.data.meta.AttributeType, boolean)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="generateSqlColumnDefaultConstraint" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="generateSqlColumnDefaultConstraint" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[XREF]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateSqlColumnDefaultConstraint -->
        <test-method status="PASS" signature="generateSqlColumnDefaultConstraint(java.lang.String, org.molgenis.data.meta.AttributeType, boolean)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="generateSqlColumnDefaultConstraint" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="generateSqlColumnDefaultConstraint" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[STRING]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateSqlColumnDefaultConstraint -->
        <test-method status="PASS" signature="generateSqlColumnDefaultConstraint(java.lang.String, org.molgenis.data.meta.AttributeType, boolean)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="generateSqlColumnDefaultConstraint" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="generateSqlColumnDefaultConstraint" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[str]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[STRING]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateSqlColumnDefaultConstraint -->
        <test-method status="PASS" signature="generateSqlColumnDefaultConstraint(java.lang.String, org.molgenis.data.meta.AttributeType, boolean)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="generateSqlColumnDefaultConstraint" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="generateSqlColumnDefaultConstraint" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[refEntityId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[XREF]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateSqlColumnDefaultConstraint -->
        <test-method status="PASS" signature="getJunctionTableSelect()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getJunctionTableSelect" duration-ms="4" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getJunctionTableSelect -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BOOL]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" boolean]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="4" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CATEGORICAL]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[refEntityInt]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" integer,ADD CONSTRAINT "entityTypeId#c34894ba_attr_fkey" FOREIGN KEY ("attr") REFERENCES "refEntityInt#78255ee1"("refIdAttrInt")]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DATE]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" date]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DATE_TIME]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" timestamp with time zone]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DECIMAL]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" double precision]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMAIL]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="2" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ENUM]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255),ADD CONSTRAINT "entityTypeId#c34894ba_attr_chk" CHECK ("attr" IN ('enum0, enum1'))]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FILE]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[refEntityStr]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255),ADD CONSTRAINT "entityTypeId#c34894ba_attr_fkey" FOREIGN KEY ("attr") REFERENCES "refEntityStr#305ca1a9"("refIdAttrStr")]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HTML]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" text]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HYPERLINK]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[INT]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" integer]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LONG]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" bigint]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SCRIPT]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" text]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TEXT]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" text]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[STRING]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[XREF]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[refEntityStr]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255),ADD CONSTRAINT "entityTypeId#c34894ba_attr_fkey" FOREIGN KEY ("attr") REFERENCES "refEntityStr#305ca1a9"("refIdAttrStr")]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BOOL]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" boolean NOT NULL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CATEGORICAL]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[refEntityInt]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" integer NOT NULL,ADD CONSTRAINT "entityTypeId#c34894ba_attr_fkey" FOREIGN KEY ("attr") REFERENCES "refEntityInt#78255ee1"("refIdAttrInt")]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DATE_TIME]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" timestamp with time zone NOT NULL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DATE]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" date NOT NULL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DECIMAL]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" double precision NOT NULL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMAIL]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255) NOT NULL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ENUM]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255) NOT NULL,ADD CONSTRAINT "entityTypeId#c34894ba_attr_chk" CHECK ("attr" IN ('enum0, enum1'))]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FILE]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[refEntityStr]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255) NOT NULL,ADD CONSTRAINT "entityTypeId#c34894ba_attr_fkey" FOREIGN KEY ("attr") REFERENCES "refEntityStr#305ca1a9"("refIdAttrStr")]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HTML]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" text NOT NULL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HYPERLINK]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255) NOT NULL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LONG]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" bigint NOT NULL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[INT]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" integer NOT NULL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SCRIPT]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" text NOT NULL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TEXT]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" text NOT NULL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[STRING]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255) NOT NULL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[XREF]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[refEntityStr]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255) NOT NULL,ADD CONSTRAINT "entityTypeId#c34894ba_attr_fkey" FOREIGN KEY ("attr") REFERENCES "refEntityStr#305ca1a9"("refIdAttrStr")]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="7" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CATEGORICAL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[refEntityInt]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" integer NOT NULL DEFAULT 1,ADD CONSTRAINT "entityTypeId#c34894ba_attr_fkey" FOREIGN KEY ("attr") REFERENCES "refEntityInt#78255ee1"("refIdAttrInt")]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BOOL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" boolean NOT NULL DEFAULT TRUE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="19" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DATE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2010-01-13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" date NOT NULL DEFAULT '2010-01-13']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="18" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DATE_TIME]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1985-08-12T06:12:13Z]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" timestamp with time zone NOT NULL DEFAULT '1985-08-12T06:12:13Z']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DECIMAL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.14]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" double precision NOT NULL DEFAULT 3.14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMAIL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mail@molgenis.org]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255) NOT NULL DEFAULT 'mail@molgenis.org']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ENUM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[enum1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255) NOT NULL DEFAULT 'enum1',ADD CONSTRAINT "entityTypeId#c34894ba_attr_chk" CHECK ("attr" IN ('enum0, enum1'))]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FILE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[refEntityId]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[refEntityStr]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255) NOT NULL DEFAULT 'refEntityId',ADD CONSTRAINT "entityTypeId#c34894ba_attr_fkey" FOREIGN KEY ("attr") REFERENCES "refEntityStr#305ca1a9"("refIdAttrStr")]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HTML]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" text NOT NULL DEFAULT 'html']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[INT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" integer NOT NULL DEFAULT 123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HYPERLINK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://www.molgenis.org/]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255) NOT NULL DEFAULT 'http://www.molgenis.org/']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LONG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34359738368]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" bigint NOT NULL DEFAULT 34359738368]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[STRING]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[string]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255) NOT NULL DEFAULT 'string']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SCRIPT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[script]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" text NOT NULL DEFAULT 'script']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TEXT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[text]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" text NOT NULL DEFAULT 'text']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[XREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[entityTypeId]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[refEntityStr]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" character varying(255) NOT NULL DEFAULT 'entityTypeId',ADD CONSTRAINT "entityTypeId#c34894ba_attr_fkey" FOREIGN KEY ("attr") REFERENCES "refEntityStr#305ca1a9"("refIdAttrStr")]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumn(org.molgenis.data.meta.AttributeType, java.lang.String, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode, boolean, org.molgenis.data.meta.model.EntityType, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumn" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BOOL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[ALTER TABLE "entityTypeId#c34894ba" ADD "attr" boolean NOT NULL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumn -->
        <test-method status="PASS" signature="getSqlAddColumnInvalidType(org.molgenis.data.meta.AttributeType, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumnInvalidType" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnInvalidType" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[COMPOUND]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Illegal attribute type [COMPOUND]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Illegal attribute type [COMPOUND]
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlColumn(PostgreSqlQueryGenerator.java:671)
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlAddColumn(PostgreSqlQueryGenerator.java:166)
	at org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest.getSqlAddColumnInvalidType(PostgreSqlQueryGeneratorTest.java:870)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumnInvalidType -->
        <test-method status="PASS" signature="getSqlAddColumnInvalidType(org.molgenis.data.meta.AttributeType, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumnInvalidType" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnInvalidType" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CATEGORICAL_MREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Illegal attribute type [CATEGORICAL_MREF]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Illegal attribute type [CATEGORICAL_MREF]
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlColumn(PostgreSqlQueryGenerator.java:671)
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlAddColumn(PostgreSqlQueryGenerator.java:166)
	at org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest.getSqlAddColumnInvalidType(PostgreSqlQueryGeneratorTest.java:870)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumnInvalidType -->
        <test-method status="PASS" signature="getSqlAddColumnInvalidType(org.molgenis.data.meta.AttributeType, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumnInvalidType" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnInvalidType" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EXCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Illegal attribute type [MREF]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Illegal attribute type [MREF]
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlColumn(PostgreSqlQueryGenerator.java:671)
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlAddColumn(PostgreSqlQueryGenerator.java:166)
	at org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest.getSqlAddColumnInvalidType(PostgreSqlQueryGeneratorTest.java:870)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumnInvalidType -->
        <test-method status="PASS" signature="getSqlAddColumnInvalidType(org.molgenis.data.meta.AttributeType, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumnInvalidType" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnInvalidType" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[COMPOUND]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Illegal attribute type [COMPOUND]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Illegal attribute type [COMPOUND]
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlColumn(PostgreSqlQueryGenerator.java:671)
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlAddColumn(PostgreSqlQueryGenerator.java:166)
	at org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest.getSqlAddColumnInvalidType(PostgreSqlQueryGeneratorTest.java:870)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumnInvalidType -->
        <test-method status="PASS" signature="getSqlAddColumnInvalidType(org.molgenis.data.meta.AttributeType, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumnInvalidType" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnInvalidType" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CATEGORICAL_MREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Illegal attribute type [CATEGORICAL_MREF]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Illegal attribute type [CATEGORICAL_MREF]
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlColumn(PostgreSqlQueryGenerator.java:671)
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlAddColumn(PostgreSqlQueryGenerator.java:166)
	at org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest.getSqlAddColumnInvalidType(PostgreSqlQueryGeneratorTest.java:870)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumnInvalidType -->
        <test-method status="PASS" signature="getSqlAddColumnInvalidType(org.molgenis.data.meta.AttributeType, org.molgenis.data.postgresql.PostgreSqlQueryGenerator$ColumnMode)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlAddColumnInvalidType" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getSqlAddColumnInvalidType" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[INCLUDE_DEFAULT_CONSTRAINT]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Illegal attribute type [MREF]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Illegal attribute type [MREF]
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlColumn(PostgreSqlQueryGenerator.java:671)
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlAddColumn(PostgreSqlQueryGenerator.java:166)
	at org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest.getSqlAddColumnInvalidType(PostgreSqlQueryGeneratorTest.java:870)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlAddColumnInvalidType -->
        <test-method status="PASS" signature="getSqlCreateCheckConstraint()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlCreateCheckConstraint" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlCreateCheckConstraint -->
        <test-method status="PASS" signature="getSqlCreateForeignKey()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlCreateForeignKey" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlCreateForeignKey -->
        <test-method status="PASS" signature="getSqlCreateCheckConstraintWrongDataType()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlCreateCheckConstraintWrongDataType" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Check constraint only allowed for attribute type [ENUM]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Check constraint only allowed for attribute type [ENUM]
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlCheckConstraint(PostgreSqlQueryGenerator.java:93)
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlCreateCheckConstraint(PostgreSqlQueryGenerator.java:123)
	at org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest.getSqlCreateCheckConstraintWrongDataType(PostgreSqlQueryGeneratorTest.java:306)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlCreateCheckConstraintWrongDataType -->
        <test-method status="PASS" signature="getSqlCreateForeignKeySelfReferencing()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlCreateForeignKeySelfReferencing" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlCreateForeignKeySelfReferencing -->
        <test-method status="PASS" signature="getSqlCreateFunctionValidateUpdate()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlCreateFunctionValidateUpdate" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlCreateFunctionValidateUpdate -->
        <test-method status="PASS" signature="getSqlCreateJunctionTable()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlCreateJunctionTable" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlCreateJunctionTable -->
        <test-method status="PASS" signature="getSqlCreateJunctionTableIndex()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlCreateJunctionTableIndex" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlCreateJunctionTableIndex -->
        <test-method status="PASS" signature="getSqlCreateJunctionTableSelfReferencing()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlCreateJunctionTableSelfReferencing" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlCreateJunctionTableSelfReferencing -->
        <test-method status="PASS" signature="getSqlCreateTable()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlCreateTable" duration-ms="32" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlCreateTable -->
        <test-method status="PASS" signature="getSqlCreateUniqueKey()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlCreateUniqueKey" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlCreateUniqueKey -->
        <test-method status="PASS" signature="getSqlCreateUpdateTrigger()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlCreateUpdateTrigger" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlCreateUpdateTrigger -->
        <test-method status="PASS" signature="getSqlDropCheckConstraint()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlDropCheckConstraint" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlDropCheckConstraint -->
        <test-method status="PASS" signature="getSqlDropCheckConstraintWrongDataType()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlDropCheckConstraintWrongDataType" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Check constraint only allowed for attribute type [ENUM]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Check constraint only allowed for attribute type [ENUM]
	at org.molgenis.data.postgresql.PostgreSqlQueryGenerator.getSqlDropCheckConstraint(PostgreSqlQueryGenerator.java:131)
	at org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest.getSqlDropCheckConstraintWrongDataType(PostgreSqlQueryGeneratorTest.java:330)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlDropCheckConstraintWrongDataType -->
        <test-method status="PASS" signature="getSqlDropColumnDefault()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlDropColumnDefault" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlDropColumnDefault -->
        <test-method status="PASS" signature="getSqlDropColumn()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlDropColumn" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlDropColumn -->
        <test-method status="PASS" signature="getSqlDropForeignKey()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlDropForeignKey" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlDropForeignKey -->
        <test-method status="PASS" signature="getSqlDropNotNull()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlDropNotNull" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlDropNotNull -->
        <test-method status="PASS" signature="getSqlDropFunctionValidateUpdate()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlDropFunctionValidateUpdate" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlDropFunctionValidateUpdate -->
        <test-method status="PASS" signature="getSqlDropUpdateTrigger()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlDropUpdateTrigger" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlDropUpdateTrigger -->
        <test-method status="PASS" signature="getSqlDropUniqueKey()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlDropUniqueKey" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlDropUniqueKey -->
        <test-method status="PASS" signature="getSqlFrom()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlFrom" duration-ms="60" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlFrom -->
        <test-method status="PASS" signature="getSqlInsertJunction()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlInsertJunction" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlInsertJunction -->
        <test-method status="PASS" signature="getSqlSelectMref()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlSelectMref" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlSelectMref -->
        <test-method status="PASS" signature="getSqlInsertJunctionInversedBy()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlInsertJunctionInversedBy" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlInsertJunctionInversedBy -->
        <test-method status="PASS" signature="getSqlSelectOneToManyMappedBy(org.molgenis.data.Query, java.lang.String, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlSelectOneToManyMappedBy" duration-ms="2" started-at="2018-06-01T13:20:28Z" data-provider="getSqlSelectOneToManyMappedByProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SELECT this."idAttr", (SELECT array_agg("refIdAttr" ORDER BY "refIdAttr" ASC) FROM "refEntityId#07f902bf" WHERE this."idAttr" = "refEntityId#07f902bf"."refAttr") AS "attr" FROM "entityTypeId#c34894ba" AS this ORDER BY "idAttr" ASC]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlSelectOneToManyMappedBy -->
        <test-method status="PASS" signature="getSqlSelectOneToManyMappedBy(org.molgenis.data.Query, java.lang.String, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlSelectOneToManyMappedBy" duration-ms="6" started-at="2018-06-01T13:20:28Z" data-provider="getSqlSelectOneToManyMappedByProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rules=['attr' IN [ref0, ref1]]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SELECT DISTINCT this."idAttr", (SELECT array_agg("refIdAttr" ORDER BY "refIdAttr" ASC) FROM "refEntityId#07f902bf" WHERE this."idAttr" = "refEntityId#07f902bf"."refAttr") AS "attr" FROM "entityTypeId#c34894ba" AS this LEFT JOIN "refEntityId#07f902bf" AS "attr_filter1" ON (this."idAttr" = "attr_filter1"."refAttr") WHERE "attr_filter1"."refIdAttr" IN (?,?) ORDER BY "idAttr" ASC]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[ref0, ref1]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlSelectOneToManyMappedBy -->
        <test-method status="PASS" signature="getSqlSelectOneToManyMappedBy(org.molgenis.data.Query, java.lang.String, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlSelectOneToManyMappedBy" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getSqlSelectOneToManyMappedByProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sort=Sort [orders=[Order [attr=attr, direction=ASC]]]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SELECT this."idAttr", (SELECT array_agg("refIdAttr" ORDER BY "refIdAttr" ASC) FROM "refEntityId#07f902bf" WHERE this."idAttr" = "refEntityId#07f902bf"."refAttr") AS "attr" FROM "entityTypeId#c34894ba" AS this ORDER BY "attr" ASC, "idAttr" ASC]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlSelectOneToManyMappedBy -->
        <test-method status="PASS" signature="getSqlSelectXref()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlSelectXref" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlSelectXref -->
        <test-method status="PASS" signature="getSqlSelectXrefInversed()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlSelectXrefInversed" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlSelectXrefInversed -->
        <test-method status="PASS" signature="getSqlSetNotNull()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlSetNotNull" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlSetNotNull -->
        <test-method status="PASS" signature="getSqlSortNoSort()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlSortNoSort" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlSortNoSort -->
        <test-method status="PASS" signature="getSqlSortOnUnselectedMref()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlSortOnUnselectedMref" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlSortOnUnselectedMref -->
        <test-method status="PASS" signature="getSqlSortSortWithUniqueAttribute()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlSortSortWithUniqueAttribute" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlSortSortWithUniqueAttribute -->
        <test-method status="PASS" signature="getSqlWhere()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlWhere" duration-ms="5" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlWhere -->
        <test-method status="PASS" signature="getSqlSortSortWithoutUniqueAttribute()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest@288ca5f0]" name="getSqlSortSortWithoutUniqueAttribute" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSqlSortSortWithoutUniqueAttribute -->
      </class> <!-- org.molgenis.data.postgresql.PostgreSqlQueryGeneratorTest -->
      <class name="org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest">
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="353" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="PostgreSqlExceptionTranslator()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="PostgreSqlExceptionTranslator" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at java.util.Objects.requireNonNull(Objects.java:203)
	at org.molgenis.data.postgresql.PostgreSqlExceptionTranslator.<init>(PostgreSqlExceptionTranslator.java:49)
	at org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest.PostgreSqlExceptionTranslator(PostgreSqlExceptionTranslatorTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostgreSqlExceptionTranslator -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateCheckConstraintViolation()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateCheckConstraintViolation" duration-ms="35" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateCheckConstraintViolation -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateDependentObjectsStillExistMultipleDependentTables()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateDependentObjectsStillExistMultipleDependentTables" duration-ms="3" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateDependentObjectsStillExistMultipleDependentTables -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateDependentObjectsStillExistNoDoubleQuotes()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateDependentObjectsStillExistNoDoubleQuotes" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateDependentObjectsStillExistNoDoubleQuotes -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateDependentObjectsStillExistOneDependentTableMultipleDependencies()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateDependentObjectsStillExistOneDependentTableMultipleDependencies" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateDependentObjectsStillExistOneDependentTableMultipleDependencies -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateDependentObjectsStillExistOneDependentTableSingleDependency()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateDependentObjectsStillExistOneDependentTableSingleDependency" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateDependentObjectsStillExistOneDependentTableSingleDependency -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateForeignKeyViolation()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateForeignKeyViolation" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateForeignKeyViolation -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateForeignKeyViolationBadMessage()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateForeignKeyViolationBadMessage" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Error translating exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Error translating exception
	at org.molgenis.data.postgresql.PostgreSqlExceptionTranslator.translateForeignKeyViolation(PostgreSqlExceptionTranslator.java:326)
	at org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest.translateForeignKeyViolationBadMessage(PostgreSqlExceptionTranslatorTest.java:229)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
Caused by: org.postgresql.util.PSQLException: Mock for ServerErrorMessage, hashCode: 798696622
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateForeignKeyViolationBadMessage -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateForeignKeyViolationNotPresent()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateForeignKeyViolationNotPresent" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateForeignKeyViolationNotPresent -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateForeignKeyViolationStillReferenced()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateForeignKeyViolationStillReferenced" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateForeignKeyViolationStillReferenced -->
        <test-method status="PASS" signature="translateInvalidIntegerExceptionBoolean()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateInvalidIntegerExceptionBoolean" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateInvalidIntegerExceptionBoolean -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateInvalidIntegerExceptionDate()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateInvalidIntegerExceptionDate" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateInvalidIntegerExceptionDate -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateInvalidIntegerExceptionDateTime()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateInvalidIntegerExceptionDateTime" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateInvalidIntegerExceptionDateTime -->
        <test-method status="PASS" signature="translateInvalidIntegerExceptionDouble()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateInvalidIntegerExceptionDouble" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateInvalidIntegerExceptionDouble -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateInvalidIntegerExceptionInteger()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateInvalidIntegerExceptionInteger" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateInvalidIntegerExceptionInteger -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateNotNullViolation()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateNotNullViolation" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateNotNullViolation -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateNotNullViolationBadMessage()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateNotNullViolationBadMessage" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Error translating exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Error translating exception
	at org.molgenis.data.postgresql.PostgreSqlExceptionTranslator.translateNotNullViolation(PostgreSqlExceptionTranslator.java:300)
	at org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest.translateNotNullViolationBadMessage(PostgreSqlExceptionTranslatorTest.java:162)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
Caused by: org.postgresql.util.PSQLException: Mock for ServerErrorMessage, hashCode: 558530980
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateNotNullViolationBadMessage -->
        <test-method status="PASS" signature="translateNotNullViolationNoDoubleQuotes()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateNotNullViolationNoDoubleQuotes" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateNotNullViolationNoDoubleQuotes -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateReadonlyViolation()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateReadonlyViolation" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateReadonlyViolation -->
        <test-method status="PASS" signature="translateReadonlyViolationNoDoubleQuotes()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateReadonlyViolationNoDoubleQuotes" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateReadonlyViolationNoDoubleQuotes -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateUndefinedColumnException()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateUndefinedColumnException" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateUndefinedColumnException -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateUniqueKeyViolation()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateUniqueKeyViolation" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateUniqueKeyViolation -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateUniqueKeyViolationBadMessage()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateUniqueKeyViolationBadMessage" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Error translating exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Error translating exception
	at org.molgenis.data.postgresql.PostgreSqlExceptionTranslator.translateUniqueKeyViolation(PostgreSqlExceptionTranslator.java:431)
	at org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest.translateUniqueKeyViolationBadMessage(PostgreSqlExceptionTranslatorTest.java:307)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
Caused by: org.postgresql.util.PSQLException: Mock for ServerErrorMessage, hashCode: 1259398256
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateUniqueKeyViolationBadMessage -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateUniqueKeyViolationCompositeKey()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateUniqueKeyViolationCompositeKey" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateUniqueKeyViolationCompositeKey -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateUniqueKeyViolationDoubleQuotes()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateUniqueKeyViolationDoubleQuotes" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateUniqueKeyViolationDoubleQuotes -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateUniqueKeyViolationKeyIsDuplicated()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateUniqueKeyViolationKeyIsDuplicated" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateUniqueKeyViolationKeyIsDuplicated -->
        <test-method status="PASS" signature="translateUniqueKeyViolationKeyIsDuplicatedDoubleQuotes()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateUniqueKeyViolationKeyIsDuplicatedDoubleQuotes" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateUniqueKeyViolationKeyIsDuplicatedDoubleQuotes -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="translateValueTooLongViolation()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest@21079a12]" name="translateValueTooLongViolation" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- translateValueTooLongViolation -->
      </class> <!-- org.molgenis.data.postgresql.PostgreSqlExceptionTranslatorTest -->
      <class name="org.molgenis.data.postgresql.PostgreSqlUtilsTest">
        <test-method status="PASS" signature="setUpBeforeClass()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="setUpBeforeClass" is-config="true" duration-ms="148" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrBool]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrCategorical]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrBoolNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrCategoricalNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrCategoricalMref]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[id0, id1]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrDateNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrDate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2012-12-21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrCategoricalMrefNillable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrEmailNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.23]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrEmail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[my@mail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrDateTime]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1985-08-12T06:12:13Z]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrEnum]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[enum0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrDateTimeNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrDecimalNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrEnumNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrHtml]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<p>text</p>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrHtmlNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrFile]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrFileNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrIntNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrLong]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrMref]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[3, 4]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrScript]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[int x = 2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrHyperlink]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<p>text</p>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrLongNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrHyperlinkNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrInt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrString]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[str]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrMrefNillable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrStringNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrScript]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[int x = 2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrScriptNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrTextNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrText]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[text]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrXref]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrBool]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValue(org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValue" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValue" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrXrefNillable]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValue -->
        <test-method status="PASS" signature="getPostgreSqlValueCompound()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueCompound" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Illegal attribute type [COMPOUND]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Illegal attribute type [COMPOUND]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlValue(PostgreSqlUtils.java:81)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueCompound(PostgreSqlUtilsTest.java:345)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueCompound -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrBoolNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[categoricalValue]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrCategorical]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[id0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrDateNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrCategoricalNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[id0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrCategoricalMref]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[id0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1985-08-12T06:12:13Z]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrDateTime]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1985-08-12T06:12:13Z]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2012-12-21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrDate]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2012-12-21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrCategoricalMrefNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[categoricalMrefValue0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrCategoricalMref]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[id0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[id0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrCategorical]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[id0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DATE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrEnum]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[DATE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrDateTimeNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrEmailNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[my@mail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrEmail]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[my@mail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[enum0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrEnum]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[enum0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrDecimal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.23]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrDecimalNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrFileNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrEnumNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[<p>text</p>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrHyperlink]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[<p>text</p>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fileValue]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrFile]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[id0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrHtmlNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[<p>text</p>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrHtml]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[<p>text</p>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrHyperlinkNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[id0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrFile]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[id0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrInt]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mrefValue0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrMref]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrLong]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[str]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrString]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[str]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrLongNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrMrefNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[int x = 2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrScriptNillable]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int x = 2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrMref]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[int x = 2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrScript]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[int x = 2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrScriptNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrIntNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrXrefNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrTextNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrStringNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrText]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[text]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[xrefValue]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrXref]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrXref]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQuery(java.lang.Object, org.molgenis.data.meta.model.Attribute, java.lang.Object)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQuery" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQuery" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrXrefNillable]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQuery -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryCompound()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryCompound" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Illegal attribute type [COMPOUND]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Illegal attribute type [COMPOUND]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:214)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryCompound(PostgreSqlUtilsTest.java:393)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryCompound -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrBool]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrBool] query value is of type [Object$MockitoMock$639698896] instead of [Boolean]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrBool] query value is of type [Object$MockitoMock$639698896] instead of [Boolean]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:108)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrDate]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrDate] query value is of type [Object$MockitoMock$639698896] instead of [LocalDate]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrDate] query value is of type [Object$MockitoMock$639698896] instead of [LocalDate]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:136)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrCategoricalMref]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [refStringId] query value is of type [Object$MockitoMock$639698896] instead of [String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [refStringId] query value is of type [Object$MockitoMock$639698896] instead of [String]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:193)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrCategorical]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [refStringId] query value is of type [Object$MockitoMock$639698896] instead of [String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [refStringId] query value is of type [Object$MockitoMock$639698896] instead of [String]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:193)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[valueOfWrongType, valueOfWrongType]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrCategoricalMref]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [refStringId] query value is of type [ArrayList] instead of [String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [refStringId] query value is of type [ArrayList] instead of [String]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:193)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrDecimal]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrDecimal] query value is of type [Object$MockitoMock$639698896] instead of [Double]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrDecimal] query value is of type [Object$MockitoMock$639698896] instead of [Double]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:156)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrEmail]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrEmail] query value is of type [Object$MockitoMock$639698896] instead of [String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrEmail] query value is of type [Object$MockitoMock$639698896] instead of [String]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:193)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrDateTime]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrDateTime] query value is of type [Object$MockitoMock$639698896] instead of [Instant]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrDateTime] query value is of type [Object$MockitoMock$639698896] instead of [Instant]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:148)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrFile]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [id] query value is of type [Object$MockitoMock$639698896] instead of [String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [id] query value is of type [Object$MockitoMock$639698896] instead of [String]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:193)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrEnum]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrEnum] query value is of type [Object$MockitoMock$639698896] instead of [String] or [Enum]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrEnum] query value is of type [Object$MockitoMock$639698896] instead of [String] or [Enum]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:175)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrInt]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrInt] query value is of type [Object$MockitoMock$639698896] instead of [Integer]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrInt] query value is of type [Object$MockitoMock$639698896] instead of [Integer]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:201)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrFile]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [id] query value is of type [Object$MockitoMock$639698896] instead of [String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [id] query value is of type [Object$MockitoMock$639698896] instead of [String]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:193)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrHyperlink]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrHyperlink] query value is of type [Object$MockitoMock$639698896] instead of [String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrHyperlink] query value is of type [Object$MockitoMock$639698896] instead of [String]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:193)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrHtml]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrHtml] query value is of type [Object$MockitoMock$639698896] instead of [String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrHtml] query value is of type [Object$MockitoMock$639698896] instead of [String]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:193)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[valueOfWrongType, valueOfWrongType]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrMref]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [refIntId] query value is of type [ArrayList] instead of [Integer]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [refIntId] query value is of type [ArrayList] instead of [Integer]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:201)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrLong]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrLong] query value is of type [Object$MockitoMock$639698896] instead of [Long]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrLong] query value is of type [Object$MockitoMock$639698896] instead of [Long]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:209)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrScript]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrScript] query value is of type [Object$MockitoMock$639698896] instead of [String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrScript] query value is of type [Object$MockitoMock$639698896] instead of [String]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:193)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrMref]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [refIntId] query value is of type [Object$MockitoMock$639698896] instead of [Integer]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [refIntId] query value is of type [Object$MockitoMock$639698896] instead of [Integer]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:201)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrString]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrString] query value is of type [Object$MockitoMock$639698896] instead of [String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrString] query value is of type [Object$MockitoMock$639698896] instead of [String]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:193)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrXref]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [refIntId] query value is of type [Object$MockitoMock$639698896] instead of [Integer]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [refIntId] query value is of type [Object$MockitoMock$639698896] instead of [Integer]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:201)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrScriptNillable]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrScriptNillable] query value is of type [Object$MockitoMock$639698896] instead of [String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrScriptNillable] query value is of type [Object$MockitoMock$639698896] instead of [String]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:193)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrText]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [attrText] query value is of type [Object$MockitoMock$639698896] instead of [String]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [attrText] query value is of type [Object$MockitoMock$639698896] instead of [String]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:193)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
        <test-method status="PASS" signature="getPostgreSqlValueQueryException(java.lang.Object, org.molgenis.data.meta.model.Attribute)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlUtilsTest@1daf3b44]" name="getPostgreSqlValueQueryException" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="getPostgreSqlValueQueryException" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[valueOfWrongType]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attrXref]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Attribute [refIntId] query value is of type [Object$MockitoMock$639698896] instead of [Integer]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Attribute [refIntId] query value is of type [Object$MockitoMock$639698896] instead of [Integer]
	at org.molgenis.data.postgresql.PostgreSqlUtils.getPostgreSqlQueryValue(PostgreSqlUtils.java:201)
	at org.molgenis.data.postgresql.PostgreSqlUtilsTest.getPostgreSqlValueQueryException(PostgreSqlUtilsTest.java:421)
	at sun.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostgreSqlValueQueryException -->
      </class> <!-- org.molgenis.data.postgresql.PostgreSqlUtilsTest -->
      <class name="org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest">
        <test-method status="PASS" signature="testGenerateIdAttribute(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="testGenerateIdAttribute" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="generateIdAttributeTypeProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abcdef]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myAttr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myAttr]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGenerateIdAttribute(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="testGenerateIdAttribute" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="generateIdAttributeTypeProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fabcde]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myAttr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myAttr]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGenerateIdAttribute(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="testGenerateIdAttribute" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="generateIdAttributeTypeProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fabcde]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[m,y^At&t.r]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myAttr#9c62ca2c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdAttribute -->
        <test-method status="PASS" signature="testGenerateIdAttribute(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="testGenerateIdAttribute" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="generateIdAttributeTypeProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fabcde]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[my_Attr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[my_Attr]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGenerateIdAttribute(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="testGenerateIdAttribute" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="generateIdAttributeTypeProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fabcde]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myAttrmyAttrmyAttrmyAttrmyAttrmyAttr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myAttrmyAttrmyAttrmyAtt#9c62ca2c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdAttribute -->
        <test-method status="PASS" signature="testGenerateIdEntityType(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="testGenerateIdEntityType" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="generateIdEntityTypeProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[myEntity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myEntity#061f7aef]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdEntityType -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGenerateIdEntityType(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="testGenerateIdEntityType" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="generateIdEntityTypeProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[myEntitymyEntitymyEntitymyEntity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myEntitymyEntitymyEntit#6e9381ec]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdEntityType -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGenerateIdEntityType(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="testGenerateIdEntityType" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="generateIdEntityTypeProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[my_Entity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[my_Entity#4581e195]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdEntityType -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGenerateIdEntityType(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="testGenerateIdEntityType" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="generateIdEntityTypeProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[my|En%ti-ty/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myEntity#7152ce38]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdEntityType -->
        <test-method status="PASS" signature="testTableIdGenerator()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="testTableIdGenerator" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Max identifier byte length must be >= 10]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Max identifier byte length must be >= 10
	at org.molgenis.data.postgresql.PostgreSqlIdGenerator.<init>(PostgreSqlIdGenerator.java:28)
	at org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest.testTableIdGenerator(PostgreSqlIdGeneratorTest.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTableIdGenerator -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest@216e0771]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
      </class> <!-- org.molgenis.data.postgresql.PostgreSqlIdGeneratorTest -->
      <class name="org.molgenis.data.postgresql.PostgreSqlRepositoryTest">
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="setUpBeforeMethod" is-config="true" duration-ms="16" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="countQueryOneToManyEquals()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="countQueryOneToManyEquals" duration-ms="3" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- countQueryOneToManyEquals -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="findAllQueryOneToManyEquals()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="findAllQueryOneToManyEquals" duration-ms="28" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllQueryOneToManyEquals -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testAddEntityNull()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="testAddEntityNull" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[PostgreSqlRepository.add() failed: entity was null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: PostgreSqlRepository.add() failed: entity was null
	at org.molgenis.data.postgresql.PostgreSqlRepository.add(PostgreSqlRepository.java:242)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryTest.testAddEntityNull(PostgreSqlRepositoryTest.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEntityNull -->
        <test-method status="PASS" signature="testMrefIdRowCallbackHandlerInvalidType(org.molgenis.data.meta.AttributeType, org.molgenis.data.meta.AttributeType)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="testMrefIdRowCallbackHandlerInvalidType" duration-ms="129" started-at="2018-06-01T13:20:29Z" data-provider="provideInvalidMrefIds" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[XREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[STRING]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.util.UnexpectedEnumException">
            <message>
              <![CDATA[Unexpected enum constant 'XREF' for type 'AttributeType']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.util.UnexpectedEnumException: Unexpected enum constant 'XREF' for type 'AttributeType'
	at org.molgenis.data.postgresql.PostgreSqlRepository.lambda$getJunctionTableRowCallbackHandler$2(PostgreSqlRepository.java:377)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryTest.testMrefIdRowCallbackHandlerInvalidType(PostgreSqlRepositoryTest.java:292)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.util.UnexpectedEnumException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMrefIdRowCallbackHandlerInvalidType -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testMrefIdRowCallbackHandlerInvalidType(org.molgenis.data.meta.AttributeType, org.molgenis.data.meta.AttributeType)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="testMrefIdRowCallbackHandlerInvalidType" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="provideInvalidMrefIds" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[INT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MREF]]>
              </value>
            </param>
          </params>
          <exception class="org.molgenis.util.UnexpectedEnumException">
            <message>
              <![CDATA[Unexpected enum constant 'MREF' for type 'AttributeType']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.util.UnexpectedEnumException: Unexpected enum constant 'MREF' for type 'AttributeType'
	at org.molgenis.data.postgresql.PostgreSqlRepository.lambda$getJunctionTableRowCallbackHandler$2(PostgreSqlRepository.java:395)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryTest.testMrefIdRowCallbackHandlerInvalidType(PostgreSqlRepositoryTest.java:292)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.util.UnexpectedEnumException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMrefIdRowCallbackHandlerInvalidType -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testMrefIdRowCallbackHandlerString(org.molgenis.data.meta.AttributeType, org.molgenis.data.meta.AttributeType, java.sql.ResultSet, java.util.Map)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="testMrefIdRowCallbackHandlerString" duration-ms="7" started-at="2018-06-01T13:20:29Z" data-provider="provideValidMrefIds" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[STRING]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[STRING]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mock for ResultSet, hashCode: 720442578]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{idValue=[refValue]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMrefIdRowCallbackHandlerString -->
        <test-method status="PASS" signature="testMrefIdRowCallbackHandlerString(org.molgenis.data.meta.AttributeType, org.molgenis.data.meta.AttributeType, java.sql.ResultSet, java.util.Map)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="testMrefIdRowCallbackHandlerString" duration-ms="1" started-at="2018-06-01T13:20:29Z" data-provider="provideValidMrefIds" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[INT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[INT]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mock for ResultSet, hashCode: 1607833149]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{1=[2]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMrefIdRowCallbackHandlerString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testMrefIdRowCallbackHandlerString(org.molgenis.data.meta.AttributeType, org.molgenis.data.meta.AttributeType, java.sql.ResultSet, java.util.Map)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="testMrefIdRowCallbackHandlerString" duration-ms="0" started-at="2018-06-01T13:20:29Z" data-provider="provideValidMrefIds" finished-at="2018-06-01T13:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LONG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[LONG]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mock for ResultSet, hashCode: 1411838739]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{1=[2]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMrefIdRowCallbackHandlerString -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testMrefValueTooLong()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="testMrefValueTooLong" duration-ms="8" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <exception class="org.molgenis.data.validation.MolgenisValidationException">
            <message>
              <![CDATA[One of the mref values in entity type [test_entity] attribute [mref_attr] is too long.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.validation.MolgenisValidationException: One of the mref values in entity type [test_entity] attribute [mref_attr] is too long.
	at org.molgenis.data.postgresql.PostgreSqlRepository.addMrefs(PostgreSqlRepository.java:607)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryTest.testMrefValueTooLong(PostgreSqlRepositoryTest.java:266)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.validation.MolgenisValidationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMrefValueTooLong -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testUpdateEntitiesExist()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="testUpdateEntitiesExist" duration-ms="5" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateEntitiesExist -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testUpdateEntityDoesNotExist()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="testUpdateEntityDoesNotExist" duration-ms="15" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <exception class="org.molgenis.data.validation.MolgenisValidationException">
            <message>
              <![CDATA[Cannot update [entity] with id [id1] because it does not exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.validation.MolgenisValidationException: Cannot update [entity] with id [id1] because it does not exist
	at org.molgenis.data.postgresql.PostgreSqlRepository.verifyUpdate(PostgreSqlRepository.java:569)
	at org.molgenis.data.postgresql.PostgreSqlRepository.lambda$updateBatching$6(PostgreSqlRepository.java:535)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at org.molgenis.data.postgresql.PostgreSqlRepository.updateBatching(PostgreSqlRepository.java:523)
	at org.molgenis.data.postgresql.PostgreSqlRepository.update(PostgreSqlRepository.java:183)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryTest.testUpdateEntityDoesNotExist(PostgreSqlRepositoryTest.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.validation.MolgenisValidationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateEntityDoesNotExist -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryTest@44e93c1f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.molgenis.data.postgresql.PostgreSqlRepositoryTest -->
      <class name="org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest">
        <test-method status="PASS" signature="testGetCheckConstraintName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetCheckConstraintName" duration-ms="1389" started-at="2018-06-01T13:20:26Z" data-provider="getCheckConstraintNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["entity#6844280e_attr_chk"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCheckConstraintName -->
        <test-method status="PASS" signature="testGetCheckConstraintName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetCheckConstraintName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getCheckConstraintNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["thisisa_Very_very_ve#d9b1efe8_attr_chk"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCheckConstraintName -->
        <test-method status="PASS" signature="testGetCheckConstraintName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetCheckConstraintName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getCheckConstraintNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["entity#6844280e_thisisa_Very_very_ve#69363cb7_chk"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCheckConstraintName -->
        <test-method status="PASS" signature="testGetCheckConstraintName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetCheckConstraintName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getCheckConstraintNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["thisisa_Very_very_ve#d9b1efe8_thisisa_Very_very_ve#69363cb7_chk"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCheckConstraintName -->
        <test-method status="PASS" signature="testGetColumnName(java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetColumnName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getColumnNameBooleanProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[attrName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumnName -->
        <test-method status="PASS" signature="testGetColumnName(java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetColumnName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getColumnNameBooleanProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr-name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[attrname#69363cb7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumnName -->
        <test-method status="PASS" signature="testGetColumnName(java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetColumnName" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getColumnNameBooleanProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[thisisa_Very_very_very_very_very_very_very_long_attr_n#69363cb7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumnName -->
        <test-method status="PASS" signature="testGetColumnName(java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetColumnName" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getColumnNameBooleanProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["attrName"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumnName -->
        <test-method status="PASS" signature="testGetColumnName(java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetColumnName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getColumnNameBooleanProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr-name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["attrname#69363cb7"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumnName -->
        <test-method status="PASS" signature="testGetColumnName(java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetColumnName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getColumnNameBooleanProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["thisisa_Very_very_very_very_very_very_very_long_attr_n#69363cb7"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumnName -->
        <test-method status="PASS" signature="testGetColumnName(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetColumnName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getColumnNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["attrName"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumnName -->
        <test-method status="PASS" signature="testGetColumnName(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetColumnName" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getColumnNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr-name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["attrname#69363cb7"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumnName -->
        <test-method status="PASS" signature="testGetColumnName(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetColumnName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getColumnNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["thisisa_Very_very_very_very_very_very_very_long_attr_n#69363cb7"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumnName -->
        <test-method status="PASS" signature="testGetFilterColumnName(java.lang.String, int, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetFilterColumnName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getFilterColumnNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["attrName_filter0"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFilterColumnName -->
        <test-method status="PASS" signature="testGetFilterColumnName(java.lang.String, int, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetFilterColumnName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getFilterColumnNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["thisisa_Very_very_very_very_very_very_very_lon#69363cb7_filter0"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFilterColumnName -->
        <test-method status="PASS" signature="testGetFilterColumnName(java.lang.String, int, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetFilterColumnName" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getFilterColumnNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr-name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["attrname#69363cb7_filter1"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFilterColumnName -->
        <test-method status="PASS" signature="testGetFilterColumnName(java.lang.String, int, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetFilterColumnName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getFilterColumnNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["thisisa_Very_very_very_very_very_very_very_l#69363cb7_filter123"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFilterColumnName -->
        <test-method status="PASS" signature="testGetForeignKeyName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetForeignKeyName" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getForeignKeyNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["entity#6844280e_attr_fkey"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetForeignKeyName -->
        <test-method status="PASS" signature="testGetForeignKeyName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetForeignKeyName" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getForeignKeyNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["thisisa_Very_very_v#d9b1efe8_attr_fkey"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetForeignKeyName -->
        <test-method status="PASS" signature="testGetForeignKeyName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetForeignKeyName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getForeignKeyNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["entity#6844280e_thisisa_Very_very_v#69363cb7_fkey"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetForeignKeyName -->
        <test-method status="PASS" signature="testGetForeignKeyName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetForeignKeyName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getForeignKeyNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["thisisa_Very_very_v#d9b1efe8_thisisa_Very_very_v#69363cb7_fkey"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetForeignKeyName -->
        <test-method status="PASS" signature="testGetFunctionValidateUpdateName(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetFunctionValidateUpdateName" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getFunctionValidateUpdateNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entityTypeId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["validate_update_entityTypeId#c34894ba"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFunctionValidateUpdateName -->
        <test-method status="PASS" signature="testGetFunctionValidateUpdateName(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetFunctionValidateUpdateName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getFunctionValidateUpdateNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["validate_update_thisisa_Very_very_very_very_very_very_#d9b1efe8"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFunctionValidateUpdateName -->
        <test-method status="PASS" signature="testGetJunctionTableIndexName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetJunctionTableIndexName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getJunctionTableIndexNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[idxAttr]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA["entity#6844280e_attr_idxAttr_idx"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetJunctionTableIndexName -->
        <test-method status="PASS" signature="testGetJunctionTableIndexName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetJunctionTableIndexName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getJunctionTableIndexNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[idxAttr]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA["thisisa_Ve#d9b1efe8_attr_idxAttr_idx"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetJunctionTableIndexName -->
        <test-method status="PASS" signature="testGetJunctionTableIndexName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetJunctionTableIndexName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getJunctionTableIndexNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[idxAttr]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA["entity#6844280e_thisisa_Ve#69363cb7_idxAttr_idx"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetJunctionTableIndexName -->
        <test-method status="PASS" signature="testGetJunctionTableIndexName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetJunctionTableIndexName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getJunctionTableIndexNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[idxAttr]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA["thisisa_Ve#d9b1efe8_thisisa_Ve#69363cb7_idxAttr_idx"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetJunctionTableIndexName -->
        <test-method status="PASS" signature="testGetJunctionTableIndexName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetJunctionTableIndexName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getJunctionTableIndexNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_idxAttr_nam3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA["thisisa_Ve#d9b1efe8_thisisa_Ve#69363cb7_thisisa_Ve#65070eab_idx"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetJunctionTableIndexName -->
        <test-method status="PASS" signature="testGetJunctionTableName(java.lang.String, java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetJunctionTableName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getJunctionTableNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA["thisisa_Very_very_very#d9b1efe8_attr"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetJunctionTableName -->
        <test-method status="PASS" signature="testGetJunctionTableName(java.lang.String, java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetJunctionTableName" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getJunctionTableNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA["entity#6844280e_attr"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetJunctionTableName -->
        <test-method status="PASS" signature="testGetJunctionTableName(java.lang.String, java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetJunctionTableName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getJunctionTableNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA["entity#6844280e_thisisa_Very_very_very#69363cb7"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetJunctionTableName -->
        <test-method status="PASS" signature="testGetJunctionTableName(java.lang.String, java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetJunctionTableName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getJunctionTableNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA["thisisa_Very_very_very#d9b1efe8_thisisa_Very_very_very#69363cb7"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetJunctionTableName -->
        <test-method status="PASS" signature="testGetJunctionTableName(java.lang.String, java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetJunctionTableName" duration-ms="2" started-at="2018-06-01T13:20:27Z" data-provider="getJunctionTableNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[thisisa_Very_very_very#d9b1efe8_thisisa_Very_very_very#69363cb7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetJunctionTableName -->
        <test-method status="PASS" signature="testGetJunctionTableOrderColumnName()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetJunctionTableOrderColumnName" duration-ms="0" started-at="2018-06-01T13:20:27Z" finished-at="2018-06-01T13:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetJunctionTableOrderColumnName -->
        <test-method status="PASS" signature="testGetPrimaryKeyName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetPrimaryKeyName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getPrimaryKeyNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["thisisa_Very_very_v#d9b1efe8_attr_pkey"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPrimaryKeyName -->
        <test-method status="PASS" signature="testGetPrimaryKeyName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetPrimaryKeyName" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getPrimaryKeyNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["entity#6844280e_attr_pkey"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPrimaryKeyName -->
        <test-method status="PASS" signature="testGetPrimaryKeyName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetPrimaryKeyName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getPrimaryKeyNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["entity#6844280e_thisisa_Very_very_v#69363cb7_pkey"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPrimaryKeyName -->
        <test-method status="PASS" signature="testGetPrimaryKeyName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetPrimaryKeyName" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getPrimaryKeyNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["thisisa_Very_very_v#d9b1efe8_thisisa_Very_very_v#69363cb7_pkey"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPrimaryKeyName -->
        <test-method status="PASS" signature="testGetTableNameEntityType(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetTableNameEntityType" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getTableNameEntityTypeProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["thisisa_Very_very_very_very_very_very_very_long_s1mpl3#d9b1efe8"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTableNameEntityType -->
        <test-method status="PASS" signature="testGetTableNameEntityType(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetTableNameEntityType" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getTableNameEntityTypeProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entityTypeId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["entityTypeId#c34894ba"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTableNameEntityType -->
        <test-method status="PASS" signature="testGetTableNameEntityTypeBoolean(java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetTableNameEntityTypeBoolean" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getTableNameEntityTypeBooleanProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entityTypeId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[entityTypeId#c34894ba]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTableNameEntityTypeBoolean -->
        <test-method status="PASS" signature="testGetTableNameEntityTypeBoolean(java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetTableNameEntityTypeBoolean" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getTableNameEntityTypeBooleanProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entityTypeId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["entityTypeId#c34894ba"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTableNameEntityTypeBoolean -->
        <test-method status="PASS" signature="testGetTableNameEntityTypeBoolean(java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetTableNameEntityTypeBoolean" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getTableNameEntityTypeBooleanProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["thisisa_Very_very_very_very_very_very_very_long_s1mpl3#d9b1efe8"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTableNameEntityTypeBoolean -->
        <test-method status="PASS" signature="testGetTableNameEntityTypeBoolean(java.lang.String, boolean, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetTableNameEntityTypeBoolean" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getTableNameEntityTypeBooleanProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[thisisa_Very_very_very_very_very_very_very_long_s1mpl3#d9b1efe8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTableNameEntityTypeBoolean -->
        <test-method status="PASS" signature="testGetUniqueKeyName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetUniqueKeyName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getUniqueKeyNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["entity#6844280e_attr_key"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUniqueKeyName -->
        <test-method status="PASS" signature="testGetUniqueKeyName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetUniqueKeyName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getUniqueKeyNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[attr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["thisisa_Very_very_ve#d9b1efe8_attr_key"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUniqueKeyName -->
        <test-method status="PASS" signature="testGetUniqueKeyName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetUniqueKeyName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getUniqueKeyNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["entity#6844280e_thisisa_Very_very_ve#69363cb7_key"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUniqueKeyName -->
        <test-method status="PASS" signature="testGetUniqueKeyName(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetUniqueKeyName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getUniqueKeyNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_attr_nam3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA["thisisa_Very_very_ve#d9b1efe8_thisisa_Very_very_ve#69363cb7_key"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUniqueKeyName -->
        <test-method status="PASS" signature="testGetUpdateTriggerName(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetUpdateTriggerName" duration-ms="0" started-at="2018-06-01T13:20:27Z" data-provider="getUpdateTriggerNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entityTypeId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update_trigger_entityTypeId#c34894ba"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUpdateTriggerName -->
        <test-method status="PASS" signature="testGetUpdateTriggerName(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest@42373389]" name="testGetUpdateTriggerName" duration-ms="1" started-at="2018-06-01T13:20:27Z" data-provider="getUpdateTriggerNameProvider" finished-at="2018-06-01T13:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[this$is-a_Very_very_very_very_very_very_very_long_s1mpl3_nam3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update_trigger_thisisa_Very_very_very_very_very_very_v#d9b1efe8"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUpdateTriggerName -->
      </class> <!-- org.molgenis.data.postgresql.PostgreSqlNameGeneratorTest -->
      <class name="org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest">
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="382" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="addAttribute()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="addAttribute" duration-ms="22" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="addAttributeAbstractEntity()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="addAttributeAbstractEntity" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Cannot add attribute [attr] to abstract entity type [root].]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Cannot add attribute [attr] to abstract entity type [root].
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.addAttribute(PostgreSqlRepositoryCollection.java:189)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest.addAttributeAbstractEntity(PostgreSqlRepositoryCollectionTest.java:594)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributeAbstractEntity -->
        <test-method status="PASS" signature="addAttributeAlreadyExists()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="addAttributeAlreadyExists" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Adding attribute operation failed. Attribute already exists [attr]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Adding attribute operation failed. Attribute already exists [attr]
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.addAttribute(PostgreSqlRepositoryCollection.java:195)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest.addAttributeAlreadyExists(PostgreSqlRepositoryCollectionTest.java:663)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributeAlreadyExists -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="addAttributeCompound()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="addAttributeCompound" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributeCompound -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="addAttributeDefaultValueString()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="addAttributeDefaultValueString" duration-ms="5" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributeDefaultValueString -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="addAttributeOneToManyMappedBy()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="addAttributeOneToManyMappedBy" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributeOneToManyMappedBy -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="addAttributeUnique()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="addAttributeUnique" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributeUnique -->
        <test-method status="PASS" signature="addAttributeWithExpression()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="addAttributeWithExpression" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributeWithExpression -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="deleteAttribute()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="deleteAttribute" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAttribute -->
        <test-method status="PASS" signature="deleteAttributeAbstractEntity()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="deleteAttributeAbstractEntity" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Cannot delete attribute [attr] from abstract entity type [root].]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Cannot delete attribute [attr] from abstract entity type [root].
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.deleteAttribute(PostgreSqlRepositoryCollection.java:234)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest.deleteAttributeAbstractEntity(PostgreSqlRepositoryCollectionTest.java:733)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAttributeAbstractEntity -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="deleteAttributeMref()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="deleteAttributeMref" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAttributeMref -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="deleteAttributeOneToManyMappedBy()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="deleteAttributeOneToManyMappedBy" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAttributeOneToManyMappedBy -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="deleteAttributeUnknownAttribute()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="deleteAttributeUnknownAttribute" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <exception class="org.molgenis.data.UnknownAttributeException">
            <message>
              <![CDATA[type:entity attribute:attr]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.UnknownAttributeException: FAILED TO FORMAT LOCALIZED MESSAGE FOR ERROR CODE D04.%nFallback message: type:entity attribute:attr
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.deleteAttribute(PostgreSqlRepositoryCollection.java:239)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest.deleteAttributeUnknownAttribute(PostgreSqlRepositoryCollectionTest.java:755)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.UnknownAttributeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAttributeUnknownAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="deleteAttributeWithExpression()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="deleteAttributeWithExpression" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAttributeWithExpression -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="deleteRepositoryWithReadOnlyAttribute()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="deleteRepositoryWithReadOnlyAttribute" duration-ms="6" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteRepositoryWithReadOnlyAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="deleteRepositoryWithoutReadOnlyAttribute()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="deleteRepositoryWithoutReadOnlyAttribute" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteRepositoryWithoutReadOnlyAttribute -->
        <test-method status="PASS" signature="updateAttribute()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttribute" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeAbstractEntity()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeAbstractEntity" duration-ms="42" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Cannot update attribute [attr] for abstract entity type [root].]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Cannot update attribute [attr] for abstract entity type [root].
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.updateAttribute(PostgreSqlRepositoryCollection.java:206)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest.updateAttributeAbstractEntity(PostgreSqlRepositoryCollectionTest.java:422)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeAbstractEntity -->
        <test-method status="PASS" signature="updateAttributeCompoundAfter()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeCompoundAfter" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeCompoundAfter -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeCompoundBefore()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeCompoundBefore" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeCompoundBefore -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeCompoundBeforeAfter()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeCompoundBeforeAfter" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeCompoundBeforeAfter -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeDataTypeToDataType()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeDataTypeToDataType" duration-ms="3" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeDataTypeToDataType -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeDataTypeToDataTypeIdAttr()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeDataTypeToDataTypeIdAttr" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Data type of entity [entity] attribute [attr] cannot be modified, because [attr] is an ID attribute.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Data type of entity [entity] attribute [attr] cannot be modified, because [attr] is an ID attribute.
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.updateDataType(PostgreSqlRepositoryCollection.java:469)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.updateColumn(PostgreSqlRepositoryCollection.java:359)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.updateAttribute(PostgreSqlRepositoryCollection.java:224)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest.updateAttributeDataTypeToDataTypeIdAttr(PostgreSqlRepositoryCollectionTest.java:269)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeDataTypeToDataTypeIdAttr -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeDataTypeToSingleRefDataType()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeDataTypeToSingleRefDataType" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeDataTypeToSingleRefDataType -->
        <test-method status="PASS" signature="updateAttributeMultiRefDataTypeToMultiRefDataType()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeMultiRefDataTypeToMultiRefDataType" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeMultiRefDataTypeToMultiRefDataType -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeNillableToNotNillable()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeNillableToNotNillable" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeNillableToNotNillable -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeNotNillableToNillable()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeNotNillableToNillable" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeNotNillableToNillable -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeNotNillableToNillableIdAttr()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeNotNillableToNillableIdAttr" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[ID attribute [attr] of entity [entity] cannot be nullable]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: ID attribute [attr] of entity [entity] cannot be nullable
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.updateNillable(PostgreSqlRepositoryCollection.java:617)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.updateColumn(PostgreSqlRepositoryCollection.java:341)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.updateAttribute(PostgreSqlRepositoryCollection.java:224)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest.updateAttributeNotNillableToNillableIdAttr(PostgreSqlRepositoryCollectionTest.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeNotNillableToNillableIdAttr -->
        <test-method status="PASS" signature="updateAttributeNotUniqueToUnique()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeNotUniqueToUnique" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeNotUniqueToUnique -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeRefEntityMref()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeRefEntityMref" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[Updating entity [entity] attribute [attr] referenced entity from [refEntity0] to [refEntity1] not allowed for type [MREF]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: Updating entity [entity] attribute [attr] referenced entity from [refEntity0] to [refEntity1] not allowed for type [MREF]
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.updateRefEntity(PostgreSqlRepositoryCollection.java:403)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.updateColumn(PostgreSqlRepositoryCollection.java:368)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.updateAttribute(PostgreSqlRepositoryCollection.java:224)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest.updateAttributeRefEntityMref(PostgreSqlRepositoryCollectionTest.java:532)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeRefEntityMref -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeRefEntityXref()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeRefEntityXref" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeRefEntityXref -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeRefEntityXrefDifferentIdAttrType()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeRefEntityXrefDifferentIdAttrType" duration-ms="2" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeRefEntityXrefDifferentIdAttrType -->
        <test-method status="PASS" signature="updateAttributeSingleRefDataTypeToDataType()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeSingleRefDataTypeToDataType" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeSingleRefDataTypeToDataType -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeSingleRefDataTypeToSingleRefDataType()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeSingleRefDataTypeToSingleRefDataType" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeSingleRefDataTypeToSingleRefDataType -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeUniqueToNotUnique()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeUniqueToNotUnique" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeUniqueToNotUnique -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeUniqueToNotUniqueIdAttr()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeUniqueToNotUniqueIdAttr" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <exception class="org.molgenis.data.MolgenisDataException">
            <message>
              <![CDATA[ID attribute [attr] of entity [entity] must be unique]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisDataException: ID attribute [attr] of entity [entity] must be unique
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.updateUnique(PostgreSqlRepositoryCollection.java:515)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.updateColumn(PostgreSqlRepositoryCollection.java:347)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollection.updateAttribute(PostgreSqlRepositoryCollection.java:224)
	at org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest.updateAttributeUniqueToNotUniqueIdAttr(PostgreSqlRepositoryCollectionTest.java:142)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisDataException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeUniqueToNotUniqueIdAttr -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeWithExpressionAfter()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeWithExpressionAfter" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeWithExpressionAfter -->
        <test-method status="PASS" signature="updateAttributeWithExpressionBefore()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeWithExpressionBefore" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeWithExpressionBefore -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="updateAttributeWithExpressionBeforeAfter()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest@35267fd4]" name="updateAttributeWithExpressionBeforeAfter" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAttributeWithExpressionBeforeAfter -->
      </class> <!-- org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionTest -->
      <class name="org.molgenis.data.postgresql.PostgreSqlEntityFactoryTest">
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlEntityFactoryTest@67c5ac52]" name="setUpBeforeMethod" is-config="true" duration-ms="9" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createRowMapperOneToMany()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlEntityFactoryTest@67c5ac52]" name="createRowMapperOneToMany" duration-ms="13" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRowMapperOneToMany -->
        <test-method status="PASS" signature="createRowMapperOneToManyIntegerIds()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlEntityFactoryTest@67c5ac52]" name="createRowMapperOneToManyIntegerIds" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRowMapperOneToManyIntegerIds -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlEntityFactoryTest@67c5ac52]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createRowMapperXref()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlEntityFactoryTest@67c5ac52]" name="createRowMapperXref" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRowMapperXref -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlEntityFactoryTest@67c5ac52]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
      </class> <!-- org.molgenis.data.postgresql.PostgreSqlEntityFactoryTest -->
      <class name="org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest">
        <test-method status="PASS" signature="getJunctionTableAttributes()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getJunctionTableAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getJunctionTableAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_BOOL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_BOOL]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_BOOL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_CATEGORICAL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_CATEGORICAL]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_CATEGORICAL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_CATEGORICAL_MREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_CATEGORICAL_MREF]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_CATEGORICAL_MREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_COMPOUND]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_COMPOUND]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_COMPOUND]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_DATE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_DATE]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_DATE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_DATE_TIME]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_DATE_TIME]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_DATE_TIME]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_DECIMAL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_DECIMAL]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_DECIMAL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_EMAIL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_EMAIL]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_EMAIL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_FILE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_FILE]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_ENUM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_ENUM]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_ENUM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_FILE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_HTML]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_HTML]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_HTML]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_HYPERLINK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_HYPERLINK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_HYPERLINK]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_INT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_INT]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_INT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_LONG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_MREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_MREF]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_LONG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_LONG]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_ONE_TO_MANY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_ONE_TO_MANY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_ONE_TO_MANY]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_MREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_STRING]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_STRING]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_SCRIPT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_SCRIPT]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_SCRIPT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_STRING]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_TEXT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_TEXT]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_TEXT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attrWithExpression_XREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getPersistedAttributes(org.molgenis.data.meta.model.Attribute, java.util.List)[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getPersistedAttributes" duration-ms="0" started-at="2018-06-01T13:20:28Z" data-provider="getPersistedAttributesProvider" finished-at="2018-06-01T13:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[attr_XREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[attr_XREF]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersistedAttributes -->
        <test-method status="PASS" signature="getTableAttributes()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="getTableAttributes" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTableAttributes -->
        <test-method status="PASS" signature="isTableAttributeMrefAttr()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="isTableAttributeMrefAttr" duration-ms="1" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isTableAttributeMrefAttr -->
        <test-method status="PASS" signature="isTableAttributeStringAttr()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest@fcc6023]" name="isTableAttributeStringAttr" duration-ms="0" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isTableAttributeStringAttr -->
      </class> <!-- org.molgenis.data.postgresql.PostgreSqlQueryUtilsTest -->
      <class name="org.molgenis.data.postgresql.transaction.PostgreSqlTransactionManagerTest">
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.transaction.PostgreSqlTransactionManagerTest@37e0292a]" name="setUpBeforeMethod" is-config="true" duration-ms="48" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="doGetTransaction()[pri:0, instance:org.molgenis.data.postgresql.transaction.PostgreSqlTransactionManagerTest@37e0292a]" name="doGetTransaction" duration-ms="4" started-at="2018-06-01T13:20:28Z" finished-at="2018-06-01T13:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doGetTransaction -->
      </class> <!-- org.molgenis.data.postgresql.transaction.PostgreSqlTransactionManagerTest -->
      <class name="org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="initMocks" is-config="true" duration-ms="27" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testAddAttribute()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="testAddAttribute" duration-ms="3" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAttribute -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testCreateRepository()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="testCreateRepository" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateRepository -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testDeleteAttribute()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="testDeleteAttribute" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteAttribute -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testDeleteRepository()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="testDeleteRepository" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteRepository -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testUpdateAttribute()[pri:0, instance:org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest@4068102e]" name="testUpdateAttribute" duration-ms="0" started-at="2018-06-01T13:20:29Z" finished-at="2018-06-01T13:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateAttribute -->
      </class> <!-- org.molgenis.data.postgresql.PostgreSqlRepositoryCollectionDecoratorTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
