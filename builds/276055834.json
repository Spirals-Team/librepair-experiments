{
  "@type": "build",
  "@href": "/v3/build/276055834",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 276055834,
  "number": "25874",
  "state": "failed",
  "duration": 18319,
  "event_type": "pull_request",
  "previous_state": "errored",
  "pull_request_title": "Add async retry to RetryDriver",
  "pull_request_number": 8464,
  "started_at": "2017-09-15T21:19:26.000Z",
  "finished_at": "2017-09-15T22:03:34.000Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/1504827",
    "@representation": "minimal",
    "id": 1504827,
    "name": "presto",
    "slug": "prestodb/presto"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/1504827/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 80440113,
    "sha": "473f728b26d79dec4a271ba8e56c589d40737e58",
    "ref": "refs/pull/8464/merge",
    "message": "Retry async thrift failure\n\nPreviously there was no retry when an async thrift call fails after\nits future is returned.\n\nTo solve this, we wrap the returned future\nIt will automatically renew itself on an async exception based on\nour retry policy.",
    "compare_url": "https://github.com/prestodb/presto/pull/8464",
    "committed_at": "2017-09-15T20:45:29.000Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/276055835",
      "@representation": "minimal",
      "id": 276055835
    },
    {
      "@type": "job",
      "@href": "/v3/job/276055838",
      "@representation": "minimal",
      "id": 276055838
    },
    {
      "@type": "job",
      "@href": "/v3/job/276055839",
      "@representation": "minimal",
      "id": 276055839
    },
    {
      "@type": "job",
      "@href": "/v3/job/276055840",
      "@representation": "minimal",
      "id": 276055840
    },
    {
      "@type": "job",
      "@href": "/v3/job/276055841",
      "@representation": "minimal",
      "id": 276055841
    },
    {
      "@type": "job",
      "@href": "/v3/job/276055846",
      "@representation": "minimal",
      "id": 276055846
    },
    {
      "@type": "job",
      "@href": "/v3/job/276055847",
      "@representation": "minimal",
      "id": 276055847
    },
    {
      "@type": "job",
      "@href": "/v3/job/276055850",
      "@representation": "minimal",
      "id": 276055850
    },
    {
      "@type": "job",
      "@href": "/v3/job/276055853",
      "@representation": "minimal",
      "id": 276055853
    },
    {
      "@type": "job",
      "@href": "/v3/job/276055856",
      "@representation": "minimal",
      "id": 276055856
    },
    {
      "@type": "job",
      "@href": "/v3/job/276055857",
      "@representation": "minimal",
      "id": 276055857
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/331491",
    "@representation": "minimal",
    "id": 331491,
    "login": "jessesleeping"
  },
  "updated_at": "2019-04-10T22:49:14.800Z"
}