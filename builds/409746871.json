{
  "@type": "build",
  "@href": "/v3/build/409746871",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 409746871,
  "number": "3075",
  "state": "failed",
  "duration": 166,
  "event_type": "pull_request",
  "previous_state": "passed",
  "pull_request_title": "[#633] Command and Control for MQTT.",
  "pull_request_number": 734,
  "started_at": "2018-07-30T08:49:07Z",
  "finished_at": "2018-07-30T08:51:53Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/7500854",
    "@representation": "minimal",
    "id": 7500854,
    "name": "hono",
    "slug": "eclipse/hono"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/7500854/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 123024698,
    "sha": "67616c10161253f4e7df953de59de44c74e95b7f",
    "ref": "refs/pull/734/merge",
    "message": "[#633] Command and Control for MQTT.\n\n- subscription for commands (long and short version).\n- send ttl events on subscription and unsubscribe.\n- get commands for a device and publish it to subscription.\n- command response endpoint to send the result of a received command.\n- allow empty event bodies (for the ttl events).\n\nSigned-off-by: pellmann <marc.pellmann@bosch-si.com>",
    "compare_url": "https://github.com/eclipse/hono/pull/734",
    "committed_at": "2018-07-30T08:33:10Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/409746872",
      "@representation": "minimal",
      "id": 409746872
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/826288",
    "@representation": "minimal",
    "id": 826288,
    "login": "pellmann"
  },
  "updated_at": "2019-04-12T20:43:20.501Z"
}