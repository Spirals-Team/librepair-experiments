{
  "@type": "build",
  "@href": "/v3/build/397700264",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 397700264,
  "number": "25352",
  "state": "failed",
  "duration": 17585,
  "event_type": "pull_request",
  "previous_state": "passed",
  "pull_request_title": "[FLINK-8480][DataStream] Add Java API for timebounded stream join",
  "pull_request_number": 5482,
  "started_at": "2018-06-28T09:42:50.000Z",
  "finished_at": "2018-06-28T10:44:54.000Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/2476141",
    "@representation": "minimal",
    "id": 2476141,
    "name": "flink",
    "slug": "apache/flink"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/2476141/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 119294534,
    "sha": "8d6fba5d3daad5f46cb84971969b050d827be416",
    "ref": "refs/pull/5482/merge",
    "message": "[FLINK-8480][DataStream] Add java api for timebounded stream joins\n\nThis commit adds a java implementation for timebounded stream joins.\nThe usage looks roughly like the following:\n\n```java\nstreamOne\n\t.join(streamTwo)\n\t.where(new Tuple2KeyExtractor())\n\t.equalTo(new Tuple2KeyExtractor())\n\t.between(Time.milliseconds(0), Time.milliseconds(1))\n\t.process(new CombineToStringJoinFunction())\n\t.addSink(new ResultSink());\n```\n\nThis change adds the functionality in JoinedStreams.java and adds\nintegration tests in TimeboundedJoinITCase.java",
    "compare_url": "https://github.com/apache/flink/pull/5482",
    "committed_at": "2018-06-28T08:54:50.000Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/397700265",
      "@representation": "minimal",
      "id": 397700265
    },
    {
      "@type": "job",
      "@href": "/v3/job/397700266",
      "@representation": "minimal",
      "id": 397700266
    },
    {
      "@type": "job",
      "@href": "/v3/job/397700267",
      "@representation": "minimal",
      "id": 397700267
    },
    {
      "@type": "job",
      "@href": "/v3/job/397700268",
      "@representation": "minimal",
      "id": 397700268
    },
    {
      "@type": "job",
      "@href": "/v3/job/397700269",
      "@representation": "minimal",
      "id": 397700269
    },
    {
      "@type": "job",
      "@href": "/v3/job/397700270",
      "@representation": "minimal",
      "id": 397700270
    },
    {
      "@type": "job",
      "@href": "/v3/job/397700271",
      "@representation": "minimal",
      "id": 397700271
    },
    {
      "@type": "job",
      "@href": "/v3/job/397700272",
      "@representation": "minimal",
      "id": 397700272
    },
    {
      "@type": "job",
      "@href": "/v3/job/397700273",
      "@representation": "minimal",
      "id": 397700273
    },
    {
      "@type": "job",
      "@href": "/v3/job/397700274",
      "@representation": "minimal",
      "id": 397700274
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/226072",
    "@representation": "minimal",
    "id": 226072,
    "login": "florianschmidt1994"
  },
  "updated_at": "2019-04-11T07:52:26.647Z"
}