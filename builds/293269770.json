{
  "@type": "build",
  "@href": "/v3/build/293269770",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 293269770,
  "number": "26659",
  "state": "failed",
  "duration": 16318,
  "event_type": "pull_request",
  "previous_state": "errored",
  "pull_request_title": "Add eager compact option into PagesIndex",
  "pull_request_number": 9213,
  "started_at": "2017-10-26T17:36:58Z",
  "finished_at": "2017-10-26T18:17:33Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/1504827",
    "@representation": "minimal",
    "id": 1504827,
    "name": "presto",
    "slug": "prestodb/presto"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/1504827/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 86075625,
    "sha": "05db13f276d8603d2eaed7ae1c79e23087d50cf4",
    "ref": "refs/pull/9213/merge",
    "message": "Add eager compact option into PagesIndex\n\nCurrently PagesIndex compacts the blocks lazily. It is only compacted\nwhen the HashBuilderOperator or OrderByOperator hold it cannot reserve\nthe memory required.\n\nHowever, compacting blocks requires to copy them. Thus when the cluster\nis running low on memory and multiple operators is requesting memory,\nall these operators will start to compact the PagesIndex and put a huge\npressure on the memory, which frequently causes full GC.\n\nAdding the eager compact option into PagesIndex allows PagesIndex to\ncompact Immediately whenever a new page is added.",
    "compare_url": "https://github.com/prestodb/presto/pull/9213",
    "committed_at": "2017-10-26T17:35:42Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/293269771",
      "@representation": "minimal",
      "id": 293269771
    },
    {
      "@type": "job",
      "@href": "/v3/job/293269772",
      "@representation": "minimal",
      "id": 293269772
    },
    {
      "@type": "job",
      "@href": "/v3/job/293269773",
      "@representation": "minimal",
      "id": 293269773
    },
    {
      "@type": "job",
      "@href": "/v3/job/293269774",
      "@representation": "minimal",
      "id": 293269774
    },
    {
      "@type": "job",
      "@href": "/v3/job/293269775",
      "@representation": "minimal",
      "id": 293269775
    },
    {
      "@type": "job",
      "@href": "/v3/job/293269776",
      "@representation": "minimal",
      "id": 293269776
    },
    {
      "@type": "job",
      "@href": "/v3/job/293269777",
      "@representation": "minimal",
      "id": 293269777
    },
    {
      "@type": "job",
      "@href": "/v3/job/293269778",
      "@representation": "minimal",
      "id": 293269778
    },
    {
      "@type": "job",
      "@href": "/v3/job/293269780",
      "@representation": "minimal",
      "id": 293269780
    },
    {
      "@type": "job",
      "@href": "/v3/job/293269782",
      "@representation": "minimal",
      "id": 293269782
    },
    {
      "@type": "job",
      "@href": "/v3/job/293269783",
      "@representation": "minimal",
      "id": 293269783
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/362617",
    "@representation": "minimal",
    "id": 362617,
    "login": "wenleix"
  },
  "updated_at": "2019-04-10T22:49:16.738Z"
}