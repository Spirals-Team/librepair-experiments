{
  "@type": "build",
  "@href": "/v3/build/252413734",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 252413734,
  "number": "17600",
  "state": "failed",
  "duration": 36176,
  "event_type": "push",
  "previous_state": "failed",
  "pull_request_title": null,
  "pull_request_number": null,
  "started_at": "2017-07-11T19:57:24Z",
  "finished_at": "2017-07-11T21:51:43Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/2476141",
    "@representation": "minimal",
    "id": 2476141,
    "name": "flink",
    "slug": "apache/flink"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/2476141/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 73337831,
    "sha": "d0cc2c178714987ba23998486651791d04a5beb1",
    "ref": "refs/heads/master",
    "message": "[FLINK-7019] [gelly] Rework parallelism in Gelly algorithms and examples\n\nFlink job parallelism is set with ExecutionConfig#setParallelism or with\n-p on the command-line. The Gelly algorithms JaccardIndex, AdamicAdar,\nTriangleListing, and ClusteringCoefficient have intermediate operators\nwhich generate output quadratic in the size of input. These algorithms\nmay need to be run with a high parallelism but doing so for all\noperations is wasteful. Thus was introduced \"little parallelism\".\n\nThis can be simplified by moving the parallelism parameter to the new\ncommon base class with the rule-of-thumb to use the algorithm\nparallelism for all normal (small output) operators. The asymptotically\nlarge operators will default to the job parallelism, as will the default\nalgorithm parallelism.\n\nThis closes #4282",
    "compare_url": "https://github.com/apache/flink/compare/4aa2ffcef8ed...d0cc2c178714",
    "committed_at": "2017-07-11T12:51:23Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/252413735",
      "@representation": "minimal",
      "id": 252413735
    },
    {
      "@type": "job",
      "@href": "/v3/job/252413736",
      "@representation": "minimal",
      "id": 252413736
    },
    {
      "@type": "job",
      "@href": "/v3/job/252413737",
      "@representation": "minimal",
      "id": 252413737
    },
    {
      "@type": "job",
      "@href": "/v3/job/252413738",
      "@representation": "minimal",
      "id": 252413738
    },
    {
      "@type": "job",
      "@href": "/v3/job/252413739",
      "@representation": "minimal",
      "id": 252413739
    },
    {
      "@type": "job",
      "@href": "/v3/job/252413741",
      "@representation": "minimal",
      "id": 252413741
    },
    {
      "@type": "job",
      "@href": "/v3/job/252413742",
      "@representation": "minimal",
      "id": 252413742
    },
    {
      "@type": "job",
      "@href": "/v3/job/252413743",
      "@representation": "minimal",
      "id": 252413743
    },
    {
      "@type": "job",
      "@href": "/v3/job/252413744",
      "@representation": "minimal",
      "id": 252413744
    },
    {
      "@type": "job",
      "@href": "/v3/job/252413745",
      "@representation": "minimal",
      "id": 252413745
    },
    {
      "@type": "job",
      "@href": "/v3/job/252413746",
      "@representation": "minimal",
      "id": 252413746
    },
    {
      "@type": "job",
      "@href": "/v3/job/252413747",
      "@representation": "minimal",
      "id": 252413747
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/547501",
    "@representation": "minimal",
    "id": 547501,
    "login": "asfgit"
  },
  "updated_at": "2019-04-11T07:52:00.700Z"
}