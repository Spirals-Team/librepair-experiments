{
  "@type": "build",
  "@href": "/v3/build/350026449",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 350026449,
  "number": "3324",
  "state": "failed",
  "duration": 470,
  "event_type": "pull_request",
  "previous_state": "passed",
  "pull_request_title": "Replacing Elasticsearch native client with its REST API ",
  "pull_request_number": 821,
  "started_at": "2018-03-06T21:20:40.000Z",
  "finished_at": "2018-03-06T21:28:30.000Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/1221979",
    "@representation": "minimal",
    "id": 1221979,
    "name": "blueflood",
    "slug": "rackerlabs/blueflood"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/1221979/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 104174854,
    "sha": "41611957794d5126ad825d6fe68dc1fc6ab9e064",
    "ref": "refs/pull/821/merge",
    "message": "14th Iteration:\n- Worked on ElasticIOIntegrationTest again to make sure there is minimal change in test cases. So, now literally compared to 'main' branch, there is only one test case which is changed, that too because it contained native client. There is zero change in rest of the test cases. Any other change in this file is all related setting and cleaning up the tests.\n\n13th Iteration:\n- Added test cases on elasticIO metric names\n- Added EntityUtils.consume() method in index() method of ElasticsearchHelper class.\n\n12th Iteration:\n- Resolved issue of single-point-of-failure on rest client connection. Now, code will always use all of the possible endpoints.\n- if one ES server dies, rest client will keep running by using other hosts. Max try to connect to any host is 10. If even after 10 iteration ES rest client couldn't connect to any host, it will simply come out.\n\n11th Iteration:\n- Brought back and refactored classes ElasticTokensIO and ElasticTokensIOTest so that they are using ES REST API and not native ES client.\n- Refactored rest of the code accordingly.\n- Replaced exception with logging the error, just to minimize the impact of the overall change.\n\n10th Iteration:\n- Grafana was broken as couple of classes were removed. I have added them back in this checkin.\n- Made other related changes as I brought in these classes.\n- Also, updated docker-entrypoint.sh and Dockerfile to get the latest image.\n- Ran all of the test cases using run-test.sh, and all of them passed.\n\n9th Iteration:\n- Added refresh to the test automation rather than hard-coded sleep.\n- Changed metrics mapping based on 2.4.1 settings changes\n- Changed hard-coded size to the limit that ES recommends\n\n8th Iteration:\n- One of the test cases in ElasticIOIntegrationTest was failing. It's fixed now.\n\n7th Iteration:\n- Removed bunch of commented code.\n\n6th Iteration:\n- Finally all of the tests are passing.\n- Bug fixes related to multiple queries.\n- Fixed test class initialization and test class cleanup.\n- Fixed and refactored impacted test cases because of the major change of replacing ES native client with ES REST API.\n\n------------------------------\nBug fix in DummyDiscoveryIO4 class. Added removed constructor.\n------------------------------\n\n4th Iteration:\n- Fixed a bug in ES Rest API Helper class\n- Fixed many test cases, where we were not cleaning up after the test was run\n- Removed a couple of test cases on dead code\n\n3rd Iteration:\n- Fixed some bugs in the code. They were related to tenantId not indexed, unit not indexed, replaced \"wildcard\" to \"regexp\" in search\n- Fixed lots of test code.\n\nThis is still very much \"work-in-progress\"\n\n2nd Iteration:\n- Removed commented block of dead code\n- Removed a couple of classes that are not in use\n- Removed entry of native ES client library and related test library from the POM file\n- Temporarily commented quite a few test classes to get code compiling. (NOTE: next I am working on this.)\n\n------------------------------------------\nGoal of these changes is to remove ES native client dependency, because for every ES version change, we have to make code changes.\nThis is much bigger cost on any upgrade. So, ES native client library is being replaced by ES REST API call.\nCode changes are done for index and query for metrics and events.\nFollowing are the major changes:\n\nAddition of a helper class ElasticsearchRestHelper to help make this REST API calls to ES.\nRemoved native client use, and updated metrics query code to perform the same business logic using REST API in AbstractElasticIO and code refactor because of this.\nRemoved native client use, and updated metrics indexing code to perform the same business logic using REST API in ElasticIO and code refactor because of this.\nRemoved native client use, and updated event query and search code to perform the same business logic using REST API in EventElasticSearchIO and code refactor because of this.",
    "compare_url": "https://github.com/rackerlabs/blueflood/pull/821",
    "committed_at": "2018-03-06T21:07:50.000Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/350026450",
      "@representation": "minimal",
      "id": 350026450
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/1055758",
    "@representation": "minimal",
    "id": 1055758,
    "login": "mritunjaykumar"
  },
  "updated_at": "2019-04-10T20:13:31.645Z"
}