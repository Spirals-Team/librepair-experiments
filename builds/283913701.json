{
  "@type": "build",
  "@href": "/v3/build/283913701",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 283913701,
  "number": "26273",
  "state": "failed",
  "duration": 19204,
  "event_type": "pull_request",
  "previous_state": "passed",
  "pull_request_title": "Yield HashAggregationOperator if rehash will exceed memory limit",
  "pull_request_number": 8956,
  "started_at": "2017-10-05T21:42:13.000Z",
  "finished_at": "2017-10-05T22:31:44.000Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/1504827",
    "@representation": "minimal",
    "id": 1504827,
    "name": "presto",
    "slug": "prestodb/presto"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/1504827/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 82917604,
    "sha": "4816c3c7a2b6caa0e5ff06898c2f9614db50bdeb",
    "ref": "refs/pull/8956/merge",
    "message": "Yield HashAggregationOperator if rehash will exceed memory limit\n\nRehash can cause a steep 2X increase in memory usage. It is dangerous to\nincrease memory usage significantly before reserving it in memory\naccounting system. This can lead to JVM OOM. We observed frequent full GCs\nin production, which can be attributed to this root cause.  This patch\nbuffers unfinished page in the operator if the operator needs to rehash\nthe hash table when there is not enough memory. The operator will yield\nand become blocked for memory allocation, and continue rehashing once\nunblocked.",
    "compare_url": "https://github.com/prestodb/presto/pull/8956",
    "committed_at": "2017-10-05T21:28:20.000Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/283913702",
      "@representation": "minimal",
      "id": 283913702
    },
    {
      "@type": "job",
      "@href": "/v3/job/283913703",
      "@representation": "minimal",
      "id": 283913703
    },
    {
      "@type": "job",
      "@href": "/v3/job/283913704",
      "@representation": "minimal",
      "id": 283913704
    },
    {
      "@type": "job",
      "@href": "/v3/job/283913705",
      "@representation": "minimal",
      "id": 283913705
    },
    {
      "@type": "job",
      "@href": "/v3/job/283913706",
      "@representation": "minimal",
      "id": 283913706
    },
    {
      "@type": "job",
      "@href": "/v3/job/283913707",
      "@representation": "minimal",
      "id": 283913707
    },
    {
      "@type": "job",
      "@href": "/v3/job/283913708",
      "@representation": "minimal",
      "id": 283913708
    },
    {
      "@type": "job",
      "@href": "/v3/job/283913709",
      "@representation": "minimal",
      "id": 283913709
    },
    {
      "@type": "job",
      "@href": "/v3/job/283913710",
      "@representation": "minimal",
      "id": 283913710
    },
    {
      "@type": "job",
      "@href": "/v3/job/283913714",
      "@representation": "minimal",
      "id": 283913714
    },
    {
      "@type": "job",
      "@href": "/v3/job/283913716",
      "@representation": "minimal",
      "id": 283913716
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/510419",
    "@representation": "minimal",
    "id": 510419,
    "login": "highker"
  },
  "updated_at": "2019-04-10T22:49:16.738Z"
}