{
  "@type": "build",
  "@href": "/v3/build/360604786",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 360604786,
  "number": "1836",
  "state": "failed",
  "duration": 477,
  "event_type": "pull_request",
  "previous_state": "passed",
  "pull_request_title": "DATAREDIS-803 - Work around Redis parameter limitation",
  "pull_request_number": 326,
  "started_at": "2018-03-31T12:46:02.000Z",
  "finished_at": "2018-03-31T12:53:59.000Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/25244",
    "@representation": "minimal",
    "id": 25244,
    "name": "spring-data-redis",
    "slug": "spring-projects/spring-data-redis"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/25244/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 107533818,
    "sha": "aec923aff0fbe3b0a61a89c9643c662db1ce1183",
    "ref": "refs/pull/326/merge",
    "message": "DATAREDIS-803 - Work around Redis parameter limitation.\n\nRedis has a [limitation of 1024 * 1024 parameters](https://github.com/antirez/redis/blob/4.0.9/src/networking.c#L1200) for bulk operations.\n\nTo insert more than 1024 * 1024 / 2 - 1 entries with putAll(), they need to be split up in multiple HMSET commands.\n\nTo reveive more than 1024 * 1024 - 1 entries with entrySet(), we can directly use the HGETALL command instead of first fetching the keys with HKEYS and then fetching the values with HMGET.",
    "compare_url": "https://github.com/spring-projects/spring-data-redis/pull/326",
    "committed_at": "2018-03-31T12:45:44.000Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/360604787",
      "@representation": "minimal",
      "id": 360604787
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/82391",
    "@representation": "minimal",
    "id": 82391,
    "login": "cbuehler"
  },
  "updated_at": "2019-04-10T08:32:21.394Z"
}