{
  "@type": "build",
  "@href": "/v3/build/351075162",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 351075162,
  "number": "1121",
  "state": "failed",
  "duration": 1746,
  "event_type": "push",
  "previous_state": "failed",
  "pull_request_title": null,
  "pull_request_number": null,
  "started_at": "2018-03-08T23:14:17Z",
  "finished_at": "2018-03-08T23:28:42Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/25241",
    "@representation": "minimal",
    "id": 25241,
    "name": "spring-data-mongodb",
    "slug": "spring-projects/spring-data-mongodb"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/25241/branch/1.10.x",
    "@representation": "minimal",
    "name": "1.10.x"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 104502710,
    "sha": "e4103eacda812b8b9d1cd61cb772e83088e92ba3",
    "ref": "refs/heads/1.10.x",
    "message": "DATAMONGO-1896 - SimpleMongoRepository.saveAll(…) now consistently uses aggregate collection for inserts.\n\nWe previously used MongoTemplate.insertAll(…) which determines the collection to insert the individual elements based on the type, which - in cases of entity inheritance - will use dedicated collections for sub-types of the aggregate root. Subsequent lookups of the entities will then fail, as those are executed against the collection the aggregate root is mapped to.\n\nWe now rather use ….insert(Collection, String) handing the collection of the aggregate root explicitly.",
    "compare_url": "https://github.com/spring-projects/spring-data-mongodb/compare/bf58e9536bef...e4103eacda81",
    "committed_at": "2018-03-08T23:09:38Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/351075163",
      "@representation": "minimal",
      "id": 351075163
    },
    {
      "@type": "job",
      "@href": "/v3/job/351075164",
      "@representation": "minimal",
      "id": 351075164
    },
    {
      "@type": "job",
      "@href": "/v3/job/351075165",
      "@representation": "minimal",
      "id": 351075165
    },
    {
      "@type": "job",
      "@href": "/v3/job/351075166",
      "@representation": "minimal",
      "id": 351075166
    },
    {
      "@type": "job",
      "@href": "/v3/job/351075167",
      "@representation": "minimal",
      "id": 351075167
    },
    {
      "@type": "job",
      "@href": "/v3/job/351075168",
      "@representation": "minimal",
      "id": 351075168
    },
    {
      "@type": "job",
      "@href": "/v3/job/351075169",
      "@representation": "minimal",
      "id": 351075169
    },
    {
      "@type": "job",
      "@href": "/v3/job/351075170",
      "@representation": "minimal",
      "id": 351075170
    },
    {
      "@type": "job",
      "@href": "/v3/job/351075171",
      "@representation": "minimal",
      "id": 351075171
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/65636",
    "@representation": "minimal",
    "id": 65636,
    "login": "odrotbohm"
  },
  "updated_at": "2019-04-10T08:32:17.386Z"
}