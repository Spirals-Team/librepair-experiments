{
  "@type": "build",
  "@href": "/v3/build/404783740",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 404783740,
  "number": "3433",
  "state": "failed",
  "duration": 8680,
  "event_type": "pull_request",
  "previous_state": "errored",
  "pull_request_title": "Simple test of CachedQueryCreateAction#create",
  "pull_request_number": 1242,
  "started_at": "2018-07-17T08:20:27Z",
  "finished_at": "2018-07-17T08:52:57Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/2089612",
    "@representation": "minimal",
    "id": 2089612,
    "name": "pgjdbc",
    "slug": "pgjdbc/pgjdbc"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/2089612/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 121485420,
    "sha": "1eec6ac26ee1c5c5a8e914367a078652a0b2c7a1",
    "ref": "refs/pull/1242/merge",
    "message": "Simple test of CachedQueryCreateAction#create\n\nThe coverage is not great, some query should be wrapped in BaseQueryKey.\nBut it's a start to verify the parsing logic in the create method\n\nNote that it's difficult to mock QueryExecutor without duplicating some\ncode (eg wrap) by simplicity this test use a real connection.",
    "compare_url": "https://github.com/pgjdbc/pgjdbc/pull/1242",
    "committed_at": "2018-07-17T08:20:01Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/404783741",
      "@representation": "minimal",
      "id": 404783741
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783742",
      "@representation": "minimal",
      "id": 404783742
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783743",
      "@representation": "minimal",
      "id": 404783743
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783744",
      "@representation": "minimal",
      "id": 404783744
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783745",
      "@representation": "minimal",
      "id": 404783745
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783746",
      "@representation": "minimal",
      "id": 404783746
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783747",
      "@representation": "minimal",
      "id": 404783747
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783748",
      "@representation": "minimal",
      "id": 404783748
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783749",
      "@representation": "minimal",
      "id": 404783749
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783750",
      "@representation": "minimal",
      "id": 404783750
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783751",
      "@representation": "minimal",
      "id": 404783751
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783752",
      "@representation": "minimal",
      "id": 404783752
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783753",
      "@representation": "minimal",
      "id": 404783753
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783754",
      "@representation": "minimal",
      "id": 404783754
    },
    {
      "@type": "job",
      "@href": "/v3/job/404783755",
      "@representation": "minimal",
      "id": 404783755
    }
  ],
  "stages": [
    {
      "@type": "stage",
      "@representation": "minimal",
      "id": 2765991,
      "number": 1,
      "name": "Test",
      "state": "failed",
      "started_at": "2018-07-17T08:20:27Z",
      "finished_at": "2018-07-17T08:52:57Z"
    }
  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/723202",
    "@representation": "minimal",
    "id": 723202,
    "login": "benbenw"
  },
  "updated_at": "2019-04-11T04:17:32.561Z"
}