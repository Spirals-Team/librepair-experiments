{
  "@type": "build",
  "@href": "/v3/build/254949474",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 254949474,
  "number": "24256",
  "state": "failed",
  "duration": 15987,
  "event_type": "pull_request",
  "previous_state": "passed",
  "pull_request_title": "Make sure to call destroy() on close",
  "pull_request_number": 8532,
  "started_at": "2017-07-20T16:56:58Z",
  "finished_at": "2017-07-20T17:38:05Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/1504827",
    "@representation": "minimal",
    "id": 1504827,
    "name": "presto",
    "slug": "prestodb/presto"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/1504827/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 74107566,
    "sha": "5ea47f0ed3b79e4c7db4f2c26faf307c02ff56b6",
    "ref": "refs/pull/8532/merge",
    "message": "Make sure to call destroy() on close\n\nAircompressorDecompressor::destroy() is a nop so for now this is not a problem, but\ndestroy() returns codecs to the pool for HadoopDecompressors so it has to be called\nto prevent leaks.",
    "compare_url": "https://github.com/prestodb/presto/pull/8532",
    "committed_at": "2017-07-18T17:17:18Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/254949475",
      "@representation": "minimal",
      "id": 254949475
    },
    {
      "@type": "job",
      "@href": "/v3/job/254949477",
      "@representation": "minimal",
      "id": 254949477
    },
    {
      "@type": "job",
      "@href": "/v3/job/254949479",
      "@representation": "minimal",
      "id": 254949479
    },
    {
      "@type": "job",
      "@href": "/v3/job/254949481",
      "@representation": "minimal",
      "id": 254949481
    },
    {
      "@type": "job",
      "@href": "/v3/job/254949485",
      "@representation": "minimal",
      "id": 254949485
    },
    {
      "@type": "job",
      "@href": "/v3/job/254949487",
      "@representation": "minimal",
      "id": 254949487
    },
    {
      "@type": "job",
      "@href": "/v3/job/254949488",
      "@representation": "minimal",
      "id": 254949488
    },
    {
      "@type": "job",
      "@href": "/v3/job/254949492",
      "@representation": "minimal",
      "id": 254949492
    },
    {
      "@type": "job",
      "@href": "/v3/job/254949494",
      "@representation": "minimal",
      "id": 254949494
    },
    {
      "@type": "job",
      "@href": "/v3/job/254949496",
      "@representation": "minimal",
      "id": 254949496
    },
    {
      "@type": "job",
      "@href": "/v3/job/254949498",
      "@representation": "minimal",
      "id": 254949498
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/507362",
    "@representation": "minimal",
    "id": 507362,
    "login": "nezihyigitbasi"
  },
  "updated_at": "2019-04-10T22:49:10.457Z"
}