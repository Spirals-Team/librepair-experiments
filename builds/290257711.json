{
  "@type": "build",
  "@href": "/v3/build/290257711",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 290257711,
  "number": "1854",
  "state": "failed",
  "duration": 6203,
  "event_type": "pull_request",
  "previous_state": "passed",
  "pull_request_title": "RESTEASY-1739",
  "pull_request_number": 1322,
  "started_at": "2017-10-20T00:54:38.000Z",
  "finished_at": "2017-10-20T01:23:41.000Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/5597557",
    "@representation": "minimal",
    "id": 5597557,
    "name": "Resteasy",
    "slug": "resteasy/Resteasy"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/5597557/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 85065032,
    "sha": "30f3ae17292893ff914cc82675f243f583ecee32",
    "ref": "refs/pull/1322/merge",
    "message": "RESTEASY-1739 I discovered that the class object retrieved from a Weld proxy does not retain the original class annotations. So, for ExceptionMapper the original class should be used for checking the @Priority.value. The same fix/logic has been used for ContextResolver, where the original class is always used for the priority value retrieval. However, there are other methods in ResteasyProviderFactory that only receive a Provider instance, so if that instance did not reference the original class, that same issue could come up. However this is not the case for Weld, so this fix works for Weld proxies.",
    "compare_url": "https://github.com/resteasy/Resteasy/pull/1322",
    "committed_at": "2017-10-20T00:53:08.000Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/290257712",
      "@representation": "minimal",
      "id": 290257712
    },
    {
      "@type": "job",
      "@href": "/v3/job/290257713",
      "@representation": "minimal",
      "id": 290257713
    },
    {
      "@type": "job",
      "@href": "/v3/job/290257715",
      "@representation": "minimal",
      "id": 290257715
    },
    {
      "@type": "job",
      "@href": "/v3/job/290257716",
      "@representation": "minimal",
      "id": 290257716
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/892455",
    "@representation": "minimal",
    "id": 892455,
    "login": "sermojohn"
  },
  "updated_at": "2019-04-12T05:40:47.983Z"
}