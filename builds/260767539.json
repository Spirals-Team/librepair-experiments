{
  "@type": "build",
  "@href": "/v3/build/260767539",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 260767539,
  "number": "24731",
  "state": "passed",
  "duration": 17490,
  "event_type": "pull_request",
  "previous_state": "passed",
  "pull_request_title": "Reorder and merge WindowNodes across ProjectNodes",
  "pull_request_number": 8507,
  "started_at": "2017-08-04T14:10:38Z",
  "finished_at": "2017-08-04T14:37:26Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/1504827",
    "@representation": "minimal",
    "id": 1504827,
    "name": "presto",
    "slug": "prestodb/presto"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/1504827/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 75835963,
    "sha": "aa08b4a1dac342d7fde3110df2c1539ef113e914",
    "ref": "refs/pull/8507/merge",
    "message": "Reorder and merge WindowNodes across ProjectNodes\n\nEnhance the two optimization rules that first reorder, and then merge,\nadjacent WindowNodes that share the same specification to also apply\nwhen the WindowNodes are separated by one or more ProjectNodes, when\npossible.\n\nThe common code is factored into a Util function, and has its own unit\ntest.\n\nThe window function that typically produces this is LAG(X, 1), where the\nlag offset constant becomes a projection below the WindowNode.",
    "compare_url": "https://github.com/prestodb/presto/pull/8507",
    "committed_at": "2017-08-03T20:17:28Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/260767540",
      "@representation": "minimal",
      "id": 260767540
    },
    {
      "@type": "job",
      "@href": "/v3/job/260767541",
      "@representation": "minimal",
      "id": 260767541
    },
    {
      "@type": "job",
      "@href": "/v3/job/260767542",
      "@representation": "minimal",
      "id": 260767542
    },
    {
      "@type": "job",
      "@href": "/v3/job/260767543",
      "@representation": "minimal",
      "id": 260767543
    },
    {
      "@type": "job",
      "@href": "/v3/job/260767544",
      "@representation": "minimal",
      "id": 260767544
    },
    {
      "@type": "job",
      "@href": "/v3/job/260767545",
      "@representation": "minimal",
      "id": 260767545
    },
    {
      "@type": "job",
      "@href": "/v3/job/260767546",
      "@representation": "minimal",
      "id": 260767546
    },
    {
      "@type": "job",
      "@href": "/v3/job/260767547",
      "@representation": "minimal",
      "id": 260767547
    },
    {
      "@type": "job",
      "@href": "/v3/job/260767548",
      "@representation": "minimal",
      "id": 260767548
    },
    {
      "@type": "job",
      "@href": "/v3/job/260767549",
      "@representation": "minimal",
      "id": 260767549
    },
    {
      "@type": "job",
      "@href": "/v3/job/260767550",
      "@representation": "minimal",
      "id": 260767550
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/849177",
    "@representation": "minimal",
    "id": 849177,
    "login": "alandpost"
  },
  "updated_at": "2019-04-10T22:49:12.770Z"
}