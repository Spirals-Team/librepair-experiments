{
  "@type": "build",
  "@href": "/v3/build/365490447",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 365490447,
  "number": "31270",
  "state": "passed",
  "duration": 21213,
  "event_type": "pull_request",
  "previous_state": "passed",
  "pull_request_title": "[WIP] Add first order function signature cache",
  "pull_request_number": 10381,
  "started_at": "2018-04-12T19:56:16.000Z",
  "finished_at": "2018-04-12T20:34:55.000Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/1504827",
    "@representation": "minimal",
    "id": 1504827,
    "name": "presto",
    "slug": "prestodb/presto"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/1504827/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 109062070,
    "sha": "442d8ba6cd55492c5807cf6507d0f0983a95a486",
    "ref": "refs/pull/10381/merge",
    "message": "Add first order function signature cache\n\nDeserializing map block will resolve the EQUAL and HASH_CODE operator\nfor key type in MapBlockEncoding.readEncoding per each block.\nThis causing map deserialization prohibitively expensive.",
    "compare_url": "https://github.com/prestodb/presto/pull/10381",
    "committed_at": "2018-04-12T08:02:34.000Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/365490448",
      "@representation": "minimal",
      "id": 365490448
    },
    {
      "@type": "job",
      "@href": "/v3/job/365490449",
      "@representation": "minimal",
      "id": 365490449
    },
    {
      "@type": "job",
      "@href": "/v3/job/365490450",
      "@representation": "minimal",
      "id": 365490450
    },
    {
      "@type": "job",
      "@href": "/v3/job/365490451",
      "@representation": "minimal",
      "id": 365490451
    },
    {
      "@type": "job",
      "@href": "/v3/job/365490452",
      "@representation": "minimal",
      "id": 365490452
    },
    {
      "@type": "job",
      "@href": "/v3/job/365490453",
      "@representation": "minimal",
      "id": 365490453
    },
    {
      "@type": "job",
      "@href": "/v3/job/365490454",
      "@representation": "minimal",
      "id": 365490454
    },
    {
      "@type": "job",
      "@href": "/v3/job/365490455",
      "@representation": "minimal",
      "id": 365490455
    },
    {
      "@type": "job",
      "@href": "/v3/job/365490456",
      "@representation": "minimal",
      "id": 365490456
    },
    {
      "@type": "job",
      "@href": "/v3/job/365490457",
      "@representation": "minimal",
      "id": 365490457
    },
    {
      "@type": "job",
      "@href": "/v3/job/365490458",
      "@representation": "minimal",
      "id": 365490458
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/362617",
    "@representation": "minimal",
    "id": 362617,
    "login": "wenleix"
  },
  "updated_at": "2019-04-10T22:49:39.279Z"
}