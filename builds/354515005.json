{
  "@type": "build",
  "@href": "/v3/build/354515005",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 354515005,
  "number": "30303",
  "state": "failed",
  "duration": 18211,
  "event_type": "pull_request",
  "previous_state": "errored",
  "pull_request_title": "Minor Cleanup of Histogram and HistogramState",
  "pull_request_number": 10176,
  "started_at": "2018-03-16T21:29:47Z",
  "finished_at": "2018-03-16T22:19:00Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/1504827",
    "@representation": "minimal",
    "id": 1504827,
    "name": "presto",
    "slug": "prestodb/presto"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/1504827/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 105590137,
    "sha": "d5024514503ae52f45fbd843cb3db82e877737f9",
    "ref": "refs/pull/10176/merge",
    "message": "Minor Cleanup of Histogram and HistogramState\n\nHistogram had dead code in that state.get() could not return\nnull any more, so the if/else checks in Histogram.combine() were\nsuperfluous and removed. I did leave in assertions\nthat state.get() != null as the current code is not written to\nhandle such a case.\n\nChange also removes the Histogram.set() method entirely as\nit is not used any longer.\n\nLastly, In order to make sure I was getting consistent testing,\nI made TestHistogram use a single code path of functions to get\nit's InternalAggregationFunctions.",
    "compare_url": "https://github.com/prestodb/presto/pull/10176",
    "committed_at": "2018-03-16T21:00:37Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/354515007",
      "@representation": "minimal",
      "id": 354515007
    },
    {
      "@type": "job",
      "@href": "/v3/job/354515008",
      "@representation": "minimal",
      "id": 354515008
    },
    {
      "@type": "job",
      "@href": "/v3/job/354515009",
      "@representation": "minimal",
      "id": 354515009
    },
    {
      "@type": "job",
      "@href": "/v3/job/354515010",
      "@representation": "minimal",
      "id": 354515010
    },
    {
      "@type": "job",
      "@href": "/v3/job/354515011",
      "@representation": "minimal",
      "id": 354515011
    },
    {
      "@type": "job",
      "@href": "/v3/job/354515015",
      "@representation": "minimal",
      "id": 354515015
    },
    {
      "@type": "job",
      "@href": "/v3/job/354515018",
      "@representation": "minimal",
      "id": 354515018
    },
    {
      "@type": "job",
      "@href": "/v3/job/354515021",
      "@representation": "minimal",
      "id": 354515021
    },
    {
      "@type": "job",
      "@href": "/v3/job/354515041",
      "@representation": "minimal",
      "id": 354515041
    },
    {
      "@type": "job",
      "@href": "/v3/job/354515042",
      "@representation": "minimal",
      "id": 354515042
    },
    {
      "@type": "job",
      "@href": "/v3/job/354515043",
      "@representation": "minimal",
      "id": 354515043
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/939385",
    "@representation": "minimal",
    "id": 939385,
    "login": "rash67"
  },
  "updated_at": "2019-04-10T22:49:35.583Z"
}