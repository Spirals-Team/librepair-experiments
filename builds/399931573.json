{
  "@type": "build",
  "@href": "/v3/build/399931573",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 399931573,
  "number": "3707",
  "state": "failed",
  "duration": 22004,
  "event_type": "push",
  "previous_state": null,
  "pull_request_title": null,
  "pull_request_number": null,
  "started_at": "2018-07-04T10:41:15.000Z",
  "finished_at": "2018-07-04T12:32:29.000Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/3173988",
    "@representation": "minimal",
    "id": 3173988,
    "name": "flink",
    "slug": "tillrohrmann/flink"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/3173988/branch/fixMemoryLeakInJobManager-15",
    "@representation": "minimal",
    "name": "fixMemoryLeakInJobManager-15"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 119990339,
    "sha": "9c7dc6f194d36533aa63b5ae055dd4b73431106b",
    "ref": "refs/heads/fixMemoryLeakInJobManager-15",
    "message": "[FLINK-9693] Set Execution#taskRestore to null after deployment\n\nSetting the assigned Execution#taskRestore to null after the deployment allows the\nJobManagerTaskRestore instance to be garbage collected. Furthermore, it won't be\narchived along with the Execution in the ExecutionVertex in case of a restart. This\nis especially important when setting state.backend.fs.memory-threshold to larger\nvalues because every state below this threshold will be stored in the meta state files\nand, thus, also the JobManagerTaskRestore instances.",
    "compare_url": "https://github.com/tillrohrmann/flink/commit/9c7dc6f194d3",
    "committed_at": "2018-07-04T09:19:29.000Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/399931574",
      "@representation": "minimal",
      "id": 399931574
    },
    {
      "@type": "job",
      "@href": "/v3/job/399931575",
      "@representation": "minimal",
      "id": 399931575
    },
    {
      "@type": "job",
      "@href": "/v3/job/399931576",
      "@representation": "minimal",
      "id": 399931576
    },
    {
      "@type": "job",
      "@href": "/v3/job/399931577",
      "@representation": "minimal",
      "id": 399931577
    },
    {
      "@type": "job",
      "@href": "/v3/job/399931578",
      "@representation": "minimal",
      "id": 399931578
    },
    {
      "@type": "job",
      "@href": "/v3/job/399931579",
      "@representation": "minimal",
      "id": 399931579
    },
    {
      "@type": "job",
      "@href": "/v3/job/399931580",
      "@representation": "minimal",
      "id": 399931580
    },
    {
      "@type": "job",
      "@href": "/v3/job/399931581",
      "@representation": "minimal",
      "id": 399931581
    },
    {
      "@type": "job",
      "@href": "/v3/job/399931582",
      "@representation": "minimal",
      "id": 399931582
    },
    {
      "@type": "job",
      "@href": "/v3/job/399931583",
      "@representation": "minimal",
      "id": 399931583
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/101466",
    "@representation": "minimal",
    "id": 101466,
    "login": "tillrohrmann"
  },
  "updated_at": "2019-04-11T13:31:04.794Z"
}