{
  "@type": "build",
  "@href": "/v3/build/327353224",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 327353224,
  "number": "1903",
  "state": "failed",
  "duration": 230,
  "event_type": "pull_request",
  "previous_state": "passed",
  "pull_request_title": "GH-1174: Add Pollable Consumer",
  "pull_request_number": 1176,
  "started_at": "2018-01-10T18:27:33.000Z",
  "finished_at": "2018-01-10T18:31:23.000Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/5368652",
    "@representation": "minimal",
    "id": 5368652,
    "name": "spring-cloud-stream",
    "slug": "spring-cloud/spring-cloud-stream"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/5368652/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 97237057,
    "sha": "aedd6bc5271745e2c85286629c57450f22b4c545",
    "ref": "refs/pull/1176/merge",
    "message": "GH-1174: Add Pollable Consumer\n\nResolves: https://github.com/spring-cloud/spring-cloud-stream/issues/1174\n\nIntroduce `PollableMessageSource` for polled consumers.\n\nThe `@Input` annotation can now be applied to interface methods returning\n`PollableMessageSource` and binders that can support polled consumers\nwill wire up an implementation `DefaultPollableMessageSource` which can\nthen be `poll()`ed.\n\nThe `poll()` method takes a `MessageHandler` callback to handle any message\nreturned by the poll; the method returns true if a message was found and\nhandled, false otherwise.\n\nBy default, acknowledging the message is deferred until the message handler\nreturns but that auto-acknowledging can be disabled if the user wishes to\ndefer the acknowledgment until later. Refer to the Spring Integration\ndocumentation for more information (internally, a `MessageSourcePollingTemplate`\nis used, which performs the ack/nack when the handler exits).\n\nUsage:\n\n```java\npublic interface PolledConsumer extends Processor {\n\n\t@Input(\"pollableSource\")\n\tPollableMessageSource pollableSource();\n\n}\n```\n\nand\n\n```java\n@Bean\npublic ApplicationRunner runner(PollableMessageSource pollableSource) {\n\treturn args -> pollableSource.poll(message -> {\n\t\tSystem.out.println(\"Polled payload: \" + message.getPayload());\n\t});\n}\n```",
    "compare_url": "https://github.com/spring-cloud/spring-cloud-stream/pull/1176",
    "committed_at": "2018-01-10T18:24:00.000Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/327353227",
      "@representation": "minimal",
      "id": 327353227
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/70713",
    "@representation": "minimal",
    "id": 70713,
    "login": "garyrussell"
  },
  "updated_at": "2019-04-12T04:12:51.950Z"
}