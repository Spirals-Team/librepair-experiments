{
  "@type": "build",
  "@href": "/v3/build/231089116",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 231089116,
  "number": "16200",
  "state": "failed",
  "duration": 29441,
  "event_type": "pull_request",
  "previous_state": "passed",
  "pull_request_title": "[FLINK-6519] Integrate BlobStore in lifecycle management of HighAvailabilityServices",
  "pull_request_number": 3864,
  "started_at": "2017-05-11T10:12:20.000Z",
  "finished_at": "2017-05-11T11:32:42.000Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/2476141",
    "@representation": "minimal",
    "id": 2476141,
    "name": "flink",
    "slug": "apache/flink"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/2476141/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 66880362,
    "sha": "8d6873b10af6db048df8a79bbb32b1f08579821c",
    "ref": "refs/pull/3864/merge",
    "message": "[FLINK-6519] Integrate BlobStore in lifecycle management of HighAvailabilityServices\n\nThe HighAvailabilityService creates a single BlobStoreService instance which is\nshared by all BlobServer and BlobCache instances. The BlobStoreService's lifecycle\nis exclusively managed by the HighAvailabilityServices. This means that the\nBlobStore's content is only cleaned up if the HighAvailabilityService's HA data\nis cleaned up. Having this single point of control, makes it easier to decide when\nto discard HA data (e.g. in case of a successful job execution) and when to retain\nthe data (e.g. for recovery).\n\nClose and cleanup all data of BlobStore in HighAvailabilityServices\n\nUse HighAvailabilityServices to create BlobStore\n\nIntroduce BlobStoreService interface to hide close and closeAndCleanupAllData methods",
    "compare_url": "https://github.com/apache/flink/pull/3864",
    "committed_at": "2017-05-11T09:34:40.000Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/231089117",
      "@representation": "minimal",
      "id": 231089117
    },
    {
      "@type": "job",
      "@href": "/v3/job/231089118",
      "@representation": "minimal",
      "id": 231089118
    },
    {
      "@type": "job",
      "@href": "/v3/job/231089119",
      "@representation": "minimal",
      "id": 231089119
    },
    {
      "@type": "job",
      "@href": "/v3/job/231089120",
      "@representation": "minimal",
      "id": 231089120
    },
    {
      "@type": "job",
      "@href": "/v3/job/231089121",
      "@representation": "minimal",
      "id": 231089121
    },
    {
      "@type": "job",
      "@href": "/v3/job/231089122",
      "@representation": "minimal",
      "id": 231089122
    },
    {
      "@type": "job",
      "@href": "/v3/job/231089123",
      "@representation": "minimal",
      "id": 231089123
    },
    {
      "@type": "job",
      "@href": "/v3/job/231089124",
      "@representation": "minimal",
      "id": 231089124
    },
    {
      "@type": "job",
      "@href": "/v3/job/231089125",
      "@representation": "minimal",
      "id": 231089125
    },
    {
      "@type": "job",
      "@href": "/v3/job/231089126",
      "@representation": "minimal",
      "id": 231089126
    },
    {
      "@type": "job",
      "@href": "/v3/job/231089127",
      "@representation": "minimal",
      "id": 231089127
    },
    {
      "@type": "job",
      "@href": "/v3/job/231089129",
      "@representation": "minimal",
      "id": 231089129
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/101466",
    "@representation": "minimal",
    "id": 101466,
    "login": "tillrohrmann"
  },
  "updated_at": "2019-04-11T07:51:57.542Z"
}