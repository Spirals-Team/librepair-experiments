{
  "@type": "build",
  "@href": "/v3/build/341362201",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 341362201,
  "number": "22312",
  "state": "failed",
  "duration": 20197,
  "event_type": "pull_request",
  "previous_state": "passed",
  "pull_request_title": "[Flink-8480][DataStream] Add Java API for timebounded stream join",
  "pull_request_number": 5482,
  "started_at": "2018-02-14T10:39:54.000Z",
  "finished_at": "2018-02-14T11:35:27.000Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/2476141",
    "@representation": "minimal",
    "id": 2476141,
    "name": "flink",
    "slug": "apache/flink"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/2476141/branch/master",
    "@representation": "minimal",
    "name": "master"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 101504234,
    "sha": "c8ceb0a6b957d49b2ffc3c328f59c48ee55d2185",
    "ref": "refs/pull/5482/merge",
    "message": "[FLINK-8480][DataStream] Add java api for timebounded stream joins\n\nThis commit adds a java implementation for timebounded stream joins.\nThe usage looks roughly like the following:\n\n```java\nstreamOne\n\t.join(streamTwo)\n\t.where(new Tuple2KeyExtractor())\n\t.equalTo(new Tuple2KeyExtractor())\n\t.between(Time.milliseconds(0), Time.milliseconds(1))\n\t.process(new CombineToStringJoinFunction())\n\t.addSink(new ResultSink());\n```\n\nThis change adds the functionality in JoinedStreams.java and adds\nintegration tests in TimeboundedJoinITCase.java",
    "compare_url": "https://github.com/apache/flink/pull/5482",
    "committed_at": "2018-02-14T09:57:25.000Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/341362202",
      "@representation": "minimal",
      "id": 341362202
    },
    {
      "@type": "job",
      "@href": "/v3/job/341362203",
      "@representation": "minimal",
      "id": 341362203
    },
    {
      "@type": "job",
      "@href": "/v3/job/341362204",
      "@representation": "minimal",
      "id": 341362204
    },
    {
      "@type": "job",
      "@href": "/v3/job/341362205",
      "@representation": "minimal",
      "id": 341362205
    },
    {
      "@type": "job",
      "@href": "/v3/job/341362206",
      "@representation": "minimal",
      "id": 341362206
    },
    {
      "@type": "job",
      "@href": "/v3/job/341362207",
      "@representation": "minimal",
      "id": 341362207
    },
    {
      "@type": "job",
      "@href": "/v3/job/341362208",
      "@representation": "minimal",
      "id": 341362208
    },
    {
      "@type": "job",
      "@href": "/v3/job/341362209",
      "@representation": "minimal",
      "id": 341362209
    },
    {
      "@type": "job",
      "@href": "/v3/job/341362210",
      "@representation": "minimal",
      "id": 341362210
    },
    {
      "@type": "job",
      "@href": "/v3/job/341362211",
      "@representation": "minimal",
      "id": 341362211
    },
    {
      "@type": "job",
      "@href": "/v3/job/341362212",
      "@representation": "minimal",
      "id": 341362212
    },
    {
      "@type": "job",
      "@href": "/v3/job/341362213",
      "@representation": "minimal",
      "id": 341362213
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/226072",
    "@representation": "minimal",
    "id": 226072,
    "login": "florianschmidt1994"
  },
  "updated_at": "2019-04-11T07:52:19.216Z"
}