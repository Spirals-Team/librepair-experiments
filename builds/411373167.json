{
  "@type": "build",
  "@href": "/v3/build/411373167",
  "@representation": "standard",
  "@permissions": {
    "read": true,
    "cancel": false,
    "restart": false
  },
  "id": 411373167,
  "number": "3793",
  "state": "failed",
  "duration": 23058,
  "event_type": "push",
  "previous_state": "canceled",
  "pull_request_title": null,
  "pull_request_number": null,
  "started_at": "2018-08-02T16:50:53Z",
  "finished_at": "2018-08-02T18:32:01Z",
  "private": false,
  "repository": {
    "@type": "repository",
    "@href": "/v3/repo/3173988",
    "@representation": "minimal",
    "id": 3173988,
    "name": "flink",
    "slug": "tillrohrmann/flink"
  },
  "branch": {
    "@type": "branch",
    "@href": "/v3/repo/3173988/branch/fixYarnBatchMemory",
    "@representation": "minimal",
    "name": "fixYarnBatchMemory"
  },
  "tag": null,
  "commit": {
    "@type": "commit",
    "@representation": "minimal",
    "id": 123528236,
    "sha": "a1a6ca0698519a15f53c3137cd5505a8a7172b81",
    "ref": "refs/heads/fixYarnBatchMemory",
    "message": "[FLINK-9969][batch] Dispose InMemorySorters created by the UnilateralSortMerger\n\nThis commit changes the behaviour of the UnilateralSortMerger to keep references of the created\nInMemorySorters in order to explicitly dispse them when the sort merger is closed. This prevents\nthat InMemorySorters leak and block the garbage collection of MemorySegments to which they keep\nreferences.",
    "compare_url": "https://github.com/tillrohrmann/flink/compare/6a366332732a...a1a6ca069851",
    "committed_at": "2018-08-02T16:37:41Z"
  },
  "jobs": [
    {
      "@type": "job",
      "@href": "/v3/job/411373168",
      "@representation": "minimal",
      "id": 411373168
    },
    {
      "@type": "job",
      "@href": "/v3/job/411373169",
      "@representation": "minimal",
      "id": 411373169
    },
    {
      "@type": "job",
      "@href": "/v3/job/411373170",
      "@representation": "minimal",
      "id": 411373170
    },
    {
      "@type": "job",
      "@href": "/v3/job/411373171",
      "@representation": "minimal",
      "id": 411373171
    },
    {
      "@type": "job",
      "@href": "/v3/job/411373172",
      "@representation": "minimal",
      "id": 411373172
    },
    {
      "@type": "job",
      "@href": "/v3/job/411373173",
      "@representation": "minimal",
      "id": 411373173
    },
    {
      "@type": "job",
      "@href": "/v3/job/411373174",
      "@representation": "minimal",
      "id": 411373174
    },
    {
      "@type": "job",
      "@href": "/v3/job/411373175",
      "@representation": "minimal",
      "id": 411373175
    },
    {
      "@type": "job",
      "@href": "/v3/job/411373176",
      "@representation": "minimal",
      "id": 411373176
    },
    {
      "@type": "job",
      "@href": "/v3/job/411373177",
      "@representation": "minimal",
      "id": 411373177
    }
  ],
  "stages": [

  ],
  "created_by": {
    "@type": "user",
    "@href": "/v3/user/101466",
    "@representation": "minimal",
    "id": 101466,
    "login": "tillrohrmann"
  },
  "updated_at": "2019-04-11T13:31:04.794Z"
}